#ifndef _YL_STRING_UTIL_H
#define _YL_STRING_UTIL_H

#include <string>
#include <vector>
using std::string;
using std::vector;

class YL_StringUtil
{
public:

	//******************************************************************************//
	//																				//
	//	去掉string的空格															//
	//																				//
	//  参数:																		//
	//		str	:	传入和传出的参数												//
	//																				//
	//	返回值：																	//
	//																				//
	//******************************************************************************//
	static void	Trim( string& str );

	//******************************************************************************//
	//																				//
	//	将String转换为小写字母，如果字母为汉字，则跳过不进行转换					//
	//																				//
	//  参数:																		//
	//		str	:	传入和传出的参数												//
	//																				//
	//	返回值：																	//
	//																				//
	//******************************************************************************//
	static void	Str2Lower( string& str );

	//******************************************************************************//
	//																				//
	//	格式化String字符串,其参数类似于printf										//
	//																				//
	//  参数:																		//
	//		str	:	传入和传出的参数												//
	//																				//
	//	返回值：																	//
	//																				//
	//******************************************************************************//
	static bool Format( string& str, const char* szFmt, ... );

	//******************************************************************************//
	//																				//
	//	将String按照给定的标识符进行切分											//
	//																				//
	//  参数:																		//
	//		str		:	传入的源字符串												//
	//		tokens	:	切分后的字符串												//
	//																				//
	//	返回值：																	//
	//																				//
	//******************************************************************************//
	static void Tokenize( const string& str, vector<string>& tokens, const string& delims );

	//******************************************************************************//
	//																				//
	//	判断字符串是否以给定字符串结尾												//
	//																				//
	//  参数:																		//
	//		str	:	传入和传出的参数												//
	//																				//
	//	返回值：																	//
	//																				//
	//******************************************************************************//
	static bool EndsWith( const string& str, const string& endStr);

	//******************************************************************************//
	//																				//
	//	判断字符串是否以给定字符串开始												//
	//																				//
	//  参数:																		//
	//		str	:	传入和传出的参数												//
	//																				//
	//	返回值：																	//
	//																				//
	//******************************************************************************//
	static bool StartsWith( const string& str, const string& startStr);
	static void ReplaceAll(string& str, const string& strToReplaced, const string& strReplaced);
	static string ComposeDirPath( const string& strFront, const string& strBehind );
};

#endif