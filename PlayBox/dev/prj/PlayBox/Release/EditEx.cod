; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\Gui\CommonControl\EditEx.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??_GCEditEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextA@?$ChTraitsCRT@D@ATL@@SAPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSpace@?$ChTraitsCRT@D@ATL@@SAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3CEditEx@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CEditEx@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CEdit@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCEdit@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CEditEx@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCEditEx@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4CEditEx@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSel@CEdit@@QAEXHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawTextA@CDC@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAUtagRECT@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFocus@CWnd@@SGPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMargins@CEdit@@QAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseDC@CWnd@@QAEHPAVCDC@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFont@CWnd@@QAEXPAVCFont@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateFontIndirectA@CFont@@QAEHPBUtagLOGFONTA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDC@CWnd@@QAEPAVCDC@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_messageEntries@CEditEx@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CEditEx@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4CFont@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCFont@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3CFont@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CFont@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CFont@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CGdiObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCGdiObject@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4CGdiObject@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CGdiObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CGdiObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CFont@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CEditEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CEdit@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4CEdit@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CEdit@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CEdit@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?classCEditEx@CEditEx@@2UCRuntimeClass@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?classCEditEx@CEditEx@@2UCRuntimeClass@@B	; CEditEx::classCEditEx
PUBLIC	?_messageEntries@CEditEx@@0QBUAFX_MSGMAP_ENTRY@@B ; CEditEx::_messageEntries
PUBLIC	?messageMap@CEditEx@@1UAFX_MSGMAP@@B		; CEditEx::messageMap
PUBLIC	?OnCreate@CEditEx@@QAEHPAUtagCREATESTRUCTA@@@Z	; CEditEx::OnCreate
PUBLIC	?OnMouseLeave@CEditEx@@QAEJIJ@Z			; CEditEx::OnMouseLeave
PUBLIC	?OnMouseHover@CEditEx@@QAEJIJ@Z			; CEditEx::OnMouseHover
PUBLIC	?OnMouseMove@CEditEx@@QAEXIVCPoint@@@Z		; CEditEx::OnMouseMove
PUBLIC	?OnPaint@CEditEx@@QAEXXZ			; CEditEx::OnPaint
EXTRN	?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ:NEAR ; CWnd::GetThisMessageMap
EXTRN	?GetThisClass@CEdit@@SGPAUCRuntimeClass@@XZ:NEAR ; CEdit::GetThisClass
CONST	SEGMENT
$SG197409 DB	'CEditEx', 00H
CONST	ENDS
;	COMDAT ?classCEditEx@CEditEx@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCEditEx@CEditEx@@2UCRuntimeClass@@B DD FLAT:$SG197409 ; CEditEx::classCEditEx
	DD	068H
	DD	0ffffH
	DD	00H
	DD	FLAT:?GetThisClass@CEdit@@SGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?_messageEntries@CEditEx@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CEditEx@@0QBUAFX_MSGMAP_ENTRY@@B DD 01H ; CEditEx::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	0dH
	DD	FLAT:?OnCreate@CEditEx@@QAEHPAUtagCREATESTRUCTA@@@Z
	DD	02a3H
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnMouseLeave@CEditEx@@QAEJIJ@Z
	DD	02a1H
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnMouseHover@CEditEx@@QAEJIJ@Z
	DD	0200H
	DD	00H
	DD	00H
	DD	00H
	DD	032H
	DD	FLAT:?OnMouseMove@CEditEx@@QAEXIVCPoint@@@Z
	DD	0fH
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnPaint@CEditEx@@QAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CEditEx@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CEditEx@@1UAFX_MSGMAP@@B DD FLAT:?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ ; CEditEx::messageMap
	DD	FLAT:?_messageEntries@CEditEx@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
CONST	SEGMENT
$SG197492 DB	0cbH, 0d1H, 0cbH, 0f7H, 0b8H, 0e8H, 0caH, 0d6H, '...', 00H
$SG197497 DB	'SearchInputEditTip', 00H
	ORG $+1
$SG197499 DB	'SearchInputEditText', 00H
$SG197502 DB	'SearchInputEditBK', 00H
	ORG $+2
$SG197515 DB	'SearchInputEditText', 00H
$SG197516 DB	'SearchInputEditBK', 00H
CONST	ENDS
PUBLIC	?GetThisClass@CEditEx@@SGPAUCRuntimeClass@@XZ	; CEditEx::GetThisClass
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\gui\commoncontrol\editex.cpp
_TEXT	SEGMENT
?GetThisClass@CEditEx@@SGPAUCRuntimeClass@@XZ PROC NEAR	; CEditEx::GetThisClass

; 9    : IMPLEMENT_DYNAMIC(CEditEx, CEdit)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCEditEx@CEditEx@@2UCRuntimeClass@@B ; CEditEx::classCEditEx
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetThisClass@CEditEx@@SGPAUCRuntimeClass@@XZ ENDP	; CEditEx::GetThisClass
_TEXT	ENDS
PUBLIC	?GetRuntimeClass@CEditEx@@UBEPAUCRuntimeClass@@XZ ; CEditEx::GetRuntimeClass
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRuntimeClass@CEditEx@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; CEditEx::GetRuntimeClass
; _this$ = ecx

; 9    : IMPLEMENT_DYNAMIC(CEditEx, CEdit)

  00010	55		 push	 ebp
  00011	8b ec		 mov	 ebp, esp
  00013	51		 push	 ecx
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCEditEx@CEditEx@@2UCRuntimeClass@@B ; CEditEx::classCEditEx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetRuntimeClass@CEditEx@@UBEPAUCRuntimeClass@@XZ ENDP	; CEditEx::GetRuntimeClass
_TEXT	ENDS
PUBLIC	??_R4CEditEx@@6B@				; CEditEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEditEx@@@8				; CEditEx `RTTI Type Descriptor'
PUBLIC	??_R3CEditEx@@8					; CEditEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEditEx@@8					; CEditEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CEditEx@@8				; CEditEx::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R1A@?0A@A@CObject@@8				; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??_R0?AVCEdit@@@8				; CEdit `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CEdit@@8				; CEdit::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??0CEdit@@QAE@XZ				; CEdit::CEdit
PUBLIC	??0CEditEx@@QAE@XZ				; CEditEx::CEditEx
PUBLIC	?GetMessageMap@CEditEx@@MBEPBUAFX_MSGMAP@@XZ	; CEditEx::GetMessageMap
PUBLIC	?OnChildNotify@CEditEx@@UAEHIIJPAJ@Z		; CEditEx::OnChildNotify
PUBLIC	??_7CEditEx@@6B@				; CEditEx::`vftable'
PUBLIC	??_GCEditEx@@UAEPAXI@Z				; CEditEx::`scalar deleting destructor'
PUBLIC	??0CFont@@QAE@XZ				; CFont::CFont
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDescription
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?Create@CEdit@@UAEHKABUtagRECT@@PAVCWnd@@I@Z:NEAR ; CEdit::Create
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??1CEdit@@UAE@XZ:NEAR				; CEdit::~CEdit
EXTRN	??_ECEditEx@@UAEPAXI@Z:NEAR			; CEditEx::`vector deleting destructor'
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
xdata$x	SEGMENT
$T198067 DD	0ffffffffH
	DD	FLAT:$L198059
$T198064 DD	019930520H
	DD	01H
	DD	FLAT:$T198067
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CEditEx@@6B@
CONST	SEGMENT
??_7CEditEx@@6B@ DD FLAT:??_R4CEditEx@@6B@		; CEditEx::`vftable'
	DD	FLAT:?GetRuntimeClass@CEditEx@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECEditEx@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CEditEx@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CEditEx@@UAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?Create@CEdit@@UAEHKABUtagRECT@@PAVCWnd@@I@Z
CONST	ENDS
;	COMDAT ??_R4CEditEx@@6B@
rdata$r	SEGMENT
??_R4CEditEx@@6B@ DD 00H				; CEditEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEditEx@@@8
	DD	FLAT:??_R3CEditEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEditEx@@@8
_DATA	SEGMENT
??_R0?AVCEditEx@@@8 DD FLAT:??_7type_info@@6B@		; CEditEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEditEx@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CEditEx@@8
rdata$r	SEGMENT
??_R3CEditEx@@8 DD 00H					; CEditEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CEditEx@@8
rdata$r	ENDS
;	COMDAT ??_R2CEditEx@@8
rdata$r	SEGMENT
??_R2CEditEx@@8 DD FLAT:??_R1A@?0A@A@CEditEx@@8		; CEditEx::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@CEdit@@8
	DD	FLAT:??_R1A@?0A@A@CWnd@@8
	DD	FLAT:??_R1A@?0A@A@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@A@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CEditEx@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CEditEx@@8 DD FLAT:??_R0?AVCEditEx@@@8	; CEditEx::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CEdit@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CEdit@@8 DD FLAT:??_R0?AVCEdit@@@8		; CEdit::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCEdit@@@8
_DATA	SEGMENT
??_R0?AVCEdit@@@8 DD FLAT:??_7type_info@@6B@		; CEdit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEdit@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CEditEx@@QAE@XZ PROC NEAR				; CEditEx::CEditEx
; _this$ = ecx

; 13   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	6a ff		 push	 -1
  00025	68 00 00 00 00	 push	 __ehhandler$??0CEditEx@@QAE@XZ
  0002a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00030	50		 push	 eax
  00031	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00038	51		 push	 ecx
  00039	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ??0CEdit@@QAE@XZ	; CEdit::CEdit
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CEditEx@@6B@
  00054	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	83 c1 58	 add	 ecx, 88			; 00000058H
  0005a	e8 00 00 00 00	 call	 ??0CFont@@QAE@XZ	; CFont::CFont
  0005f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	c7 41 60 09 00
	00 00		 mov	 DWORD PTR [ecx+96], 9
  00069	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0006c	c7 42 64 00 00
	00 00		 mov	 DWORD PTR [edx+100], 0

; 14   : }

  00073	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L198059:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CEdit@@UAE@XZ	; CEdit::~CEdit
__ehhandler$??0CEditEx@@QAE@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198064
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CEditEx@@QAE@XZ ENDP					; CEditEx::CEditEx
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	??1CEditEx@@UAE@XZ				; CEditEx::~CEditEx
; Function compile flags: /Odt
;	COMDAT ??_GCEditEx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCEditEx@@UAEPAXI@Z PROC NEAR			; CEditEx::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CEditEx@@UAE@XZ	; CEditEx::~CEditEx
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 09		 je	 SHORT $L197424
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L197424:
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??_GCEditEx@@UAEPAXI@Z ENDP				; CEditEx::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CFont@@UAE@XZ				; CFont::~CFont
xdata$x	SEGMENT
$T198077 DD	0ffffffffH
	DD	FLAT:$L198072
$T198075 DD	019930520H
	DD	01H
	DD	FLAT:$T198077
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CEditEx@@UAE@XZ PROC NEAR				; CEditEx::~CEditEx
; _this$ = ecx

; 17   : {

  00090	55		 push	 ebp
  00091	8b ec		 mov	 ebp, esp
  00093	6a ff		 push	 -1
  00095	68 00 00 00 00	 push	 __ehhandler$??1CEditEx@@UAE@XZ
  0009a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  000a0	50		 push	 eax
  000a1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  000a8	51		 push	 ecx
  000a9	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  000ac	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000af	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CEditEx@@6B@
  000b5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 18   : }

  000bc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	83 c1 58	 add	 ecx, 88			; 00000058H
  000c2	e8 00 00 00 00	 call	 ??1CFont@@UAE@XZ	; CFont::~CFont
  000c7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ce	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	e8 00 00 00 00	 call	 ??1CEdit@@UAE@XZ	; CEdit::~CEdit
  000d6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L198072:
  00012	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1CEdit@@UAE@XZ	; CEdit::~CEdit
__ehhandler$??1CEditEx@@UAE@XZ:
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198075
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CEditEx@@UAE@XZ ENDP					; CEditEx::~CEditEx
PUBLIC	?GetThisMessageMap@CEditEx@@KGPBUAFX_MSGMAP@@XZ	; CEditEx::GetThisMessageMap
; Function compile flags: /Odt
_TEXT	SEGMENT
?GetThisMessageMap@CEditEx@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CEditEx::GetThisMessageMap

; 21   : BEGIN_MESSAGE_MAP(CEditEx, CEdit)

  000f0	55		 push	 ebp
  000f1	8b ec		 mov	 ebp, esp
  000f3	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CEditEx@@1UAFX_MSGMAP@@B ; CEditEx::messageMap
  000f8	5d		 pop	 ebp
  000f9	c3		 ret	 0
?GetThisMessageMap@CEditEx@@KGPBUAFX_MSGMAP@@XZ ENDP	; CEditEx::GetThisMessageMap
; Function compile flags: /Odt
_this$ = -4						; size = 4
?GetMessageMap@CEditEx@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR	; CEditEx::GetMessageMap
; _this$ = ecx

; 21   : BEGIN_MESSAGE_MAP(CEditEx, CEdit)

  00100	55		 push	 ebp
  00101	8b ec		 mov	 ebp, esp
  00103	51		 push	 ecx
  00104	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00107	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CEditEx@@1UAFX_MSGMAP@@B ; CEditEx::messageMap
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c3		 ret	 0
?GetMessageMap@CEditEx@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CEditEx::GetMessageMap
_TEXT	ENDS
PUBLIC	?SetTextSize@CEditEx@@QAEXI@Z			; CEditEx::SetTextSize
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
_textSize$ = 8						; size = 4
?SetTextSize@CEditEx@@QAEXI@Z PROC NEAR			; CEditEx::SetTextSize
; _this$ = ecx

; 30   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	51		 push	 ecx
  00114	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 31   : 	m_textSize = textSize;

  00117	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011a	8b 4d 08	 mov	 ecx, DWORD PTR _textSize$[ebp]
  0011d	89 48 60	 mov	 DWORD PTR [eax+96], ecx

; 32   : }

  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c2 04 00	 ret	 4
?SetTextSize@CEditEx@@QAEXI@Z ENDP			; CEditEx::SetTextSize
_TEXT	ENDS
PUBLIC	?GetDC@CWnd@@QAEPAVCDC@@XZ			; CWnd::GetDC
PUBLIC	?ReleaseDC@CWnd@@QAEHPAVCDC@@@Z			; CWnd::ReleaseDC
PUBLIC	?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z	; CWnd::OnCreate
PUBLIC	?SetMargins@CEdit@@QAEXII@Z			; CEdit::SetMargins
PUBLIC	?CreateFontIndirectA@CFont@@QAEHPBUtagLOGFONTA@@@Z ; CFont::CreateFontIndirectA
PUBLIC	?SetFont@CWnd@@QAEXPAVCFont@@H@Z		; CWnd::SetFont
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__GetDeviceCaps@8:NEAR
EXTRN	?SetTextAlign@CDC@@QAEII@Z:NEAR			; CDC::SetTextAlign
EXTRN	_memset:NEAR
EXTRN	__imp__MulDiv@12:NEAR
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -72						; size = 4
_lf$ = -68						; size = 60
__$ArrayPad$ = -8					; size = 4
_lpDC$ = -4						; size = 4
__$ReturnAddr$ = 4					; size = 4
_lpCreateStruct$ = 8					; size = 4
?OnCreate@CEditEx@@QAEHPAUtagCREATESTRUCTA@@@Z PROC NEAR ; CEditEx::OnCreate
; _this$ = ecx

; 35   : {

  00130	55		 push	 ebp
  00131	8b ec		 mov	 ebp, esp
  00133	83 ec 48	 sub	 esp, 72			; 00000048H
  00136	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0013b	89 45 f8	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0013e	89 4d b8	 mov	 DWORD PTR _this$[ebp], ecx

; 36   : 	if (CEdit::OnCreate(lpCreateStruct) == -1)

  00141	8b 45 08	 mov	 eax, DWORD PTR _lpCreateStruct$[ebp]
  00144	50		 push	 eax
  00145	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  00148	e8 00 00 00 00	 call	 ?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z ; CWnd::OnCreate
  0014d	83 f8 ff	 cmp	 eax, -1
  00150	75 08		 jne	 SHORT $L197465

; 37   : 		return -1;

  00152	83 c8 ff	 or	 eax, -1
  00155	e9 9e 00 00 00	 jmp	 $L197464
$L197465:

; 38   : 
; 39   : 	CDC* lpDC;
; 40   : 	lpDC = GetDC();

  0015a	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015d	e8 00 00 00 00	 call	 ?GetDC@CWnd@@QAEPAVCDC@@XZ ; CWnd::GetDC
  00162	89 45 fc	 mov	 DWORD PTR _lpDC$[ebp], eax

; 41   : 	
; 42   : 	LOGFONT  lf;
; 43   : 	ZeroMemory(&lf,sizeof(lf));

  00165	6a 3c		 push	 60			; 0000003cH
  00167	6a 00		 push	 0
  00169	8d 4d bc	 lea	 ecx, DWORD PTR _lf$[ebp]
  0016c	51		 push	 ecx
  0016d	e8 00 00 00 00	 call	 _memset
  00172	83 c4 0c	 add	 esp, 12			; 0000000cH

; 44   : 	lf.lfHeight= -MulDiv(m_textSize,GetDeviceCaps(lpDC->m_hDC,LOGPIXELSY),72);

  00175	6a 48		 push	 72			; 00000048H
  00177	6a 5a		 push	 90			; 0000005aH
  00179	8b 55 fc	 mov	 edx, DWORD PTR _lpDC$[ebp]
  0017c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0017f	50		 push	 eax
  00180	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDeviceCaps@8
  00186	50		 push	 eax
  00187	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018a	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
  0018d	52		 push	 edx
  0018e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MulDiv@12
  00194	f7 d8		 neg	 eax
  00196	89 45 bc	 mov	 DWORD PTR _lf$[ebp], eax

; 45   : 	lf.lfWeight=FW_NORMAL;

  00199	c7 45 cc 90 01
	00 00		 mov	 DWORD PTR _lf$[ebp+16], 400 ; 00000190H

; 46   : 	lf.lfCharSet=ANSI_CHARSET;

  001a0	c6 45 d3 00	 mov	 BYTE PTR _lf$[ebp+23], 0

; 47   : 	lf.lfOutPrecision=OUT_DEFAULT_PRECIS;

  001a4	c6 45 d4 00	 mov	 BYTE PTR _lf$[ebp+24], 0

; 48   : 	lf.lfClipPrecision=CLIP_DEFAULT_PRECIS;

  001a8	c6 45 d5 00	 mov	 BYTE PTR _lf$[ebp+25], 0

; 49   : 	lf.lfQuality=DEFAULT_QUALITY;

  001ac	c6 45 d6 00	 mov	 BYTE PTR _lf$[ebp+26], 0

; 50   : 	lf.lfPitchAndFamily=FF_DONTCARE | DEFAULT_PITCH;

  001b0	c6 45 d7 00	 mov	 BYTE PTR _lf$[ebp+27], 0

; 51   : 
; 52   : 	m_font.CreateFontIndirect(&lf);

  001b4	8d 45 bc	 lea	 eax, DWORD PTR _lf$[ebp]
  001b7	50		 push	 eax
  001b8	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  001bb	83 c1 58	 add	 ecx, 88			; 00000058H
  001be	e8 00 00 00 00	 call	 ?CreateFontIndirectA@CFont@@QAEHPBUtagLOGFONTA@@@Z ; CFont::CreateFontIndirectA

; 53   : 	SetFont( &m_font );

  001c3	6a 01		 push	 1
  001c5	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c8	83 c1 58	 add	 ecx, 88			; 00000058H
  001cb	51		 push	 ecx
  001cc	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cf	e8 00 00 00 00	 call	 ?SetFont@CWnd@@QAEXPAVCFont@@H@Z ; CWnd::SetFont

; 54   : 
; 55   : 	lpDC->SetTextAlign( TA_BOTTOM  );

  001d4	6a 08		 push	 8
  001d6	8b 4d fc	 mov	 ecx, DWORD PTR _lpDC$[ebp]
  001d9	e8 00 00 00 00	 call	 ?SetTextAlign@CDC@@QAEII@Z ; CDC::SetTextAlign

; 56   : 	
; 57   : 	ReleaseDC( lpDC );

  001de	8b 55 fc	 mov	 edx, DWORD PTR _lpDC$[ebp]
  001e1	52		 push	 edx
  001e2	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e5	e8 00 00 00 00	 call	 ?ReleaseDC@CWnd@@QAEHPAVCDC@@@Z ; CWnd::ReleaseDC

; 58   : 
; 59   : 	SetMargins(4,0);

  001ea	6a 00		 push	 0
  001ec	6a 04		 push	 4
  001ee	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f1	e8 00 00 00 00	 call	 ?SetMargins@CEdit@@QAEXII@Z ; CEdit::SetMargins

; 60   : 	return 0;

  001f6	33 c0		 xor	 eax, eax
$L197464:

; 61   : }

  001f8	8b 4d f8	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001fb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00200	8b e5		 mov	 esp, ebp
  00202	5d		 pop	 ebp
  00203	c2 04 00	 ret	 4
?OnCreate@CEditEx@@QAEHPAUtagCREATESTRUCTA@@@Z ENDP	; CEditEx::OnCreate
_TEXT	ENDS
PUBLIC	?GetParent@CWnd@@QBEPAV1@XZ			; CWnd::GetParent
EXTRN	__imp__SendMessageA@16:NEAR
EXTRN	__imp__GetWindowLongA@8:NEAR
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wParam$ = 8						; size = 4
_lParam$ = 12						; size = 4
?OnMouseHover@CEditEx@@QAEJIJ@Z PROC NEAR		; CEditEx::OnMouseHover
; _this$ = ecx

; 64   : { 	

  00210	55		 push	 ebp
  00211	8b ec		 mov	 ebp, esp
  00213	51		 push	 ecx
  00214	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 65   : 	m_bMouseOn = TRUE;

  00217	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0021a	c7 40 64 01 00
	00 00		 mov	 DWORD PTR [eax+100], 1

; 66   : 	::SendMessage( this->GetParent()->m_hWnd, MSG_MOUSEHOVER_EDIT, GetWindowLong(this->m_hWnd, GWL_ID),0 );

  00221	6a 00		 push	 0
  00223	6a f4		 push	 -12			; fffffff4H
  00225	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00228	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0022b	52		 push	 edx
  0022c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongA@8
  00232	50		 push	 eax
  00233	68 eb 07 00 00	 push	 2027			; 000007ebH
  00238	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0023b	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  00240	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  00243	50		 push	 eax
  00244	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 67   : 	return 1;

  0024a	b8 01 00 00 00	 mov	 eax, 1

; 68   : } 

  0024f	8b e5		 mov	 esp, ebp
  00251	5d		 pop	 ebp
  00252	c2 08 00	 ret	 8
?OnMouseHover@CEditEx@@QAEJIJ@Z ENDP			; CEditEx::OnMouseHover
; Function compile flags: /Odt
_this$ = -4						; size = 4
_wParam$ = 8						; size = 4
_lParam$ = 12						; size = 4
?OnMouseLeave@CEditEx@@QAEJIJ@Z PROC NEAR		; CEditEx::OnMouseLeave
; _this$ = ecx

; 70   : { 	

  00260	55		 push	 ebp
  00261	8b ec		 mov	 ebp, esp
  00263	51		 push	 ecx
  00264	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 71   : 	m_bMouseOn = FALSE;

  00267	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0026a	c7 40 64 00 00
	00 00		 mov	 DWORD PTR [eax+100], 0

; 72   : 	::SendMessage( this->GetParent()->m_hWnd, MSG_MOUSELEAVE_EDIT, GetWindowLong(this->m_hWnd, GWL_ID),0 );

  00271	6a 00		 push	 0
  00273	6a f4		 push	 -12			; fffffff4H
  00275	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00278	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0027b	52		 push	 edx
  0027c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongA@8
  00282	50		 push	 eax
  00283	68 ea 07 00 00	 push	 2026			; 000007eaH
  00288	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0028b	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  00290	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  00293	50		 push	 eax
  00294	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 73   : 	return 1;

  0029a	b8 01 00 00 00	 mov	 eax, 1

; 74   : }

  0029f	8b e5		 mov	 esp, ebp
  002a1	5d		 pop	 ebp
  002a2	c2 08 00	 ret	 8
?OnMouseLeave@CEditEx@@QAEJIJ@Z ENDP			; CEditEx::OnMouseLeave
_TEXT	ENDS
PUBLIC	?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z		; CWnd::OnMouseMove
EXTRN	__imp___TrackMouseEvent@4:NEAR
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -20						; size = 4
_tme$197484 = -16					; size = 16
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnMouseMove@CEditEx@@QAEXIVCPoint@@@Z PROC NEAR	; CEditEx::OnMouseMove
; _this$ = ecx

; 76   : {

  002b0	55		 push	 ebp
  002b1	8b ec		 mov	 ebp, esp
  002b3	83 ec 14	 sub	 esp, 20			; 00000014H
  002b6	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 77   : 	// TODO: Add your message handler code here and/or call default
; 78   : 	if   (!m_bMouseOn) 

  002b9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002bc	83 78 64 00	 cmp	 DWORD PTR [eax+100], 0
  002c0	75 2e		 jne	 SHORT $L197483

; 79   : 	{ 
; 80   : 		TRACKMOUSEEVENT   tme;
; 81   : 		tme.cbSize   =   sizeof(tme); 

  002c2	c7 45 f0 10 00
	00 00		 mov	 DWORD PTR _tme$197484[ebp], 16 ; 00000010H

; 82   : 		tme.hwndTrack   =   m_hWnd; 

  002c9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002cc	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  002cf	89 55 f8	 mov	 DWORD PTR _tme$197484[ebp+8], edx

; 83   : 		tme.dwFlags   =   TME_LEAVE   |   TME_HOVER; 

  002d2	c7 45 f4 03 00
	00 00		 mov	 DWORD PTR _tme$197484[ebp+4], 3

; 84   : 		tme.dwHoverTime   =   1; 

  002d9	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _tme$197484[ebp+12], 1

; 85   : 		m_bMouseOn   =   _TrackMouseEvent(&tme); 

  002e0	8d 45 f0	 lea	 eax, DWORD PTR _tme$197484[ebp]
  002e3	50		 push	 eax
  002e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___TrackMouseEvent@4
  002ea	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002ed	89 41 64	 mov	 DWORD PTR [ecx+100], eax
$L197483:

; 86   : 	} 
; 87   : 
; 88   : 	CEdit::OnMouseMove(nFlags, point);

  002f0	8b 55 10	 mov	 edx, DWORD PTR _point$[ebp+4]
  002f3	52		 push	 edx
  002f4	8b 45 0c	 mov	 eax, DWORD PTR _point$[ebp]
  002f7	50		 push	 eax
  002f8	8b 4d 08	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  002fb	51		 push	 ecx
  002fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002ff	e8 00 00 00 00	 call	 ?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z ; CWnd::OnMouseMove

; 89   : }

  00304	8b e5		 mov	 esp, ebp
  00306	5d		 pop	 ebp
  00307	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseMove@CEditEx@@QAEXIVCPoint@@@Z ENDP		; CEditEx::OnMouseMove
_TEXT	ENDS
PUBLIC	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetClientRect
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	?GetFocus@CWnd@@SGPAV1@XZ			; CWnd::GetFocus
PUBLIC	??BCRect@@QAEPAUtagRECT@@XZ			; CRect::operator tagRECT *
PUBLIC	?DrawTextA@CDC@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAUtagRECT@@I@Z ; CDC::DrawTextA
PUBLIC	?SetSel@CEdit@@QAEXHHH@Z			; CEdit::SetSel
EXTRN	?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z:NEAR	; CDC::SelectObject
EXTRN	__imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ:NEAR
EXTRN	?SetTextColor@CDC@@UAEKK@Z:NEAR			; CDC::SetTextColor
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:NEAR
EXTRN	__imp_?Trim@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ:NEAR
EXTRN	?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z:NEAR	; CDC::FillSolidRect
EXTRN	??0CPaintDC@@QAE@PAVCWnd@@@Z:NEAR		; CPaintDC::CPaintDC
EXTRN	??1CPaintDC@@UAE@XZ:NEAR			; CPaintDC::~CPaintDC
EXTRN	?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CWnd::GetWindowTextA
EXTRN	?AfxGetUIManager@@YAPAVIUIManager@@XZ:NEAR	; AfxGetUIManager
xdata$x	SEGMENT
$T198097 DD	0ffffffffH
	DD	FLAT:$L198091
	DD	00H
	DD	FLAT:$L198092
$T198094 DD	019930520H
	DD	02H
	DD	FLAT:$T198097
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv156 = -168						; size = 4
tv151 = -164						; size = 4
tv138 = -160						; size = 4
tv133 = -156						; size = 4
tv94 = -152						; size = 4
tv89 = -148						; size = 4
_this$ = -144						; size = 4
_clrText$ = -140					; size = 4
_rectText$ = -136					; size = 16
_clrBk$ = -120						; size = 4
_cText$ = -116						; size = 4
_bDrawTip$ = -109					; size = 1
_dc$ = -108						; size = 84
__$ArrayPad$ = -20					; size = 4
_oldfont$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnPaint@CEditEx@@QAEXXZ PROC NEAR			; CEditEx::OnPaint
; _this$ = ecx

; 92   : {

  00310	55		 push	 ebp
  00311	8b ec		 mov	 ebp, esp
  00313	6a ff		 push	 -1
  00315	68 00 00 00 00	 push	 __ehhandler$?OnPaint@CEditEx@@QAEXXZ
  0031a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00320	50		 push	 eax
  00321	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00328	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  0032e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00333	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00336	89 8d 70 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 93   : 	bool bDrawTip = false;

  0033c	c6 45 93 00	 mov	 BYTE PTR _bDrawTip$[ebp], 0

; 94   : 	CString cText;

  00340	8d 4d 8c	 lea	 ecx, DWORD PTR _cText$[ebp]
  00343	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00349	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 95   : 	if( GetFocus()!= this )

  00350	e8 00 00 00 00	 call	 ?GetFocus@CWnd@@SGPAV1@XZ ; CWnd::GetFocus
  00355	3b 85 70 ff ff
	ff		 cmp	 eax, DWORD PTR _this$[ebp]
  0035b	74 36		 je	 SHORT $L197490

; 96   : 	{
; 97   : 		GetWindowText(cText);

  0035d	8d 45 8c	 lea	 eax, DWORD PTR _cText$[ebp]
  00360	50		 push	 eax
  00361	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00367	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CWnd::GetWindowTextA

; 98   : 		if( cText.Trim().GetLength() == 0 )

  0036c	8d 4d 8c	 lea	 ecx, DWORD PTR _cText$[ebp]
  0036f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Trim@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ
  00375	8b c8		 mov	 ecx, eax
  00377	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  0037d	85 c0		 test	 eax, eax
  0037f	75 12		 jne	 SHORT $L197490

; 99   : 		{
; 100  : 			cText = SEARCH_HELP;

  00381	68 00 00 00 00	 push	 OFFSET FLAT:$SG197492
  00386	8d 4d 8c	 lea	 ecx, DWORD PTR _cText$[ebp]
  00389	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z

; 101  : 			bDrawTip = true;

  0038f	c6 45 93 01	 mov	 BYTE PTR _bDrawTip$[ebp], 1
$L197490:

; 102  : 		}
; 103  : 	}
; 104  : 
; 105  : 	CPaintDC dc(this); 

  00393	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00399	51		 push	 ecx
  0039a	8d 4d 94	 lea	 ecx, DWORD PTR _dc$[ebp]
  0039d	e8 00 00 00 00	 call	 ??0CPaintDC@@QAE@PAVCWnd@@@Z ; CPaintDC::CPaintDC
  003a2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 106  : 	CRect rectText;

  003a6	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _rectText$[ebp]
  003ac	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 107  : 	GetClientRect(&rectText); 

  003b1	8d 95 78 ff ff
	ff		 lea	 edx, DWORD PTR _rectText$[ebp]
  003b7	52		 push	 edx
  003b8	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  003be	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 108  : 
; 109  : 	COLORREF clrText;
; 110  : 	if( bDrawTip )

  003c3	0f b6 45 93	 movzx	 eax, BYTE PTR _bDrawTip$[ebp]
  003c7	85 c0		 test	 eax, eax
  003c9	74 40		 je	 SHORT $L197496

; 111  : 	{
; 112  : 		clrText = ::AfxGetUIManager()->UIGetSkinMgr()->GetColor("SearchInputEditTip");

  003cb	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  003d0	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv89[ebp], eax
  003d6	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv89[ebp]
  003dc	8b 11		 mov	 edx, DWORD PTR [ecx]
  003de	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv89[ebp]
  003e4	ff 52 28	 call	 DWORD PTR [edx+40]
  003e7	89 85 68 ff ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
  003ed	68 00 00 00 00	 push	 OFFSET FLAT:$SG197497
  003f2	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  003f8	8b 10		 mov	 edx, DWORD PTR [eax]
  003fa	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv94[ebp]
  00400	ff 52 08	 call	 DWORD PTR [edx+8]
  00403	89 85 74 ff ff
	ff		 mov	 DWORD PTR _clrText$[ebp], eax

; 113  : 	}else

  00409	eb 3e		 jmp	 SHORT $L197498
$L197496:

; 114  : 	{
; 115  : 		clrText	= ::AfxGetUIManager()->UIGetSkinMgr()->GetColor("SearchInputEditText");

  0040b	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  00410	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv133[ebp], eax
  00416	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv133[ebp]
  0041c	8b 10		 mov	 edx, DWORD PTR [eax]
  0041e	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv133[ebp]
  00424	ff 52 28	 call	 DWORD PTR [edx+40]
  00427	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv138[ebp], eax
  0042d	68 00 00 00 00	 push	 OFFSET FLAT:$SG197499
  00432	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv138[ebp]
  00438	8b 10		 mov	 edx, DWORD PTR [eax]
  0043a	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv138[ebp]
  00440	ff 52 08	 call	 DWORD PTR [edx+8]
  00443	89 85 74 ff ff
	ff		 mov	 DWORD PTR _clrText$[ebp], eax
$L197498:

; 116  : 	}
; 117  : 	dc.SetTextColor( clrText );

  00449	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _clrText$[ebp]
  0044f	50		 push	 eax
  00450	8d 4d 94	 lea	 ecx, DWORD PTR _dc$[ebp]
  00453	e8 00 00 00 00	 call	 ?SetTextColor@CDC@@UAEKK@Z ; CDC::SetTextColor

; 118  : 
; 119  : 	CFont   *oldfont;   
; 120  : 	oldfont = dc.SelectObject( &m_font);

  00458	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0045e	83 c1 58	 add	 ecx, 88			; 00000058H
  00461	51		 push	 ecx
  00462	8d 4d 94	 lea	 ecx, DWORD PTR _dc$[ebp]
  00465	e8 00 00 00 00	 call	 ?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z ; CDC::SelectObject
  0046a	89 45 f0	 mov	 DWORD PTR _oldfont$[ebp], eax

; 121  : 	
; 122  : 	COLORREF clrBk = ::AfxGetUIManager()->UIGetSkinMgr()->GetColor("SearchInputEditBK");

  0046d	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  00472	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv151[ebp], eax
  00478	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR tv151[ebp]
  0047e	8b 02		 mov	 eax, DWORD PTR [edx]
  00480	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv151[ebp]
  00486	ff 50 28	 call	 DWORD PTR [eax+40]
  00489	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv156[ebp], eax
  0048f	68 00 00 00 00	 push	 OFFSET FLAT:$SG197502
  00494	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR tv156[ebp]
  0049a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0049c	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR tv156[ebp]
  004a2	ff 52 08	 call	 DWORD PTR [edx+8]
  004a5	89 45 88	 mov	 DWORD PTR _clrBk$[ebp], eax

; 123  : 	dc.FillSolidRect(&rectText,clrBk);

  004a8	8b 45 88	 mov	 eax, DWORD PTR _clrBk$[ebp]
  004ab	50		 push	 eax
  004ac	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _rectText$[ebp]
  004b2	51		 push	 ecx
  004b3	8d 4d 94	 lea	 ecx, DWORD PTR _dc$[ebp]
  004b6	e8 00 00 00 00	 call	 ?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z ; CDC::FillSolidRect

; 124  : 
; 125  : 	rectText.left += 4;

  004bb	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _rectText$[ebp]
  004c1	83 c2 04	 add	 edx, 4
  004c4	89 95 78 ff ff
	ff		 mov	 DWORD PTR _rectText$[ebp], edx

; 126  : 	dc.DrawText( cText,rectText, DT_VCENTER|DT_LEFT|DT_SINGLELINE );

  004ca	6a 24		 push	 36			; 00000024H
  004cc	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _rectText$[ebp]
  004d2	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  004d7	50		 push	 eax
  004d8	8d 45 8c	 lea	 eax, DWORD PTR _cText$[ebp]
  004db	50		 push	 eax
  004dc	8d 4d 94	 lea	 ecx, DWORD PTR _dc$[ebp]
  004df	e8 00 00 00 00	 call	 ?DrawTextA@CDC@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAUtagRECT@@I@Z ; CDC::DrawTextA

; 127  : 	dc.SelectObject( oldfont );

  004e4	8b 4d f0	 mov	 ecx, DWORD PTR _oldfont$[ebp]
  004e7	51		 push	 ecx
  004e8	8d 4d 94	 lea	 ecx, DWORD PTR _dc$[ebp]
  004eb	e8 00 00 00 00	 call	 ?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z ; CDC::SelectObject

; 128  : 	SetSel(-1, -1);

  004f0	6a 00		 push	 0
  004f2	6a ff		 push	 -1
  004f4	6a ff		 push	 -1
  004f6	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  004fc	e8 00 00 00 00	 call	 ?SetSel@CEdit@@QAEXHHH@Z ; CEdit::SetSel

; 129  : }

  00501	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00505	8d 4d 94	 lea	 ecx, DWORD PTR _dc$[ebp]
  00508	e8 00 00 00 00	 call	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
  0050d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00514	8d 4d 8c	 lea	 ecx, DWORD PTR _cText$[ebp]
  00517	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0051d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00520	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00527	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0052a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0052f	8b e5		 mov	 esp, ebp
  00531	5d		 pop	 ebp
  00532	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L198091:
  00024	8d 4d 8c	 lea	 ecx, DWORD PTR _cText$[ebp]
  00027	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198092:
  0002d	8d 4d 94	 lea	 ecx, DWORD PTR _dc$[ebp]
  00030	e9 00 00 00 00	 jmp	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
__ehhandler$?OnPaint@CEditEx@@QAEXXZ:
  00035	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198094
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnPaint@CEditEx@@QAEXXZ ENDP				; CEditEx::OnPaint
EXTRN	__imp__SetBkColor@8:NEAR
EXTRN	__imp__SetTextColor@8:NEAR
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
; Function compile flags: /Odt
_TEXT	SEGMENT
tv90 = -32						; size = 4
tv85 = -28						; size = 4
tv78 = -24						; size = 4
tv73 = -20						; size = 4
_this$ = -16						; size = 4
_hdcChild$ = -12					; size = 4
_clrText$ = -8						; size = 4
_clrBk$ = -4						; size = 4
_message$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
_pLResult$ = 20						; size = 4
?OnChildNotify@CEditEx@@UAEHIIJPAJ@Z PROC NEAR		; CEditEx::OnChildNotify
; _this$ = ecx

; 132  : {

  00540	55		 push	 ebp
  00541	8b ec		 mov	 ebp, esp
  00543	83 ec 20	 sub	 esp, 32			; 00000020H
  00546	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 133  : 	if (message != WM_CTLCOLOREDIT) 

  00549	81 7d 08 33 01
	00 00		 cmp	 DWORD PTR _message$[ebp], 307 ; 00000133H
  00550	74 1a		 je	 SHORT $L197510

; 134  : 	{
; 135  : 		return CEdit::OnChildNotify(message, wParam, lParam, pLResult);

  00552	8b 45 14	 mov	 eax, DWORD PTR _pLResult$[ebp]
  00555	50		 push	 eax
  00556	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00559	51		 push	 ecx
  0055a	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  0055d	52		 push	 edx
  0055e	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  00561	50		 push	 eax
  00562	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00565	e8 00 00 00 00	 call	 ?OnChildNotify@CWnd@@MAEHIIJPAJ@Z ; CWnd::OnChildNotify
  0056a	eb 79		 jmp	 SHORT $L197509
$L197510:

; 136  : 	}
; 137  : 
; 138  : 	HDC hdcChild = (HDC)wParam;

  0056c	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0056f	89 4d f4	 mov	 DWORD PTR _hdcChild$[ebp], ecx

; 139  : 	COLORREF clrText , clrBk;
; 140  : 	clrText	= ::AfxGetUIManager()->UIGetSkinMgr()->GetColor("SearchInputEditText");

  00572	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  00577	89 45 ec	 mov	 DWORD PTR tv73[ebp], eax
  0057a	8b 55 ec	 mov	 edx, DWORD PTR tv73[ebp]
  0057d	8b 02		 mov	 eax, DWORD PTR [edx]
  0057f	8b 4d ec	 mov	 ecx, DWORD PTR tv73[ebp]
  00582	ff 50 28	 call	 DWORD PTR [eax+40]
  00585	89 45 e8	 mov	 DWORD PTR tv78[ebp], eax
  00588	68 00 00 00 00	 push	 OFFSET FLAT:$SG197515
  0058d	8b 4d e8	 mov	 ecx, DWORD PTR tv78[ebp]
  00590	8b 11		 mov	 edx, DWORD PTR [ecx]
  00592	8b 4d e8	 mov	 ecx, DWORD PTR tv78[ebp]
  00595	ff 52 08	 call	 DWORD PTR [edx+8]
  00598	89 45 f8	 mov	 DWORD PTR _clrText$[ebp], eax

; 141  : 	clrBk = ::AfxGetUIManager()->UIGetSkinMgr()->GetColor("SearchInputEditBK");

  0059b	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  005a0	89 45 e4	 mov	 DWORD PTR tv85[ebp], eax
  005a3	8b 45 e4	 mov	 eax, DWORD PTR tv85[ebp]
  005a6	8b 10		 mov	 edx, DWORD PTR [eax]
  005a8	8b 4d e4	 mov	 ecx, DWORD PTR tv85[ebp]
  005ab	ff 52 28	 call	 DWORD PTR [edx+40]
  005ae	89 45 e0	 mov	 DWORD PTR tv90[ebp], eax
  005b1	68 00 00 00 00	 push	 OFFSET FLAT:$SG197516
  005b6	8b 45 e0	 mov	 eax, DWORD PTR tv90[ebp]
  005b9	8b 10		 mov	 edx, DWORD PTR [eax]
  005bb	8b 4d e0	 mov	 ecx, DWORD PTR tv90[ebp]
  005be	ff 52 08	 call	 DWORD PTR [edx+8]
  005c1	89 45 fc	 mov	 DWORD PTR _clrBk$[ebp], eax

; 142  : 
; 143  : 	SetTextColor(hdcChild, clrText);

  005c4	8b 45 f8	 mov	 eax, DWORD PTR _clrText$[ebp]
  005c7	50		 push	 eax
  005c8	8b 4d f4	 mov	 ecx, DWORD PTR _hdcChild$[ebp]
  005cb	51		 push	 ecx
  005cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 144  : 	SetBkColor(hdcChild, clrBk);

  005d2	8b 55 fc	 mov	 edx, DWORD PTR _clrBk$[ebp]
  005d5	52		 push	 edx
  005d6	8b 45 f4	 mov	 eax, DWORD PTR _hdcChild$[ebp]
  005d9	50		 push	 eax
  005da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetBkColor@8

; 145  : 	return TRUE;

  005e0	b8 01 00 00 00	 mov	 eax, 1
$L197509:

; 146  : }

  005e5	8b e5		 mov	 esp, ebp
  005e7	5d		 pop	 ebp
  005e8	c2 10 00	 ret	 16			; 00000010H
?OnChildNotify@CEditEx@@UAEHIIJPAJ@Z ENDP		; CEditEx::OnChildNotify
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atltypes.inl
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRect@@QAE@XZ PROC NEAR				; CRect::CRect, COMDAT
; _this$ = ecx

; 110  : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCRect@@QAEPAUtagRECT@@XZ PROC NEAR			; CRect::operator tagRECT *, COMDAT
; _this$ = ecx

; 143  : 	{ return this; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??BCRect@@QAEPAUtagRECT@@XZ ENDP			; CRect::operator tagRECT *
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afx.inl
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT
; _this$ = ecx

; 25   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Odt
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 31   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 41   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT
; _this$ = ecx

; 43   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
PUBLIC	??_R0?AVCGdiObject@@@8				; CGdiObject `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CGdiObject@@8			; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R4CFont@@6B@					; CFont::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFont@@@8				; CFont `RTTI Type Descriptor'
PUBLIC	??_R3CFont@@8					; CFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFont@@8					; CFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CFont@@8				; CFont::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??0CGdiObject@@QAE@XZ				; CGdiObject::CGdiObject
PUBLIC	??_7CFont@@6B@					; CFont::`vftable'
PUBLIC	??_GCFont@@UAEPAXI@Z				; CFont::`scalar deleting destructor'
EXTRN	?GetRuntimeClass@CFont@@UBEPAUCRuntimeClass@@XZ:NEAR ; CFont::GetRuntimeClass
EXTRN	??_ECFont@@UAEPAXI@Z:NEAR			; CFont::`vector deleting destructor'
;	COMDAT ??_7CFont@@6B@
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin1.inl
CONST	SEGMENT
??_7CFont@@6B@ DD FLAT:??_R4CFont@@6B@			; CFont::`vftable'
	DD	FLAT:?GetRuntimeClass@CFont@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECFont@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_R4CFont@@6B@
rdata$r	SEGMENT
??_R4CFont@@6B@ DD 00H					; CFont::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFont@@@8
	DD	FLAT:??_R3CFont@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFont@@@8
_DATA	SEGMENT
??_R0?AVCFont@@@8 DD FLAT:??_7type_info@@6B@		; CFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFont@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CFont@@8
rdata$r	SEGMENT
??_R3CFont@@8 DD 00H					; CFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CFont@@8
rdata$r	ENDS
;	COMDAT ??_R2CFont@@8
rdata$r	SEGMENT
??_R2CFont@@8 DD FLAT:??_R1A@?0A@A@CFont@@8		; CFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@CGdiObject@@8
	DD	FLAT:??_R1A@?0A@A@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CFont@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CFont@@8 DD FLAT:??_R0?AVCFont@@@8		; CFont::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CGdiObject@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CGdiObject@@8 DD FLAT:??_R0?AVCGdiObject@@@8 ; CGdiObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCGdiObject@@@8
_DATA	SEGMENT
??_R0?AVCGdiObject@@@8 DD FLAT:??_7type_info@@6B@	; CGdiObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGdiObject@@', 00H
; Function compile flags: /Odt
_DATA	ENDS
;	COMDAT ??0CFont@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFont@@QAE@XZ PROC NEAR				; CFont::CFont, COMDAT
; _this$ = ecx

; 153  : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CGdiObject@@QAE@XZ	; CGdiObject::CGdiObject
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CFont@@6B@
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CFont@@QAE@XZ ENDP					; CFont::CFont
_TEXT	ENDS
PUBLIC	??_R4CGdiObject@@6B@				; CGdiObject::`RTTI Complete Object Locator'
PUBLIC	??_R3CGdiObject@@8				; CGdiObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGdiObject@@8				; CGdiObject::`RTTI Base Class Array'
PUBLIC	??0CObject@@IAE@XZ				; CObject::CObject
PUBLIC	??_7CGdiObject@@6B@				; CGdiObject::`vftable'
PUBLIC	??_GCGdiObject@@UAEPAXI@Z			; CGdiObject::`scalar deleting destructor'
EXTRN	?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ:NEAR ; CGdiObject::GetRuntimeClass
EXTRN	??_ECGdiObject@@UAEPAXI@Z:NEAR			; CGdiObject::`vector deleting destructor'
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT
??_7CGdiObject@@6B@ DD FLAT:??_R4CGdiObject@@6B@	; CGdiObject::`vftable'
	DD	FLAT:?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECGdiObject@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_R4CGdiObject@@6B@
rdata$r	SEGMENT
??_R4CGdiObject@@6B@ DD 00H				; CGdiObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGdiObject@@@8
	DD	FLAT:??_R3CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGdiObject@@8
rdata$r	SEGMENT
??_R3CGdiObject@@8 DD 00H				; CGdiObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGdiObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGdiObject@@8
rdata$r	SEGMENT
??_R2CGdiObject@@8 DD FLAT:??_R1A@?0A@A@CGdiObject@@8	; CGdiObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@CObject@@8
; Function compile flags: /Odt
rdata$r	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGdiObject@@QAE@XZ PROC NEAR				; CGdiObject::CGdiObject, COMDAT
; _this$ = ecx

; 82   : 	{ m_hObject = NULL; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGdiObject@@6B@
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0CGdiObject@@QAE@XZ ENDP				; CGdiObject::CGdiObject
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afx.inl
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CObject@@IAE@XZ PROC NEAR				; CObject::CObject, COMDAT
; _this$ = ecx

; 21   : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CObject@@IAE@XZ ENDP					; CObject::CObject
_TEXT	ENDS
PUBLIC	??1CGdiObject@@UAE@XZ				; CGdiObject::~CGdiObject
; Function compile flags: /Odt
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCGdiObject@@UAEPAXI@Z PROC NEAR			; CGdiObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 09		 je	 SHORT $L41495
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L41495:
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??_GCGdiObject@@UAEPAXI@Z ENDP				; CGdiObject::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
EXTRN	?DeleteObject@CGdiObject@@QAEHXZ:NEAR		; CGdiObject::DeleteObject
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin1.inl
xdata$x	SEGMENT
$T198126 DD	0ffffffffH
	DD	FLAT:$L198122
$T198124 DD	019930520H
	DD	01H
	DD	FLAT:$T198126
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CGdiObject@@UAE@XZ PROC NEAR				; CGdiObject::~CGdiObject, COMDAT
; _this$ = ecx

; 84   : 	{ DeleteObject(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGdiObject@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGdiObject@@6B@
  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
  00034	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L198122:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??1CGdiObject@@UAE@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198124
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CGdiObject@@UAE@XZ ENDP				; CGdiObject::~CGdiObject
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afx.inl
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CObject@@UAE@XZ PROC NEAR				; CObject::~CObject, COMDAT
; _this$ = ecx

; 23   : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCFont@@UAEPAXI@Z PROC NEAR				; CFont::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CFont@@UAE@XZ	; CFont::~CFont
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 09		 je	 SHORT $L41640
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L41640:
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??_GCFont@@UAEPAXI@Z ENDP				; CFont::`scalar deleting destructor'
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin1.inl
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFont@@UAE@XZ PROC NEAR				; CFont::~CFont, COMDAT
; _this$ = ecx

; 155  : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CFont@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CFont@@UAE@XZ ENDP					; CFont::~CFont
_TEXT	ENDS
EXTRN	__imp__CreateFontIndirectA@4:NEAR
EXTRN	?Attach@CGdiObject@@QAEHPAX@Z:NEAR		; CGdiObject::Attach
; Function compile flags: /Odt
;	COMDAT ?CreateFontIndirectA@CFont@@QAEHPBUtagLOGFONTA@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpLogFont$ = 8						; size = 4
?CreateFontIndirectA@CFont@@QAEHPBUtagLOGFONTA@@@Z PROC NEAR ; CFont::CreateFontIndirectA, COMDAT
; _this$ = ecx

; 157  : 	{ return Attach(::CreateFontIndirect(lpLogFont)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpLogFont$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFontIndirectA@4
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?CreateFontIndirectA@CFont@@QAEHPBUtagLOGFONTA@@@Z ENDP	; CFont::CreateFontIndirectA
_TEXT	ENDS
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:NEAR
; Function compile flags: /Odt
;	COMDAT ?DrawTextA@CDC@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAUtagRECT@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_str$ = 8						; size = 4
_lpRect$ = 12						; size = 4
_nFormat$ = 16						; size = 4
?DrawTextA@CDC@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAUtagRECT@@I@Z PROC NEAR ; CDC::DrawTextA, COMDAT
; _this$ = ecx

; 592  : 	{ ASSERT(m_hDC != NULL);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 593  : 		// these flags would modify the string
; 594  : 		ASSERT((nFormat & (DT_END_ELLIPSIS | DT_MODIFYSTRING)) != (DT_END_ELLIPSIS | DT_MODIFYSTRING));
; 595  : 		ASSERT((nFormat & (DT_PATH_ELLIPSIS | DT_MODIFYSTRING)) != (DT_PATH_ELLIPSIS | DT_MODIFYSTRING));
; 596  : 		return DrawText((LPCTSTR)str, (int)str.GetLength(), lpRect, nFormat); }

  00007	8b 45 10	 mov	 eax, DWORD PTR _nFormat$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00022	50		 push	 eax
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	ff 50 70	 call	 DWORD PTR [eax+112]
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 0c 00	 ret	 12			; 0000000cH
?DrawTextA@CDC@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAUtagRECT@@I@Z ENDP ; CDC::DrawTextA
_TEXT	ENDS
PUBLIC	?GetSafeHandle@CGdiObject@@QBEPAXXZ		; CGdiObject::GetSafeHandle
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
;	COMDAT ?SetFont@CWnd@@QAEXPAVCFont@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pFont$ = 8						; size = 4
_bRedraw$ = 12						; size = 4
?SetFont@CWnd@@QAEXPAVCFont@@H@Z PROC NEAR		; CWnd::SetFont, COMDAT
; _this$ = ecx

; 58   : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, WM_SETFONT, (WPARAM)pFont->GetSafeHandle(), bRedraw); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _bRedraw$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _pFont$[ebp]
  0000e	e8 00 00 00 00	 call	 ?GetSafeHandle@CGdiObject@@QBEPAXXZ ; CGdiObject::GetSafeHandle
  00013	50		 push	 eax
  00014	6a 30		 push	 48			; 00000030H
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0001c	52		 push	 edx
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?SetFont@CWnd@@QAEXPAVCFont@@H@Z ENDP			; CWnd::SetFont
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin1.inl
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?GetSafeHandle@CGdiObject@@QBEPAXXZ PROC NEAR		; CGdiObject::GetSafeHandle, COMDAT
; _this$ = ecx

; 80   : 	{ return this == NULL ? NULL : m_hObject; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	75 09		 jne	 SHORT $L198144
  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  00016	eb 09		 jmp	 SHORT $L198145
$L198144:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001e	89 4d f8	 mov	 DWORD PTR tv66[ebp], ecx
$L198145:
  00021	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetSafeHandle@CGdiObject@@QBEPAXXZ ENDP		; CGdiObject::GetSafeHandle
_TEXT	ENDS
EXTRN	__imp__GetClientRect@8:NEAR
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpRect$ = 8						; size = 4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetClientRect, COMDAT
; _this$ = ecx

; 107  : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetClientRect
_TEXT	ENDS
EXTRN	?FromHandle@CDC@@SGPAV1@PAUHDC__@@@Z:NEAR	; CDC::FromHandle
EXTRN	__imp__GetDC@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDC@CWnd@@QAEPAVCDC@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDC@CWnd@@QAEPAVCDC@@XZ PROC NEAR			; CWnd::GetDC, COMDAT
; _this$ = ecx

; 121  : 	{ ASSERT(::IsWindow(m_hWnd)); return CDC::FromHandle(::GetDC(m_hWnd)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDC@4
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?FromHandle@CDC@@SGPAV1@PAUHDC__@@@Z ; CDC::FromHandle
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?GetDC@CWnd@@QAEPAVCDC@@XZ ENDP				; CWnd::GetDC
_TEXT	ENDS
EXTRN	__imp__ReleaseDC@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?ReleaseDC@CWnd@@QAEHPAVCDC@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDC$ = 8						; size = 4
?ReleaseDC@CWnd@@QAEHPAVCDC@@@Z PROC NEAR		; CWnd::ReleaseDC, COMDAT
; _this$ = ecx

; 125  : 	{ ASSERT(::IsWindow(m_hWnd)); return ::ReleaseDC(m_hWnd, pDC->m_hDC); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _pDC$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00011	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseDC@8
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?ReleaseDC@CWnd@@QAEHPAVCDC@@@Z ENDP			; CWnd::ReleaseDC
_TEXT	ENDS
EXTRN	__imp__GetFocus@0:NEAR
EXTRN	?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z:NEAR	; CWnd::FromHandle
; Function compile flags: /Odt
;	COMDAT ?GetFocus@CWnd@@SGPAV1@XZ
_TEXT	SEGMENT
?GetFocus@CWnd@@SGPAV1@XZ PROC NEAR			; CWnd::GetFocus, COMDAT

; 201  : 	{ return CWnd::FromHandle(::GetFocus()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetFocus@CWnd@@SGPAV1@XZ ENDP				; CWnd::GetFocus
_TEXT	ENDS
EXTRN	__imp__GetParent@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetParent@CWnd@@QBEPAV1@XZ PROC NEAR			; CWnd::GetParent, COMDAT
; _this$ = ecx

; 282  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?GetParent@CWnd@@QBEPAV1@XZ ENDP			; CWnd::GetParent
_TEXT	ENDS
EXTRN	?Default@CWnd@@IAEJXZ:NEAR			; CWnd::Default
; Function compile flags: /Odt
;	COMDAT ?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z PROC NEAR	; CWnd::OnCreate, COMDAT
; _this$ = ecx

; 360  : 	{ return (int)Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z ENDP	; CWnd::OnCreate
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 8
?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z PROC NEAR		; CWnd::OnMouseMove, COMDAT
; _this$ = ecx

; 476  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z ENDP		; CWnd::OnMouseMove
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 545  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 549  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 551  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
PUBLIC	??_R4CEdit@@6B@					; CEdit::`RTTI Complete Object Locator'
PUBLIC	??_R3CEdit@@8					; CEdit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEdit@@8					; CEdit::`RTTI Base Class Array'
PUBLIC	??_7CEdit@@6B@					; CEdit::`vftable'
PUBLIC	??_GCEdit@@UAEPAXI@Z				; CEdit::`scalar deleting destructor'
EXTRN	?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR	; CWnd::GetMessageMap
EXTRN	?GetRuntimeClass@CEdit@@UBEPAUCRuntimeClass@@XZ:NEAR ; CEdit::GetRuntimeClass
EXTRN	??_ECEdit@@UAEPAXI@Z:NEAR			; CEdit::`vector deleting destructor'
EXTRN	??0CWnd@@QAE@XZ:NEAR				; CWnd::CWnd
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT
??_7CEdit@@6B@ DD FLAT:??_R4CEdit@@6B@			; CEdit::`vftable'
	DD	FLAT:?GetRuntimeClass@CEdit@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECEdit@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?Create@CEdit@@UAEHKABUtagRECT@@PAVCWnd@@I@Z
CONST	ENDS
;	COMDAT ??_R4CEdit@@6B@
rdata$r	SEGMENT
??_R4CEdit@@6B@ DD 00H					; CEdit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEdit@@@8
	DD	FLAT:??_R3CEdit@@8
rdata$r	ENDS
;	COMDAT ??_R3CEdit@@8
rdata$r	SEGMENT
??_R3CEdit@@8 DD 00H					; CEdit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CEdit@@8
rdata$r	ENDS
;	COMDAT ??_R2CEdit@@8
rdata$r	SEGMENT
??_R2CEdit@@8 DD FLAT:??_R1A@?0A@A@CEdit@@8		; CEdit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@CWnd@@8
	DD	FLAT:??_R1A@?0A@A@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@A@CObject@@8
; Function compile flags: /Odt
rdata$r	ENDS
;	COMDAT ??0CEdit@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CEdit@@QAE@XZ PROC NEAR				; CEdit::CEdit, COMDAT
; _this$ = ecx

; 813  : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CEdit@@6B@
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CEdit@@QAE@XZ ENDP					; CEdit::CEdit
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCEdit@@UAEPAXI@Z PROC NEAR				; CEdit::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CEdit@@UAE@XZ	; CEdit::~CEdit
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 09		 je	 SHORT $L45201
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L45201:
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??_GCEdit@@UAEPAXI@Z ENDP				; CEdit::`scalar deleting destructor'
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SetSel@CEdit@@QAEXHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nStartChar$ = 8					; size = 4
_nEndChar$ = 12						; size = 4
_bNoScroll$ = 16					; size = 4
?SetSel@CEdit@@QAEXHHH@Z PROC NEAR			; CEdit::SetSel, COMDAT
; _this$ = ecx

; 869  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_SETSEL, nStartChar, nEndChar);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _nEndChar$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _nStartChar$[ebp]
  0000e	51		 push	 ecx
  0000f	68 b1 00 00 00	 push	 177			; 000000b1H
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 870  : 	  if (!bNoScroll)

  00021	83 7d 10 00	 cmp	 DWORD PTR _bNoScroll$[ebp], 0
  00025	75 16		 jne	 SHORT $L45350

; 871  : 		::SendMessage(m_hWnd, EM_SCROLLCARET, 0, 0); }

  00027	6a 00		 push	 0
  00029	6a 00		 push	 0
  0002b	68 b7 00 00 00	 push	 183			; 000000b7H
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00036	52		 push	 edx
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$L45350:
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 0c 00	 ret	 12			; 0000000cH
?SetSel@CEdit@@QAEXHHH@Z ENDP				; CEdit::SetSel
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SetMargins@CEdit@@QAEXII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nLeft$ = 8						; size = 4
_nRight$ = 12						; size = 4
?SetMargins@CEdit@@QAEXII@Z PROC NEAR			; CEdit::SetMargins, COMDAT
; _this$ = ecx

; 897  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_SETMARGINS, EC_LEFTMARGIN|EC_RIGHTMARGIN, MAKELONG(nLeft, nRight)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _nLeft$[ebp]
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	0f b7 c8	 movzx	 ecx, ax
  00012	8b 55 0c	 mov	 edx, DWORD PTR _nRight$[ebp]
  00015	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0001b	0f b7 c2	 movzx	 eax, dx
  0001e	c1 e0 10	 shl	 eax, 16			; 00000010H
  00021	0b c8		 or	 ecx, eax
  00023	51		 push	 ecx
  00024	6a 03		 push	 3
  00026	68 d3 00 00 00	 push	 211			; 000000d3H
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00031	52		 push	 edx
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
?SetMargins@CEdit@@QAEXII@Z ENDP			; CEdit::SetMargins
_TEXT	ENDS
END
