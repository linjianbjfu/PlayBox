; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\Gui\CommonControl\BasicWnd.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??_GCBasicWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3CBasicWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CBasicWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CBasicWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCBasicWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4CBasicWnd@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnLButtonUp@CWnd@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnLButtonDown@CWnd@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_messageEntries@CBasicWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CBasicWnd@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CBasicWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?classCBasicWnd@CBasicWnd@@2UCRuntimeClass@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?classCBasicWnd@CBasicWnd@@2UCRuntimeClass@@B	; CBasicWnd::classCBasicWnd
PUBLIC	?_messageEntries@CBasicWnd@@0QBUAFX_MSGMAP_ENTRY@@B ; CBasicWnd::_messageEntries
PUBLIC	?messageMap@CBasicWnd@@1UAFX_MSGMAP@@B		; CBasicWnd::messageMap
PUBLIC	?OnLButtonDown@CBasicWnd@@IAEXIVCPoint@@@Z	; CBasicWnd::OnLButtonDown
PUBLIC	?OnLButtonUp@CBasicWnd@@IAEXIVCPoint@@@Z	; CBasicWnd::OnLButtonUp
PUBLIC	?OnMouseMove@CBasicWnd@@IAEXIVCPoint@@@Z	; CBasicWnd::OnMouseMove
PUBLIC	?OnPaint@CBasicWnd@@IAEXXZ			; CBasicWnd::OnPaint
PUBLIC	?OnSize@CBasicWnd@@IAEXIHH@Z			; CBasicWnd::OnSize
EXTRN	?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ:NEAR ; CWnd::GetThisMessageMap
EXTRN	?GetThisClass@CWnd@@SGPAUCRuntimeClass@@XZ:NEAR	; CWnd::GetThisClass
CONST	SEGMENT
$SG197400 DB	'CBasicWnd', 00H
CONST	ENDS
;	COMDAT ?classCBasicWnd@CBasicWnd@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCBasicWnd@CBasicWnd@@2UCRuntimeClass@@B DD FLAT:$SG197400 ; CBasicWnd::classCBasicWnd
	DD	054H
	DD	0ffffH
	DD	00H
	DD	FLAT:?GetThisClass@CWnd@@SGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?_messageEntries@CBasicWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CBasicWnd@@0QBUAFX_MSGMAP_ENTRY@@B DD 0202H ; CBasicWnd::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	032H
	DD	FLAT:?OnLButtonUp@CBasicWnd@@IAEXIVCPoint@@@Z
	DD	0201H
	DD	00H
	DD	00H
	DD	00H
	DD	032H
	DD	FLAT:?OnLButtonDown@CBasicWnd@@IAEXIVCPoint@@@Z
	DD	0200H
	DD	00H
	DD	00H
	DD	00H
	DD	032H
	DD	FLAT:?OnMouseMove@CBasicWnd@@IAEXIVCPoint@@@Z
	DD	0fH
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnPaint@CBasicWnd@@IAEXXZ
	DD	05H
	DD	00H
	DD	00H
	DD	00H
	DD	016H
	DD	FLAT:?OnSize@CBasicWnd@@IAEXIHH@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CBasicWnd@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CBasicWnd@@1UAFX_MSGMAP@@B DD FLAT:?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ ; CBasicWnd::messageMap
	DD	FLAT:?_messageEntries@CBasicWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
PUBLIC	?GetThisClass@CBasicWnd@@SGPAUCRuntimeClass@@XZ	; CBasicWnd::GetThisClass
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\gui\commoncontrol\basicwnd.cpp
_TEXT	SEGMENT
?GetThisClass@CBasicWnd@@SGPAUCRuntimeClass@@XZ PROC NEAR ; CBasicWnd::GetThisClass

; 4    : IMPLEMENT_DYNAMIC(CBasicWnd, CWnd)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCBasicWnd@CBasicWnd@@2UCRuntimeClass@@B ; CBasicWnd::classCBasicWnd
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetThisClass@CBasicWnd@@SGPAUCRuntimeClass@@XZ ENDP	; CBasicWnd::GetThisClass
_TEXT	ENDS
PUBLIC	?GetRuntimeClass@CBasicWnd@@UBEPAUCRuntimeClass@@XZ ; CBasicWnd::GetRuntimeClass
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRuntimeClass@CBasicWnd@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; CBasicWnd::GetRuntimeClass
; _this$ = ecx

; 4    : IMPLEMENT_DYNAMIC(CBasicWnd, CWnd)

  00010	55		 push	 ebp
  00011	8b ec		 mov	 ebp, esp
  00013	51		 push	 ecx
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCBasicWnd@CBasicWnd@@2UCRuntimeClass@@B ; CBasicWnd::classCBasicWnd
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetRuntimeClass@CBasicWnd@@UBEPAUCRuntimeClass@@XZ ENDP ; CBasicWnd::GetRuntimeClass
_TEXT	ENDS
PUBLIC	??_R1A@?0A@A@CObject@@8				; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??0CBasicWnd@@QAE@XZ				; CBasicWnd::CBasicWnd
PUBLIC	?GetMessageMap@CBasicWnd@@MBEPBUAFX_MSGMAP@@XZ	; CBasicWnd::GetMessageMap
PUBLIC	??_7CBasicWnd@@6B@				; CBasicWnd::`vftable'
PUBLIC	??_GCBasicWnd@@UAEPAXI@Z			; CBasicWnd::`scalar deleting destructor'
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	??_R4CBasicWnd@@6B@				; CBasicWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBasicWnd@@@8				; CBasicWnd `RTTI Type Descriptor'
PUBLIC	??_R3CBasicWnd@@8				; CBasicWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBasicWnd@@8				; CBasicWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CBasicWnd@@8			; CBasicWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDescription
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??_ECBasicWnd@@UAEPAXI@Z:NEAR			; CBasicWnd::`vector deleting destructor'
EXTRN	??0CWnd@@QAE@XZ:NEAR				; CWnd::CWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
;	COMDAT ??_7CBasicWnd@@6B@
CONST	SEGMENT
??_7CBasicWnd@@6B@ DD FLAT:??_R4CBasicWnd@@6B@		; CBasicWnd::`vftable'
	DD	FLAT:?GetRuntimeClass@CBasicWnd@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECBasicWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CBasicWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
CONST	ENDS
;	COMDAT ??_R4CBasicWnd@@6B@
rdata$r	SEGMENT
??_R4CBasicWnd@@6B@ DD 00H				; CBasicWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBasicWnd@@@8
	DD	FLAT:??_R3CBasicWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBasicWnd@@@8
_DATA	SEGMENT
??_R0?AVCBasicWnd@@@8 DD FLAT:??_7type_info@@6B@	; CBasicWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBasicWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CBasicWnd@@8
rdata$r	SEGMENT
??_R3CBasicWnd@@8 DD 00H				; CBasicWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CBasicWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CBasicWnd@@8
rdata$r	SEGMENT
??_R2CBasicWnd@@8 DD FLAT:??_R1A@?0A@A@CBasicWnd@@8	; CBasicWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@CWnd@@8
	DD	FLAT:??_R1A@?0A@A@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@A@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CBasicWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CBasicWnd@@8 DD FLAT:??_R0?AVCBasicWnd@@@8	; CBasicWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBasicWnd@@QAE@XZ PROC NEAR				; CBasicWnd::CBasicWnd
; _this$ = ecx

; 6    : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	51		 push	 ecx
  00024	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CBasicWnd@@6B@

; 7    : }

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??0CBasicWnd@@QAE@XZ ENDP				; CBasicWnd::CBasicWnd
_TEXT	ENDS
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	??1CBasicWnd@@UAE@XZ				; CBasicWnd::~CBasicWnd
; Function compile flags: /Odt
;	COMDAT ??_GCBasicWnd@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCBasicWnd@@UAEPAXI@Z PROC NEAR			; CBasicWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CBasicWnd@@UAE@XZ	; CBasicWnd::~CBasicWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 09		 je	 SHORT $L197415
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L197415:
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??_GCBasicWnd@@UAEPAXI@Z ENDP				; CBasicWnd::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CWnd@@UAE@XZ:NEAR				; CWnd::~CWnd
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBasicWnd@@UAE@XZ PROC NEAR				; CBasicWnd::~CBasicWnd
; _this$ = ecx

; 10   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	51		 push	 ecx
  00044	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CBasicWnd@@6B@

; 11   : }

  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??1CBasicWnd@@UAE@XZ ENDP				; CBasicWnd::~CBasicWnd
_TEXT	ENDS
PUBLIC	?GetThisMessageMap@CBasicWnd@@KGPBUAFX_MSGMAP@@XZ ; CBasicWnd::GetThisMessageMap
; Function compile flags: /Odt
_TEXT	SEGMENT
?GetThisMessageMap@CBasicWnd@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CBasicWnd::GetThisMessageMap

; 14   : BEGIN_MESSAGE_MAP(CBasicWnd, CWnd)

  00060	55		 push	 ebp
  00061	8b ec		 mov	 ebp, esp
  00063	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CBasicWnd@@1UAFX_MSGMAP@@B ; CBasicWnd::messageMap
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
?GetThisMessageMap@CBasicWnd@@KGPBUAFX_MSGMAP@@XZ ENDP	; CBasicWnd::GetThisMessageMap
; Function compile flags: /Odt
_this$ = -4						; size = 4
?GetMessageMap@CBasicWnd@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CBasicWnd::GetMessageMap
; _this$ = ecx

; 14   : BEGIN_MESSAGE_MAP(CBasicWnd, CWnd)

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	51		 push	 ecx
  00074	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00077	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CBasicWnd@@1UAFX_MSGMAP@@B ; CBasicWnd::messageMap
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
?GetMessageMap@CBasicWnd@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CBasicWnd::GetMessageMap
_TEXT	ENDS
PUBLIC	?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z	; CWnd::ClientToScreen
PUBLIC	?GetParent@CWnd@@QBEPAV1@XZ			; CWnd::GetParent
PUBLIC	?OnLButtonDown@CWnd@@IAEXIVCPoint@@@Z		; CWnd::OnLButtonDown
EXTRN	__imp__SendMessageA@16:NEAR
EXTRN	__imp__ScreenToClient@8:NEAR
EXTRN	?AfxGetMainWindow@@YAPAVCWnd@@XZ:NEAR		; AfxGetMainWindow
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -16						; size = 4
_pParent$ = -12						; size = 4
_wParam$ = -8						; size = 4
_lParam$ = -4						; size = 4
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnLButtonDown@CBasicWnd@@IAEXIVCPoint@@@Z PROC NEAR	; CBasicWnd::OnLButtonDown
; _this$ = ecx

; 26   : {	

  00080	55		 push	 ebp
  00081	8b ec		 mov	 ebp, esp
  00083	83 ec 10	 sub	 esp, 16			; 00000010H
  00086	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 27   : 	CWnd * pParent = GetParent();

  00089	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  00091	89 45 f4	 mov	 DWORD PTR _pParent$[ebp], eax

; 28   : 
; 29   : 	pParent = AfxGetMainWindow();

  00094	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00099	89 45 f4	 mov	 DWORD PTR _pParent$[ebp], eax

; 30   : 
; 31   : 	WPARAM wParam;
; 32   : 	LPARAM lParam;
; 33   : 
; 34   : 	ClientToScreen( &point);

  0009c	8d 45 0c	 lea	 eax, DWORD PTR _point$[ebp]
  0009f	50		 push	 eax
  000a0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ClientToScreen

; 35   : 	::ScreenToClient( pParent->m_hWnd,&point );

  000a8	8d 4d 0c	 lea	 ecx, DWORD PTR _point$[ebp]
  000ab	51		 push	 ecx
  000ac	8b 55 f4	 mov	 edx, DWORD PTR _pParent$[ebp]
  000af	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000b2	50		 push	 eax
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8

; 36   : 
; 37   : 	wParam = nFlags;

  000b9	8b 4d 08	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  000bc	89 4d f8	 mov	 DWORD PTR _wParam$[ebp], ecx

; 38   : 	lParam = (WORD)point.x;

  000bf	0f b7 55 0c	 movzx	 edx, WORD PTR _point$[ebp]
  000c3	89 55 fc	 mov	 DWORD PTR _lParam$[ebp], edx

; 39   : 	lParam += ((WORD)point.y) << 16;		

  000c6	0f b7 45 10	 movzx	 eax, WORD PTR _point$[ebp+4]
  000ca	c1 e0 10	 shl	 eax, 16			; 00000010H
  000cd	03 45 fc	 add	 eax, DWORD PTR _lParam$[ebp]
  000d0	89 45 fc	 mov	 DWORD PTR _lParam$[ebp], eax

; 40   : 
; 41   : //	::PostMessage( AfxGetMainWindow()->m_hWnd,WM_NCLBUTTONDOWN, HTCAPTION, lParam );	
; 42   : 
; 43   : 	::SendMessage(pParent->m_hWnd,WM_LBUTTONDOWN, wParam,lParam );	

  000d3	8b 4d fc	 mov	 ecx, DWORD PTR _lParam$[ebp]
  000d6	51		 push	 ecx
  000d7	8b 55 f8	 mov	 edx, DWORD PTR _wParam$[ebp]
  000da	52		 push	 edx
  000db	68 01 02 00 00	 push	 513			; 00000201H
  000e0	8b 45 f4	 mov	 eax, DWORD PTR _pParent$[ebp]
  000e3	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000e6	51		 push	 ecx
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 44   : 	__super::OnLButtonDown(nFlags, point);

  000ed	8b 55 10	 mov	 edx, DWORD PTR _point$[ebp+4]
  000f0	52		 push	 edx
  000f1	8b 45 0c	 mov	 eax, DWORD PTR _point$[ebp]
  000f4	50		 push	 eax
  000f5	8b 4d 08	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  000f8	51		 push	 ecx
  000f9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	e8 00 00 00 00	 call	 ?OnLButtonDown@CWnd@@IAEXIVCPoint@@@Z ; CWnd::OnLButtonDown

; 45   : }

  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonDown@CBasicWnd@@IAEXIVCPoint@@@Z ENDP		; CBasicWnd::OnLButtonDown
_TEXT	ENDS
PUBLIC	?OnLButtonUp@CWnd@@IAEXIVCPoint@@@Z		; CWnd::OnLButtonUp
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -16						; size = 4
_pParent$ = -12						; size = 4
_wParam$ = -8						; size = 4
_lParam$ = -4						; size = 4
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnLButtonUp@CBasicWnd@@IAEXIVCPoint@@@Z PROC NEAR	; CBasicWnd::OnLButtonUp
; _this$ = ecx

; 48   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	83 ec 10	 sub	 esp, 16			; 00000010H
  00116	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 49   : 	CWnd * pParent = GetParent();

  00119	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  00121	89 45 f4	 mov	 DWORD PTR _pParent$[ebp], eax

; 50   : 
; 51   : 	pParent = AfxGetMainWindow();

  00124	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00129	89 45 f4	 mov	 DWORD PTR _pParent$[ebp], eax

; 52   : 
; 53   : 	WPARAM wParam;
; 54   : 	LPARAM lParam;
; 55   : 
; 56   : 	ClientToScreen( &point);

  0012c	8d 45 0c	 lea	 eax, DWORD PTR _point$[ebp]
  0012f	50		 push	 eax
  00130	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00133	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ClientToScreen

; 57   : 	::ScreenToClient( pParent->m_hWnd,&point );

  00138	8d 4d 0c	 lea	 ecx, DWORD PTR _point$[ebp]
  0013b	51		 push	 ecx
  0013c	8b 55 f4	 mov	 edx, DWORD PTR _pParent$[ebp]
  0013f	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00142	50		 push	 eax
  00143	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8

; 58   : 
; 59   : 	wParam = nFlags;

  00149	8b 4d 08	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  0014c	89 4d f8	 mov	 DWORD PTR _wParam$[ebp], ecx

; 60   : 	lParam = (WORD)point.x;

  0014f	0f b7 55 0c	 movzx	 edx, WORD PTR _point$[ebp]
  00153	89 55 fc	 mov	 DWORD PTR _lParam$[ebp], edx

; 61   : 	lParam += ((WORD)point.y) << 16;		

  00156	0f b7 45 10	 movzx	 eax, WORD PTR _point$[ebp+4]
  0015a	c1 e0 10	 shl	 eax, 16			; 00000010H
  0015d	03 45 fc	 add	 eax, DWORD PTR _lParam$[ebp]
  00160	89 45 fc	 mov	 DWORD PTR _lParam$[ebp], eax

; 62   : 
; 63   : 	::SendMessage(pParent->m_hWnd,WM_LBUTTONUP, wParam,lParam );	

  00163	8b 4d fc	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00166	51		 push	 ecx
  00167	8b 55 f8	 mov	 edx, DWORD PTR _wParam$[ebp]
  0016a	52		 push	 edx
  0016b	68 02 02 00 00	 push	 514			; 00000202H
  00170	8b 45 f4	 mov	 eax, DWORD PTR _pParent$[ebp]
  00173	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00176	51		 push	 ecx
  00177	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 64   : 
; 65   : 	__super::OnLButtonUp(nFlags, point);

  0017d	8b 55 10	 mov	 edx, DWORD PTR _point$[ebp+4]
  00180	52		 push	 edx
  00181	8b 45 0c	 mov	 eax, DWORD PTR _point$[ebp]
  00184	50		 push	 eax
  00185	8b 4d 08	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  00188	51		 push	 ecx
  00189	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0018c	e8 00 00 00 00	 call	 ?OnLButtonUp@CWnd@@IAEXIVCPoint@@@Z ; CWnd::OnLButtonUp

; 66   : }

  00191	8b e5		 mov	 esp, ebp
  00193	5d		 pop	 ebp
  00194	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonUp@CBasicWnd@@IAEXIVCPoint@@@Z ENDP		; CBasicWnd::OnLButtonUp
_TEXT	ENDS
PUBLIC	?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z		; CWnd::OnMouseMove
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -16						; size = 4
_pParent$ = -12						; size = 4
_wParam$ = -8						; size = 4
_lParam$ = -4						; size = 4
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnMouseMove@CBasicWnd@@IAEXIVCPoint@@@Z PROC NEAR	; CBasicWnd::OnMouseMove
; _this$ = ecx

; 69   : {

  001a0	55		 push	 ebp
  001a1	8b ec		 mov	 ebp, esp
  001a3	83 ec 10	 sub	 esp, 16			; 00000010H
  001a6	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 70   : 	CWnd * pParent = GetParent();

  001a9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ac	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  001b1	89 45 f4	 mov	 DWORD PTR _pParent$[ebp], eax

; 71   : 
; 72   : 	pParent = AfxGetMainWindow();

  001b4	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  001b9	89 45 f4	 mov	 DWORD PTR _pParent$[ebp], eax

; 73   : 
; 74   : 	WPARAM wParam;
; 75   : 	LPARAM lParam;
; 76   : 
; 77   : 	ClientToScreen( &point);

  001bc	8d 45 0c	 lea	 eax, DWORD PTR _point$[ebp]
  001bf	50		 push	 eax
  001c0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001c3	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ClientToScreen

; 78   : 	::ScreenToClient( pParent->m_hWnd,&point );

  001c8	8d 4d 0c	 lea	 ecx, DWORD PTR _point$[ebp]
  001cb	51		 push	 ecx
  001cc	8b 55 f4	 mov	 edx, DWORD PTR _pParent$[ebp]
  001cf	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  001d2	50		 push	 eax
  001d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8

; 79   : 
; 80   : 	wParam = nFlags;

  001d9	8b 4d 08	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  001dc	89 4d f8	 mov	 DWORD PTR _wParam$[ebp], ecx

; 81   : 	lParam = (WORD)point.x;

  001df	0f b7 55 0c	 movzx	 edx, WORD PTR _point$[ebp]
  001e3	89 55 fc	 mov	 DWORD PTR _lParam$[ebp], edx

; 82   : 	lParam += ((WORD)point.y) << 16;		

  001e6	0f b7 45 10	 movzx	 eax, WORD PTR _point$[ebp+4]
  001ea	c1 e0 10	 shl	 eax, 16			; 00000010H
  001ed	03 45 fc	 add	 eax, DWORD PTR _lParam$[ebp]
  001f0	89 45 fc	 mov	 DWORD PTR _lParam$[ebp], eax

; 83   : 
; 84   : 	::SendMessage(pParent->m_hWnd, WM_MOUSEMOVE,wParam,lParam );	

  001f3	8b 4d fc	 mov	 ecx, DWORD PTR _lParam$[ebp]
  001f6	51		 push	 ecx
  001f7	8b 55 f8	 mov	 edx, DWORD PTR _wParam$[ebp]
  001fa	52		 push	 edx
  001fb	68 00 02 00 00	 push	 512			; 00000200H
  00200	8b 45 f4	 mov	 eax, DWORD PTR _pParent$[ebp]
  00203	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00206	51		 push	 ecx
  00207	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 85   : 
; 86   : 	__super::OnMouseMove(nFlags, point);

  0020d	8b 55 10	 mov	 edx, DWORD PTR _point$[ebp+4]
  00210	52		 push	 edx
  00211	8b 45 0c	 mov	 eax, DWORD PTR _point$[ebp]
  00214	50		 push	 eax
  00215	8b 4d 08	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  00218	51		 push	 ecx
  00219	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0021c	e8 00 00 00 00	 call	 ?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z ; CWnd::OnMouseMove

; 87   : }

  00221	8b e5		 mov	 esp, ebp
  00223	5d		 pop	 ebp
  00224	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseMove@CBasicWnd@@IAEXIVCPoint@@@Z ENDP		; CBasicWnd::OnMouseMove
_TEXT	ENDS
EXTRN	__except_list:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??0CPaintDC@@QAE@PAVCWnd@@@Z:NEAR		; CPaintDC::CPaintDC
EXTRN	??1CPaintDC@@UAE@XZ:NEAR			; CPaintDC::~CPaintDC
EXTRN	?AfxGetUIManager@@YAPAVIUIManager@@XZ:NEAR	; AfxGetUIManager
xdata$x	SEGMENT
$T197936 DD	0ffffffffH
	DD	FLAT:$L197926
$T197930 DD	019930520H
	DD	01H
	DD	FLAT:$T197936
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv75 = -120						; size = 4
tv70 = -116						; size = 4
_this$ = -112						; size = 4
_dc$ = -108						; size = 84
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnPaint@CBasicWnd@@IAEXXZ PROC NEAR			; CBasicWnd::OnPaint
; _this$ = ecx

; 90   : {

  00230	55		 push	 ebp
  00231	8b ec		 mov	 ebp, esp
  00233	6a ff		 push	 -1
  00235	68 00 00 00 00	 push	 __ehhandler$?OnPaint@CBasicWnd@@IAEXXZ
  0023a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00240	50		 push	 eax
  00241	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00248	83 ec 6c	 sub	 esp, 108		; 0000006cH
  0024b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00250	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00253	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx

; 91   : 	CPaintDC dc(this);

  00256	8b 45 90	 mov	 eax, DWORD PTR _this$[ebp]
  00259	50		 push	 eax
  0025a	8d 4d 94	 lea	 ecx, DWORD PTR _dc$[ebp]
  0025d	e8 00 00 00 00	 call	 ??0CPaintDC@@QAE@PAVCWnd@@@Z ; CPaintDC::CPaintDC
  00262	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 92   : 	AfxGetUIManager()->UIGetLayoutMgr()->PaintBkGround( m_hWnd,&dc,true );

  00269	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  0026e	89 45 8c	 mov	 DWORD PTR tv70[ebp], eax
  00271	8b 4d 8c	 mov	 ecx, DWORD PTR tv70[ebp]
  00274	8b 11		 mov	 edx, DWORD PTR [ecx]
  00276	8b 4d 8c	 mov	 ecx, DWORD PTR tv70[ebp]
  00279	ff 52 24	 call	 DWORD PTR [edx+36]
  0027c	89 45 88	 mov	 DWORD PTR tv75[ebp], eax
  0027f	6a 01		 push	 1
  00281	8d 45 94	 lea	 eax, DWORD PTR _dc$[ebp]
  00284	50		 push	 eax
  00285	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00288	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0028b	52		 push	 edx
  0028c	8b 45 88	 mov	 eax, DWORD PTR tv75[ebp]
  0028f	8b 10		 mov	 edx, DWORD PTR [eax]
  00291	8b 4d 88	 mov	 ecx, DWORD PTR tv75[ebp]
  00294	ff 52 5c	 call	 DWORD PTR [edx+92]

; 93   : }

  00297	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0029e	8d 4d 94	 lea	 ecx, DWORD PTR _dc$[ebp]
  002a1	e8 00 00 00 00	 call	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
  002a6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b0	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002b3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002b8	8b e5		 mov	 esp, ebp
  002ba	5d		 pop	 ebp
  002bb	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L197926:
  00000	8d 4d 94	 lea	 ecx, DWORD PTR _dc$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
__ehhandler$?OnPaint@CBasicWnd@@IAEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197930
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnPaint@CBasicWnd@@IAEXXZ ENDP				; CBasicWnd::OnPaint
; Function compile flags: /Odt
_TEXT	SEGMENT
tv71 = -12						; size = 4
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_nType$ = 8						; size = 4
_cx$ = 12						; size = 4
_cy$ = 16						; size = 4
?OnSize@CBasicWnd@@IAEXIHH@Z PROC NEAR			; CBasicWnd::OnSize
; _this$ = ecx

; 95   : {

  002c0	55		 push	 ebp
  002c1	8b ec		 mov	 ebp, esp
  002c3	83 ec 0c	 sub	 esp, 12			; 0000000cH
  002c6	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 96   : 	AfxGetUIManager()->UIGetLayoutMgr()->UpdateLayout( m_hWnd );

  002c9	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  002ce	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  002d1	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  002d4	8b 10		 mov	 edx, DWORD PTR [eax]
  002d6	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  002d9	ff 52 24	 call	 DWORD PTR [edx+36]
  002dc	89 45 f4	 mov	 DWORD PTR tv71[ebp], eax
  002df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002e2	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  002e5	51		 push	 ecx
  002e6	8b 55 f4	 mov	 edx, DWORD PTR tv71[ebp]
  002e9	8b 02		 mov	 eax, DWORD PTR [edx]
  002eb	8b 4d f4	 mov	 ecx, DWORD PTR tv71[ebp]
  002ee	ff 50 14	 call	 DWORD PTR [eax+20]

; 97   : }

  002f1	8b e5		 mov	 esp, ebp
  002f3	5d		 pop	 ebp
  002f4	c2 0c 00	 ret	 12			; 0000000cH
?OnSize@CBasicWnd@@IAEXIHH@Z ENDP			; CBasicWnd::OnSize
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afx.inl
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT
; _this$ = ecx

; 25   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Odt
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 31   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 41   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT
; _this$ = ecx

; 43   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
EXTRN	__imp__ClientToScreen@8:NEAR
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
;	COMDAT ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpPoint$ = 8						; size = 4
?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z PROC NEAR	; CWnd::ClientToScreen, COMDAT
; _this$ = ecx

; 113  : 	{ ASSERT(::IsWindow(m_hWnd)); ::ClientToScreen(m_hWnd, lpPoint); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpPoint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClientToScreen@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z ENDP		; CWnd::ClientToScreen
_TEXT	ENDS
EXTRN	__imp__GetParent@4:NEAR
EXTRN	?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z:NEAR	; CWnd::FromHandle
; Function compile flags: /Odt
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetParent@CWnd@@QBEPAV1@XZ PROC NEAR			; CWnd::GetParent, COMDAT
; _this$ = ecx

; 282  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?GetParent@CWnd@@QBEPAV1@XZ ENDP			; CWnd::GetParent
_TEXT	ENDS
EXTRN	?Default@CWnd@@IAEJXZ:NEAR			; CWnd::Default
; Function compile flags: /Odt
;	COMDAT ?OnLButtonDown@CWnd@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 8
?OnLButtonDown@CWnd@@IAEXIVCPoint@@@Z PROC NEAR		; CWnd::OnLButtonDown, COMDAT
; _this$ = ecx

; 464  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonDown@CWnd@@IAEXIVCPoint@@@Z ENDP		; CWnd::OnLButtonDown
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnLButtonUp@CWnd@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 8
?OnLButtonUp@CWnd@@IAEXIVCPoint@@@Z PROC NEAR		; CWnd::OnLButtonUp, COMDAT
; _this$ = ecx

; 466  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonUp@CWnd@@IAEXIVCPoint@@@Z ENDP		; CWnd::OnLButtonUp
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 8
?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z PROC NEAR		; CWnd::OnMouseMove, COMDAT
; _this$ = ecx

; 476  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z ENDP		; CWnd::OnMouseMove
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 545  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 549  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 551  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
END
