; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\module\WebInteract\WebPage.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0P@CLMBAKJD@JSCall?5Error?3?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ?ShowError@CWebPage@@IAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWebPage@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAUIHTMLDocument2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextA@?$ChTraitsCRT@D@ATL@@SAPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSpace@?$ChTraitsCRT@D@ATL@@SAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringFindString@?$ChTraitsCRT@D@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringScanSet@?$ChTraitsCRT@D@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3CWebPage@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CWebPage@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CWebPage@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCWebPage@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4CWebPage@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@CStringArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPA_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBEABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CStringArray@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPA_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPA_WPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CWebPage@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
CONST	SEGMENT
$SG197448 DB	'FormatMessage Netive Error', 00H
	ORG $+1
$SG197482 DB	'NULL pointer', 00H
	ORG $+3
$SG197488 DB	'Failed to get HTML document COM object', 00H
	ORG $+1
$SG197497 DB	'NULL pointer', 00H
	ORG $+3
$SG197518 DB	'NULL pointer', 00H
	ORG $+3
$SG197639 DB	'Cannot GetScript', 00H
	ORG $+3
$SG197682 DB	' ', 0aH, 0dH, 09H, 00H
	ORG $+3
$SG197692 DB	'function', 00H
	ORG $+3
$SG197694 DB	'/*', 00H
	ORG $+1
$SG197702 DB	'*/', 00H
$SG197704 DB	00H
$SG197708 DB	'(', 00H
	ORG $+2
$SG197712 DB	')', 00H
	ORG $+2
$SG197720 DB	',', 00H
CONST	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z ; GetSystemErrorMessage
EXTRN	__imp__FormatMessageA@28:NEAR
EXTRN	__imp__LocalFree@4:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:NEAR
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:NEAR
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
xdata$x	SEGMENT
$T198386 DD	0ffffffffH
	DD	FLAT:$L198376
$T198383 DD	019930520H
	DD	01H
	DD	FLAT:$T198386
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\webinteract\webpage.cpp
xdata$x	ENDS
_TEXT	SEGMENT
$T198378 = -24						; size = 4
_lpBuffer$ = -20					; size = 4
_strError$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_dwError$ = 12						; size = 4
?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z PROC NEAR ; GetSystemErrorMessage

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T198378[ebp], 0

; 22   : 	CString strError;

  00022	8d 4d f0	 lea	 ecx, DWORD PTR _strError$[ebp]
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0002b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 23   : 	LPTSTR lpBuffer;
; 24   : 
; 25   : 	if(!FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,
; 26   : 			NULL,  dwError,
; 27   : 			MAKELANGID(LANG_NEUTRAL, SUBLANG_SYS_DEFAULT),
; 28   : 			(LPTSTR) &lpBuffer, 0, NULL))

  00032	6a 00		 push	 0
  00034	6a 00		 push	 0
  00036	8d 45 ec	 lea	 eax, DWORD PTR _lpBuffer$[ebp]
  00039	50		 push	 eax
  0003a	68 00 08 00 00	 push	 2048			; 00000800H
  0003f	8b 4d 0c	 mov	 ecx, DWORD PTR _dwError$[ebp]
  00042	51		 push	 ecx
  00043	6a 00		 push	 0
  00045	68 00 11 00 00	 push	 4352			; 00001100H
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FormatMessageA@28
  00050	85 c0		 test	 eax, eax
  00052	75 10		 jne	 SHORT $L197447

; 29   : 
; 30   : 	{
; 31   : 		strError = "FormatMessage Netive Error" ;

  00054	68 00 00 00 00	 push	 OFFSET FLAT:$SG197448
  00059	8d 4d f0	 lea	 ecx, DWORD PTR _strError$[ebp]
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z

; 32   : 	}
; 33   : 	else

  00062	eb 17		 jmp	 SHORT $L197449
$L197447:

; 34   : 	{
; 35   : 		strError = lpBuffer;

  00064	8b 55 ec	 mov	 edx, DWORD PTR _lpBuffer$[ebp]
  00067	52		 push	 edx
  00068	8d 4d f0	 lea	 ecx, DWORD PTR _strError$[ebp]
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z

; 36   : 		LocalFree(lpBuffer);

  00071	8b 45 ec	 mov	 eax, DWORD PTR _lpBuffer$[ebp]
  00074	50		 push	 eax
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LocalFree@4
$L197449:

; 37   : 	}
; 38   : 	return strError;

  0007b	8d 4d f0	 lea	 ecx, DWORD PTR _strError$[ebp]
  0007e	51		 push	 ecx
  0007f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00088	8b 55 e8	 mov	 edx, DWORD PTR $T198378[ebp]
  0008b	83 ca 01	 or	 edx, 1
  0008e	89 55 e8	 mov	 DWORD PTR $T198378[ebp], edx
  00091	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00098	8d 4d f0	 lea	 ecx, DWORD PTR _strError$[ebp]
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000a1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 39   : }

  000a4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L198376:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _strError$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198383
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z ENDP ; GetSystemErrorMessage
PUBLIC	?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:NEAR
EXTRN	__imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ:NEAR
EXTRN	__imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ:NEAR
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:NEAR
EXTRN	__imp_?Find@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBDH@Z:NEAR
EXTRN	__imp_?FindOneOf@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:NEAR
EXTRN	__imp_?TrimRight@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ:NEAR
EXTRN	__imp_?TrimLeft@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ:NEAR
EXTRN	__imp_?Right@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z:NEAR
EXTRN	__imp_?Left@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z:NEAR
xdata$x	SEGMENT
$T198403 DD	0ffffffffH
	DD	FLAT:$L198393
	DD	00H
	DD	FLAT:$L198394
	DD	01H
	DD	FLAT:$L198395
	DD	01H
	DD	FLAT:$L198396
$T198401 DD	019930520H
	DD	04H
	DD	FLAT:$T198403
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv151 = -52						; size = 4
tv143 = -48						; size = 4
tv149 = -44						; size = 4
tv66 = -40						; size = 4
tv81 = -36						; size = 4
$T198398 = -32						; size = 4
$T198392 = -28						; size = 4
$T198391 = -24						; size = 4
_idx$ = -20						; size = 4
_strToken$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_strSrc$ = 12						; size = 4
_strDelim$ = 16						; size = 4
_bTrim$ = 20						; size = 1
_bFindOneOf$ = 24					; size = 1
?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z PROC NEAR ; GetNextToken

; 42   : {

  000c0	55		 push	 ebp
  000c1	8b ec		 mov	 ebp, esp
  000c3	6a ff		 push	 -1
  000c5	68 00 00 00 00	 push	 __ehhandler$?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z
  000ca	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  000d0	50		 push	 eax
  000d1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  000d8	83 ec 28	 sub	 esp, 40			; 00000028H
  000db	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T198398[ebp], 0
  000e2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 43   : 	CString strToken;

  000e9	8d 4d f0	 lea	 ecx, DWORD PTR _strToken$[ebp]
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000f2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 44   : 	int idx = bFindOneOf? strSrc.FindOneOf(strDelim) : strSrc.Find(strDelim);

  000f6	0f b6 45 18	 movzx	 eax, BYTE PTR _bFindOneOf$[ebp]
  000fa	85 c0		 test	 eax, eax
  000fc	74 18		 je	 SHORT $L198389
  000fe	8d 4d 10	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  00101	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00107	50		 push	 eax
  00108	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  0010b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindOneOf@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  00111	89 45 dc	 mov	 DWORD PTR tv81[ebp], eax
  00114	eb 18		 jmp	 SHORT $L198390
$L198389:
  00116	6a 00		 push	 0
  00118	8d 4d 10	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  0011b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00121	50		 push	 eax
  00122	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Find@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBDH@Z
  0012b	89 45 dc	 mov	 DWORD PTR tv81[ebp], eax
$L198390:
  0012e	8b 4d dc	 mov	 ecx, DWORD PTR tv81[ebp]
  00131	89 4d ec	 mov	 DWORD PTR _idx$[ebp], ecx

; 45   : 	if(idx != -1)

  00134	83 7d ec ff	 cmp	 DWORD PTR _idx$[ebp], -1
  00138	0f 84 80 00 00
	00		 je	 $L197459

; 46   : 	{
; 47   : 		strToken  = strSrc.Left(idx);

  0013e	8b 55 ec	 mov	 edx, DWORD PTR _idx$[ebp]
  00141	52		 push	 edx
  00142	8d 45 e8	 lea	 eax, DWORD PTR $T198391[ebp]
  00145	50		 push	 eax
  00146	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  00149	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Left@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z
  0014f	89 45 d8	 mov	 DWORD PTR tv66[ebp], eax
  00152	8b 4d d8	 mov	 ecx, DWORD PTR tv66[ebp]
  00155	89 4d d4	 mov	 DWORD PTR tv149[ebp], ecx
  00158	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0015c	8b 55 d4	 mov	 edx, DWORD PTR tv149[ebp]
  0015f	52		 push	 edx
  00160	8d 4d f0	 lea	 ecx, DWORD PTR _strToken$[ebp]
  00163	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00169	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0016d	8d 4d e8	 lea	 ecx, DWORD PTR $T198391[ebp]
  00170	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 48   : 		strSrc = strSrc.Right(strSrc.GetLength() - (idx + 1) );

  00176	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  00179	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  0017f	8b 4d ec	 mov	 ecx, DWORD PTR _idx$[ebp]
  00182	83 c1 01	 add	 ecx, 1
  00185	2b c1		 sub	 eax, ecx
  00187	50		 push	 eax
  00188	8d 55 e4	 lea	 edx, DWORD PTR $T198392[ebp]
  0018b	52		 push	 edx
  0018c	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  0018f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Right@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z
  00195	89 45 d0	 mov	 DWORD PTR tv143[ebp], eax
  00198	8b 45 d0	 mov	 eax, DWORD PTR tv143[ebp]
  0019b	89 45 cc	 mov	 DWORD PTR tv151[ebp], eax
  0019e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  001a2	8b 4d cc	 mov	 ecx, DWORD PTR tv151[ebp]
  001a5	51		 push	 ecx
  001a6	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  001a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  001af	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001b3	8d 4d e4	 lea	 ecx, DWORD PTR $T198392[ebp]
  001b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 49   : 	}
; 50   : 	else

  001bc	eb 16		 jmp	 SHORT $L197462
$L197459:

; 51   : 	{
; 52   : 		strToken = strSrc;

  001be	8b 55 0c	 mov	 edx, DWORD PTR _strSrc$[ebp]
  001c1	52		 push	 edx
  001c2	8d 4d f0	 lea	 ecx, DWORD PTR _strToken$[ebp]
  001c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z

; 53   : 		strSrc.Empty();

  001cb	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  001ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ
$L197462:

; 54   : 	}
; 55   : 	if(bTrim)

  001d4	0f b6 45 14	 movzx	 eax, BYTE PTR _bTrim$[ebp]
  001d8	85 c0		 test	 eax, eax
  001da	74 12		 je	 SHORT $L197463

; 56   : 	{
; 57   : 		strToken.TrimLeft();

  001dc	8d 4d f0	 lea	 ecx, DWORD PTR _strToken$[ebp]
  001df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TrimLeft@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ

; 58   : 		strToken.TrimRight();

  001e5	8d 4d f0	 lea	 ecx, DWORD PTR _strToken$[ebp]
  001e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TrimRight@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ
$L197463:

; 59   : 	}
; 60   : 	return strToken;

  001ee	8d 4d f0	 lea	 ecx, DWORD PTR _strToken$[ebp]
  001f1	51		 push	 ecx
  001f2	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  001fb	8b 55 e0	 mov	 edx, DWORD PTR $T198398[ebp]
  001fe	83 ca 01	 or	 edx, 1
  00201	89 55 e0	 mov	 DWORD PTR $T198398[ebp], edx
  00204	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00208	8d 4d f0	 lea	 ecx, DWORD PTR _strToken$[ebp]
  0020b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00211	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00218	8d 4d 10	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  0021b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00221	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 61   : }

  00224	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00227	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0022e	8b e5		 mov	 esp, ebp
  00230	5d		 pop	 ebp
  00231	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L198393:
  00013	8d 4d 10	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  00016	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198394:
  0001c	8d 4d f0	 lea	 ecx, DWORD PTR _strToken$[ebp]
  0001f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198395:
  00025	8d 4d e8	 lea	 ecx, DWORD PTR $T198391[ebp]
  00028	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198396:
  0002e	8d 4d e4	 lea	 ecx, DWORD PTR $T198392[ebp]
  00031	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z:
  00037	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198401
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ENDP ; GetNextToken
PUBLIC	??_R4CWebPage@@6B@				; CWebPage::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWebPage@@@8				; CWebPage `RTTI Type Descriptor'
PUBLIC	??_R3CWebPage@@8				; CWebPage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWebPage@@8				; CWebPage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CWebPage@@8			; CWebPage::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??0CWebPage@@QAE@XZ				; CWebPage::CWebPage
PUBLIC	??_7CWebPage@@6B@				; CWebPage::`vftable'
PUBLIC	??_GCWebPage@@UAEPAXI@Z				; CWebPage::`scalar deleting destructor'
PUBLIC	??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z	; ATL::CComPtr<IHTMLDocument2>::CComPtr<IHTMLDocument2>
EXTRN	??_ECWebPage@@UAEPAXI@Z:NEAR			; CWebPage::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_7CWebPage@@6B@
CONST	SEGMENT
??_7CWebPage@@6B@ DD FLAT:??_R4CWebPage@@6B@		; CWebPage::`vftable'
	DD	FLAT:??_ECWebPage@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CWebPage@@6B@
rdata$r	SEGMENT
??_R4CWebPage@@6B@ DD 00H				; CWebPage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWebPage@@@8
	DD	FLAT:??_R3CWebPage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWebPage@@@8
_DATA	SEGMENT
??_R0?AVCWebPage@@@8 DD FLAT:??_7type_info@@6B@		; CWebPage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWebPage@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CWebPage@@8
rdata$r	SEGMENT
??_R3CWebPage@@8 DD 00H					; CWebPage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWebPage@@8
rdata$r	ENDS
;	COMDAT ??_R2CWebPage@@8
rdata$r	SEGMENT
??_R2CWebPage@@8 DD FLAT:??_R1A@?0A@A@CWebPage@@8	; CWebPage::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CWebPage@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CWebPage@@8 DD FLAT:??_R0?AVCWebPage@@@8	; CWebPage::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
; Function compile flags: /Odt
rdata$r	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CWebPage@@QAE@XZ PROC NEAR				; CWebPage::CWebPage
; _this$ = ecx

; 68   : {

  00240	55		 push	 ebp
  00241	8b ec		 mov	 ebp, esp
  00243	51		 push	 ecx
  00244	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00247	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0024a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWebPage@@6B@
  00250	6a 00		 push	 0
  00252	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00255	83 c1 04	 add	 ecx, 4
  00258	e8 00 00 00 00	 call	 ??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z ; ATL::CComPtr<IHTMLDocument2>::CComPtr<IHTMLDocument2>
  0025d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00260	83 c1 08	 add	 ecx, 8
  00263	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 69   : }

  00269	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0026c	8b e5		 mov	 esp, ebp
  0026e	5d		 pop	 ebp
  0026f	c3		 ret	 0
??0CWebPage@@QAE@XZ ENDP				; CWebPage::CWebPage
_TEXT	ENDS
PUBLIC	??1CWebPage@@UAE@XZ				; CWebPage::~CWebPage
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Odt
;	COMDAT ??_GCWebPage@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCWebPage@@UAEPAXI@Z PROC NEAR			; CWebPage::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWebPage@@UAE@XZ	; CWebPage::~CWebPage
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $L197470
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
$L197470:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GCWebPage@@UAEPAXI@Z ENDP				; CWebPage::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ	; ATL::CComPtr<IHTMLDocument2>::~CComPtr<IHTMLDocument2>
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CWebPage@@UAE@XZ PROC NEAR				; CWebPage::~CWebPage
; _this$ = ecx

; 72   : {

  00270	55		 push	 ebp
  00271	8b ec		 mov	 ebp, esp
  00273	51		 push	 ecx
  00274	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00277	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0027a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWebPage@@6B@

; 73   : 
; 74   : }

  00280	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00283	83 c1 08	 add	 ecx, 8
  00286	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0028c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0028f	83 c1 04	 add	 ecx, 4
  00292	e8 00 00 00 00	 call	 ??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ
  00297	8b e5		 mov	 esp, ebp
  00299	5d		 pop	 ebp
  0029a	c3		 ret	 0
??1CWebPage@@UAE@XZ ENDP				; CWebPage::~CWebPage
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IHTMLDocument2>::~CComPtrBase<IHTMLDocument2>
; Function compile flags: /Odt
;	COMDAT ??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IHTMLDocument2>::~CComPtr<IHTMLDocument2>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IHTMLDocument2>::~CComPtrBase<IHTMLDocument2>
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IHTMLDocument2>::~CComPtr<IHTMLDocument2>
_TEXT	ENDS
PUBLIC	??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ; ATL::CComPtrBase<IDispatch>::operator->
PUBLIC	??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
PUBLIC	??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>
PUBLIC	?SetDocument@CWebPage@@QAE_NPAUIDispatch@@@Z	; CWebPage::SetDocument
PUBLIC	??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator&
PUBLIC	?ShowError@CWebPage@@IAEXPBD@Z			; CWebPage::ShowError
PUBLIC	??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z ; ATL::CComPtr<IHTMLDocument2>::operator=
EXTRN	_IID_IHTMLDocument2:BYTE
xdata$x	SEGMENT
$T198421 DD	0ffffffffH
	DD	FLAT:$L198417
$T198419 DD	019930520H
	DD	01H
	DD	FLAT:$T198421
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv77 = -32						; size = 4
_this$ = -28						; size = 4
$T198416 = -22						; size = 1
$T198415 = -21						; size = 1
_spDisp$ = -20						; size = 4
_hr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pDisp$ = 8						; size = 4
?SetDocument@CWebPage@@QAE_NPAUIDispatch@@@Z PROC NEAR	; CWebPage::SetDocument
; _this$ = ecx

; 77   : {

  002a0	55		 push	 ebp
  002a1	8b ec		 mov	 ebp, esp
  002a3	6a ff		 push	 -1
  002a5	68 00 00 00 00	 push	 __ehhandler$?SetDocument@CWebPage@@QAE_NPAUIDispatch@@@Z
  002aa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  002b0	50		 push	 eax
  002b1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  002b8	83 ec 14	 sub	 esp, 20			; 00000014H
  002bb	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 78   : 	CHECK_POINTER(pDisp);

  002be	83 7d 08 00	 cmp	 DWORD PTR _pDisp$[ebp], 0
  002c2	75 14		 jne	 SHORT $L197481
  002c4	68 00 00 00 00	 push	 OFFSET FLAT:$SG197482
  002c9	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  002cc	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError
  002d1	32 c0		 xor	 al, al
  002d3	e9 8b 00 00 00	 jmp	 $L197479
$L197481:

; 79   : 
; 80   : 	m_spDoc = NULL;

  002d8	6a 00		 push	 0
  002da	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  002dd	83 c1 04	 add	 ecx, 4
  002e0	e8 00 00 00 00	 call	 ??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z ; ATL::CComPtr<IHTMLDocument2>::operator=

; 81   : 
; 82   : 	CComPtr<IDispatch> spDisp = pDisp;

  002e5	8b 45 08	 mov	 eax, DWORD PTR _pDisp$[ebp]
  002e8	50		 push	 eax
  002e9	8d 4d ec	 lea	 ecx, DWORD PTR _spDisp$[ebp]
  002ec	e8 00 00 00 00	 call	 ??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
  002f1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 83   : 
; 84   : 	HRESULT hr = spDisp->QueryInterface(IID_IHTMLDocument2,(void**)&m_spDoc);

  002f8	8d 4d ec	 lea	 ecx, DWORD PTR _spDisp$[ebp]
  002fb	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ; ATL::CComPtrBase<IDispatch>::operator->
  00300	89 45 e0	 mov	 DWORD PTR tv77[ebp], eax
  00303	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00306	83 c1 04	 add	 ecx, 4
  00309	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator&
  0030e	50		 push	 eax
  0030f	68 00 00 00 00	 push	 OFFSET FLAT:_IID_IHTMLDocument2
  00314	8b 4d e0	 mov	 ecx, DWORD PTR tv77[ebp]
  00317	51		 push	 ecx
  00318	8b 55 e0	 mov	 edx, DWORD PTR tv77[ebp]
  0031b	8b 02		 mov	 eax, DWORD PTR [edx]
  0031d	ff 10		 call	 DWORD PTR [eax]
  0031f	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 85   : 	if(FAILED(hr))

  00322	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00326	7d 25		 jge	 SHORT $L197487

; 86   : 	{
; 87   : 		ShowError("Failed to get HTML document COM object");

  00328	68 00 00 00 00	 push	 OFFSET FLAT:$SG197488
  0032d	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00330	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError

; 88   : 		return false;

  00335	c6 45 eb 00	 mov	 BYTE PTR $T198415[ebp], 0
  00339	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00340	8d 4d ec	 lea	 ecx, DWORD PTR _spDisp$[ebp]
  00343	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  00348	8a 45 eb	 mov	 al, BYTE PTR $T198415[ebp]
  0034b	eb 16		 jmp	 SHORT $L197479
$L197487:

; 89   : 	}
; 90   : 	return true;

  0034d	c6 45 ea 01	 mov	 BYTE PTR $T198416[ebp], 1
  00351	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00358	8d 4d ec	 lea	 ecx, DWORD PTR _spDisp$[ebp]
  0035b	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  00360	8a 45 ea	 mov	 al, BYTE PTR $T198416[ebp]
$L197479:

; 91   : }

  00363	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00366	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0036d	8b e5		 mov	 esp, ebp
  0036f	5d		 pop	 ebp
  00370	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198417:
  00041	8d 4d ec	 lea	 ecx, DWORD PTR _spDisp$[ebp]
  00044	e9 00 00 00 00	 jmp	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
__ehhandler$?SetDocument@CWebPage@@QAE_NPAUIDispatch@@@Z:
  00049	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198419
  0004e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetDocument@CWebPage@@QAE_NPAUIDispatch@@@Z ENDP	; CWebPage::SetDocument
PUBLIC	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
PUBLIC	??_C@_0P@CLMBAKJD@JSCall?5Error?3?6?$AA@	; `string'
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:NEAR
;	COMDAT xdata$x
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\webinteract\webpage.h
xdata$x	SEGMENT
$T198430 DD	0ffffffffH
	DD	FLAT:$L198425
	DD	00H
	DD	FLAT:$L198426
$T198428 DD	019930520H
	DD	02H
	DD	FLAT:$T198430
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0P@CLMBAKJD@JSCall?5Error?3?6?$AA@
CONST	SEGMENT
??_C@_0P@CLMBAKJD@JSCall?5Error?3?6?$AA@ DB 'JSCall Error:', 0aH, 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?ShowError@CWebPage@@IAEXPBD@Z
_TEXT	SEGMENT
tv81 = -40						; size = 4
tv83 = -36						; size = 4
tv79 = -32						; size = 4
tv82 = -28						; size = 4
_this$ = -24						; size = 4
$T198424 = -20						; size = 4
$T198423 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_lpszText$ = 8						; size = 4
?ShowError@CWebPage@@IAEXPBD@Z PROC NEAR		; CWebPage::ShowError, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ShowError@CWebPage@@IAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 45   : 	m_strError = "JSCall Error:\n" + CString(lpszText);

  0001e	8b 45 08	 mov	 eax, DWORD PTR _lpszText$[ebp]
  00021	50		 push	 eax
  00022	8d 4d f0	 lea	 ecx, DWORD PTR $T198423[ebp]
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  0002b	89 45 e4	 mov	 DWORD PTR tv82[ebp], eax
  0002e	8b 4d e4	 mov	 ecx, DWORD PTR tv82[ebp]
  00031	89 4d e0	 mov	 DWORD PTR tv79[ebp], ecx
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003b	8b 55 e0	 mov	 edx, DWORD PTR tv79[ebp]
  0003e	52		 push	 edx
  0003f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@CLMBAKJD@JSCall?5Error?3?6?$AA@
  00044	8d 45 ec	 lea	 eax, DWORD PTR $T198424[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	89 45 dc	 mov	 DWORD PTR tv83[ebp], eax
  00053	8b 4d dc	 mov	 ecx, DWORD PTR tv83[ebp]
  00056	89 4d d8	 mov	 DWORD PTR tv81[ebp], ecx
  00059	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005d	8b 55 d8	 mov	 edx, DWORD PTR tv81[ebp]
  00060	52		 push	 edx
  00061	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	83 c1 08	 add	 ecx, 8
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  0006d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00071	8d 4d ec	 lea	 ecx, DWORD PTR $T198424[ebp]
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0007a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00081	8d 4d f0	 lea	 ecx, DWORD PTR $T198423[ebp]
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 46   : }

  0008a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L198425:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR $T198423[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198426:
  00009	8d 4d ec	 lea	 ecx, DWORD PTR $T198424[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?ShowError@CWebPage@@IAEXPBD@Z:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198428
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ShowError@CWebPage@@IAEXPBD@Z ENDP			; CWebPage::ShowError
PUBLIC	??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ ; ATL::CComPtrBase<IDispatch>::operator&
PUBLIC	?GetJScript@CWebPage@@QAE_NAAV?$CComPtr@UIDispatch@@@ATL@@@Z ; CWebPage::GetJScript
PUBLIC	??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator->
PUBLIC	??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z ; ATL::CComPtrBase<IHTMLDocument2>::operator==
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\webinteract\webpage.cpp
_TEXT	SEGMENT
tv78 = -12						; size = 4
_this$ = -8						; size = 4
_hr$ = -4						; size = 4
_spDisp$ = 8						; size = 4
?GetJScript@CWebPage@@QAE_NAAV?$CComPtr@UIDispatch@@@ATL@@@Z PROC NEAR ; CWebPage::GetJScript
; _this$ = ecx

; 94   : {

  00380	55		 push	 ebp
  00381	8b ec		 mov	 ebp, esp
  00383	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00386	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 95   : 	CHECK_POINTER(m_spDoc);

  00389	6a 00		 push	 0
  0038b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0038e	83 c1 04	 add	 ecx, 4
  00391	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z ; ATL::CComPtrBase<IHTMLDocument2>::operator==
  00396	0f b6 c0	 movzx	 eax, al
  00399	85 c0		 test	 eax, eax
  0039b	74 11		 je	 SHORT $L197496
  0039d	68 00 00 00 00	 push	 OFFSET FLAT:$SG197497
  003a2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003a5	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError
  003aa	32 c0		 xor	 al, al
  003ac	eb 2f		 jmp	 SHORT $L197494
$L197496:

; 96   : 	HRESULT hr = m_spDoc->get_Script(&spDisp);

  003ae	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003b1	83 c1 04	 add	 ecx, 4
  003b4	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator->
  003b9	89 45 f4	 mov	 DWORD PTR tv78[ebp], eax
  003bc	8b 4d 08	 mov	 ecx, DWORD PTR _spDisp$[ebp]
  003bf	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ ; ATL::CComPtrBase<IDispatch>::operator&
  003c4	50		 push	 eax
  003c5	8b 4d f4	 mov	 ecx, DWORD PTR tv78[ebp]
  003c8	51		 push	 ecx
  003c9	8b 55 f4	 mov	 edx, DWORD PTR tv78[ebp]
  003cc	8b 02		 mov	 eax, DWORD PTR [edx]
  003ce	ff 50 1c	 call	 DWORD PTR [eax+28]
  003d1	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 97   : 	ATLASSERT(SUCCEEDED(hr));
; 98   : 	return SUCCEEDED(hr);

  003d4	33 c0		 xor	 eax, eax
  003d6	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  003da	0f 9d c0	 setge	 al
$L197494:

; 99   : }

  003dd	8b e5		 mov	 esp, ebp
  003df	5d		 pop	 ebp
  003e0	c2 04 00	 ret	 4
?GetJScript@CWebPage@@QAE_NAAV?$CComPtr@UIDispatch@@@ATL@@@Z ENDP ; CWebPage::GetJScript
_TEXT	ENDS
PUBLIC	?GetJScripts@CWebPage@@QAE_NAAV?$CComPtr@UIHTMLElementCollection@@@ATL@@@Z ; CWebPage::GetJScripts
PUBLIC	??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ ; ATL::CComPtrBase<IHTMLElementCollection>::operator&
; Function compile flags: /Odt
_TEXT	SEGMENT
tv78 = -12						; size = 4
_this$ = -8						; size = 4
_hr$ = -4						; size = 4
_spColl$ = 8						; size = 4
?GetJScripts@CWebPage@@QAE_NAAV?$CComPtr@UIHTMLElementCollection@@@ATL@@@Z PROC NEAR ; CWebPage::GetJScripts
; _this$ = ecx

; 102  : {

  003f0	55		 push	 ebp
  003f1	8b ec		 mov	 ebp, esp
  003f3	83 ec 0c	 sub	 esp, 12			; 0000000cH
  003f6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 	CHECK_POINTER(m_spDoc);

  003f9	6a 00		 push	 0
  003fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003fe	83 c1 04	 add	 ecx, 4
  00401	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z ; ATL::CComPtrBase<IHTMLDocument2>::operator==
  00406	0f b6 c0	 movzx	 eax, al
  00409	85 c0		 test	 eax, eax
  0040b	74 11		 je	 SHORT $L197517
  0040d	68 00 00 00 00	 push	 OFFSET FLAT:$SG197518
  00412	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00415	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError
  0041a	32 c0		 xor	 al, al
  0041c	eb 2f		 jmp	 SHORT $L197515
$L197517:

; 104  : 	HRESULT hr = m_spDoc->get_scripts(&spColl);

  0041e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00421	83 c1 04	 add	 ecx, 4
  00424	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator->
  00429	89 45 f4	 mov	 DWORD PTR tv78[ebp], eax
  0042c	8b 4d 08	 mov	 ecx, DWORD PTR _spColl$[ebp]
  0042f	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ ; ATL::CComPtrBase<IHTMLElementCollection>::operator&
  00434	50		 push	 eax
  00435	8b 4d f4	 mov	 ecx, DWORD PTR tv78[ebp]
  00438	51		 push	 ecx
  00439	8b 55 f4	 mov	 edx, DWORD PTR tv78[ebp]
  0043c	8b 02		 mov	 eax, DWORD PTR [edx]
  0043e	ff 50 48	 call	 DWORD PTR [eax+72]
  00441	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 105  : 	ATLASSERT(SUCCEEDED(hr));
; 106  : 	return SUCCEEDED(hr);

  00444	33 c0		 xor	 eax, eax
  00446	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0044a	0f 9d c0	 setge	 al
$L197515:

; 107  : }

  0044d	8b e5		 mov	 esp, ebp
  0044f	5d		 pop	 ebp
  00450	c2 04 00	 ret	 4
?GetJScripts@CWebPage@@QAE_NAAV?$CComPtr@UIHTMLElementCollection@@@ATL@@@Z ENDP ; CWebPage::GetJScripts
_TEXT	ENDS
PUBLIC	?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
PUBLIC	?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
EXTRN	??0CStringArray@@QAE@XZ:NEAR			; CStringArray::CStringArray
EXTRN	??1CStringArray@@UAE@XZ:NEAR			; CStringArray::~CStringArray
xdata$x	SEGMENT
$T198445 DD	0ffffffffH
	DD	FLAT:$L198439
	DD	00H
	DD	FLAT:$L198440
$T198443 DD	019930520H
	DD	02H
	DD	FLAT:$T198445
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv92 = -49						; size = 1
tv91 = -48						; size = 4
_this$ = -44						; size = 4
$T198438 = -40						; size = 4
$T198437 = -33						; size = 1
_paramArray$ = -32					; size = 20
__$EHRec$ = -12						; size = 12
_strFunc$ = 8						; size = 4
_pVarResult$ = 12					; size = 4
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCComVariant@3@@Z PROC NEAR ; CWebPage::CallJScript
; _this$ = ecx

; 110  : {

  00460	55		 push	 ebp
  00461	8b ec		 mov	 ebp, esp
  00463	6a ff		 push	 -1
  00465	68 00 00 00 00	 push	 __ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCComVariant@3@@Z
  0046a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00470	50		 push	 eax
  00471	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00478	83 ec 28	 sub	 esp, 40			; 00000028H
  0047b	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx
  0047e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 111  : 	CStringArray paramArray;

  00485	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00488	e8 00 00 00 00	 call	 ??0CStringArray@@QAE@XZ	; CStringArray::CStringArray
  0048d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 112  : 	return CallJScript(strFunc,paramArray,pVarResult);

  00491	8b 45 0c	 mov	 eax, DWORD PTR _pVarResult$[ebp]
  00494	50		 push	 eax
  00495	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00498	51		 push	 ecx
  00499	51		 push	 ecx
  0049a	8b cc		 mov	 ecx, esp
  0049c	89 65 d8	 mov	 DWORD PTR $T198438[ebp], esp
  0049f	8d 55 08	 lea	 edx, DWORD PTR _strFunc$[ebp]
  004a2	52		 push	 edx
  004a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  004a9	89 45 d0	 mov	 DWORD PTR tv91[ebp], eax
  004ac	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  004af	e8 00 00 00 00	 call	 ?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
  004b4	88 45 cf	 mov	 BYTE PTR tv92[ebp], al
  004b7	8a 45 cf	 mov	 al, BYTE PTR tv92[ebp]
  004ba	88 45 df	 mov	 BYTE PTR $T198437[ebp], al
  004bd	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  004c1	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  004c4	e8 00 00 00 00	 call	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
  004c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004d0	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  004d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  004d9	8a 45 df	 mov	 al, BYTE PTR $T198437[ebp]

; 113  : }

  004dc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004df	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004e6	8b e5		 mov	 esp, ebp
  004e8	5d		 pop	 ebp
  004e9	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L198439:
  00053	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00056	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198440:
  0005c	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  0005f	e9 00 00 00 00	 jmp	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
__ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCComVariant@3@@Z:
  00064	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198443
  00069	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCComVariant@3@@Z ENDP ; CWebPage::CallJScript
PUBLIC	?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add
PUBLIC	?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0PAVCComVariant@3@@Z ; CWebPage::CallJScript
xdata$x	SEGMENT
$T198456 DD	0ffffffffH
	DD	FLAT:$L198449
	DD	00H
	DD	FLAT:$L198450
	DD	01H
	DD	FLAT:$L198451
$T198454 DD	019930520H
	DD	03H
	DD	FLAT:$T198456
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv128 = -49						; size = 1
tv95 = -48						; size = 4
_this$ = -44						; size = 4
$T198448 = -40						; size = 4
$T198447 = -33						; size = 1
_paramArray$ = -32					; size = 20
__$EHRec$ = -12						; size = 12
_strFunc$ = 8						; size = 4
_strArg1$ = 12						; size = 4
_pVarResult$ = 16					; size = 4
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0PAVCComVariant@3@@Z PROC NEAR ; CWebPage::CallJScript
; _this$ = ecx

; 116  : {

  004f0	55		 push	 ebp
  004f1	8b ec		 mov	 ebp, esp
  004f3	6a ff		 push	 -1
  004f5	68 00 00 00 00	 push	 __ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0PAVCComVariant@3@@Z
  004fa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00500	50		 push	 eax
  00501	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00508	83 ec 28	 sub	 esp, 40			; 00000028H
  0050b	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx
  0050e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 117  : 	CStringArray paramArray;

  00515	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00518	e8 00 00 00 00	 call	 ??0CStringArray@@QAE@XZ	; CStringArray::CStringArray
  0051d	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 118  : 	paramArray.Add(strArg1);

  00521	8d 45 0c	 lea	 eax, DWORD PTR _strArg1$[ebp]
  00524	50		 push	 eax
  00525	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00528	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 119  : 	return CallJScript(strFunc,paramArray,pVarResult);

  0052d	8b 4d 10	 mov	 ecx, DWORD PTR _pVarResult$[ebp]
  00530	51		 push	 ecx
  00531	8d 55 e0	 lea	 edx, DWORD PTR _paramArray$[ebp]
  00534	52		 push	 edx
  00535	51		 push	 ecx
  00536	8b cc		 mov	 ecx, esp
  00538	89 65 d8	 mov	 DWORD PTR $T198448[ebp], esp
  0053b	8d 45 08	 lea	 eax, DWORD PTR _strFunc$[ebp]
  0053e	50		 push	 eax
  0053f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00545	89 45 d0	 mov	 DWORD PTR tv95[ebp], eax
  00548	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0054b	e8 00 00 00 00	 call	 ?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
  00550	88 45 cf	 mov	 BYTE PTR tv128[ebp], al
  00553	8a 4d cf	 mov	 cl, BYTE PTR tv128[ebp]
  00556	88 4d df	 mov	 BYTE PTR $T198447[ebp], cl
  00559	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0055d	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00560	e8 00 00 00 00	 call	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
  00565	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00569	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  0056c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00572	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00579	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  0057c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00582	8a 45 df	 mov	 al, BYTE PTR $T198447[ebp]

; 120  : }

  00585	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00588	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0058f	8b e5		 mov	 esp, ebp
  00591	5d		 pop	 ebp
  00592	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L198449:
  0006e	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  00071	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198450:
  00077	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  0007a	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198451:
  00080	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00083	e9 00 00 00 00	 jmp	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
__ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0PAVCComVariant@3@@Z:
  00088	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198454
  0008d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0PAVCComVariant@3@@Z ENDP ; CWebPage::CallJScript
PUBLIC	?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00PAVCComVariant@3@@Z ; CWebPage::CallJScript
xdata$x	SEGMENT
$T198468 DD	0ffffffffH
	DD	FLAT:$L198460
	DD	00H
	DD	FLAT:$L198461
	DD	01H
	DD	FLAT:$L198462
	DD	02H
	DD	FLAT:$L198463
$T198466 DD	019930520H
	DD	04H
	DD	FLAT:$T198468
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv132 = -49						; size = 1
tv131 = -48						; size = 4
_this$ = -44						; size = 4
$T198459 = -40						; size = 4
$T198458 = -33						; size = 1
_paramArray$ = -32					; size = 20
__$EHRec$ = -12						; size = 12
_strFunc$ = 8						; size = 4
_strArg1$ = 12						; size = 4
_strArg2$ = 16						; size = 4
_pVarResult$ = 20					; size = 4
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00PAVCComVariant@3@@Z PROC NEAR ; CWebPage::CallJScript
; _this$ = ecx

; 123  : {

  005a0	55		 push	 ebp
  005a1	8b ec		 mov	 ebp, esp
  005a3	6a ff		 push	 -1
  005a5	68 00 00 00 00	 push	 __ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00PAVCComVariant@3@@Z
  005aa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  005b0	50		 push	 eax
  005b1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  005b8	83 ec 28	 sub	 esp, 40			; 00000028H
  005bb	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx
  005be	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2

; 124  : 	CStringArray paramArray;

  005c5	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  005c8	e8 00 00 00 00	 call	 ??0CStringArray@@QAE@XZ	; CStringArray::CStringArray
  005cd	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 125  : 	paramArray.Add(strArg1);

  005d1	8d 45 0c	 lea	 eax, DWORD PTR _strArg1$[ebp]
  005d4	50		 push	 eax
  005d5	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  005d8	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 126  : 	paramArray.Add(strArg2);

  005dd	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  005e0	51		 push	 ecx
  005e1	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  005e4	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 127  : 	return CallJScript(strFunc,paramArray,pVarResult);

  005e9	8b 55 14	 mov	 edx, DWORD PTR _pVarResult$[ebp]
  005ec	52		 push	 edx
  005ed	8d 45 e0	 lea	 eax, DWORD PTR _paramArray$[ebp]
  005f0	50		 push	 eax
  005f1	51		 push	 ecx
  005f2	8b cc		 mov	 ecx, esp
  005f4	89 65 d8	 mov	 DWORD PTR $T198459[ebp], esp
  005f7	8d 55 08	 lea	 edx, DWORD PTR _strFunc$[ebp]
  005fa	52		 push	 edx
  005fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00601	89 45 d0	 mov	 DWORD PTR tv131[ebp], eax
  00604	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00607	e8 00 00 00 00	 call	 ?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
  0060c	88 45 cf	 mov	 BYTE PTR tv132[ebp], al
  0060f	8a 45 cf	 mov	 al, BYTE PTR tv132[ebp]
  00612	88 45 df	 mov	 BYTE PTR $T198458[ebp], al
  00615	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00619	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  0061c	e8 00 00 00 00	 call	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
  00621	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00625	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00628	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0062e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00632	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  00635	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0063b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00642	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  00645	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0064b	8a 45 df	 mov	 al, BYTE PTR $T198458[ebp]

; 128  : }

  0064e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00651	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00658	8b e5		 mov	 esp, ebp
  0065a	5d		 pop	 ebp
  0065b	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L198460:
  00092	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  00095	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198461:
  0009b	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  0009e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198462:
  000a4	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  000a7	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198463:
  000ad	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  000b0	e9 00 00 00 00	 jmp	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
__ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00PAVCComVariant@3@@Z:
  000b5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198466
  000ba	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00PAVCComVariant@3@@Z ENDP ; CWebPage::CallJScript
PUBLIC	?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@000PAVCComVariant@3@@Z ; CWebPage::CallJScript
xdata$x	SEGMENT
$T198481 DD	0ffffffffH
	DD	FLAT:$L198472
	DD	00H
	DD	FLAT:$L198473
	DD	01H
	DD	FLAT:$L198474
	DD	02H
	DD	FLAT:$L198475
	DD	03H
	DD	FLAT:$L198476
$T198479 DD	019930520H
	DD	05H
	DD	FLAT:$T198481
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv136 = -49						; size = 1
tv135 = -48						; size = 4
_this$ = -44						; size = 4
$T198471 = -40						; size = 4
$T198470 = -33						; size = 1
_paramArray$ = -32					; size = 20
__$EHRec$ = -12						; size = 12
_strFunc$ = 8						; size = 4
_strArg1$ = 12						; size = 4
_strArg2$ = 16						; size = 4
_strArg3$ = 20						; size = 4
_pVarResult$ = 24					; size = 4
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@000PAVCComVariant@3@@Z PROC NEAR ; CWebPage::CallJScript
; _this$ = ecx

; 131  : {

  00660	55		 push	 ebp
  00661	8b ec		 mov	 ebp, esp
  00663	6a ff		 push	 -1
  00665	68 00 00 00 00	 push	 __ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@000PAVCComVariant@3@@Z
  0066a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00670	50		 push	 eax
  00671	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00678	83 ec 28	 sub	 esp, 40			; 00000028H
  0067b	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx
  0067e	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3

; 132  : 	CStringArray paramArray;

  00685	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00688	e8 00 00 00 00	 call	 ??0CStringArray@@QAE@XZ	; CStringArray::CStringArray
  0068d	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 133  : 	paramArray.Add(strArg1);

  00691	8d 45 0c	 lea	 eax, DWORD PTR _strArg1$[ebp]
  00694	50		 push	 eax
  00695	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00698	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 134  : 	paramArray.Add(strArg2);

  0069d	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  006a0	51		 push	 ecx
  006a1	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  006a4	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 135  : 	paramArray.Add(strArg3);

  006a9	8d 55 14	 lea	 edx, DWORD PTR _strArg3$[ebp]
  006ac	52		 push	 edx
  006ad	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  006b0	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 136  : 	return CallJScript(strFunc,paramArray,pVarResult);

  006b5	8b 45 18	 mov	 eax, DWORD PTR _pVarResult$[ebp]
  006b8	50		 push	 eax
  006b9	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  006bc	51		 push	 ecx
  006bd	51		 push	 ecx
  006be	8b cc		 mov	 ecx, esp
  006c0	89 65 d8	 mov	 DWORD PTR $T198471[ebp], esp
  006c3	8d 55 08	 lea	 edx, DWORD PTR _strFunc$[ebp]
  006c6	52		 push	 edx
  006c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  006cd	89 45 d0	 mov	 DWORD PTR tv135[ebp], eax
  006d0	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  006d3	e8 00 00 00 00	 call	 ?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
  006d8	88 45 cf	 mov	 BYTE PTR tv136[ebp], al
  006db	8a 45 cf	 mov	 al, BYTE PTR tv136[ebp]
  006de	88 45 df	 mov	 BYTE PTR $T198470[ebp], al
  006e1	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  006e5	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  006e8	e8 00 00 00 00	 call	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
  006ed	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  006f1	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  006f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  006fa	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  006fe	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  00701	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00707	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0070b	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  0070e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00714	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0071b	8d 4d 14	 lea	 ecx, DWORD PTR _strArg3$[ebp]
  0071e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00724	8a 45 df	 mov	 al, BYTE PTR $T198470[ebp]

; 137  : }

  00727	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0072a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00731	8b e5		 mov	 esp, ebp
  00733	5d		 pop	 ebp
  00734	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
text$x	SEGMENT
$L198472:
  000bf	8d 4d 14	 lea	 ecx, DWORD PTR _strArg3$[ebp]
  000c2	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198473:
  000c8	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  000cb	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198474:
  000d1	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  000d4	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198475:
  000da	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  000dd	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198476:
  000e3	8d 4d e0	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  000e6	e9 00 00 00 00	 jmp	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
__ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@000PAVCComVariant@3@@Z:
  000eb	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198479
  000f0	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@000PAVCComVariant@3@@Z ENDP ; CWebPage::CallJScript
PUBLIC	?GetSize@CStringArray@@QBEHXZ			; CStringArray::GetSize
PUBLIC	?GetAt@CStringArray@@QBEABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CStringArray::GetAt
PUBLIC	??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
PUBLIC	??0CComVariant@ATL@@QAE@XZ			; ATL::CComVariant::CComVariant
PUBLIC	??1CComVariant@ATL@@QAE@XZ			; ATL::CComVariant::~CComVariant
PUBLIC	??4CComVariant@ATL@@QAEAAV01@ABV01@@Z		; ATL::CComVariant::operator=
PUBLIC	??1CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::~CComBSTR
PUBLIC	??ICComBSTR@ATL@@QAEPAPA_WXZ			; ATL::CComBSTR::operator&
PUBLIC	?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z		; ATL::CComBSTR::CopyTo
PUBLIC	??0CComBSTR@ATL@@QAE@PBD@Z			; ATL::CComBSTR::CComBSTR
EXTRN	??_U@YAPAXI@Z:NEAR				; operator new[]
EXTRN	??_V@YAXPAX@Z:NEAR				; operator delete[]
EXTRN	_memset:NEAR
EXTRN	_GUID_NULL:BYTE
xdata$x	SEGMENT
$T198501 DD	0ffffffffH
	DD	FLAT:$L198491
	DD	00H
	DD	FLAT:$L198492
	DD	01H
	DD	FLAT:$L198493
	DD	02H
	DD	FLAT:$L198494
	DD	02H
	DD	FLAT:$L198496
	DD	04H
	DD	FLAT:$L198497
$T198499 DD	019930520H
	DD	06H
	DD	FLAT:$T198501
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv213 = -168						; size = 4
tv169 = -164						; size = 4
tv174 = -160						; size = 4
tv206 = -156						; size = 4
tv76 = -152						; size = 4
tv84 = -148						; size = 4
_this$ = -144						; size = 4
$T198490 = -138						; size = 1
$T198489 = -137						; size = 1
$T198488 = -136						; size = 4
$T198487 = -132						; size = 4
$T198486 = -128						; size = 4
$T198485 = -121						; size = 1
$T198484 = -120						; size = 4
$T198483 = -113						; size = 1
_bstr$197663 = -112					; size = 4
_i$197659 = -108					; size = 4
_arraySize$ = -104					; size = 4
_vaResult$ = -100					; size = 16
_bstrMember$ = -80					; size = 4
_dispid$ = -76						; size = 4
_hr$ = -72						; size = 4
_nArgErr$ = -68						; size = 4
_spScript$ = -64					; size = 4
_excepInfo$ = -60					; size = 32
_dispparams$ = -28					; size = 16
__$EHRec$ = -12						; size = 12
_strFunc$ = 8						; size = 4
_paramArray$ = 12					; size = 4
_pVarResult$ = 16					; size = 4
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z PROC NEAR ; CWebPage::CallJScript
; _this$ = ecx

; 140  : {

  00740	55		 push	 ebp
  00741	8b ec		 mov	 ebp, esp
  00743	6a ff		 push	 -1
  00745	68 00 00 00 00	 push	 __ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z
  0074a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00750	50		 push	 eax
  00751	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00758	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  0075e	89 8d 70 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
  00764	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 141  : 	CComPtr<IDispatch> spScript;

  0076b	8d 4d c0	 lea	 ecx, DWORD PTR _spScript$[ebp]
  0076e	e8 00 00 00 00	 call	 ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
  00773	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 142  : 	if(!GetJScript(spScript))

  00777	8d 45 c0	 lea	 eax, DWORD PTR _spScript$[ebp]
  0077a	50		 push	 eax
  0077b	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00781	e8 00 00 00 00	 call	 ?GetJScript@CWebPage@@QAE_NAAV?$CComPtr@UIDispatch@@@ATL@@@Z ; CWebPage::GetJScript
  00786	0f b6 c8	 movzx	 ecx, al
  00789	85 c9		 test	 ecx, ecx
  0078b	75 38		 jne	 SHORT $L197638

; 143  : 	{
; 144  : 		ShowError("Cannot GetScript");

  0078d	68 00 00 00 00	 push	 OFFSET FLAT:$SG197639
  00792	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00798	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError

; 145  : 		return false;

  0079d	c6 45 8f 00	 mov	 BYTE PTR $T198483[ebp], 0
  007a1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  007a5	8d 4d c0	 lea	 ecx, DWORD PTR _spScript$[ebp]
  007a8	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  007ad	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  007b4	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  007b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  007bd	8a 45 8f	 mov	 al, BYTE PTR $T198483[ebp]
  007c0	e9 f6 02 00 00	 jmp	 $L197636
$L197638:

; 146  : 	}
; 147  : 	CComBSTR bstrMember(strFunc);

  007c5	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  007c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  007ce	50		 push	 eax
  007cf	8d 4d b0	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  007d2	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR
  007d7	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 148  : 	DISPID dispid = NULL;

  007db	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _dispid$[ebp], 0

; 149  : 	HRESULT hr = spScript->GetIDsOfNames(IID_NULL,&bstrMember,1,
; 150  : 											LOCALE_SYSTEM_DEFAULT,&dispid);

  007e2	8d 4d c0	 lea	 ecx, DWORD PTR _spScript$[ebp]
  007e5	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ; ATL::CComPtrBase<IDispatch>::operator->
  007ea	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv84[ebp], eax
  007f0	8d 55 b4	 lea	 edx, DWORD PTR _dispid$[ebp]
  007f3	52		 push	 edx
  007f4	68 00 08 00 00	 push	 2048			; 00000800H
  007f9	6a 01		 push	 1
  007fb	8d 4d b0	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  007fe	e8 00 00 00 00	 call	 ??ICComBSTR@ATL@@QAEPAPA_WXZ ; ATL::CComBSTR::operator&
  00803	50		 push	 eax
  00804	68 00 00 00 00	 push	 OFFSET FLAT:_GUID_NULL
  00809	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv84[ebp]
  0080f	50		 push	 eax
  00810	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv84[ebp]
  00816	8b 11		 mov	 edx, DWORD PTR [ecx]
  00818	ff 52 14	 call	 DWORD PTR [edx+20]
  0081b	89 45 b8	 mov	 DWORD PTR _hr$[ebp], eax

; 151  : 	if(FAILED(hr))

  0081e	83 7d b8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00822	7d 7f		 jge	 SHORT $L197652

; 152  : 	{
; 153  : 		ShowError(GetSystemErrorMessage(hr));

  00824	8b 45 b8	 mov	 eax, DWORD PTR _hr$[ebp]
  00827	50		 push	 eax
  00828	8d 4d 88	 lea	 ecx, DWORD PTR $T198484[ebp]
  0082b	51		 push	 ecx
  0082c	e8 00 00 00 00	 call	 ?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z ; GetSystemErrorMessage
  00831	83 c4 08	 add	 esp, 8
  00834	89 85 68 ff ff
	ff		 mov	 DWORD PTR tv76[ebp], eax
  0083a	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR tv76[ebp]
  00840	89 95 64 ff ff
	ff		 mov	 DWORD PTR tv206[ebp], edx
  00846	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0084a	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv206[ebp]
  00850	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00856	50		 push	 eax
  00857	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0085d	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError
  00862	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00866	8d 4d 88	 lea	 ecx, DWORD PTR $T198484[ebp]
  00869	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 154  : 		return false;

  0086f	c6 45 87 00	 mov	 BYTE PTR $T198485[ebp], 0
  00873	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00877	8d 4d b0	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  0087a	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  0087f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00883	8d 4d c0	 lea	 ecx, DWORD PTR _spScript$[ebp]
  00886	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  0088b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00892	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00895	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0089b	8a 45 87	 mov	 al, BYTE PTR $T198485[ebp]
  0089e	e9 18 02 00 00	 jmp	 $L197636
$L197652:

; 155  : 	}
; 156  : 
; 157  : 	const int arraySize = paramArray.GetSize();

  008a3	8b 4d 0c	 mov	 ecx, DWORD PTR _paramArray$[ebp]
  008a6	e8 00 00 00 00	 call	 ?GetSize@CStringArray@@QBEHXZ ; CStringArray::GetSize
  008ab	89 45 98	 mov	 DWORD PTR _arraySize$[ebp], eax

; 158  : 
; 159  : 	DISPPARAMS dispparams;
; 160  : 	memset(&dispparams, 0, sizeof dispparams);

  008ae	6a 10		 push	 16			; 00000010H
  008b0	6a 00		 push	 0
  008b2	8d 45 e4	 lea	 eax, DWORD PTR _dispparams$[ebp]
  008b5	50		 push	 eax
  008b6	e8 00 00 00 00	 call	 _memset
  008bb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 161  : 	dispparams.cArgs = arraySize;

  008be	8b 4d 98	 mov	 ecx, DWORD PTR _arraySize$[ebp]
  008c1	89 4d ec	 mov	 DWORD PTR _dispparams$[ebp+8], ecx

; 162  : 	dispparams.rgvarg = new VARIANT[dispparams.cArgs];

  008c4	8b 55 ec	 mov	 edx, DWORD PTR _dispparams$[ebp+8]
  008c7	c1 e2 04	 shl	 edx, 4
  008ca	52		 push	 edx
  008cb	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  008d0	83 c4 04	 add	 esp, 4
  008d3	89 45 80	 mov	 DWORD PTR $T198486[ebp], eax
  008d6	8b 45 80	 mov	 eax, DWORD PTR $T198486[ebp]
  008d9	89 45 e4	 mov	 DWORD PTR _dispparams$[ebp], eax

; 163  : 	
; 164  : 	for( int i = 0; i < arraySize; i++)

  008dc	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _i$197659[ebp], 0
  008e3	eb 09		 jmp	 SHORT $L197660
$L197661:
  008e5	8b 4d 94	 mov	 ecx, DWORD PTR _i$197659[ebp]
  008e8	83 c1 01	 add	 ecx, 1
  008eb	89 4d 94	 mov	 DWORD PTR _i$197659[ebp], ecx
$L197660:
  008ee	8b 55 94	 mov	 edx, DWORD PTR _i$197659[ebp]
  008f1	3b 55 98	 cmp	 edx, DWORD PTR _arraySize$[ebp]
  008f4	7d 52		 jge	 SHORT $L197662

; 165  : 	{
; 166  : 		CComBSTR bstr = paramArray.GetAt(arraySize - 1 - i); // back reading

  008f6	8b 45 98	 mov	 eax, DWORD PTR _arraySize$[ebp]
  008f9	83 e8 01	 sub	 eax, 1
  008fc	2b 45 94	 sub	 eax, DWORD PTR _i$197659[ebp]
  008ff	50		 push	 eax
  00900	8b 4d 0c	 mov	 ecx, DWORD PTR _paramArray$[ebp]
  00903	e8 00 00 00 00	 call	 ?GetAt@CStringArray@@QBEABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CStringArray::GetAt
  00908	8b c8		 mov	 ecx, eax
  0090a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00910	50		 push	 eax
  00911	8d 4d 90	 lea	 ecx, DWORD PTR _bstr$197663[ebp]
  00914	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR

; 167  : 		bstr.CopyTo(&dispparams.rgvarg[i].bstrVal);

  00919	8b 4d 94	 mov	 ecx, DWORD PTR _i$197659[ebp]
  0091c	c1 e1 04	 shl	 ecx, 4
  0091f	8b 55 e4	 mov	 edx, DWORD PTR _dispparams$[ebp]
  00922	8d 44 0a 08	 lea	 eax, DWORD PTR [edx+ecx+8]
  00926	50		 push	 eax
  00927	8d 4d 90	 lea	 ecx, DWORD PTR _bstr$197663[ebp]
  0092a	e8 00 00 00 00	 call	 ?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z ; ATL::CComBSTR::CopyTo

; 168  : 		dispparams.rgvarg[i].vt = VT_BSTR;

  0092f	8b 4d 94	 mov	 ecx, DWORD PTR _i$197659[ebp]
  00932	c1 e1 04	 shl	 ecx, 4
  00935	8b 55 e4	 mov	 edx, DWORD PTR _dispparams$[ebp]
  00938	66 c7 04 0a 08
	00		 mov	 WORD PTR [edx+ecx], 8

; 169  : 	}

  0093e	8d 4d 90	 lea	 ecx, DWORD PTR _bstr$197663[ebp]
  00941	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00946	eb 9d		 jmp	 SHORT $L197661
$L197662:

; 170  : 	dispparams.cNamedArgs = 0;

  00948	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _dispparams$[ebp+12], 0

; 171  : 
; 172  : 	EXCEPINFO excepInfo;
; 173  : 	memset(&excepInfo, 0, sizeof excepInfo);

  0094f	6a 20		 push	 32			; 00000020H
  00951	6a 00		 push	 0
  00953	8d 45 c4	 lea	 eax, DWORD PTR _excepInfo$[ebp]
  00956	50		 push	 eax
  00957	e8 00 00 00 00	 call	 _memset
  0095c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 174  :    	CComVariant vaResult;

  0095f	8d 4d 9c	 lea	 ecx, DWORD PTR _vaResult$[ebp]
  00962	e8 00 00 00 00	 call	 ??0CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::CComVariant
  00967	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 175  : 	UINT nArgErr = (UINT)-1;  // initialize to invalid arg

  0096b	c7 45 bc ff ff
	ff ff		 mov	 DWORD PTR _nArgErr$[ebp], -1

; 176  :          
; 177  : 	hr = spScript->Invoke(dispid,IID_NULL,0,
; 178  : 							DISPATCH_METHOD,&dispparams,&vaResult,&excepInfo,&nArgErr);

  00972	8d 4d c0	 lea	 ecx, DWORD PTR _spScript$[ebp]
  00975	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ; ATL::CComPtrBase<IDispatch>::operator->
  0097a	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv174[ebp], eax
  00980	8d 4d bc	 lea	 ecx, DWORD PTR _nArgErr$[ebp]
  00983	51		 push	 ecx
  00984	8d 55 c4	 lea	 edx, DWORD PTR _excepInfo$[ebp]
  00987	52		 push	 edx
  00988	8d 45 9c	 lea	 eax, DWORD PTR _vaResult$[ebp]
  0098b	50		 push	 eax
  0098c	8d 4d e4	 lea	 ecx, DWORD PTR _dispparams$[ebp]
  0098f	51		 push	 ecx
  00990	6a 01		 push	 1
  00992	6a 00		 push	 0
  00994	68 00 00 00 00	 push	 OFFSET FLAT:_GUID_NULL
  00999	8b 55 b4	 mov	 edx, DWORD PTR _dispid$[ebp]
  0099c	52		 push	 edx
  0099d	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv174[ebp]
  009a3	50		 push	 eax
  009a4	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv174[ebp]
  009aa	8b 11		 mov	 edx, DWORD PTR [ecx]
  009ac	ff 52 18	 call	 DWORD PTR [edx+24]
  009af	89 45 b8	 mov	 DWORD PTR _hr$[ebp], eax

; 179  : 
; 180  : 	delete [] dispparams.rgvarg;

  009b2	8b 45 e4	 mov	 eax, DWORD PTR _dispparams$[ebp]
  009b5	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T198487[ebp], eax
  009bb	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR $T198487[ebp]
  009c1	51		 push	 ecx
  009c2	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  009c7	83 c4 04	 add	 esp, 4

; 181  : 	if(FAILED(hr))

  009ca	83 7d b8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  009ce	0f 8d 94 00 00
	00		 jge	 $L197670

; 182  : 	{
; 183  : 		ShowError(GetSystemErrorMessage(hr));

  009d4	8b 55 b8	 mov	 edx, DWORD PTR _hr$[ebp]
  009d7	52		 push	 edx
  009d8	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR $T198488[ebp]
  009de	50		 push	 eax
  009df	e8 00 00 00 00	 call	 ?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z ; GetSystemErrorMessage
  009e4	83 c4 08	 add	 esp, 8
  009e7	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv169[ebp], eax
  009ed	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv169[ebp]
  009f3	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv213[ebp], ecx
  009f9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  009fd	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR tv213[ebp]
  00a03	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00a09	50		 push	 eax
  00a0a	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00a10	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError
  00a15	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00a19	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T198488[ebp]
  00a1f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 184  : 		return false;

  00a25	c6 85 77 ff ff
	ff 00		 mov	 BYTE PTR $T198489[ebp], 0
  00a2c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00a30	8d 4d 9c	 lea	 ecx, DWORD PTR _vaResult$[ebp]
  00a33	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  00a38	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00a3c	8d 4d b0	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  00a3f	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00a44	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00a48	8d 4d c0	 lea	 ecx, DWORD PTR _spScript$[ebp]
  00a4b	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  00a50	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a57	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00a5a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00a60	8a 85 77 ff ff
	ff		 mov	 al, BYTE PTR $T198489[ebp]
  00a66	eb 53		 jmp	 SHORT $L197636
$L197670:

; 185  : 	}
; 186  : 	
; 187  : 	if(pVarResult)

  00a68	83 7d 10 00	 cmp	 DWORD PTR _pVarResult$[ebp], 0
  00a6c	74 0c		 je	 SHORT $L197673

; 188  : 	{
; 189  : 		*pVarResult = vaResult;

  00a6e	8d 55 9c	 lea	 edx, DWORD PTR _vaResult$[ebp]
  00a71	52		 push	 edx
  00a72	8b 4d 10	 mov	 ecx, DWORD PTR _pVarResult$[ebp]
  00a75	e8 00 00 00 00	 call	 ??4CComVariant@ATL@@QAEAAV01@ABV01@@Z ; ATL::CComVariant::operator=
$L197673:

; 190  : 	}
; 191  : 	return true;

  00a7a	c6 85 76 ff ff
	ff 01		 mov	 BYTE PTR $T198490[ebp], 1
  00a81	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00a85	8d 4d 9c	 lea	 ecx, DWORD PTR _vaResult$[ebp]
  00a88	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  00a8d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00a91	8d 4d b0	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  00a94	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00a99	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00a9d	8d 4d c0	 lea	 ecx, DWORD PTR _spScript$[ebp]
  00aa0	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  00aa5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00aac	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00aaf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00ab5	8a 85 76 ff ff
	ff		 mov	 al, BYTE PTR $T198490[ebp]
$L197636:

; 192  : }

  00abb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00abe	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00ac5	8b e5		 mov	 esp, ebp
  00ac7	5d		 pop	 ebp
  00ac8	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L198491:
  000f5	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  000f8	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198492:
  000fe	8d 4d c0	 lea	 ecx, DWORD PTR _spScript$[ebp]
  00101	e9 00 00 00 00	 jmp	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
$L198493:
  00106	8d 4d b0	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  00109	e9 00 00 00 00	 jmp	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
$L198494:
  0010e	8d 4d 88	 lea	 ecx, DWORD PTR $T198484[ebp]
  00111	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198496:
  00117	8d 4d 9c	 lea	 ecx, DWORD PTR _vaResult$[ebp]
  0011a	e9 00 00 00 00	 jmp	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
$L198497:
  0011f	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T198488[ebp]
  00125	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z:
  0012b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198499
  00130	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ENDP ; CWebPage::CallJScript
PUBLIC	?RemoveAll@CStringArray@@QAEXXZ			; CStringArray::RemoveAll
PUBLIC	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
PUBLIC	?ScanJScript@CWebPage@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV23@AAVCStringArray@@@Z ; CWebPage::ScanJScript
EXTRN	__imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ:NEAR
xdata$x	SEGMENT
$T198529 DD	0ffffffffH
	DD	FLAT:$L198510
	DD	00H
	DD	FLAT:$L198511
	DD	01H
	DD	FLAT:$L198513
	DD	01H
	DD	FLAT:$L198520
	DD	03H
	DD	FLAT:$L198522
	DD	04H
	DD	FLAT:$L198523
	DD	05H
	DD	FLAT:$L198525
$T198527 DD	019930520H
	DD	07H
	DD	FLAT:$T198529
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv298 = -124						; size = 4
tv296 = -120						; size = 4
tv295 = -116						; size = 4
tv289 = -112						; size = 4
tv288 = -108						; size = 4
tv283 = -104						; size = 4
tv282 = -100						; size = 4
tv270 = -96						; size = 4
tv269 = -92						; size = 4
tv263 = -88						; size = 4
tv262 = -84						; size = 4
_this$ = -80						; size = 4
$T198517 = -76						; size = 4
$T198509 = -72						; size = 4
$T198508 = -68						; size = 4
$T198507 = -61						; size = 1
$T198506 = -60						; size = 4
$T198505 = -56						; size = 4
$T198504 = -52						; size = 4
$T198503 = -48						; size = 4
_strStop$197698 = -44					; size = 4
_strStart$197688 = -40					; size = 4
_bFound$ = -33						; size = 1
_strArg$ = -32						; size = 4
_strSrc$ = -28						; size = 4
_strDelim$ = -24					; size = 4
_strFunc$ = -20						; size = 4
_strArgs$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_strAText$ = 12						; size = 4
_args$ = 16						; size = 4
?ScanJScript@CWebPage@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV23@AAVCStringArray@@@Z PROC NEAR ; CWebPage::ScanJScript
; _this$ = ecx

; 196  : {

  00ad0	55		 push	 ebp
  00ad1	8b ec		 mov	 ebp, esp
  00ad3	6a ff		 push	 -1
  00ad5	68 00 00 00 00	 push	 __ehhandler$?ScanJScript@CWebPage@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV23@AAVCStringArray@@@Z
  00ada	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00ae0	50		 push	 eax
  00ae1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ae8	83 ec 70	 sub	 esp, 112		; 00000070H
  00aeb	89 4d b0	 mov	 DWORD PTR _this$[ebp], ecx
  00aee	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR $T198517[ebp], 0

; 197  : 	args.RemoveAll();

  00af5	8b 4d 10	 mov	 ecx, DWORD PTR _args$[ebp]
  00af8	e8 00 00 00 00	 call	 ?RemoveAll@CStringArray@@QAEXXZ ; CStringArray::RemoveAll

; 198  : 	CString strDelim(" \n\r\t"),strSrc(strAText);

  00afd	68 00 00 00 00	 push	 OFFSET FLAT:$SG197682
  00b02	8d 4d e8	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  00b05	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00b0b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00b12	8b 45 0c	 mov	 eax, DWORD PTR _strAText$[ebp]
  00b15	50		 push	 eax
  00b16	8d 4d e4	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  00b19	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00b1f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 199  : 	bool bFound = false;

  00b23	c6 45 df 00	 mov	 BYTE PTR _bFound$[ebp], 0
$L197686:

; 200  : 	while(!strSrc.IsEmpty())

  00b27	8d 4d e4	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  00b2a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  00b30	0f b6 c8	 movzx	 ecx, al
  00b33	85 c9		 test	 ecx, ecx
  00b35	0f 85 ee 00 00
	00		 jne	 $L197687

; 201  : 	{
; 202  : 		CString strStart = GetNextToken(strSrc,strDelim);

  00b3b	6a 01		 push	 1
  00b3d	6a 00		 push	 0
  00b3f	51		 push	 ecx
  00b40	8b cc		 mov	 ecx, esp
  00b42	89 65 d0	 mov	 DWORD PTR $T198503[ebp], esp
  00b45	8d 55 e8	 lea	 edx, DWORD PTR _strDelim$[ebp]
  00b48	52		 push	 edx
  00b49	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00b4f	89 45 ac	 mov	 DWORD PTR tv262[ebp], eax
  00b52	8d 45 e4	 lea	 eax, DWORD PTR _strSrc$[ebp]
  00b55	50		 push	 eax
  00b56	8d 4d d8	 lea	 ecx, DWORD PTR _strStart$197688[ebp]
  00b59	51		 push	 ecx
  00b5a	e8 00 00 00 00	 call	 ?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
  00b5f	83 c4 14	 add	 esp, 20			; 00000014H
  00b62	89 45 a8	 mov	 DWORD PTR tv263[ebp], eax
  00b65	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 203  : 		if(strStart == "function")

  00b69	68 00 00 00 00	 push	 OFFSET FLAT:$SG197692
  00b6e	8d 55 d8	 lea	 edx, DWORD PTR _strStart$197688[ebp]
  00b71	52		 push	 edx
  00b72	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  00b77	83 c4 08	 add	 esp, 8
  00b7a	0f b6 c0	 movzx	 eax, al
  00b7d	85 c0		 test	 eax, eax
  00b7f	74 16		 je	 SHORT $L197691

; 204  : 		{
; 205  : 			bFound = true;

  00b81	c6 45 df 01	 mov	 BYTE PTR _bFound$[ebp], 1

; 206  : 			break;

  00b85	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00b89	8d 4d d8	 lea	 ecx, DWORD PTR _strStart$197688[ebp]
  00b8c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00b92	e9 92 00 00 00	 jmp	 $L197687
$L197691:

; 207  : 		}
; 208  : 		if(strStart == "/*")

  00b97	68 00 00 00 00	 push	 OFFSET FLAT:$SG197694
  00b9c	8d 4d d8	 lea	 ecx, DWORD PTR _strStart$197688[ebp]
  00b9f	51		 push	 ecx
  00ba0	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  00ba5	83 c4 08	 add	 esp, 8
  00ba8	0f b6 d0	 movzx	 edx, al
  00bab	85 d2		 test	 edx, edx
  00bad	74 68		 je	 SHORT $L197693
$L197696:

; 209  : 		{
; 210  : 			// Skip comments
; 211  : 			while(!strSrc.IsEmpty())

  00baf	8d 4d e4	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  00bb2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  00bb8	0f b6 c0	 movzx	 eax, al
  00bbb	85 c0		 test	 eax, eax
  00bbd	75 58		 jne	 SHORT $L197693

; 212  : 			{
; 213  : 				CString strStop = GetNextToken(strSrc,strDelim);

  00bbf	6a 01		 push	 1
  00bc1	6a 00		 push	 0
  00bc3	51		 push	 ecx
  00bc4	8b cc		 mov	 ecx, esp
  00bc6	89 65 cc	 mov	 DWORD PTR $T198504[ebp], esp
  00bc9	8d 55 e8	 lea	 edx, DWORD PTR _strDelim$[ebp]
  00bcc	52		 push	 edx
  00bcd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00bd3	89 45 a4	 mov	 DWORD PTR tv269[ebp], eax
  00bd6	8d 45 e4	 lea	 eax, DWORD PTR _strSrc$[ebp]
  00bd9	50		 push	 eax
  00bda	8d 4d d4	 lea	 ecx, DWORD PTR _strStop$197698[ebp]
  00bdd	51		 push	 ecx
  00bde	e8 00 00 00 00	 call	 ?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
  00be3	83 c4 14	 add	 esp, 20			; 00000014H
  00be6	89 45 a0	 mov	 DWORD PTR tv270[ebp], eax

; 214  : 				if(strStop == "*/")

  00be9	68 00 00 00 00	 push	 OFFSET FLAT:$SG197702
  00bee	8d 55 d4	 lea	 edx, DWORD PTR _strStop$197698[ebp]
  00bf1	52		 push	 edx
  00bf2	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  00bf7	83 c4 08	 add	 esp, 8
  00bfa	0f b6 c0	 movzx	 eax, al
  00bfd	85 c0		 test	 eax, eax
  00bff	74 0b		 je	 SHORT $L197701

; 215  : 				{
; 216  : 					break;

  00c01	8d 4d d4	 lea	 ecx, DWORD PTR _strStop$197698[ebp]
  00c04	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00c0a	eb 0b		 jmp	 SHORT $L197693
$L197701:

; 217  : 				}
; 218  : 			}

  00c0c	8d 4d d4	 lea	 ecx, DWORD PTR _strStop$197698[ebp]
  00c0f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00c15	eb 98		 jmp	 SHORT $L197696
$L197693:

; 219  : 		}
; 220  : 	}

  00c17	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00c1b	8d 4d d8	 lea	 ecx, DWORD PTR _strStart$197688[ebp]
  00c1e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00c24	e9 fe fe ff ff	 jmp	 $L197686
$L197687:

; 221  : 
; 222  : 	if(!bFound)

  00c29	0f b6 4d df	 movzx	 ecx, BYTE PTR _bFound$[ebp]
  00c2d	85 c9		 test	 ecx, ecx
  00c2f	75 3c		 jne	 SHORT $L197703

; 223  : 		return "";

  00c31	68 00 00 00 00	 push	 OFFSET FLAT:$SG197704
  00c36	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00c39	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00c3f	8b 55 b4	 mov	 edx, DWORD PTR $T198517[ebp]
  00c42	83 ca 01	 or	 edx, 1
  00c45	89 55 b4	 mov	 DWORD PTR $T198517[ebp], edx
  00c48	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00c4c	8d 4d e4	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  00c4f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00c55	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c5c	8d 4d e8	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  00c5f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00c65	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00c68	e9 4d 01 00 00	 jmp	 $L197680
$L197703:

; 224  : 	
; 225  : 	CString strFunc = GetNextToken(strSrc,"(",true);

  00c6d	6a 01		 push	 1
  00c6f	6a 01		 push	 1
  00c71	51		 push	 ecx
  00c72	8b cc		 mov	 ecx, esp
  00c74	89 65 c8	 mov	 DWORD PTR $T198505[ebp], esp
  00c77	68 00 00 00 00	 push	 OFFSET FLAT:$SG197708
  00c7c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00c82	89 45 9c	 mov	 DWORD PTR tv282[ebp], eax
  00c85	8d 45 e4	 lea	 eax, DWORD PTR _strSrc$[ebp]
  00c88	50		 push	 eax
  00c89	8d 4d ec	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00c8c	51		 push	 ecx
  00c8d	e8 00 00 00 00	 call	 ?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
  00c92	83 c4 14	 add	 esp, 20			; 00000014H
  00c95	89 45 98	 mov	 DWORD PTR tv283[ebp], eax
  00c98	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 226  : 	CString strArgs = GetNextToken(strSrc,")",true);

  00c9c	6a 01		 push	 1
  00c9e	6a 01		 push	 1
  00ca0	51		 push	 ecx
  00ca1	8b cc		 mov	 ecx, esp
  00ca3	89 65 c4	 mov	 DWORD PTR $T198506[ebp], esp
  00ca6	68 00 00 00 00	 push	 OFFSET FLAT:$SG197712
  00cab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00cb1	89 45 94	 mov	 DWORD PTR tv288[ebp], eax
  00cb4	8d 55 e4	 lea	 edx, DWORD PTR _strSrc$[ebp]
  00cb7	52		 push	 edx
  00cb8	8d 45 f0	 lea	 eax, DWORD PTR _strArgs$[ebp]
  00cbb	50		 push	 eax
  00cbc	e8 00 00 00 00	 call	 ?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
  00cc1	83 c4 14	 add	 esp, 20			; 00000014H
  00cc4	89 45 90	 mov	 DWORD PTR tv289[ebp], eax
  00cc7	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 227  : 
; 228  : 	// Parse arguments
; 229  : 	CString strArg;

  00ccb	8d 4d e0	 lea	 ecx, DWORD PTR _strArg$[ebp]
  00cce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00cd4	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
$L197715:

; 230  : 	while(!(strArg = GetNextToken(strArgs,",")).IsEmpty())

  00cd8	6a 01		 push	 1
  00cda	6a 00		 push	 0
  00cdc	51		 push	 ecx
  00cdd	8b cc		 mov	 ecx, esp
  00cdf	89 65 bc	 mov	 DWORD PTR $T198508[ebp], esp
  00ce2	68 00 00 00 00	 push	 OFFSET FLAT:$SG197720
  00ce7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00ced	89 45 8c	 mov	 DWORD PTR tv295[ebp], eax
  00cf0	8d 4d f0	 lea	 ecx, DWORD PTR _strArgs$[ebp]
  00cf3	51		 push	 ecx
  00cf4	8d 55 b8	 lea	 edx, DWORD PTR $T198509[ebp]
  00cf7	52		 push	 edx
  00cf8	e8 00 00 00 00	 call	 ?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
  00cfd	83 c4 14	 add	 esp, 20			; 00000014H
  00d00	89 45 88	 mov	 DWORD PTR tv296[ebp], eax
  00d03	8b 45 88	 mov	 eax, DWORD PTR tv296[ebp]
  00d06	89 45 84	 mov	 DWORD PTR tv298[ebp], eax
  00d09	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00d0d	8b 4d 84	 mov	 ecx, DWORD PTR tv298[ebp]
  00d10	51		 push	 ecx
  00d11	8d 4d e0	 lea	 ecx, DWORD PTR _strArg$[ebp]
  00d14	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00d1a	8b c8		 mov	 ecx, eax
  00d1c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  00d22	0f b6 d0	 movzx	 edx, al
  00d25	f7 da		 neg	 edx
  00d27	1b d2		 sbb	 edx, edx
  00d29	42		 inc	 edx
  00d2a	88 55 c3	 mov	 BYTE PTR $T198507[ebp], dl
  00d2d	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00d31	8d 4d b8	 lea	 ecx, DWORD PTR $T198509[ebp]
  00d34	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00d3a	0f b6 45 c3	 movzx	 eax, BYTE PTR $T198507[ebp]
  00d3e	85 c0		 test	 eax, eax
  00d40	74 0e		 je	 SHORT $L197716

; 231  : 		args.Add(strArg);

  00d42	8d 4d e0	 lea	 ecx, DWORD PTR _strArg$[ebp]
  00d45	51		 push	 ecx
  00d46	8b 4d 10	 mov	 ecx, DWORD PTR _args$[ebp]
  00d49	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add
  00d4e	eb 88		 jmp	 SHORT $L197715
$L197716:

; 232  : 
; 233  : 	strAText= strSrc;

  00d50	8d 55 e4	 lea	 edx, DWORD PTR _strSrc$[ebp]
  00d53	52		 push	 edx
  00d54	8b 4d 0c	 mov	 ecx, DWORD PTR _strAText$[ebp]
  00d57	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z

; 234  : 	return strFunc;

  00d5d	8d 45 ec	 lea	 eax, DWORD PTR _strFunc$[ebp]
  00d60	50		 push	 eax
  00d61	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00d64	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00d6a	8b 4d b4	 mov	 ecx, DWORD PTR $T198517[ebp]
  00d6d	83 c9 01	 or	 ecx, 1
  00d70	89 4d b4	 mov	 DWORD PTR $T198517[ebp], ecx
  00d73	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00d77	8d 4d e0	 lea	 ecx, DWORD PTR _strArg$[ebp]
  00d7a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00d80	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00d84	8d 4d f0	 lea	 ecx, DWORD PTR _strArgs$[ebp]
  00d87	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00d8d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00d91	8d 4d ec	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00d94	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00d9a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00d9e	8d 4d e4	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  00da1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00da7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00dae	8d 4d e8	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  00db1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00db7	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L197680:

; 235  : }

  00dba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00dbd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00dc4	8b e5		 mov	 esp, ebp
  00dc6	5d		 pop	 ebp
  00dc7	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L198510:
  00135	8d 4d e8	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  00138	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198511:
  0013e	8d 4d e4	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  00141	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198513:
  00147	8d 4d d8	 lea	 ecx, DWORD PTR _strStart$197688[ebp]
  0014a	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198520:
  00150	8d 4d ec	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00153	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198522:
  00159	8d 4d f0	 lea	 ecx, DWORD PTR _strArgs$[ebp]
  0015c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198523:
  00162	8d 4d e0	 lea	 ecx, DWORD PTR _strArg$[ebp]
  00165	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L198525:
  0016b	8d 4d b8	 lea	 ecx, DWORD PTR $T198509[ebp]
  0016e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?ScanJScript@CWebPage@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV23@AAVCStringArray@@@Z:
  00174	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198527
  00179	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ScanJScript@CWebPage@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV23@AAVCStringArray@@@Z ENDP ; CWebPage::ScanJScript
EXTRN	__imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ:NEAR
EXTRN	__imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z:NEAR
EXTRN	__imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z:NEAR
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
xdata$x	SEGMENT
$T198538 DD	0ffffffffH
	DD	FLAT:$L198531
$T198536 DD	019930520H
	DD	01H
	DD	FLAT:$T198538
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
_TEXT	SEGMENT
$T198533 = -20						; size = 4
_strResult$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_psz1$ = 12						; size = 4
_str2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z PROC NEAR ; ATL::operator+, COMDAT

; 2032 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198533[ebp], 0

; 2033 : 		CStringT strResult( str2.GetManager() );

  00022	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ
  0002b	50		 push	 eax
  0002c	8d 4d f0	 lea	 ecx, DWORD PTR _strResult$[ebp]
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2034 : 
; 2035 : 		Concatenate( strResult, psz1, StringLength( psz1 ), str2, str2.GetLength() );

  0003c	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  00045	50		 push	 eax
  00046	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0004f	50		 push	 eax
  00050	8b 45 0c	 mov	 eax, DWORD PTR _psz1$[ebp]
  00053	50		 push	 eax
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z
  0005a	83 c4 04	 add	 esp, 4
  0005d	50		 push	 eax
  0005e	8b 4d 0c	 mov	 ecx, DWORD PTR _psz1$[ebp]
  00061	51		 push	 ecx
  00062	8d 55 f0	 lea	 edx, DWORD PTR _strResult$[ebp]
  00065	52		 push	 edx
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z
  0006c	83 c4 14	 add	 esp, 20			; 00000014H

; 2036 : 
; 2037 : 		return( strResult );

  0006f	8d 45 f0	 lea	 eax, DWORD PTR _strResult$[ebp]
  00072	50		 push	 eax
  00073	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0007c	8b 4d ec	 mov	 ecx, DWORD PTR $T198533[ebp]
  0007f	83 c9 01	 or	 ecx, 1
  00082	89 4d ec	 mov	 DWORD PTR $T198533[ebp], ecx
  00085	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008c	8d 4d f0	 lea	 ecx, DWORD PTR _strResult$[ebp]
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00095	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2038 : 	}

  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L198531:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _strResult$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198536
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ENDP ; ATL::operator+
EXTRN	__imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:NEAR
; Function compile flags: /Odt
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z PROC NEAR ; ATL::operator==, COMDAT

; 2087 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2088 : 		return( str1.Compare( psz2 ) == 0 );

  00003	8b 45 0c	 mov	 eax, DWORD PTR _psz2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _str1$[ebp]
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	40		 inc	 eax

; 2089 : 	}

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ENDP ; ATL::operator==
_TEXT	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	__imp__GetVersionExA@4:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -164				; size = 4
_ver$ = -160						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

  00011	c7 85 60 ff ff
	ff 94 00 00 00	 mov	 DWORD PTR _ver$[ebp], 148 ; 00000094H

; 139  : 	::GetVersionEx( &ver );

  0001b	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _ver$[ebp]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00028	83 bd 70 ff ff
	ff 02		 cmp	 DWORD PTR _ver$[ebp+16], 2
  0002f	75 15		 jne	 SHORT $L24173
  00031	83 bd 64 ff ff
	ff 05		 cmp	 DWORD PTR _ver$[ebp+4], 5
  00038	72 0c		 jb	 SHORT $L24173

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  0003a	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

  00044	eb 0a		 jmp	 SHORT $L24174
$L24173:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00046	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L24174:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  00050	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _pfnGetThreadACP$[ebp]
  00056	51		 push	 ecx
  00057	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  0005c	e8 00 00 00 00	 call	 ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  00061	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 152  : }

  00067	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00003	8b 45 0c	 mov	 eax, DWORD PTR _pNew$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8

; 93   : }

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$24161 = -24					; size = 4
_lcidThread$ = -20					; size = 4
_szACP$ = -16						; size = 7
__$ArrayPad$ = -8					; size = 4
_nACP$ = -4						; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	89 45 f8	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

  0000e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0
  0001b	89 45 ec	 mov	 DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  0001e	6a 07		 push	 7
  00020	8d 45 f0	 lea	 eax, DWORD PTR _szACP$[ebp]
  00023	50		 push	 eax
  00024	68 04 10 00 00	 push	 4100			; 00001004H
  00029	8b 4d ec	 mov	 ecx, DWORD PTR _lcidThread$[ebp]
  0002c	51		 push	 ecx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  00033	85 c0		 test	 eax, eax
  00035	74 34		 je	 SHORT $L24160

; 111  : 	{
; 112  : 		char* pch = szACP;

  00037	8d 55 f0	 lea	 edx, DWORD PTR _szACP$[ebp]
  0003a	89 55 e8	 mov	 DWORD PTR _pch$24161[ebp], edx
$L24163:

; 113  : 		while (*pch != '\0')

  0003d	8b 45 e8	 mov	 eax, DWORD PTR _pch$24161[ebp]
  00040	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00043	85 c9		 test	 ecx, ecx
  00045	74 24		 je	 SHORT $L24160

; 114  : 		{
; 115  : 			nACP *= 10;

  00047	8b 55 fc	 mov	 edx, DWORD PTR _nACP$[ebp]
  0004a	6b d2 0a	 imul	 edx, 10			; 0000000aH
  0004d	89 55 fc	 mov	 DWORD PTR _nACP$[ebp], edx

; 116  : 			nACP += *pch++ - '0';

  00050	8b 45 e8	 mov	 eax, DWORD PTR _pch$24161[ebp]
  00053	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00056	8b 55 fc	 mov	 edx, DWORD PTR _nACP$[ebp]
  00059	8d 44 0a d0	 lea	 eax, DWORD PTR [edx+ecx-48]
  0005d	89 45 fc	 mov	 DWORD PTR _nACP$[ebp], eax
  00060	8b 4d e8	 mov	 ecx, DWORD PTR _pch$24161[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	89 4d e8	 mov	 DWORD PTR _pch$24161[ebp], ecx

; 117  : 		}

  00069	eb d2		 jmp	 SHORT $L24163
$L24160:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  0006b	83 7d fc 00	 cmp	 DWORD PTR _nACP$[ebp], 0
  0006f	75 09		 jne	 SHORT $L24165

; 121  : 		nACP = ::GetACP();

  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  00077	89 45 fc	 mov	 DWORD PTR _nACP$[ebp], eax
$L24165:

; 122  : 
; 123  : 	return nACP;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _nACP$[ebp]

; 124  : }

  0007d	8b 4d f8	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00080	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  : 	return( CP_THREAD_ACP );

  00003	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z	; ATL::CComPtrBase<IHTMLDocument2>::CComPtrBase<IHTMLDocument2>
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNull$ = 8						; size = 4
??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z PROC NEAR	; ATL::CComPtr<IHTMLDocument2>::CComPtr<IHTMLDocument2>, COMDAT
; _this$ = ecx

; 253  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _nNull$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z ; ATL::CComPtrBase<IHTMLDocument2>::CComPtrBase<IHTMLDocument2>

; 254  : 	}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z ENDP	; ATL::CComPtr<IHTMLDocument2>::CComPtr<IHTMLDocument2>
_TEXT	ENDS
PUBLIC	?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign
; Function compile flags: /Odt
;	COMDAT ??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z PROC NEAR ; ATL::CComPtr<IHTMLDocument2>::operator=, COMDAT
; _this$ = ecx

; 291  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 292  : 		return static_cast<T*>(AtlComPtrAssign((IUnknown**)&p, lp));

  00007	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign

; 293  : 	}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z ENDP ; ATL::CComPtr<IHTMLDocument2>::operator=
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IHTMLDocument2>::~CComPtrBase<IHTMLDocument2>, COMDAT
; _this$ = ecx

; 126  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 10		 je	 SHORT $L197821

; 128  : 			p->Release();

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 11		 mov	 edx, DWORD PTR [ecx]
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 12		 mov	 edx, DWORD PTR [edx]
  0001b	51		 push	 ecx
  0001c	ff 52 08	 call	 DWORD PTR [edx+8]
$L197821:

; 129  : 	}

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IHTMLDocument2>::~CComPtrBase<IHTMLDocument2>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ PROC NEAR ; ATL::CComPtrBase<IHTMLDocument2>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);
; 144  : 		return &p;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 145  : 	}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ ENDP ; ATL::CComPtrBase<IHTMLDocument2>::operator&
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IHTMLDocument2>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);
; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 150  : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ ENDP ; ATL::CComPtrBase<IHTMLDocument2>::operator->
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z PROC NEAR ; ATL::CComPtrBase<IHTMLDocument2>::operator==, COMDAT
; _this$ = ecx

; 160  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 161  : 		return p == pT;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	2b 45 08	 sub	 eax, DWORD PTR _pT$[ebp]
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax

; 162  : 	}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z ENDP ; ATL::CComPtrBase<IHTMLDocument2>::operator==
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ PROC NEAR ; ATL::CComPtrBase<IHTMLElementCollection>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);
; 144  : 		return &p;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 145  : 	}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ ENDP ; ATL::CComPtrBase<IHTMLElementCollection>::operator&
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNull$ = 8						; size = 4
??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z PROC NEAR ; ATL::CComPtrBase<IHTMLDocument2>::CComPtrBase<IHTMLDocument2>, COMDAT
; _this$ = ecx

; 111  : 	CComPtrBase(int nNull) throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 112  : 	{
; 113  : 		ATLASSERT(nNull == 0);
; 114  : 		(void)nNull;
; 115  : 		p = NULL;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 116  : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z ENDP	; ATL::CComPtrBase<IHTMLDocument2>::CComPtrBase<IHTMLDocument2>
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxcoll.inl
_TEXT	ENDS
;	COMDAT ?GetSize@CStringArray@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSize@CStringArray@@QBEHXZ PROC NEAR			; CStringArray::GetSize, COMDAT
; _this$ = ecx

; 280  : 	{ return m_nSize; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetSize@CStringArray@@QBEHXZ ENDP			; CStringArray::GetSize
_TEXT	ENDS
EXTRN	?SetSize@CStringArray@@QAEXHH@Z:NEAR		; CStringArray::SetSize
; Function compile flags: /Odt
;	COMDAT ?RemoveAll@CStringArray@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RemoveAll@CStringArray@@QAEXXZ PROC NEAR		; CStringArray::RemoveAll, COMDAT
; _this$ = ecx

; 288  : 	{ SetSize(0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a ff		 push	 -1
  00009	6a 00		 push	 0
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?SetSize@CStringArray@@QAEXHH@Z ; CStringArray::SetSize
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?RemoveAll@CStringArray@@QAEXXZ ENDP			; CStringArray::RemoveAll
_TEXT	ENDS
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:NEAR	; AfxThrowInvalidArgException
; Function compile flags: /Odt
;	COMDAT ?GetAt@CStringArray@@QBEABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?GetAt@CStringArray@@QBEABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC NEAR ; CStringArray::GetAt, COMDAT
; _this$ = ecx

; 290  : 	{ ASSERT(nIndex >= 0 && nIndex < m_nSize);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  : 		if( nIndex < 0 || nIndex >= m_nSize )

  00007	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0000b	7c 0b		 jl	 SHORT $L32448
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00013	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00016	7c 05		 jl	 SHORT $L32447
$L32448:

; 292  : 			AfxThrowInvalidArgException();

  00018	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$L32447:

; 293  : 		return m_pData[nIndex]; }

  0001d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00020	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00026	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
$L198578:
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?GetAt@CStringArray@@QBEABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; CStringArray::GetAt
_TEXT	ENDS
EXTRN	?SetAtGrow@CStringArray@@QAEXHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CStringArray::SetAtGrow
; Function compile flags: /Odt
;	COMDAT ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nIndex$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC NEAR ; CStringArray::Add, COMDAT
; _this$ = ecx

; 322  : 	{ INT_PTR nIndex = m_nSize;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000f	89 4d fc	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 323  : 		SetAtGrow(nIndex, newElement);

  00012	8b 55 08	 mov	 edx, DWORD PTR _newElement$[ebp]
  00015	52		 push	 edx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?SetAtGrow@CStringArray@@QAEXHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::SetAtGrow

; 324  : 		return nIndex; }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CStringArray::Add
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_lp$ = 12						; size = 4
?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z PROC NEAR ; ATL::AtlComPtrAssign, COMDAT

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 46   : 	if (pp == NULL)

  00003	83 7d 08 00	 cmp	 DWORD PTR _pp$[ebp], 0
  00007	75 04		 jne	 SHORT $L88207

; 47   : 		return NULL;

  00009	33 c0		 xor	 eax, eax
  0000b	eb 35		 jmp	 SHORT $L88206
$L88207:

; 48   : 		
; 49   : 	if (lp != NULL)

  0000d	83 7d 0c 00	 cmp	 DWORD PTR _lp$[ebp], 0
  00011	74 0c		 je	 SHORT $L88208

; 50   : 		lp->AddRef();

  00013	8b 45 0c	 mov	 eax, DWORD PTR _lp$[ebp]
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	8b 55 0c	 mov	 edx, DWORD PTR _lp$[ebp]
  0001b	52		 push	 edx
  0001c	ff 51 04	 call	 DWORD PTR [ecx+4]
$L88208:

; 51   : 	if (*pp)

  0001f	8b 45 08	 mov	 eax, DWORD PTR _pp$[ebp]
  00022	83 38 00	 cmp	 DWORD PTR [eax], 0
  00025	74 10		 je	 SHORT $L88209

; 52   : 		(*pp)->Release();

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  0002a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002c	8b 45 08	 mov	 eax, DWORD PTR _pp$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	8b 12		 mov	 edx, DWORD PTR [edx]
  00033	51		 push	 ecx
  00034	ff 52 08	 call	 DWORD PTR [edx+8]
$L88209:

; 53   : 	*pp = lp;

  00037	8b 45 08	 mov	 eax, DWORD PTR _pp$[ebp]
  0003a	8b 4d 0c	 mov	 ecx, DWORD PTR _lp$[ebp]
  0003d	89 08		 mov	 DWORD PTR [eax], ecx

; 54   : 	return lp;

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _lp$[ebp]
$L88206:

; 55   : }

  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8
?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ENDP ; ATL::AtlComPtrAssign
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
; Function compile flags: /Odt
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>, COMDAT
; _this$ = ecx

; 311  : 	CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>

; 312  : 	{
; 313  : 	}

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
; Function compile flags: /Odt
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z PROC NEAR ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>, COMDAT
; _this$ = ecx

; 316  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>

; 317  : 	}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z ENDP ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
_TEXT	ENDS
EXTRN	__imp__SysFreeString@4:NEAR
; Function compile flags: /Odt
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComBSTR@ATL@@QAE@XZ PROC NEAR			; ATL::CComBSTR::~CComBSTR, COMDAT
; _this$ = ecx

; 628  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 629  : 		::SysFreeString(m_str);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4

; 630  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??1CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::~CComBSTR
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??ICComBSTR@ATL@@QAEPAPA_WXZ PROC NEAR			; ATL::CComBSTR::operator&, COMDAT
; _this$ = ecx

; 644  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 645  : 		return &m_str;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 646  : 	}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??ICComBSTR@ATL@@QAEPAPA_WXZ ENDP			; ATL::CComBSTR::operator&
_TEXT	ENDS
PUBLIC	?Copy@CComBSTR@ATL@@QBEPA_WXZ			; ATL::CComBSTR::Copy
; Function compile flags: /Odt
;	COMDAT ?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pbstr$ = 8						; size = 4
?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z PROC NEAR		; ATL::CComBSTR::CopyTo, COMDAT
; _this$ = ecx

; 654  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		ATLASSERT(pbstr != NULL);
; 656  : 		if (pbstr == NULL)

  00007	83 7d 08 00	 cmp	 DWORD PTR _pbstr$[ebp], 0
  0000b	75 07		 jne	 SHORT $L88867

; 657  : 			return E_POINTER;

  0000d	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  00012	eb 26		 jmp	 SHORT $L88865
$L88867:

; 658  : 		*pbstr = Copy();

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?Copy@CComBSTR@ATL@@QBEPA_WXZ ; ATL::CComBSTR::Copy
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _pbstr$[ebp]
  0001f	89 01		 mov	 DWORD PTR [ecx], eax

; 659  : 		if ((*pbstr == NULL) && (m_str != NULL))

  00021	8b 55 08	 mov	 edx, DWORD PTR _pbstr$[ebp]
  00024	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00027	75 0f		 jne	 SHORT $L88869
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002f	74 07		 je	 SHORT $L88869

; 660  : 			return E_OUTOFMEMORY;

  00031	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  00036	eb 02		 jmp	 SHORT $L88865
$L88869:

; 661  : 		return S_OK;

  00038	33 c0		 xor	 eax, eax
$L88865:

; 662  : 	}

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z ENDP			; ATL::CComBSTR::CopyTo
_TEXT	ENDS
EXTRN	__imp__SysStringByteLen@4:NEAR
EXTRN	__imp__SysAllocStringByteLen@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Copy@CComBSTR@ATL@@QBEPA_WXZ PROC NEAR			; ATL::CComBSTR::Copy, COMDAT
; _this$ = ecx

; 648  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 649  : 		if (m_str == NULL)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	75 04		 jne	 SHORT $L88862

; 650  : 			return NULL;

  0000f	33 c0		 xor	 eax, eax
  00011	eb 19		 jmp	 SHORT $L88861
$L88862:

; 651  : 		return ::SysAllocStringByteLen((char*)m_str, ::SysStringByteLen(m_str));

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysStringByteLen@4
  0001f	50		 push	 eax
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b 08		 mov	 ecx, DWORD PTR [eax]
  00025	51		 push	 ecx
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocStringByteLen@8
$L88861:

; 652  : 	}

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?Copy@CComBSTR@ATL@@QBEPA_WXZ ENDP			; ATL::CComBSTR::Copy
_TEXT	ENDS
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	?A2WBSTR@@YAPA_WPBDH@Z				; A2WBSTR
; Function compile flags: /Odt
;	COMDAT ??0CComBSTR@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
??0CComBSTR@ATL@@QAE@PBD@Z PROC NEAR			; ATL::CComBSTR::CComBSTR, COMDAT
; _this$ = ecx

; 978  : 	CComBSTR(LPCSTR pSrc)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 979  : 	{
; 980  : 		if (pSrc != NULL)

  00007	83 7d 08 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  0000b	74 27		 je	 SHORT $L89127

; 981  : 		{
; 982  : 			m_str = A2WBSTR(pSrc);

  0000d	6a ff		 push	 -1
  0000f	8b 45 08	 mov	 eax, DWORD PTR _pSrc$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?A2WBSTR@@YAPA_WPBDH@Z	; A2WBSTR
  00018	83 c4 08	 add	 esp, 8
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	89 01		 mov	 DWORD PTR [ecx], eax

; 983  : 			if (m_str == NULL)

  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00026	75 0a		 jne	 SHORT $L89128

; 984  : 				AtlThrow(E_OUTOFMEMORY);

  00028	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  0002d	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L89128:

; 985  : 		}
; 986  : 		else

  00032	eb 09		 jmp	 SHORT $L89126
$L89127:

; 987  : 			m_str = NULL;

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L89126:

; 988  : 	}

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$L198596:
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
??0CComBSTR@ATL@@QAE@PBD@Z ENDP				; ATL::CComBSTR::CComBSTR
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
PUBLIC	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
PUBLIC	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
EXTRN	__imp__MultiByteToWideChar@24:NEAR
EXTRN	__imp__SysAllocStringLen@8:NEAR
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
xdata$x	SEGMENT
$T198605 DD	0ffffffffH
	DD	FLAT:$L198601
$T198603 DD	019930520H
	DD	01H
	DD	FLAT:$T198605
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ?A2WBSTR@@YAPA_WPBDH@Z
_TEXT	SEGMENT
$T198600 = -56						; size = 4
$T198599 = -52						; size = 4
_nResult$24440 = -48					; size = 4
_str$ = -44						; size = 4
_nConvertedLen$ = -40					; size = 4
__AtlSafeAllocaManager$ = -36				; size = 4
__acp_ex$ = -28						; size = 4
_nAllocLen$ = -24					; size = 4
__$EHRec$ = -12						; size = 12
_lp$ = 8						; size = 4
_nLen$ = 12						; size = 4
?A2WBSTR@@YAPA_WPBDH@Z PROC NEAR			; A2WBSTR, COMDAT

; 775  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?A2WBSTR@@YAPA_WPBDH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 2c	 sub	 esp, 44			; 0000002cH

; 776  : 	if (lp == NULL || nLen == 0)

  0001b	83 7d 08 00	 cmp	 DWORD PTR _lp$[ebp], 0
  0001f	74 06		 je	 SHORT $L24413
  00021	83 7d 0c 00	 cmp	 DWORD PTR _nLen$[ebp], 0
  00025	75 07		 jne	 SHORT $L24412
$L24413:

; 777  : 		return NULL;

  00027	33 c0		 xor	 eax, eax
  00029	e9 c7 00 00 00	 jmp	 $L24411
$L24412:

; 778  : 	USES_CONVERSION_EX;

  0002e	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00033	89 45 e4	 mov	 DWORD PTR __acp_ex$[ebp], eax
  00036	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 779  : 	BSTR str = NULL;

  00045	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _str$[ebp], 0

; 780  : 	int nConvertedLen = MultiByteToWideChar(_acp_ex, 0, lp,
; 781  : 		nLen, NULL, NULL);

  0004c	6a 00		 push	 0
  0004e	6a 00		 push	 0
  00050	8b 45 0c	 mov	 eax, DWORD PTR _nLen$[ebp]
  00053	50		 push	 eax
  00054	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  00057	51		 push	 ecx
  00058	6a 00		 push	 0
  0005a	8b 55 e4	 mov	 edx, DWORD PTR __acp_ex$[ebp]
  0005d	52		 push	 edx
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  00064	89 45 d8	 mov	 DWORD PTR _nConvertedLen$[ebp], eax

; 782  : 	int nAllocLen = nConvertedLen;

  00067	8b 45 d8	 mov	 eax, DWORD PTR _nConvertedLen$[ebp]
  0006a	89 45 e8	 mov	 DWORD PTR _nAllocLen$[ebp], eax

; 783  : 	if (nLen == -1)

  0006d	83 7d 0c ff	 cmp	 DWORD PTR _nLen$[ebp], -1
  00071	75 09		 jne	 SHORT $L24438

; 784  : 		nAllocLen -= 1;  // Don't allocate terminating '\0'

  00073	8b 4d e8	 mov	 ecx, DWORD PTR _nAllocLen$[ebp]
  00076	83 e9 01	 sub	 ecx, 1
  00079	89 4d e8	 mov	 DWORD PTR _nAllocLen$[ebp], ecx
$L24438:

; 785  : 	str = ::SysAllocStringLen(NULL, nAllocLen);

  0007c	8b 55 e8	 mov	 edx, DWORD PTR _nAllocLen$[ebp]
  0007f	52		 push	 edx
  00080	6a 00		 push	 0
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocStringLen@8
  00088	89 45 d4	 mov	 DWORD PTR _str$[ebp], eax

; 786  : 
; 787  : 	if (str != NULL)

  0008b	83 7d d4 00	 cmp	 DWORD PTR _str$[ebp], 0
  0008f	74 4c		 je	 SHORT $L24439

; 788  : 	{
; 789  : 		int nResult;
; 790  : 		nResult = MultiByteToWideChar(_acp_ex, 0, lp, nLen, str, nConvertedLen);

  00091	8b 45 d8	 mov	 eax, DWORD PTR _nConvertedLen$[ebp]
  00094	50		 push	 eax
  00095	8b 4d d4	 mov	 ecx, DWORD PTR _str$[ebp]
  00098	51		 push	 ecx
  00099	8b 55 0c	 mov	 edx, DWORD PTR _nLen$[ebp]
  0009c	52		 push	 edx
  0009d	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  000a0	50		 push	 eax
  000a1	6a 00		 push	 0
  000a3	8b 4d e4	 mov	 ecx, DWORD PTR __acp_ex$[ebp]
  000a6	51		 push	 ecx
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  000ad	89 45 d0	 mov	 DWORD PTR _nResult$24440[ebp], eax

; 791  : 		ATLASSERT(nResult == nConvertedLen);
; 792  : 		if(nResult != nConvertedLen)

  000b0	8b 55 d0	 mov	 edx, DWORD PTR _nResult$24440[ebp]
  000b3	3b 55 d8	 cmp	 edx, DWORD PTR _nConvertedLen$[ebp]
  000b6	74 25		 je	 SHORT $L24439

; 793  : 		{
; 794  : 			SysFreeString(str);

  000b8	8b 45 d4	 mov	 eax, DWORD PTR _str$[ebp]
  000bb	50		 push	 eax
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4

; 795  : 			return NULL;

  000c2	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR $T198599[ebp], 0
  000c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d0	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  000d3	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  000d8	8b 45 cc	 mov	 eax, DWORD PTR $T198599[ebp]
  000db	eb 18		 jmp	 SHORT $L24411
$L24439:

; 796  : 		}
; 797  : 
; 798  : 	}
; 799  : 	return str;

  000dd	8b 4d d4	 mov	 ecx, DWORD PTR _str$[ebp]
  000e0	89 4d c8	 mov	 DWORD PTR $T198600[ebp], ecx
  000e3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ea	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  000ed	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  000f2	8b 45 c8	 mov	 eax, DWORD PTR $T198600[ebp]
$L24411:

; 800  : }

  000f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L198601:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?A2WBSTR@@YAPA_WPBDH@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198603
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?A2WBSTR@@YAPA_WPBDH@Z ENDP				; A2WBSTR
; Function compile flags: /Odt
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 158  : 	return( g_pfnGetThreadACP() );

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 159  : }

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
EXTRN	?AfxThrowMemoryException@@YGXXZ:NEAR		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:NEAR		; AfxThrowOleException
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )

  00003	81 7d 08 0e 00
	07 80		 cmp	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH
  0000a	75 05		 jne	 SHORT $L24681

; 65   : 	{
; 66   : 		AfxThrowMemoryException();

  0000c	e8 00 00 00 00	 call	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException
$L24681:

; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );

  00011	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?AfxThrowOleException@@YGXJ@Z ; AfxThrowOleException
$L198611:

; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );
; 74   : #endif
; 75   : };

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
EXTRN	__imp__VariantInit@4:NEAR
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComVariant@ATL@@QAE@XZ PROC NEAR			; ATL::CComVariant::CComVariant, COMDAT
; _this$ = ecx

; 1531 : 	CComVariant() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1532 : 	{
; 1533 : 		::VariantInit(this);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4

; 1534 : 	}

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??0CComVariant@ATL@@QAE@XZ ENDP				; ATL::CComVariant::CComVariant
_TEXT	ENDS
PUBLIC	?Clear@CComVariant@ATL@@QAEJXZ			; ATL::CComVariant::Clear
; Function compile flags: /Odt
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComVariant@ATL@@QAE@XZ PROC NEAR			; ATL::CComVariant::~CComVariant, COMDAT
; _this$ = ecx

; 1536 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1537 : 		Clear();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Clear@CComVariant@ATL@@QAEJXZ ; ATL::CComVariant::Clear

; 1538 : 	}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CComVariant@ATL@@QAE@XZ ENDP				; ATL::CComVariant::~CComVariant
_TEXT	ENDS
PUBLIC	?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z ; ATL::CComVariant::InternalCopy
; Function compile flags: /Odt
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_varSrc$ = 8						; size = 4
??4CComVariant@ATL@@QAEAAV01@ABV01@@Z PROC NEAR		; ATL::CComVariant::operator=, COMDAT
; _this$ = ecx

; 1684 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1685 : 		InternalCopy(&varSrc);

  00007	8b 45 08	 mov	 eax, DWORD PTR _varSrc$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z ; ATL::CComVariant::InternalCopy

; 1686 : 		return *this;

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 1687 : 	}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??4CComVariant@ATL@@QAEAAV01@ABV01@@Z ENDP		; ATL::CComVariant::operator=
_TEXT	ENDS
EXTRN	__imp__VariantClear@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CComVariant@ATL@@QAEJXZ PROC NEAR		; ATL::CComVariant::Clear, COMDAT
; _this$ = ecx

; 2095 : 	HRESULT Clear() { return ::VariantClear(this); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?Clear@CComVariant@ATL@@QAEJXZ ENDP			; ATL::CComVariant::Clear
_TEXT	ENDS
PUBLIC	?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z	; ATL::CComVariant::Copy
; Function compile flags: /Odt
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_hr$ = -4						; size = 4
_pSrc$ = 8						; size = 4
?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z PROC NEAR ; ATL::CComVariant::InternalCopy, COMDAT
; _this$ = ecx

; 2188 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2189 : 		HRESULT hr = Copy(pSrc);

  00009	8b 45 08	 mov	 eax, DWORD PTR _pSrc$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z ; ATL::CComVariant::Copy
  00015	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2190 : 		if (FAILED(hr))

  00018	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0001c	7d 11		 jge	 SHORT $L90016

; 2191 : 		{
; 2192 : 			vt = VT_ERROR;

  0001e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	66 c7 01 0a 00	 mov	 WORD PTR [ecx], 10	; 0000000aH

; 2193 : 			scode = hr;

  00026	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00029	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  0002c	89 42 08	 mov	 DWORD PTR [edx+8], eax
$L90016:

; 2194 : 		}
; 2195 : 	}

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z ENDP ; ATL::CComVariant::InternalCopy
_TEXT	ENDS
EXTRN	__imp__VariantCopy@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z PROC NEAR	; ATL::CComVariant::Copy, COMDAT
; _this$ = ecx

; 2096 : 	HRESULT Copy(const VARIANT* pSrc) { return ::VariantCopy(this, const_cast<VARIANT*>(pSrc)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _pSrc$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	51		 push	 ecx
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantCopy@8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z ENDP	; ATL::CComVariant::Copy
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
; Function compile flags: /Odt
;	COMDAT ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 373  : 	CAtlSafeAllocBufferManager() : m_pHead(NULL) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPAX@Z		; ATL::CCRTAllocator::Free
; Function compile flags: /Odt
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$191839 = -4						; size = 4
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 387  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$L191837:

; 388  : 		// Walk the list and free the buffers
; 389  : 		while (m_pHead != NULL)

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	74 22		 je	 SHORT $L191835

; 390  : 		{
; 391  : 			CAtlSafeAllocBufferNode* p = m_pHead;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	89 55 fc	 mov	 DWORD PTR _p$191839[ebp], edx

; 392  : 			m_pHead = m_pHead->m_pNext;

  00019	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00021	8b 01		 mov	 eax, DWORD PTR [ecx]
  00023	89 02		 mov	 DWORD PTR [edx], eax

; 393  : 			Allocator::Free(p);

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _p$191839[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  0002e	83 c4 04	 add	 esp, 4

; 394  : 		}

  00031	eb d6		 jmp	 SHORT $L191837
$L191835:

; 395  : 	}

  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
EXTRN	__imp__free:NEAR
; Function compile flags: /Odt
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC NEAR		; ATL::CCRTAllocator::Free, COMDAT

; 35   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 36   : 		free(p);

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0000d	83 c4 04	 add	 esp, 4

; 37   : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 110  : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z PROC NEAR ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>, COMDAT
; _this$ = ecx

; 117  : 	CComPtrBase(T* lp) throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 	{
; 119  : 		p = lp;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 120  : 		if (p != NULL)

  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00015	74 10		 je	 SHORT $L191942

; 121  : 			p->AddRef();

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	8b 02		 mov	 eax, DWORD PTR [edx]
  00021	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00023	50		 push	 eax
  00024	ff 51 04	 call	 DWORD PTR [ecx+4]
$L191942:

; 122  : 	}

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z ENDP ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>, COMDAT
; _this$ = ecx

; 126  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 10		 je	 SHORT $L191945

; 128  : 			p->Release();

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 11		 mov	 edx, DWORD PTR [ecx]
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 12		 mov	 edx, DWORD PTR [edx]
  0001b	51		 push	 ecx
  0001c	ff 52 08	 call	 DWORD PTR [edx+8]
$L191945:

; 129  : 	}

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ PROC NEAR ; ATL::CComPtrBase<IDispatch>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);
; 144  : 		return &p;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 145  : 	}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ ENDP ; ATL::CComPtrBase<IDispatch>::operator&
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IDispatch>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);
; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 150  : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ENDP ; ATL::CComPtrBase<IDispatch>::operator->
_TEXT	ENDS
END
