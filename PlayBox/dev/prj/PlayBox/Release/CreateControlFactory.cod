; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\LayoutMgr\CreateControlFactory.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_04JAADICNI@?5?$DN?1?$FL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@GJIJNDEK@ISO?98859?91?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02PGHGPEOM@?91?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LJDDIHIK@?4bmp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??0CMarkup@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMarkup@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddElem@CMarkup@@QAE_NPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddChildElem@CMarkup@@QAE_NPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAttrib@CMarkup@@QAE_NPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ElemPos@CMarkup@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@ElemPos@CMarkup@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@TokenPos@CMarkup@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?x_SetPos@CMarkup@@IAEXHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMarkup@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddElem@CMarkupArchive@@UAE_NPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddChildElem@CMarkupArchive@@UAE_NPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindElem@CMarkupArchive@@UAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindChildElem@CMarkupArchive@@UAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMarkupArchive@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1IData@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DataAppStart@IData@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DataAppExit@IData@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GIData@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiPlusBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@CGdiPlusBitmap@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Load@CGdiPlusBitmap@@QAE_NPB_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiPlusBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MYLIST_COLUMN_IMAGE@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1DIBINFO@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GDIBINFO@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiPlusBitmap@CSkinButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@CGdiPlusBitmap@CSkinButton@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Load@CGdiPlusBitmap@CSkinButton@@QAE_NPB_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiPlusBitmap@CSkinButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1HTTPObserver@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownStart@HTTPObserver@@UAEXPBD0I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownFinish@HTTPObserver@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownFailed@HTTPObserver@@UAEXPBDW4HTTP_DOWN_FAILED_REASON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownProgress@HTTPObserver@@UAEXPBDII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownloadPause@HTTPObserver@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GHTTPObserver@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1P2PObserver@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_DownStart@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_DownFinish@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_DownFailed@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4P2P_DOWN_FAILED_REASON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_DownProgress@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_DownPause@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_SigChange@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GP2PObserver@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSubPane@PaneBase@ETSLayoutMgr@@UAE?AVCPaneBase@2@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1PaneBase@ETSLayoutMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?showPane@PaneBase@ETSLayoutMgr@@UAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@CPaneBase@ETSLayoutMgr@@QAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRect@ETSLayoutMgr@@UAE?AVCRect@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateLayout@ETSLayoutMgr@@UAEXVCPane@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GPaneBase@ETSLayoutMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GETSLayoutMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@QAE@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABQAVCDibBitmap@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@QBE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@ABU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@SAABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??MATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAAU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CArray@UElemPos@CMarkup@@AAU12@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CArray@UElemPos@CMarkup@@AAU12@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CArray@UElemPos@CMarkup@@AAU12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CArray@MM@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CArray@MM@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CArray@MM@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CArray@UElemPos@CMarkup@@AAU12@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CArray@MM@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPaneBase@ETSLayoutMgr@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSize@?$CArray@UElemPos@CMarkup@@AAU12@@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$SerializeElements@UElemPos@CMarkup@@@@YGXAAVCArchive@@PAUElemPos@CMarkup@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSize@?$CArray@MM@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$SerializeElements@M@@YGXAAVCArchive@@PAMH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSize@?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$SerializeElements@VCPaneBase@ETSLayoutMgr@@@@YGXAAVCArchive@@PAVCPaneBase@ETSLayoutMgr@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAt@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAEXPBDVCPaneBase@ETSLayoutMgr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAssoc@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPair@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAEAAVCPaneBase@ETSLayoutMgr@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitHashTable@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAEXIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?NewAssoc@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@IAEPAVCAssoc@1@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAssocAt@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@IBEPAVCAssoc@1@PBDAAI1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAssoc@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPair@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@IAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$CompareElements@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@@YGHPBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBQBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3IData@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CMarkup@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3DIBINFO@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CGdiPlusBitmap@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CGdiPlusBitmap@CSkinButton@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$CArray@MM@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CMarkupArchive@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3P2PObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3HTTPObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$CArray@UElemPos@CMarkup@@AAU12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3PaneBase@ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2IData@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CMarkup@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2DIBINFO@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CGdiPlusBitmap@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CGdiPlusBitmap@CSkinButton@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$CArray@MM@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CMarkupArchive@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2P2PObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2HTTPObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$CArray@UElemPos@CMarkup@@AAU12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2PaneBase@ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IData@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@DIBINFO@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CGdiPlusBitmap@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CGdiPlusBitmap@CSkinButton@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$CArray@MM@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CMarkup@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CMarkupArchive@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@P2PObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@HTTPObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$CArray@UElemPos@CMarkup@@AAU12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@PaneBase@ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVIData@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVETSLayoutMgr@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVDIBINFO@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCGdiPlusBitmap@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCGdiPlusBitmap@CSkinButton@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$CArray@MM@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCMarkup@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCMarkupArchive@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVP2PObserver@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVHTTPObserver@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$CArray@UElemPos@CMarkup@@AAU12@@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVPaneBase@ETSLayoutMgr@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4IData@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4CMarkup@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4ETSLayoutMgr@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4DIBINFO@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4CGdiPlusBitmap@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4CGdiPlusBitmap@CSkinButton@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4?$CArray@MM@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4CMarkupArchive@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4P2PObserver@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4HTTPObserver@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$CArray@UElemPos@CMarkup@@AAU12@@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4PaneBase@ETSLayoutMgr@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?data@CPlex@@QAEPAXXZ
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
;	COMDAT ??_7?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CArray@MM@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsStoring@CArchive@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CArray@UElemPos@CMarkup@@AAU12@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@length_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@logic_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@exception@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R0?AVCxSkinButton@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCSkinButton2@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7ETSLayoutMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7PaneBase@ETSLayoutMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7P2PObserver@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7HTTPObserver@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CGdiPlusBitmap@CSkinButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7DIBINFO@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLastStatus@Image@Gdiplus@@QBE?AW4Status@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromFile@Bitmap@Gdiplus@@SAPAV12@PB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2GdiplusBase@Gdiplus@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3GdiplusBase@Gdiplus@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@Gdiplus@@QAE@PB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Image@Gdiplus@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7Image@Gdiplus@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4Image@Gdiplus@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVImage@Gdiplus@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3Image@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2Image@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@Image@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R13?0A@A@GdiplusBase@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVGdiplusBase@Gdiplus@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_GImage@Gdiplus@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clone@Image@Gdiplus@@UAEPAV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Image@Gdiplus@@IAE@PAVGpImage@1@W4Status@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Image@Gdiplus@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7Bitmap@Gdiplus@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4Bitmap@Gdiplus@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVBitmap@Gdiplus@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3Bitmap@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2Bitmap@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@Bitmap@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_GBitmap@Gdiplus@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Bitmap@Gdiplus@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetNativeImage@Image@Gdiplus@@IAEXPAVGpImage@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CGdiPlusBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IData@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMarkupArchive@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __tcschr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsnccmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMarkup@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
CONST	SEGMENT
$SG206774 DB	'type', 00H
	ORG $+3
$SG206776 DB	'BtnTree', 00H
$SG206782 DB	'type', 00H
	ORG $+3
$SG206784 DB	'list', 00H
	ORG $+3
$SG206791 DB	'static', 00H
	ORG $+1
$SG206792 DB	'type', 00H
	ORG $+3
$SG206803 DB	'background_color', 00H
	ORG $+3
$SG206806 DB	'text_color', 00H
	ORG $+1
$SG206809 DB	'single_line', 00H
$SG206812 DB	'under_line', 00H
	ORG $+1
$SG206816 DB	'enable_click', 00H
	ORG $+3
$SG206820 DB	'font_face', 00H
	ORG $+2
$SG206822 DB	'font_size', 00H
$SG206834 DB	00H
	ORG $+1
$SG206838 DB	'normal', 00H
	ORG $+1
$SG206844 DB	'down', 00H
	ORG $+3
$SG206850 DB	'over', 00H
	ORG $+3
$SG206858 DB	'disable', 00H
$SG206864 DB	'mask', 00H
	ORG $+3
$SG206878 DB	'tooltip', 00H
$SG206880 DB	00H
	ORG $+3
$SG206884 DB	'text', 00H
$SG206887 DB	00H
	ORG $+2
$SG206891 DB	'bmp', 00H
$SG206909 DB	'tooltip', 00H
$SG206912 DB	'dont_change_color', 00H
	ORG $+2
$SG206917 DB	'bmp', 00H
$SG206919 DB	00H
	ORG $+3
$SG206923 DB	'normal', 00H
	ORG $+1
$SG206927 DB	'normal', 00H
	ORG $+1
$SG206933 DB	'down', 00H
	ORG $+3
$SG206937 DB	'down', 00H
	ORG $+3
$SG206943 DB	'over', 00H
	ORG $+3
$SG206947 DB	'over', 00H
	ORG $+3
$SG206955 DB	'disable', 00H
$SG206959 DB	'disable', 00H
$SG206965 DB	'mask', 00H
	ORG $+3
$SG206969 DB	'mask', 00H
	ORG $+3
$SG206972 DB	'normal', 00H
	ORG $+1
$SG206975 DB	'over', 00H
	ORG $+3
$SG206978 DB	'down', 00H
	ORG $+3
$SG206981 DB	'disable', 00H
$SG206986 DB	'0', 00H
	ORG $+2
$SG206987 DB	'x_delta', 00H
$SG206988 DB	'%d', 00H
	ORG $+1
$SG206989 DB	'x_delta', 00H
$SG206993 DB	'0', 00H
	ORG $+2
$SG206994 DB	'y_delta', 00H
$SG206995 DB	'%d', 00H
	ORG $+1
$SG206996 DB	'y_delta', 00H
$SG207003 DB	00H
	ORG $+3
$SG207008 DB	'textcolor_normal', 00H
$SG207010 DB	00H
	ORG $+2
$SG207013 DB	'textcolor_over', 00H
$SG207015 DB	00H
$SG207020 DB	'textcolor_down', 00H
$SG207022 DB	00H
$SG207027 DB	'textcolor_disable', 00H
$SG207029 DB	00H
	ORG $+1
$SG207042 DB	'vert', 00H
	ORG $+3
$SG207045 DB	'horz', 00H
	ORG $+3
$SG207048 DB	'btn_down', 00H
	ORG $+3
$SG207051 DB	'btn_up', 00H
	ORG $+1
$SG207054 DB	'btn_right', 00H
	ORG $+2
$SG207057 DB	'btn_left', 00H
	ORG $+3
$SG207060 DB	'btn_down_over', 00H
	ORG $+2
$SG207063 DB	'btn_up_over', 00H
$SG207066 DB	'btn_right_over', 00H
	ORG $+1
$SG207069 DB	'btn_left_over', 00H
	ORG $+2
$SG207071 DB	'SpliterVertBK', 00H
	ORG $+2
$SG207072 DB	'SpliterHorzBK', 00H
	ORG $+2
$SG207073 DB	'SpliterBarDown', 00H
	ORG $+1
$SG207074 DB	'SpliterBarUp', 00H
	ORG $+3
$SG207075 DB	'SpliterBarRight', 00H
$SG207076 DB	'SpliterBarLeft', 00H
	ORG $+1
$SG207077 DB	'SpliterBarDownOver', 00H
	ORG $+1
$SG207078 DB	'SpliterBarUpOver', 00H
	ORG $+3
$SG207079 DB	'SpliterBarRightOver', 00H
$SG207080 DB	'SpliterBarLeftOver', 00H
	ORG $+1
$SG207083 DB	'hide-closebtn', 00H
	ORG $+2
$SG207085 DB	'1', 00H
	ORG $+2
$SG207100 DB	'btnbmp', 00H
	ORG $+1
$SG207104 DB	'normal', 00H
	ORG $+1
$SG207108 DB	'normal', 00H
	ORG $+1
$SG207113 DB	'down', 00H
	ORG $+3
$SG207117 DB	'down', 00H
	ORG $+3
$SG207122 DB	'over', 00H
	ORG $+3
$SG207126 DB	'over', 00H
	ORG $+3
$SG207131 DB	'nortext', 00H
$SG207134 DB	'selbk', 00H
	ORG $+2
$SG207137 DB	'seltext', 00H
$SG207140 DB	'bk', 00H
	ORG $+1
$SG207141 DB	'ScrollHorz', 00H
	ORG $+1
$SG207142 DB	'ScrollVert', 00H
	ORG $+1
$SG207152 DB	'0', 00H
	ORG $+2
$SG207155 DB	'0', 00H
	ORG $+2
$SG207158 DB	'0', 00H
	ORG $+2
$SG207162 DB	'%x', 00H
	ORG $+1
$SG207163 DB	'%x', 00H
	ORG $+1
$SG207164 DB	'%x', 00H
	ORG $+1
$SG207192 DB	'seltext', 00H
$SG207193 DB	'selbk', 00H
	ORG $+2
$SG207194 DB	'nortext', 00H
$SG207195 DB	'evenbk', 00H
	ORG $+1
$SG207196 DB	'oddbk', 00H
	ORG $+2
$SG207199 DB	'playbk', 00H
	ORG $+1
$SG207202 DB	'scrollH', 00H
$SG207204 DB	'ScrollHorz', 00H
	ORG $+1
$SG207207 DB	'scrollV', 00H
$SG207209 DB	'ScrollVert', 00H
	ORG $+1
$SG207220 DB	'nortext', 00H
$SG207223 DB	'selbk', 00H
	ORG $+2
$SG207226 DB	'seltext', 00H
$SG207229 DB	'bk', 00H
	ORG $+1
$SG207230 DB	'ScrollHorz', 00H
	ORG $+1
$SG207231 DB	'ScrollVert', 00H
CONST	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -164				; size = 4
_ver$ = -160						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

  00011	c7 85 60 ff ff
	ff 94 00 00 00	 mov	 DWORD PTR _ver$[ebp], 148 ; 00000094H

; 139  : 	::GetVersionEx( &ver );

  0001b	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _ver$[ebp]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00028	83 bd 70 ff ff
	ff 02		 cmp	 DWORD PTR _ver$[ebp+16], 2
  0002f	75 15		 jne	 SHORT $L24173
  00031	83 bd 64 ff ff
	ff 05		 cmp	 DWORD PTR _ver$[ebp+4], 5
  00038	72 0c		 jb	 SHORT $L24173

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  0003a	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

  00044	eb 0a		 jmp	 SHORT $L24174
$L24173:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00046	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L24174:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  00050	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _pfnGetThreadACP$[ebp]
  00056	51		 push	 ecx
  00057	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  0005c	e8 00 00 00 00	 call	 ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  00061	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 152  : }

  00067	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00003	8b 45 0c	 mov	 eax, DWORD PTR _pNew$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8

; 93   : }

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$24161 = -24					; size = 4
_lcidThread$ = -20					; size = 4
_szACP$ = -16						; size = 7
__$ArrayPad$ = -8					; size = 4
_nACP$ = -4						; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	89 45 f8	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

  0000e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0
  0001b	89 45 ec	 mov	 DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  0001e	6a 07		 push	 7
  00020	8d 45 f0	 lea	 eax, DWORD PTR _szACP$[ebp]
  00023	50		 push	 eax
  00024	68 04 10 00 00	 push	 4100			; 00001004H
  00029	8b 4d ec	 mov	 ecx, DWORD PTR _lcidThread$[ebp]
  0002c	51		 push	 ecx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  00033	85 c0		 test	 eax, eax
  00035	74 34		 je	 SHORT $L24160

; 111  : 	{
; 112  : 		char* pch = szACP;

  00037	8d 55 f0	 lea	 edx, DWORD PTR _szACP$[ebp]
  0003a	89 55 e8	 mov	 DWORD PTR _pch$24161[ebp], edx
$L24163:

; 113  : 		while (*pch != '\0')

  0003d	8b 45 e8	 mov	 eax, DWORD PTR _pch$24161[ebp]
  00040	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00043	85 c9		 test	 ecx, ecx
  00045	74 24		 je	 SHORT $L24160

; 114  : 		{
; 115  : 			nACP *= 10;

  00047	8b 55 fc	 mov	 edx, DWORD PTR _nACP$[ebp]
  0004a	6b d2 0a	 imul	 edx, 10			; 0000000aH
  0004d	89 55 fc	 mov	 DWORD PTR _nACP$[ebp], edx

; 116  : 			nACP += *pch++ - '0';

  00050	8b 45 e8	 mov	 eax, DWORD PTR _pch$24161[ebp]
  00053	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00056	8b 55 fc	 mov	 edx, DWORD PTR _nACP$[ebp]
  00059	8d 44 0a d0	 lea	 eax, DWORD PTR [edx+ecx-48]
  0005d	89 45 fc	 mov	 DWORD PTR _nACP$[ebp], eax
  00060	8b 4d e8	 mov	 ecx, DWORD PTR _pch$24161[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	89 4d e8	 mov	 DWORD PTR _pch$24161[ebp], ecx

; 117  : 		}

  00069	eb d2		 jmp	 SHORT $L24163
$L24160:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  0006b	83 7d fc 00	 cmp	 DWORD PTR _nACP$[ebp], 0
  0006f	75 09		 jne	 SHORT $L24165

; 121  : 		nACP = ::GetACP();

  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  00077	89 45 fc	 mov	 DWORD PTR _nACP$[ebp], eax
$L24165:

; 122  : 
; 123  : 	return nACP;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _nACP$[ebp]

; 124  : }

  0007d	8b 4d f8	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00080	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  : 	return( CP_THREAD_ACP );

  00003	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	??0CreateControlFactory@@QAE@XZ			; CreateControlFactory::CreateControlFactory
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\createcontrolfactory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CreateControlFactory@@QAE@XZ PROC NEAR		; CreateControlFactory::CreateControlFactory
; _this$ = ecx

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 14   : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CreateControlFactory@@QAE@XZ ENDP			; CreateControlFactory::CreateControlFactory
_TEXT	ENDS
PUBLIC	??1CreateControlFactory@@QAE@XZ			; CreateControlFactory::~CreateControlFactory
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CreateControlFactory@@QAE@XZ PROC NEAR		; CreateControlFactory::~CreateControlFactory
; _this$ = ecx

; 17   : {

  00010	55		 push	 ebp
  00011	8b ec		 mov	 ebp, esp
  00013	51		 push	 ecx
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 18   : }

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1CreateControlFactory@@QAE@XZ ENDP			; CreateControlFactory::~CreateControlFactory
_TEXT	ENDS
PUBLIC	?CreateControl@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateControl
PUBLIC	?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateStatic
PUBLIC	?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateButton
PUBLIC	?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateButton2
PUBLIC	?CreateTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateTree
PUBLIC	?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateBtnTree
PUBLIC	?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateList
PUBLIC	?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z ; CreateControlFactory::CreateSplitter
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
PUBLIC	?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
PUBLIC	??_R0?AVCSkinButton2@@@8			; CSkinButton2 `RTTI Type Descriptor'
PUBLIC	??_R0?AVCxSkinButton@@@8			; CxSkinButton `RTTI Type Descriptor'
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	___RTDynamicCast:NEAR
EXTRN	__imp__IsWindow@4:NEAR
EXTRN	?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z:NEAR ; CObject::IsKindOf
EXTRN	?GetThisClass@ETSSplitter@@SGPAUCRuntimeClass@@XZ:NEAR ; ETSSplitter::GetThisClass
EXTRN	?GetThisClass@CMyTreeCtrl@@SGPAUCRuntimeClass@@XZ:NEAR ; CMyTreeCtrl::GetThisClass
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?GetThisClass@CListCtrl@@SGPAUCRuntimeClass@@XZ:NEAR ; CListCtrl::GetThisClass
xdata$x	SEGMENT
$T209042 DD	0ffffffffH
	DD	FLAT:$L209033
	DD	0ffffffffH
	DD	FLAT:$L209034
$T209039 DD	019930520H
	DD	02H
	DD	FLAT:$T209042
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_R0?AVCSkinButton2@@@8
_DATA	SEGMENT
??_R0?AVCSkinButton2@@@8 DD FLAT:??_7type_info@@6B@	; CSkinButton2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSkinButton2@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
	ORG $-19
	DD	FLAT:??_7type_info@@6B@
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVCxSkinButton@@@8
_DATA	SEGMENT
??_R0?AVCxSkinButton@@@8 DD FLAT:??_7type_info@@6B@	; CxSkinButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCxSkinButton@@', 00H
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
tv191 = -32						; size = 4
$T209032 = -28						; size = 4
$T209031 = -21						; size = 1
_strType$206780 = -20					; size = 4
_strType$206772 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateControl@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateControl

; 21   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	6a ff		 push	 -1
  00025	68 00 00 00 00	 push	 __ehhandler$?CreateControl@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  0002a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00030	50		 push	 eax
  00031	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00038	83 ec 14	 sub	 esp, 20			; 00000014H

; 22   : 	if(!::IsWindow(pWnd->m_hWnd) || pSkin == NULL)

  0003b	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  0003e	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00041	51		 push	 ecx
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00048	85 c0		 test	 eax, eax
  0004a	74 06		 je	 SHORT $L206762
  0004c	83 7d 10 00	 cmp	 DWORD PTR _pSkin$[ebp], 0
  00050	75 05		 jne	 SHORT $L206761
$L206762:

; 23   : 		return;

  00052	e9 e4 01 00 00	 jmp	 $L206760
$L206761:

; 24   : 
; 25   : //	if( pWnd->IsKindOf(RUNTIME_CLASS(CxSkinButton)))
; 26   : 	if( dynamic_cast<CSkinButton2*>(pWnd) )

  00057	6a 00		 push	 0
  00059	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVCSkinButton2@@@8
  0005e	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVCWnd@@@8
  00063	6a 00		 push	 0
  00065	8b 55 08	 mov	 edx, DWORD PTR _pWnd$[ebp]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ___RTDynamicCast
  0006e	83 c4 14	 add	 esp, 20			; 00000014H
  00071	85 c0		 test	 eax, eax
  00073	74 1d		 je	 SHORT $L206765

; 27   : 	{
; 28   : 		CreateButton2( pWnd,pXml,pSkin,m_mgrPanes);

  00075	8b 45 14	 mov	 eax, DWORD PTR _m_mgrPanes$[ebp]
  00078	50		 push	 eax
  00079	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0007c	51		 push	 ecx
  0007d	8b 55 0c	 mov	 edx, DWORD PTR _pXml$[ebp]
  00080	52		 push	 edx
  00081	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateButton2
  0008a	83 c4 10	 add	 esp, 16			; 00000010H

; 29   : 	}else 

  0008d	e9 a9 01 00 00	 jmp	 $L206760
$L206765:

; 30   : 	if( dynamic_cast<CxSkinButton*>(pWnd) )

  00092	6a 00		 push	 0
  00094	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVCxSkinButton@@@8
  00099	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVCWnd@@@8
  0009e	6a 00		 push	 0
  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 ___RTDynamicCast
  000a9	83 c4 14	 add	 esp, 20			; 00000014H
  000ac	85 c0		 test	 eax, eax
  000ae	74 1d		 je	 SHORT $L206769

; 31   : 	{
; 32   : 		CreateButton( pWnd,pXml,pSkin,m_mgrPanes );

  000b0	8b 55 14	 mov	 edx, DWORD PTR _m_mgrPanes$[ebp]
  000b3	52		 push	 edx
  000b4	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  000b7	50		 push	 eax
  000b8	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  000bb	51		 push	 ecx
  000bc	8b 55 08	 mov	 edx, DWORD PTR _pWnd$[ebp]
  000bf	52		 push	 edx
  000c0	e8 00 00 00 00	 call	 ?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateButton
  000c5	83 c4 10	 add	 esp, 16			; 00000010H

; 33   : 	}else

  000c8	e9 6e 01 00 00	 jmp	 $L206760
$L206769:

; 34   : 	if( pWnd->IsKindOf( RUNTIME_CLASS(CMyTreeCtrl) ) )

  000cd	e8 00 00 00 00	 call	 ?GetThisClass@CMyTreeCtrl@@SGPAUCRuntimeClass@@XZ ; CMyTreeCtrl::GetThisClass
  000d2	50		 push	 eax
  000d3	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  000d6	e8 00 00 00 00	 call	 ?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z ; CObject::IsKindOf
  000db	85 c0		 test	 eax, eax
  000dd	74 77		 je	 SHORT $L206771

; 35   : 	{
; 36   : 		CString strType = pXml->GetAttrib("type");

  000df	68 00 00 00 00	 push	 OFFSET FLAT:$SG206774
  000e4	8d 45 f0	 lea	 eax, DWORD PTR _strType$206772[ebp]
  000e7	50		 push	 eax
  000e8	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  000eb	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  000f0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 37   : 
; 38   : 		if( strType == "BtnTree")

  000f7	68 00 00 00 00	 push	 OFFSET FLAT:$SG206776
  000fc	8d 4d f0	 lea	 ecx, DWORD PTR _strType$206772[ebp]
  000ff	51		 push	 ecx
  00100	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  00105	83 c4 08	 add	 esp, 8
  00108	0f b6 d0	 movzx	 edx, al
  0010b	85 d2		 test	 edx, edx
  0010d	74 1a		 je	 SHORT $L206775

; 39   : 		{
; 40   : 			CreateBtnTree( pWnd,pXml,pSkin,m_mgrPanes);

  0010f	8b 45 14	 mov	 eax, DWORD PTR _m_mgrPanes$[ebp]
  00112	50		 push	 eax
  00113	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00116	51		 push	 ecx
  00117	8b 55 0c	 mov	 edx, DWORD PTR _pXml$[ebp]
  0011a	52		 push	 edx
  0011b	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  0011e	50		 push	 eax
  0011f	e8 00 00 00 00	 call	 ?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateBtnTree
  00124	83 c4 10	 add	 esp, 16			; 00000010H

; 41   : 		}
; 42   : 		else

  00127	eb 18		 jmp	 SHORT $L206777
$L206775:

; 43   : 		{
; 44   : 			CreateTree( pWnd,pXml,pSkin,m_mgrPanes);

  00129	8b 4d 14	 mov	 ecx, DWORD PTR _m_mgrPanes$[ebp]
  0012c	51		 push	 ecx
  0012d	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00130	52		 push	 edx
  00131	8b 45 0c	 mov	 eax, DWORD PTR _pXml$[ebp]
  00134	50		 push	 eax
  00135	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00138	51		 push	 ecx
  00139	e8 00 00 00 00	 call	 ?CreateTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateTree
  0013e	83 c4 10	 add	 esp, 16			; 00000010H
$L206777:

; 45   : 		}
; 46   : 	}

  00141	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00148	8d 4d f0	 lea	 ecx, DWORD PTR _strType$206772[ebp]
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 47   : 	else if( pWnd->IsKindOf( RUNTIME_CLASS(CMyListCtrl)) ) 

  00151	e9 e5 00 00 00	 jmp	 $L206760
$L206771:
  00156	e8 00 00 00 00	 call	 ?GetThisClass@CListCtrl@@SGPAUCRuntimeClass@@XZ ; CListCtrl::GetThisClass
  0015b	50		 push	 eax
  0015c	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  0015f	e8 00 00 00 00	 call	 ?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z ; CObject::IsKindOf
  00164	85 c0		 test	 eax, eax
  00166	74 5a		 je	 SHORT $L206779

; 48   : 	{
; 49   : 		CString strType = pXml->GetAttrib("type");

  00168	68 00 00 00 00	 push	 OFFSET FLAT:$SG206782
  0016d	8d 55 ec	 lea	 edx, DWORD PTR _strType$206780[ebp]
  00170	52		 push	 edx
  00171	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00174	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00179	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 50   : 		if( strType == "list" )

  00180	68 00 00 00 00	 push	 OFFSET FLAT:$SG206784
  00185	8d 45 ec	 lea	 eax, DWORD PTR _strType$206780[ebp]
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  0018e	83 c4 08	 add	 esp, 8
  00191	0f b6 c8	 movzx	 ecx, al
  00194	85 c9		 test	 ecx, ecx
  00196	74 18		 je	 SHORT $L206783

; 51   : 		{
; 52   : 			CreateList( pWnd,pXml,pSkin,m_mgrPanes );

  00198	8b 55 14	 mov	 edx, DWORD PTR _m_mgrPanes$[ebp]
  0019b	52		 push	 edx
  0019c	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  0019f	50		 push	 eax
  001a0	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  001a3	51		 push	 ecx
  001a4	8b 55 08	 mov	 edx, DWORD PTR _pWnd$[ebp]
  001a7	52		 push	 edx
  001a8	e8 00 00 00 00	 call	 ?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateList
  001ad	83 c4 10	 add	 esp, 16			; 00000010H
$L206783:

; 53   : 		}
; 54   : 	}

  001b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001b7	8d 4d ec	 lea	 ecx, DWORD PTR _strType$206780[ebp]
  001ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 55   : 	else if(pWnd->IsKindOf(RUNTIME_CLASS(ETSSplitter) ) )

  001c0	eb 79		 jmp	 SHORT $L206760
$L206779:
  001c2	e8 00 00 00 00	 call	 ?GetThisClass@ETSSplitter@@SGPAUCRuntimeClass@@XZ ; ETSSplitter::GetThisClass
  001c7	50		 push	 eax
  001c8	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  001cb	e8 00 00 00 00	 call	 ?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z ; CObject::IsKindOf
  001d0	85 c0		 test	 eax, eax
  001d2	74 16		 je	 SHORT $L206786

; 56   : 	{
; 57   : 		//((ETSSplitter*)pWnd)->LoadSkin(pSkin);
; 58   : 		CreateSplitter(pWnd, pXml, pSkin);

  001d4	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  001d7	50		 push	 eax
  001d8	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  001db	51		 push	 ecx
  001dc	8b 55 08	 mov	 edx, DWORD PTR _pWnd$[ebp]
  001df	52		 push	 edx
  001e0	e8 00 00 00 00	 call	 ?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z ; CreateControlFactory::CreateSplitter
  001e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 59   : 	}
; 60   : 	else if (pXml->GetAttrib("type") == "static")

  001e8	eb 51		 jmp	 SHORT $L206760
$L206786:
  001ea	68 00 00 00 00	 push	 OFFSET FLAT:$SG206792
  001ef	8d 45 e4	 lea	 eax, DWORD PTR $T209032[ebp]
  001f2	50		 push	 eax
  001f3	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  001f6	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  001fb	89 45 e0	 mov	 DWORD PTR tv191[ebp], eax
  001fe	68 00 00 00 00	 push	 OFFSET FLAT:$SG206791
  00203	8b 4d e0	 mov	 ecx, DWORD PTR tv191[ebp]
  00206	51		 push	 ecx
  00207	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  0020c	83 c4 08	 add	 esp, 8
  0020f	88 45 eb	 mov	 BYTE PTR $T209031[ebp], al
  00212	8d 4d e4	 lea	 ecx, DWORD PTR $T209032[ebp]
  00215	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0021b	0f b6 55 eb	 movzx	 edx, BYTE PTR $T209031[ebp]
  0021f	85 d2		 test	 edx, edx
  00221	74 18		 je	 SHORT $L206760

; 61   : 	{
; 62   : 		CreateStatic(pWnd, pXml, pSkin,m_mgrPanes);

  00223	8b 45 14	 mov	 eax, DWORD PTR _m_mgrPanes$[ebp]
  00226	50		 push	 eax
  00227	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0022a	51		 push	 ecx
  0022b	8b 55 0c	 mov	 edx, DWORD PTR _pXml$[ebp]
  0022e	52		 push	 edx
  0022f	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  00232	50		 push	 eax
  00233	e8 00 00 00 00	 call	 ?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateStatic
  00238	83 c4 10	 add	 esp, 16			; 00000010H
$L206760:

; 63   : 	}
; 64   : }

  0023b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0023e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00245	8b e5		 mov	 esp, ebp
  00247	5d		 pop	 ebp
  00248	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L209033:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _strType$206772[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209034:
  00009	8d 4d ec	 lea	 ecx, DWORD PTR _strType$206780[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?CreateControl@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209039
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateControl@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateControl
EXTRN	?x_GetAttrib@CMarkup@@IBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@HPBD@Z:NEAR ; CMarkup::x_GetAttrib
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\util\markup.h
;	COMDAT ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T209046 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_szAttrib$ = 12						; size = 4
?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z PROC NEAR ; CMarkup::GetAttrib, COMDAT
; _this$ = ecx

; 58   : 	CString GetAttrib( LPCTSTR szAttrib ) const { return x_GetAttrib(m_iPos,szAttrib); };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T209046[ebp], 0
  00010	8b 45 0c	 mov	 eax, DWORD PTR _szAttrib$[ebp]
  00013	50		 push	 eax
  00014	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0001a	52		 push	 edx
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	50		 push	 eax
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?x_GetAttrib@CMarkup@@IBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@HPBD@Z ; CMarkup::x_GetAttrib
  00027	8b 4d fc	 mov	 ecx, DWORD PTR $T209046[ebp]
  0002a	83 c9 01	 or	 ecx, 1
  0002d	89 4d fc	 mov	 DWORD PTR $T209046[ebp], ecx
  00030	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ENDP ; CMarkup::GetAttrib
_TEXT	ENDS
PUBLIC	?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:NEAR
EXTRN	__imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ:NEAR
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:NEAR
EXTRN	?SetTextColor@CxStaticText@@QAEKK@Z:NEAR	; CxStaticText::SetTextColor
EXTRN	?SetBackgroundColor@CxStaticText@@QAEKK@Z:NEAR	; CxStaticText::SetBackgroundColor
EXTRN	?SetSingleLine@CxStaticText@@QAEX_N@Z:NEAR	; CxStaticText::SetSingleLine
EXTRN	?SetUnderLine@CxStaticText@@QAEX_N@Z:NEAR	; CxStaticText::SetUnderLine
EXTRN	?SetFontFace@CxStaticText@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CxStaticText::SetFontFace
EXTRN	?SetFontSize@CxStaticText@@QAEXI@Z:NEAR		; CxStaticText::SetFontSize
EXTRN	?EnableClick@CxStaticText@@QAEX_N@Z:NEAR	; CxStaticText::EnableClick
EXTRN	__imp__atoi:NEAR
xdata$x	SEGMENT
$T209066 DD	0ffffffffH
	DD	FLAT:$L209058
	DD	0ffffffffH
	DD	FLAT:$L209059
	DD	01H
	DD	FLAT:$L209060
	DD	01H
	DD	FLAT:$L209061
	DD	01H
	DD	FLAT:$L209062
$T209064 DD	019930520H
	DD	05H
	DD	FLAT:$T209066
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\createcontrolfactory.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv227 = -92						; size = 4
tv230 = -88						; size = 4
tv225 = -84						; size = 4
tv229 = -80						; size = 4
tv223 = -76						; size = 4
tv149 = -72						; size = 4
tv220 = -68						; size = 4
tv228 = -64						; size = 4
tv218 = -60						; size = 4
tv217 = -56						; size = 4
tv214 = -52						; size = 4
tv213 = -48						; size = 4
$T209055 = -44						; size = 4
$T209054 = -40						; size = 4
$T209053 = -36						; size = 4
$T209052 = -32						; size = 4
$T209051 = -28						; size = 4
$T209050 = -24						; size = 4
_pStatic$ = -20						; size = 4
_strTemp$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateStatic

; 67   : {

  00250	55		 push	 ebp
  00251	8b ec		 mov	 ebp, esp
  00253	6a ff		 push	 -1
  00255	68 00 00 00 00	 push	 __ehhandler$?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  0025a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00260	50		 push	 eax
  00261	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00268	83 ec 50	 sub	 esp, 80			; 00000050H

; 68   : 	CxStaticText *pStatic = (CxStaticText*) pWnd;

  0026b	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  0026e	89 45 ec	 mov	 DWORD PTR _pStatic$[ebp], eax

; 69   : 
; 70   : 	//int top = atoi(pXml->GetAttrib("start_y_top"));
; 71   : 	//int left = atoi(pXml->GetAttrib("start_x_left"));
; 72   : 	//int width = atoi(pXml->GetAttrib("x_delta"));
; 73   : 	//int height = atoi(pXml->GetAttrib("y_delta"));
; 74   : 
; 75   : 	//pStatic->MoveWindow(left,top,width,height);
; 76   : 	//
; 77   : 	pStatic->SetBackgroundColor(StringToRGB(pXml->GetAttrib("background_color")));

  00271	6a 01		 push	 1
  00273	51		 push	 ecx
  00274	8b cc		 mov	 ecx, esp
  00276	89 65 e8	 mov	 DWORD PTR $T209050[ebp], esp
  00279	68 00 00 00 00	 push	 OFFSET FLAT:$SG206803
  0027e	51		 push	 ecx
  0027f	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00282	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00287	89 45 d0	 mov	 DWORD PTR tv213[ebp], eax
  0028a	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  0028f	83 c4 08	 add	 esp, 8
  00292	89 45 cc	 mov	 DWORD PTR tv214[ebp], eax
  00295	8b 55 cc	 mov	 edx, DWORD PTR tv214[ebp]
  00298	52		 push	 edx
  00299	8b 4d ec	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  0029c	e8 00 00 00 00	 call	 ?SetBackgroundColor@CxStaticText@@QAEKK@Z ; CxStaticText::SetBackgroundColor

; 78   : 
; 79   : 	//if(pStatic->IsEnableClick())
; 80   : 		pStatic->SetTextColor(StringToRGB( pXml->GetAttrib("text_color")));

  002a1	6a 01		 push	 1
  002a3	51		 push	 ecx
  002a4	8b c4		 mov	 eax, esp
  002a6	89 65 e4	 mov	 DWORD PTR $T209051[ebp], esp
  002a9	68 00 00 00 00	 push	 OFFSET FLAT:$SG206806
  002ae	50		 push	 eax
  002af	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  002b2	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  002b7	89 45 c8	 mov	 DWORD PTR tv217[ebp], eax
  002ba	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  002bf	83 c4 08	 add	 esp, 8
  002c2	89 45 c4	 mov	 DWORD PTR tv218[ebp], eax
  002c5	8b 4d c4	 mov	 ecx, DWORD PTR tv218[ebp]
  002c8	51		 push	 ecx
  002c9	8b 4d ec	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  002cc	e8 00 00 00 00	 call	 ?SetTextColor@CxStaticText@@QAEKK@Z ; CxStaticText::SetTextColor

; 81   : 
; 82   : 	pStatic->SetSingleLine((bool)(atoi(pXml->GetAttrib("single_line"))));

  002d1	68 00 00 00 00	 push	 OFFSET FLAT:$SG206809
  002d6	8d 55 e0	 lea	 edx, DWORD PTR $T209052[ebp]
  002d9	52		 push	 edx
  002da	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  002dd	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  002e2	89 45 c0	 mov	 DWORD PTR tv228[ebp], eax
  002e5	8b 45 c0	 mov	 eax, DWORD PTR tv228[ebp]
  002e8	89 45 bc	 mov	 DWORD PTR tv220[ebp], eax
  002eb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  002f2	8b 4d bc	 mov	 ecx, DWORD PTR tv220[ebp]
  002f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  002fb	50		 push	 eax
  002fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00302	83 c4 04	 add	 esp, 4
  00305	85 c0		 test	 eax, eax
  00307	0f 95 c1	 setne	 cl
  0030a	51		 push	 ecx
  0030b	8b 4d ec	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  0030e	e8 00 00 00 00	 call	 ?SetSingleLine@CxStaticText@@QAEX_N@Z ; CxStaticText::SetSingleLine
  00313	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0031a	8d 4d e0	 lea	 ecx, DWORD PTR $T209052[ebp]
  0031d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 83   : 	CString strTemp = pXml->GetAttrib("under_line");

  00323	68 00 00 00 00	 push	 OFFSET FLAT:$SG206812
  00328	8d 55 f0	 lea	 edx, DWORD PTR _strTemp$[ebp]
  0032b	52		 push	 edx
  0032c	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0032f	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00334	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 84   : 	if(!strTemp.IsEmpty())

  0033b	8d 4d f0	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  0033e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  00344	0f b6 c0	 movzx	 eax, al
  00347	85 c0		 test	 eax, eax
  00349	75 21		 jne	 SHORT $L206813

; 85   : 		pStatic->SetUnderLine((bool)(atoi(strTemp)));

  0034b	8d 4d f0	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  0034e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00354	50		 push	 eax
  00355	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0035b	83 c4 04	 add	 esp, 4
  0035e	85 c0		 test	 eax, eax
  00360	0f 95 c1	 setne	 cl
  00363	51		 push	 ecx
  00364	8b 4d ec	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  00367	e8 00 00 00 00	 call	 ?SetUnderLine@CxStaticText@@QAEX_N@Z ; CxStaticText::SetUnderLine
$L206813:

; 86   : 	strTemp = pXml->GetAttrib("enable_click");

  0036c	68 00 00 00 00	 push	 OFFSET FLAT:$SG206816
  00371	8d 55 dc	 lea	 edx, DWORD PTR $T209053[ebp]
  00374	52		 push	 edx
  00375	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00378	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  0037d	89 45 b8	 mov	 DWORD PTR tv149[ebp], eax
  00380	8b 45 b8	 mov	 eax, DWORD PTR tv149[ebp]
  00383	89 45 b4	 mov	 DWORD PTR tv223[ebp], eax
  00386	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0038a	8b 4d b4	 mov	 ecx, DWORD PTR tv223[ebp]
  0038d	51		 push	 ecx
  0038e	8d 4d f0	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  00391	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00397	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0039b	8d 4d dc	 lea	 ecx, DWORD PTR $T209053[ebp]
  0039e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 87   : 	if(!strTemp.IsEmpty() && !m_mgrPanes->IsChangeColor())

  003a4	8d 4d f0	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  003a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  003ad	0f b6 d0	 movzx	 edx, al
  003b0	85 d2		 test	 edx, edx
  003b2	75 36		 jne	 SHORT $L206817
  003b4	8b 45 14	 mov	 eax, DWORD PTR _m_mgrPanes$[ebp]
  003b7	8b 10		 mov	 edx, DWORD PTR [eax]
  003b9	8b 4d 14	 mov	 ecx, DWORD PTR _m_mgrPanes$[ebp]
  003bc	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]
  003c2	0f b6 c0	 movzx	 eax, al
  003c5	85 c0		 test	 eax, eax
  003c7	75 21		 jne	 SHORT $L206817

; 88   : 		pStatic->EnableClick((bool)(atoi(strTemp)));

  003c9	8d 4d f0	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  003cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  003d2	50		 push	 eax
  003d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  003d9	83 c4 04	 add	 esp, 4
  003dc	85 c0		 test	 eax, eax
  003de	0f 95 c1	 setne	 cl
  003e1	51		 push	 ecx
  003e2	8b 4d ec	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  003e5	e8 00 00 00 00	 call	 ?EnableClick@CxStaticText@@QAEX_N@Z ; CxStaticText::EnableClick
$L206817:

; 89   : 
; 90   : 	pStatic->SetFontFace(pXml->GetAttrib("font_face"));

  003ea	68 00 00 00 00	 push	 OFFSET FLAT:$SG206820
  003ef	8d 55 d8	 lea	 edx, DWORD PTR $T209054[ebp]
  003f2	52		 push	 edx
  003f3	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  003f6	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  003fb	89 45 b0	 mov	 DWORD PTR tv229[ebp], eax
  003fe	8b 45 b0	 mov	 eax, DWORD PTR tv229[ebp]
  00401	89 45 ac	 mov	 DWORD PTR tv225[ebp], eax
  00404	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00408	8b 4d ac	 mov	 ecx, DWORD PTR tv225[ebp]
  0040b	51		 push	 ecx
  0040c	8b 4d ec	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  0040f	e8 00 00 00 00	 call	 ?SetFontFace@CxStaticText@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CxStaticText::SetFontFace
  00414	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00418	8d 4d d8	 lea	 ecx, DWORD PTR $T209054[ebp]
  0041b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 91   : 	pStatic->SetFontSize(atoi(pXml->GetAttrib("font_size")));

  00421	68 00 00 00 00	 push	 OFFSET FLAT:$SG206822
  00426	8d 55 d4	 lea	 edx, DWORD PTR $T209055[ebp]
  00429	52		 push	 edx
  0042a	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0042d	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00432	89 45 a8	 mov	 DWORD PTR tv230[ebp], eax
  00435	8b 45 a8	 mov	 eax, DWORD PTR tv230[ebp]
  00438	89 45 a4	 mov	 DWORD PTR tv227[ebp], eax
  0043b	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0043f	8b 4d a4	 mov	 ecx, DWORD PTR tv227[ebp]
  00442	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00448	50		 push	 eax
  00449	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0044f	83 c4 04	 add	 esp, 4
  00452	50		 push	 eax
  00453	8b 4d ec	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  00456	e8 00 00 00 00	 call	 ?SetFontSize@CxStaticText@@QAEXI@Z ; CxStaticText::SetFontSize
  0045b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0045f	8d 4d d4	 lea	 ecx, DWORD PTR $T209055[ebp]
  00462	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 92   : 
; 93   : }

  00468	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0046f	8d 4d f0	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  00472	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00478	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0047b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00482	8b e5		 mov	 esp, ebp
  00484	5d		 pop	 ebp
  00485	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L209058:
  0001c	8d 4d e0	 lea	 ecx, DWORD PTR $T209052[ebp]
  0001f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209059:
  00025	8d 4d f0	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  00028	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209060:
  0002e	8d 4d dc	 lea	 ecx, DWORD PTR $T209053[ebp]
  00031	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209061:
  00037	8d 4d d8	 lea	 ecx, DWORD PTR $T209054[ebp]
  0003a	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209062:
  00040	8d 4d d4	 lea	 ecx, DWORD PTR $T209055[ebp]
  00043	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  00049	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209064
  0004e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateStatic
PUBLIC	?SetButtonSkin@CreateControlFactory@@SAXPAVCxSkinButton@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVISkinMgr@@@Z ; CreateControlFactory::SetButtonSkin
PUBLIC	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
EXTRN	?SetSkin@CxSkinButton@@QAEXPAVCDibBitmap@@00000FFF_N@Z:NEAR ; CxSkinButton::SetSkin
xdata$x	SEGMENT
$T209087 DD	0ffffffffH
	DD	FLAT:$L209078
	DD	00H
	DD	FLAT:$L209079
	DD	00H
	DD	FLAT:$L209080
	DD	00H
	DD	FLAT:$L209081
	DD	00H
	DD	FLAT:$L209082
	DD	00H
	DD	FLAT:$L209083
$T209085 DD	019930520H
	DD	06H
	DD	FLAT:$T209087
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv251 = -112						; size = 4
tv257 = -108						; size = 4
tv249 = -104						; size = 4
tv256 = -100						; size = 4
tv247 = -96						; size = 4
tv255 = -92						; size = 4
tv245 = -88						; size = 4
tv254 = -84						; size = 4
tv242 = -80						; size = 4
tv253 = -76						; size = 4
$T209077 = -72						; size = 4
$T209076 = -65						; size = 1
$T209075 = -64						; size = 4
$T209074 = -57						; size = 1
$T209073 = -56						; size = 4
$T209072 = -49						; size = 1
$T209071 = -48						; size = 4
$T209070 = -41						; size = 1
$T209069 = -40						; size = 4
$T209068 = -33						; size = 1
_pDibDisable$ = -32					; size = 4
_pDibOver$ = -28					; size = 4
_pDibNormal$ = -24					; size = 4
_pDibMask$ = -20					; size = 4
_pDibDown$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pBtn$ = 8						; size = 4
_name$ = 12						; size = 4
_pSkin$ = 16						; size = 4
?SetButtonSkin@CreateControlFactory@@SAXPAVCxSkinButton@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVISkinMgr@@@Z PROC NEAR ; CreateControlFactory::SetButtonSkin

; 95   : {

  00490	55		 push	 ebp
  00491	8b ec		 mov	 ebp, esp
  00493	6a ff		 push	 -1
  00495	68 00 00 00 00	 push	 __ehhandler$?SetButtonSkin@CreateControlFactory@@SAXPAVCxSkinButton@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVISkinMgr@@@Z
  0049a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  004a0	50		 push	 eax
  004a1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  004a8	83 ec 64	 sub	 esp, 100		; 00000064H
  004ab	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 96   : 	CDibBitmap *pDibNormal, *pDibDown, *pDibOver, *pDibDisable, *pDibMask;
; 97   : 
; 98   : 	if(name == "")

  004b2	68 00 00 00 00	 push	 OFFSET FLAT:$SG206834
  004b7	8d 45 0c	 lea	 eax, DWORD PTR _name$[ebp]
  004ba	50		 push	 eax
  004bb	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  004c0	83 c4 08	 add	 esp, 8
  004c3	0f b6 c8	 movzx	 ecx, al
  004c6	85 c9		 test	 ecx, ecx
  004c8	74 15		 je	 SHORT $L206833

; 99   : 		return;

  004ca	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004d1	8d 4d 0c	 lea	 ecx, DWORD PTR _name$[ebp]
  004d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  004da	e9 a1 02 00 00	 jmp	 $L206827
$L206833:

; 100  : 	if((pDibNormal = pSkin->GetDibBmp(name + "normal")) == NULL)

  004df	68 00 00 00 00	 push	 OFFSET FLAT:$SG206838
  004e4	8d 55 0c	 lea	 edx, DWORD PTR _name$[ebp]
  004e7	52		 push	 edx
  004e8	8d 45 d8	 lea	 eax, DWORD PTR $T209069[ebp]
  004eb	50		 push	 eax
  004ec	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  004f1	83 c4 0c	 add	 esp, 12			; 0000000cH
  004f4	89 45 b4	 mov	 DWORD PTR tv253[ebp], eax
  004f7	8b 4d b4	 mov	 ecx, DWORD PTR tv253[ebp]
  004fa	89 4d b0	 mov	 DWORD PTR tv242[ebp], ecx
  004fd	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00501	8b 4d b0	 mov	 ecx, DWORD PTR tv242[ebp]
  00504	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0050a	50		 push	 eax
  0050b	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  0050e	8b 02		 mov	 eax, DWORD PTR [edx]
  00510	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00513	ff 50 04	 call	 DWORD PTR [eax+4]
  00516	89 45 e8	 mov	 DWORD PTR _pDibNormal$[ebp], eax
  00519	33 c9		 xor	 ecx, ecx
  0051b	83 7d e8 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  0051f	0f 94 c1	 sete	 cl
  00522	88 4d df	 mov	 BYTE PTR $T209068[ebp], cl
  00525	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00529	8d 4d d8	 lea	 ecx, DWORD PTR $T209069[ebp]
  0052c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 101  : 		;//pDibNormal = pSkin->PutDibBmp(name + "normal", pSkin->m_strSkinPath);
; 102  : 
; 103  : 	if(pDibNormal == NULL || !pDibNormal->is_Loaded)

  00532	83 7d e8 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  00536	74 0b		 je	 SHORT $L206840
  00538	8b 45 e8	 mov	 eax, DWORD PTR _pDibNormal$[ebp]
  0053b	0f b6 48 5c	 movzx	 ecx, BYTE PTR [eax+92]
  0053f	85 c9		 test	 ecx, ecx
  00541	75 15		 jne	 SHORT $L206839
$L206840:

; 104  : 		return;

  00543	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0054a	8d 4d 0c	 lea	 ecx, DWORD PTR _name$[ebp]
  0054d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00553	e9 28 02 00 00	 jmp	 $L206827
$L206839:

; 105  : 
; 106  : 	if((pDibDown = pSkin->GetDibBmp(name + "down", false)) == NULL){

  00558	68 00 00 00 00	 push	 OFFSET FLAT:$SG206844
  0055d	8d 55 0c	 lea	 edx, DWORD PTR _name$[ebp]
  00560	52		 push	 edx
  00561	8d 45 d0	 lea	 eax, DWORD PTR $T209071[ebp]
  00564	50		 push	 eax
  00565	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  0056a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0056d	89 45 ac	 mov	 DWORD PTR tv254[ebp], eax
  00570	8b 4d ac	 mov	 ecx, DWORD PTR tv254[ebp]
  00573	89 4d a8	 mov	 DWORD PTR tv245[ebp], ecx
  00576	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0057a	6a 00		 push	 0
  0057c	8b 4d a8	 mov	 ecx, DWORD PTR tv245[ebp]
  0057f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00585	50		 push	 eax
  00586	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00589	8b 02		 mov	 eax, DWORD PTR [edx]
  0058b	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0058e	ff 10		 call	 DWORD PTR [eax]
  00590	89 45 f0	 mov	 DWORD PTR _pDibDown$[ebp], eax
  00593	33 c9		 xor	 ecx, ecx
  00595	83 7d f0 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  00599	0f 94 c1	 sete	 cl
  0059c	88 4d d7	 mov	 BYTE PTR $T209070[ebp], cl
  0059f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  005a3	8d 4d d0	 lea	 ecx, DWORD PTR $T209071[ebp]
  005a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  005ac	0f b6 55 d7	 movzx	 edx, BYTE PTR $T209070[ebp]
  005b0	85 d2		 test	 edx, edx
  005b2	74 17		 je	 SHORT $L206842

; 107  : 		;//pDibDown = pSkin->PutDibBmp(name + "down", pSkin->m_strSkinPath);
; 108  : 		if(pDibDown == NULL || !pDibDown->is_Loaded)

  005b4	83 7d f0 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  005b8	74 0b		 je	 SHORT $L206846
  005ba	8b 45 f0	 mov	 eax, DWORD PTR _pDibDown$[ebp]
  005bd	0f b6 48 5c	 movzx	 ecx, BYTE PTR [eax+92]
  005c1	85 c9		 test	 ecx, ecx
  005c3	75 06		 jne	 SHORT $L206842
$L206846:

; 109  : 			pDibDown = pDibNormal;

  005c5	8b 55 e8	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  005c8	89 55 f0	 mov	 DWORD PTR _pDibDown$[ebp], edx
$L206842:

; 110  : 	}
; 111  : 
; 112  : 	if((pDibOver = pSkin->GetDibBmp(name + "over", false)) == NULL){

  005cb	68 00 00 00 00	 push	 OFFSET FLAT:$SG206850
  005d0	8d 45 0c	 lea	 eax, DWORD PTR _name$[ebp]
  005d3	50		 push	 eax
  005d4	8d 4d c8	 lea	 ecx, DWORD PTR $T209073[ebp]
  005d7	51		 push	 ecx
  005d8	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  005dd	83 c4 0c	 add	 esp, 12			; 0000000cH
  005e0	89 45 a4	 mov	 DWORD PTR tv255[ebp], eax
  005e3	8b 55 a4	 mov	 edx, DWORD PTR tv255[ebp]
  005e6	89 55 a0	 mov	 DWORD PTR tv247[ebp], edx
  005e9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  005ed	6a 00		 push	 0
  005ef	8b 4d a0	 mov	 ecx, DWORD PTR tv247[ebp]
  005f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  005f8	50		 push	 eax
  005f9	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  005fc	8b 10		 mov	 edx, DWORD PTR [eax]
  005fe	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00601	ff 12		 call	 DWORD PTR [edx]
  00603	89 45 e4	 mov	 DWORD PTR _pDibOver$[ebp], eax
  00606	33 c0		 xor	 eax, eax
  00608	83 7d e4 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  0060c	0f 94 c0	 sete	 al
  0060f	88 45 cf	 mov	 BYTE PTR $T209072[ebp], al
  00612	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00616	8d 4d c8	 lea	 ecx, DWORD PTR $T209073[ebp]
  00619	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0061f	0f b6 4d cf	 movzx	 ecx, BYTE PTR $T209072[ebp]
  00623	85 c9		 test	 ecx, ecx
  00625	74 25		 je	 SHORT $L206848

; 113  : 		;//pDibOver = pSkin->PutDibBmp(name + "over", pSkin->m_strSkinPath);
; 114  : 		if(pDibOver == NULL || !pDibOver->is_Loaded)

  00627	83 7d e4 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  0062b	74 0b		 je	 SHORT $L206852
  0062d	8b 55 e4	 mov	 edx, DWORD PTR _pDibOver$[ebp]
  00630	0f b6 42 5c	 movzx	 eax, BYTE PTR [edx+92]
  00634	85 c0		 test	 eax, eax
  00636	75 08		 jne	 SHORT $L206851
$L206852:

; 115  : 			pDibOver = pDibDown;

  00638	8b 4d f0	 mov	 ecx, DWORD PTR _pDibDown$[ebp]
  0063b	89 4d e4	 mov	 DWORD PTR _pDibOver$[ebp], ecx

; 116  : 		else if(pDibOver == NULL)

  0063e	eb 0c		 jmp	 SHORT $L206848
$L206851:
  00640	83 7d e4 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  00644	75 06		 jne	 SHORT $L206848

; 117  : 			pDibOver = pDibNormal;

  00646	8b 55 e8	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  00649	89 55 e4	 mov	 DWORD PTR _pDibOver$[ebp], edx
$L206848:

; 118  : 	}
; 119  : 
; 120  : 	if((pDibDisable = pSkin->GetDibBmp(name + "disable", false)) == NULL){

  0064c	68 00 00 00 00	 push	 OFFSET FLAT:$SG206858
  00651	8d 45 0c	 lea	 eax, DWORD PTR _name$[ebp]
  00654	50		 push	 eax
  00655	8d 4d c0	 lea	 ecx, DWORD PTR $T209075[ebp]
  00658	51		 push	 ecx
  00659	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  0065e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00661	89 45 9c	 mov	 DWORD PTR tv256[ebp], eax
  00664	8b 55 9c	 mov	 edx, DWORD PTR tv256[ebp]
  00667	89 55 98	 mov	 DWORD PTR tv249[ebp], edx
  0066a	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0066e	6a 00		 push	 0
  00670	8b 4d 98	 mov	 ecx, DWORD PTR tv249[ebp]
  00673	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00679	50		 push	 eax
  0067a	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  0067d	8b 10		 mov	 edx, DWORD PTR [eax]
  0067f	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00682	ff 12		 call	 DWORD PTR [edx]
  00684	89 45 e0	 mov	 DWORD PTR _pDibDisable$[ebp], eax
  00687	33 c0		 xor	 eax, eax
  00689	83 7d e0 00	 cmp	 DWORD PTR _pDibDisable$[ebp], 0
  0068d	0f 94 c0	 sete	 al
  00690	88 45 c7	 mov	 BYTE PTR $T209074[ebp], al
  00693	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00697	8d 4d c0	 lea	 ecx, DWORD PTR $T209075[ebp]
  0069a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  006a0	0f b6 4d c7	 movzx	 ecx, BYTE PTR $T209074[ebp]
  006a4	85 c9		 test	 ecx, ecx
  006a6	74 17		 je	 SHORT $L206856

; 121  : 		;//pDibDisable = pSkin->PutDibBmp(name + "disable", pSkin->m_strSkinPath);
; 122  : 		if(pDibDisable == NULL || !pDibDisable->is_Loaded)

  006a8	83 7d e0 00	 cmp	 DWORD PTR _pDibDisable$[ebp], 0
  006ac	74 0b		 je	 SHORT $L206860
  006ae	8b 55 e0	 mov	 edx, DWORD PTR _pDibDisable$[ebp]
  006b1	0f b6 42 5c	 movzx	 eax, BYTE PTR [edx+92]
  006b5	85 c0		 test	 eax, eax
  006b7	75 06		 jne	 SHORT $L206856
$L206860:

; 123  : 			pDibDisable = pDibNormal;

  006b9	8b 4d e8	 mov	 ecx, DWORD PTR _pDibNormal$[ebp]
  006bc	89 4d e0	 mov	 DWORD PTR _pDibDisable$[ebp], ecx
$L206856:

; 124  : 	}
; 125  : 
; 126  : 	if((pDibMask = pSkin->GetDibBmp(name + "mask",false)) == NULL){

  006bf	68 00 00 00 00	 push	 OFFSET FLAT:$SG206864
  006c4	8d 55 0c	 lea	 edx, DWORD PTR _name$[ebp]
  006c7	52		 push	 edx
  006c8	8d 45 b8	 lea	 eax, DWORD PTR $T209077[ebp]
  006cb	50		 push	 eax
  006cc	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  006d1	83 c4 0c	 add	 esp, 12			; 0000000cH
  006d4	89 45 94	 mov	 DWORD PTR tv257[ebp], eax
  006d7	8b 4d 94	 mov	 ecx, DWORD PTR tv257[ebp]
  006da	89 4d 90	 mov	 DWORD PTR tv251[ebp], ecx
  006dd	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  006e1	6a 00		 push	 0
  006e3	8b 4d 90	 mov	 ecx, DWORD PTR tv251[ebp]
  006e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  006ec	50		 push	 eax
  006ed	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  006f0	8b 02		 mov	 eax, DWORD PTR [edx]
  006f2	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  006f5	ff 10		 call	 DWORD PTR [eax]
  006f7	89 45 ec	 mov	 DWORD PTR _pDibMask$[ebp], eax
  006fa	33 c9		 xor	 ecx, ecx
  006fc	83 7d ec 00	 cmp	 DWORD PTR _pDibMask$[ebp], 0
  00700	0f 94 c1	 sete	 cl
  00703	88 4d bf	 mov	 BYTE PTR $T209076[ebp], cl
  00706	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0070a	8d 4d b8	 lea	 ecx, DWORD PTR $T209077[ebp]
  0070d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 127  : 		;//pDibMask = pSkin->PutDibBmp(name + "mask", pSkin->m_strSkinPath);
; 128  : 	}
; 129  : 
; 130  : 	if(pDibMask == NULL ||pDibMask->is_Loaded)

  00713	83 7d ec 00	 cmp	 DWORD PTR _pDibMask$[ebp], 0
  00717	74 0b		 je	 SHORT $L206866
  00719	8b 45 ec	 mov	 eax, DWORD PTR _pDibMask$[ebp]
  0071c	0f b6 48 5c	 movzx	 ecx, BYTE PTR [eax+92]
  00720	85 c9		 test	 ecx, ecx
  00722	74 26		 je	 SHORT $L206865
$L206866:

; 131  : 		pBtn->SetSkin(pDibNormal, pDibDown, pDibOver, pDibDisable,0,0,0,0,0);

  00724	6a 00		 push	 0
  00726	6a 00		 push	 0
  00728	6a 00		 push	 0
  0072a	6a 00		 push	 0
  0072c	6a 00		 push	 0
  0072e	6a 00		 push	 0
  00730	8b 55 e0	 mov	 edx, DWORD PTR _pDibDisable$[ebp]
  00733	52		 push	 edx
  00734	8b 45 e4	 mov	 eax, DWORD PTR _pDibOver$[ebp]
  00737	50		 push	 eax
  00738	8b 4d f0	 mov	 ecx, DWORD PTR _pDibDown$[ebp]
  0073b	51		 push	 ecx
  0073c	8b 55 e8	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  0073f	52		 push	 edx
  00740	8b 4d 08	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  00743	e8 00 00 00 00	 call	 ?SetSkin@CxSkinButton@@QAEXPAVCDibBitmap@@00000FFF_N@Z ; CxSkinButton::SetSkin

; 132  : 	else

  00748	eb 26		 jmp	 SHORT $L206867
$L206865:

; 133  : 		pBtn->SetSkin(pDibNormal, pDibDown, pDibOver, pDibDisable,0,pDibMask,0,0,0);

  0074a	6a 00		 push	 0
  0074c	6a 00		 push	 0
  0074e	6a 00		 push	 0
  00750	6a 00		 push	 0
  00752	8b 45 ec	 mov	 eax, DWORD PTR _pDibMask$[ebp]
  00755	50		 push	 eax
  00756	6a 00		 push	 0
  00758	8b 4d e0	 mov	 ecx, DWORD PTR _pDibDisable$[ebp]
  0075b	51		 push	 ecx
  0075c	8b 55 e4	 mov	 edx, DWORD PTR _pDibOver$[ebp]
  0075f	52		 push	 edx
  00760	8b 45 f0	 mov	 eax, DWORD PTR _pDibDown$[ebp]
  00763	50		 push	 eax
  00764	8b 4d e8	 mov	 ecx, DWORD PTR _pDibNormal$[ebp]
  00767	51		 push	 ecx
  00768	8b 4d 08	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  0076b	e8 00 00 00 00	 call	 ?SetSkin@CxSkinButton@@QAEXPAVCDibBitmap@@00000FFF_N@Z ; CxSkinButton::SetSkin
$L206867:

; 134  : }

  00770	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00777	8d 4d 0c	 lea	 ecx, DWORD PTR _name$[ebp]
  0077a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L206827:
  00780	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00783	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0078a	8b e5		 mov	 esp, ebp
  0078c	5d		 pop	 ebp
  0078d	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L209078:
  00053	8d 4d 0c	 lea	 ecx, DWORD PTR _name$[ebp]
  00056	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209079:
  0005c	8d 4d d8	 lea	 ecx, DWORD PTR $T209069[ebp]
  0005f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209080:
  00065	8d 4d d0	 lea	 ecx, DWORD PTR $T209071[ebp]
  00068	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209081:
  0006e	8d 4d c8	 lea	 ecx, DWORD PTR $T209073[ebp]
  00071	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209082:
  00077	8d 4d c0	 lea	 ecx, DWORD PTR $T209075[ebp]
  0007a	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209083:
  00080	8d 4d b8	 lea	 ecx, DWORD PTR $T209077[ebp]
  00083	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?SetButtonSkin@CreateControlFactory@@SAXPAVCxSkinButton@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVISkinMgr@@@Z:
  00089	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209085
  0008e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetButtonSkin@CreateControlFactory@@SAXPAVCxSkinButton@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVISkinMgr@@@Z ENDP ; CreateControlFactory::SetButtonSkin
PUBLIC	??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:NEAR
EXTRN	?SetWindowsText@CSkinButton2@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CSkinButton2::SetWindowsText
EXTRN	?SetToolTipText@CSkinButton2@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:NEAR ; CSkinButton2::SetToolTipText
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CWnd::GetWindowTextA
xdata$x	SEGMENT
$T209105 DD	0ffffffffH
	DD	FLAT:$L209093
	DD	00H
	DD	FLAT:$L209095
	DD	01H
	DD	FLAT:$L209096
	DD	02H
	DD	FLAT:$L209098
	DD	03H
	DD	FLAT:$L209099
$T209102 DD	019930520H
	DD	05H
	DD	FLAT:$T209105
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv182 = -92						; size = 4
tv153 = -88						; size = 4
tv179 = -84						; size = 4
tv175 = -80						; size = 4
$T209092 = -76						; size = 4
$T209091 = -72						; size = 4
$T209090 = -68						; size = 4
_strText$ = -64						; size = 4
_bmpPath$ = -60						; size = 4
_skinPath$ = -56					; size = 28
__$ArrayPad$ = -28					; size = 4
_tooltip$ = -24						; size = 4
_pSkinBtn2$ = -20					; size = 4
_strToolText$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateButton2

; 137  : {

  00790	55		 push	 ebp
  00791	8b ec		 mov	 ebp, esp
  00793	6a ff		 push	 -1
  00795	68 00 00 00 00	 push	 __ehhandler$?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  0079a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  007a0	50		 push	 eax
  007a1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  007a8	83 ec 50	 sub	 esp, 80			; 00000050H
  007ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  007b0	89 45 e4	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 138  : 	CSkinButton2* pSkinBtn2 = (CSkinButton2*)pWnd;

  007b3	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  007b6	89 45 ec	 mov	 DWORD PTR _pSkinBtn2$[ebp], eax

; 139  : 	CString tooltip = pXml->GetAttrib("tooltip"); 

  007b9	68 00 00 00 00	 push	 OFFSET FLAT:$SG206878
  007be	8d 4d e8	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  007c1	51		 push	 ecx
  007c2	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  007c5	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  007ca	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 140  : 	
; 141  : 	if(tooltip != "")

  007d1	68 00 00 00 00	 push	 OFFSET FLAT:$SG206880
  007d6	8d 55 e8	 lea	 edx, DWORD PTR _tooltip$[ebp]
  007d9	52		 push	 edx
  007da	e8 00 00 00 00	 call	 ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
  007df	83 c4 08	 add	 esp, 8
  007e2	0f b6 c0	 movzx	 eax, al
  007e5	85 c0		 test	 eax, eax
  007e7	74 1d		 je	 SHORT $L206879

; 142  : 		pSkinBtn2->SetToolTipText(tooltip);

  007e9	6a 01		 push	 1
  007eb	51		 push	 ecx
  007ec	8b cc		 mov	 ecx, esp
  007ee	89 65 bc	 mov	 DWORD PTR $T209090[ebp], esp
  007f1	8d 55 e8	 lea	 edx, DWORD PTR _tooltip$[ebp]
  007f4	52		 push	 edx
  007f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  007fb	89 45 b0	 mov	 DWORD PTR tv175[ebp], eax
  007fe	8b 4d ec	 mov	 ecx, DWORD PTR _pSkinBtn2$[ebp]
  00801	e8 00 00 00 00	 call	 ?SetToolTipText@CSkinButton2@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CSkinButton2::SetToolTipText
$L206879:

; 143  : 
; 144  : 	CString strText = pXml->GetAttrib("text");

  00806	68 00 00 00 00	 push	 OFFSET FLAT:$SG206884
  0080b	8d 45 c0	 lea	 eax, DWORD PTR _strText$[ebp]
  0080e	50		 push	 eax
  0080f	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00812	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00817	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 145  : 	
; 146  : 	CString strToolText;

  0081b	8d 4d f0	 lea	 ecx, DWORD PTR _strToolText$[ebp]
  0081e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00824	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 147  : 	pSkinBtn2->GetWindowText(strToolText);

  00828	8d 4d f0	 lea	 ecx, DWORD PTR _strToolText$[ebp]
  0082b	51		 push	 ecx
  0082c	8b 4d ec	 mov	 ecx, DWORD PTR _pSkinBtn2$[ebp]
  0082f	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CWnd::GetWindowTextA

; 148  : 	if(strToolText == "")

  00834	68 00 00 00 00	 push	 OFFSET FLAT:$SG206887
  00839	8d 55 f0	 lea	 edx, DWORD PTR _strToolText$[ebp]
  0083c	52		 push	 edx
  0083d	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  00842	83 c4 08	 add	 esp, 8
  00845	0f b6 c0	 movzx	 eax, al
  00848	85 c0		 test	 eax, eax
  0084a	74 1b		 je	 SHORT $L206886

; 149  : 		pSkinBtn2->SetWindowsText(strText);

  0084c	51		 push	 ecx
  0084d	8b cc		 mov	 ecx, esp
  0084f	89 65 b8	 mov	 DWORD PTR $T209091[ebp], esp
  00852	8d 55 c0	 lea	 edx, DWORD PTR _strText$[ebp]
  00855	52		 push	 edx
  00856	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0085c	89 45 ac	 mov	 DWORD PTR tv179[ebp], eax
  0085f	8b 4d ec	 mov	 ecx, DWORD PTR _pSkinBtn2$[ebp]
  00862	e8 00 00 00 00	 call	 ?SetWindowsText@CSkinButton2@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CSkinButton2::SetWindowsText
$L206886:

; 150  : 
; 151  : 	CString bmpPath = pXml->GetAttrib("bmp");

  00867	68 00 00 00 00	 push	 OFFSET FLAT:$SG206891
  0086c	8d 45 c4	 lea	 eax, DWORD PTR _bmpPath$[ebp]
  0086f	50		 push	 eax
  00870	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00873	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00878	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 152  : 	string  skinPath = pSkin->GetSkinPath();

  0087c	8d 4d b4	 lea	 ecx, DWORD PTR $T209092[ebp]
  0087f	51		 push	 ecx
  00880	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00883	83 c1 04	 add	 ecx, 4
  00886	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00889	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0088c	ff 50 40	 call	 DWORD PTR [eax+64]
  0088f	89 45 a8	 mov	 DWORD PTR tv153[ebp], eax
  00892	8b 4d a8	 mov	 ecx, DWORD PTR tv153[ebp]
  00895	89 4d a4	 mov	 DWORD PTR tv182[ebp], ecx
  00898	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0089c	8b 4d a4	 mov	 ecx, DWORD PTR tv182[ebp]
  0089f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  008a5	50		 push	 eax
  008a6	8d 4d c8	 lea	 ecx, DWORD PTR _skinPath$[ebp]
  008a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  008af	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  008b3	8d 4d b4	 lea	 ecx, DWORD PTR $T209092[ebp]
  008b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 153  : }

  008bc	8d 4d c8	 lea	 ecx, DWORD PTR _skinPath$[ebp]
  008bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  008c5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  008c9	8d 4d c4	 lea	 ecx, DWORD PTR _bmpPath$[ebp]
  008cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  008d2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  008d6	8d 4d f0	 lea	 ecx, DWORD PTR _strToolText$[ebp]
  008d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  008df	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  008e3	8d 4d c0	 lea	 ecx, DWORD PTR _strText$[ebp]
  008e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  008ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008f3	8d 4d e8	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  008f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  008fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  008ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00906	8b 4d e4	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00909	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0090e	8b e5		 mov	 esp, ebp
  00910	5d		 pop	 ebp
  00911	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L209093:
  00093	8d 4d e8	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  00096	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209095:
  0009c	8d 4d c0	 lea	 ecx, DWORD PTR _strText$[ebp]
  0009f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209096:
  000a5	8d 4d f0	 lea	 ecx, DWORD PTR _strToolText$[ebp]
  000a8	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209098:
  000ae	8d 4d c4	 lea	 ecx, DWORD PTR _bmpPath$[ebp]
  000b1	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209099:
  000b7	8d 4d b4	 lea	 ecx, DWORD PTR $T209092[ebp]
  000ba	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  000c0	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209102
  000c5	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateButton2
PUBLIC	?SetAttrib@CMarkup@@QAE_NPBD0@Z			; CMarkup::SetAttrib
EXTRN	?GetWidth@CDibBitmap@@QAEHXZ:NEAR		; CDibBitmap::GetWidth
EXTRN	?GetHeight@CDibBitmap@@QAEHXZ:NEAR		; CDibBitmap::GetHeight
EXTRN	?GetToolTipText@CxSkinButton@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:NEAR ; CxSkinButton::GetToolTipText
EXTRN	?SetToolTipText@CxSkinButton@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CxSkinButton::SetToolTipText
EXTRN	?SetNormalTextColor@CxSkinButton@@QAEKK@Z:NEAR	; CxSkinButton::SetNormalTextColor
EXTRN	?SetDownTextColor@CxSkinButton@@QAEKK@Z:NEAR	; CxSkinButton::SetDownTextColor
EXTRN	?SetOverTextColor@CxSkinButton@@QAEKK@Z:NEAR	; CxSkinButton::SetOverTextColor
EXTRN	?SetDisableTextColor@CxSkinButton@@QAEKK@Z:NEAR	; CxSkinButton::SetDisableTextColor
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:NEAR
EXTRN	?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z:NEAR ; CSkinMgr::PutDibBmp
EXTRN	?SetChangeColorSign@CSkinMgr@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:NEAR ; CSkinMgr::SetChangeColorSign
xdata$x	SEGMENT
$T209191 DD	0ffffffffH
	DD	FLAT:$L209148
	DD	00H
	DD	FLAT:$L209150
	DD	01H
	DD	FLAT:$L209151
	DD	01H
	DD	FLAT:$L209152
	DD	01H
	DD	FLAT:$L209154
	DD	01H
	DD	FLAT:$L209155
	DD	01H
	DD	FLAT:$L209157
	DD	01H
	DD	FLAT:$L209158
	DD	01H
	DD	FLAT:$L209160
	DD	01H
	DD	FLAT:$L209161
	DD	01H
	DD	FLAT:$L209163
	DD	01H
	DD	FLAT:$L209164
	DD	01H
	DD	FLAT:$L209170
	DD	0cH
	DD	FLAT:$L209173
	DD	0dH
	DD	FLAT:$L209175
	DD	0eH
	DD	FLAT:$L209176
	DD	0fH
	DD	FLAT:$L209177
	DD	0fH
	DD	FLAT:$L209179
	DD	0fH
	DD	FLAT:$L209182
	DD	0fH
	DD	FLAT:$L209185
$T209189 DD	019930520H
	DD	014H
	DD	FLAT:$T209191
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv924 = -472						; size = 4
tv923 = -468						; size = 4
tv920 = -464						; size = 4
tv919 = -460						; size = 4
tv916 = -456						; size = 4
tv507 = -452						; size = 4
tv914 = -448						; size = 4
tv913 = -444						; size = 4
tv910 = -440						; size = 4
tv909 = -436						; size = 4
tv906 = -432						; size = 4
tv578 = -428						; size = 4
tv904 = -424						; size = 4
tv903 = -420						; size = 4
tv900 = -416						; size = 4
tv899 = -412						; size = 4
tv896 = -408						; size = 4
tv602 = -404						; size = 4
tv894 = -400						; size = 4
tv893 = -396						; size = 4
tv890 = -392						; size = 4
tv605 = -388						; size = 4
tv886 = -384						; size = 4
tv883 = -380						; size = 4
tv881 = -376						; size = 4
tv878 = -372						; size = 4
tv875 = -368						; size = 4
tv872 = -364						; size = 4
tv869 = -360						; size = 4
tv863 = -356						; size = 4
tv866 = -352						; size = 4
tv862 = -348						; size = 4
tv932 = -344						; size = 4
tv860 = -340						; size = 4
tv931 = -336						; size = 4
tv855 = -332						; size = 4
tv858 = -328						; size = 4
tv854 = -324						; size = 4
tv930 = -320						; size = 4
tv852 = -316						; size = 4
tv929 = -312						; size = 4
tv847 = -308						; size = 4
tv850 = -304						; size = 4
tv846 = -300						; size = 4
tv928 = -296						; size = 4
tv844 = -292						; size = 4
tv927 = -288						; size = 4
tv839 = -284						; size = 4
tv842 = -280						; size = 4
tv838 = -276						; size = 4
tv926 = -272						; size = 4
tv836 = -268						; size = 4
tv925 = -264						; size = 4
tv829 = -260						; size = 4
tv832 = -256						; size = 4
tv828 = -252						; size = 4
tv65 = -248						; size = 4
tv826 = -244						; size = 4
tv85 = -240						; size = 4
tv821 = -236						; size = 4
$T209147 = -232						; size = 4
$T209146 = -228						; size = 4
$T209145 = -224						; size = 4
$T209144 = -220						; size = 4
$T209143 = -216						; size = 4
$T209142 = -212						; size = 4
$T209141 = -208						; size = 4
$T209140 = -204						; size = 4
$T209139 = -200						; size = 4
$T209138 = -196						; size = 4
$T209137 = -192						; size = 4
$T209136 = -188						; size = 4
$T209135 = -184						; size = 4
$T209134 = -177						; size = 1
$T209133 = -176						; size = 4
$T209132 = -169						; size = 1
$T209131 = -168						; size = 4
$T209130 = -164						; size = 4
$T209129 = -160						; size = 4
$T209128 = -156						; size = 4
$T209127 = -152						; size = 4
$T209126 = -148						; size = 4
$T209125 = -144						; size = 4
$T209124 = -137						; size = 1
$T209123 = -136						; size = 4
$T209122 = -132						; size = 4
$T209121 = -128						; size = 4
$T209120 = -121						; size = 1
$T209119 = -120						; size = 4
$T209118 = -116						; size = 4
$T209117 = -112						; size = 4
$T209116 = -105						; size = 1
$T209115 = -104						; size = 4
$T209114 = -100						; size = 4
$T209113 = -96						; size = 4
$T209112 = -89						; size = 1
$T209111 = -88						; size = 4
$T209110 = -84						; size = 4
$T209109 = -80						; size = 4
$T209108 = -73						; size = 1
$T209107 = -72						; size = 4
_i$206914 = -68						; size = 4
_pBtn$ = -64						; size = 4
_strColor$ = -60					; size = 4
_pDibDisable$ = -56					; size = 4
_strNormalColor$ = -52					; size = 4
_pDibOver$ = -48					; size = 4
_pDibNormal$ = -44					; size = 4
_name$ = -40						; size = 4
_bDontChangeColor$ = -33				; size = 1
_pDibMask$ = -32					; size = 4
_tooltip$ = -28						; size = 4
_strTooltip$ = -24					; size = 4
_value$ = -20						; size = 4
_pDibDown$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateButton

; 156  : {

  00920	55		 push	 ebp
  00921	8b ec		 mov	 ebp, esp
  00923	6a ff		 push	 -1
  00925	68 00 00 00 00	 push	 __ehhandler$?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  0092a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00930	50		 push	 eax
  00931	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00938	81 ec cc 01 00
	00		 sub	 esp, 460		; 000001ccH

; 157  : 	CxSkinButton *pBtn = (CxSkinButton*) pWnd;

  0093e	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  00941	89 45 c0	 mov	 DWORD PTR _pBtn$[ebp], eax

; 158  : 	CDibBitmap *pDibNormal, *pDibDown, *pDibOver, *pDibDisable, *pDibMask;
; 159  : 
; 160  : 	CString tooltip = pXml->GetAttrib("tooltip"); 

  00944	68 00 00 00 00	 push	 OFFSET FLAT:$SG206909
  00949	8d 4d e4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  0094c	51		 push	 ecx
  0094d	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00950	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00955	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 161  : 
; 162  : 	bool bDontChangeColor = atoi(pXml->GetAttrib("dont_change_color")) == 1;

  0095c	68 00 00 00 00	 push	 OFFSET FLAT:$SG206912
  00961	8d 55 b8	 lea	 edx, DWORD PTR $T209107[ebp]
  00964	52		 push	 edx
  00965	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00968	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  0096d	89 85 14 ff ff
	ff		 mov	 DWORD PTR tv821[ebp], eax
  00973	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR tv821[ebp]
  00979	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0097f	50		 push	 eax
  00980	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00986	83 c4 04	 add	 esp, 4
  00989	83 e8 01	 sub	 eax, 1
  0098c	f7 d8		 neg	 eax
  0098e	1b c0		 sbb	 eax, eax
  00990	40		 inc	 eax
  00991	88 45 df	 mov	 BYTE PTR _bDontChangeColor$[ebp], al
  00994	8d 4d b8	 lea	 ecx, DWORD PTR $T209107[ebp]
  00997	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 163  : 	if(bDontChangeColor == true)

  0099d	0f b6 45 df	 movzx	 eax, BYTE PTR _bDontChangeColor$[ebp]
  009a1	83 f8 01	 cmp	 eax, 1
  009a4	75 07		 jne	 SHORT $L206913

; 164  : 		int i = 0;

  009a6	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _i$206914[ebp], 0
$L206913:

; 165  : 	CString name = pXml->GetAttrib("bmp");

  009ad	68 00 00 00 00	 push	 OFFSET FLAT:$SG206917
  009b2	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  009b5	51		 push	 ecx
  009b6	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  009b9	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  009be	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 166  : 
; 167  : 	if(name == "")

  009c2	68 00 00 00 00	 push	 OFFSET FLAT:$SG206919
  009c7	8d 55 d8	 lea	 edx, DWORD PTR _name$[ebp]
  009ca	52		 push	 edx
  009cb	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  009d0	83 c4 08	 add	 esp, 8
  009d3	0f b6 c0	 movzx	 eax, al
  009d6	85 c0		 test	 eax, eax
  009d8	74 22		 je	 SHORT $L206918

; 168  : 		return;

  009da	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  009de	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  009e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  009e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  009ee	8d 4d e4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  009f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  009f7	e9 9a 0a 00 00	 jmp	 $L206899
$L206918:

; 169  : 	if((pDibNormal = pSkin->GetDibBmp(name + "normal")) == NULL)

  009fc	68 00 00 00 00	 push	 OFFSET FLAT:$SG206923
  00a01	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  00a04	51		 push	 ecx
  00a05	8d 55 b0	 lea	 edx, DWORD PTR $T209109[ebp]
  00a08	52		 push	 edx
  00a09	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00a0e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00a11	89 85 10 ff ff
	ff		 mov	 DWORD PTR tv85[ebp], eax
  00a17	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR tv85[ebp]
  00a1d	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv826[ebp], eax
  00a23	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00a27	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR tv826[ebp]
  00a2d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00a33	50		 push	 eax
  00a34	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00a37	83 c1 04	 add	 ecx, 4
  00a3a	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00a3d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00a40	ff 50 04	 call	 DWORD PTR [eax+4]
  00a43	89 45 d4	 mov	 DWORD PTR _pDibNormal$[ebp], eax
  00a46	33 c9		 xor	 ecx, ecx
  00a48	83 7d d4 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  00a4c	0f 94 c1	 sete	 cl
  00a4f	88 4d b7	 mov	 BYTE PTR $T209108[ebp], cl
  00a52	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00a56	8d 4d b0	 lea	 ecx, DWORD PTR $T209109[ebp]
  00a59	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00a5f	0f b6 55 b7	 movzx	 edx, BYTE PTR $T209108[ebp]
  00a63	85 d2		 test	 edx, edx
  00a65	74 62		 je	 SHORT $L206921

; 170  : 		pDibNormal = pSkin->PutDibBmp(name + "normal", pSkin->m_strSkinPath);

  00a67	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  00a6a	83 c0 08	 add	 eax, 8
  00a6d	51		 push	 ecx
  00a6e	8b cc		 mov	 ecx, esp
  00a70	89 65 ac	 mov	 DWORD PTR $T209110[ebp], esp
  00a73	50		 push	 eax
  00a74	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00a7a	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00a80	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR tv65[ebp]
  00a86	89 8d 04 ff ff
	ff		 mov	 DWORD PTR tv828[ebp], ecx
  00a8c	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00a90	51		 push	 ecx
  00a91	8b d4		 mov	 edx, esp
  00a93	89 65 a8	 mov	 DWORD PTR $T209111[ebp], esp
  00a96	68 00 00 00 00	 push	 OFFSET FLAT:$SG206927
  00a9b	8d 45 d8	 lea	 eax, DWORD PTR _name$[ebp]
  00a9e	50		 push	 eax
  00a9f	52		 push	 edx
  00aa0	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00aa5	83 c4 0c	 add	 esp, 12			; 0000000cH
  00aa8	89 85 00 ff ff
	ff		 mov	 DWORD PTR tv832[ebp], eax
  00aae	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00ab2	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00ab5	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  00aba	89 85 fc fe ff
	ff		 mov	 DWORD PTR tv829[ebp], eax
  00ac0	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR tv829[ebp]
  00ac6	89 4d d4	 mov	 DWORD PTR _pDibNormal$[ebp], ecx
$L206921:

; 171  : 
; 172  : 	if(pDibNormal == NULL || !pDibNormal->is_Loaded)

  00ac9	83 7d d4 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  00acd	74 0b		 je	 SHORT $L206929
  00acf	8b 55 d4	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  00ad2	0f b6 42 5c	 movzx	 eax, BYTE PTR [edx+92]
  00ad6	85 c0		 test	 eax, eax
  00ad8	75 22		 jne	 SHORT $L206928
$L206929:

; 173  : 		return;

  00ada	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ade	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  00ae1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00ae7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00aee	8d 4d e4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  00af1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00af7	e9 9a 09 00 00	 jmp	 $L206899
$L206928:

; 174  : 
; 175  : 	if((pDibDown = pSkin->GetDibBmp(name + "down", false)) == NULL){

  00afc	68 00 00 00 00	 push	 OFFSET FLAT:$SG206933
  00b01	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  00b04	51		 push	 ecx
  00b05	8d 55 a0	 lea	 edx, DWORD PTR $T209113[ebp]
  00b08	52		 push	 edx
  00b09	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00b0e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b11	89 85 f8 fe ff
	ff		 mov	 DWORD PTR tv925[ebp], eax
  00b17	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR tv925[ebp]
  00b1d	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv836[ebp], eax
  00b23	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00b27	6a 00		 push	 0
  00b29	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv836[ebp]
  00b2f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00b35	50		 push	 eax
  00b36	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00b39	83 c1 04	 add	 ecx, 4
  00b3c	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00b3f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00b42	ff 10		 call	 DWORD PTR [eax]
  00b44	89 45 f0	 mov	 DWORD PTR _pDibDown$[ebp], eax
  00b47	33 c9		 xor	 ecx, ecx
  00b49	83 7d f0 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  00b4d	0f 94 c1	 sete	 cl
  00b50	88 4d a7	 mov	 BYTE PTR $T209112[ebp], cl
  00b53	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00b57	8d 4d a0	 lea	 ecx, DWORD PTR $T209113[ebp]
  00b5a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00b60	0f b6 55 a7	 movzx	 edx, BYTE PTR $T209112[ebp]
  00b64	85 d2		 test	 edx, edx
  00b66	74 79		 je	 SHORT $L206931

; 176  : 		pDibDown = pSkin->PutDibBmp(name + "down", pSkin->m_strSkinPath);

  00b68	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  00b6b	83 c0 08	 add	 eax, 8
  00b6e	51		 push	 ecx
  00b6f	8b cc		 mov	 ecx, esp
  00b71	89 65 9c	 mov	 DWORD PTR $T209114[ebp], esp
  00b74	50		 push	 eax
  00b75	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00b7b	89 85 f0 fe ff
	ff		 mov	 DWORD PTR tv926[ebp], eax
  00b81	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv926[ebp]
  00b87	89 8d ec fe ff
	ff		 mov	 DWORD PTR tv838[ebp], ecx
  00b8d	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00b91	51		 push	 ecx
  00b92	8b d4		 mov	 edx, esp
  00b94	89 65 98	 mov	 DWORD PTR $T209115[ebp], esp
  00b97	68 00 00 00 00	 push	 OFFSET FLAT:$SG206937
  00b9c	8d 45 d8	 lea	 eax, DWORD PTR _name$[ebp]
  00b9f	50		 push	 eax
  00ba0	52		 push	 edx
  00ba1	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00ba6	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ba9	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv842[ebp], eax
  00baf	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00bb3	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00bb6	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  00bbb	89 85 e4 fe ff
	ff		 mov	 DWORD PTR tv839[ebp], eax
  00bc1	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR tv839[ebp]
  00bc7	89 4d f0	 mov	 DWORD PTR _pDibDown$[ebp], ecx

; 177  : 		if(pDibDown == NULL || !pDibDown->is_Loaded)

  00bca	83 7d f0 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  00bce	74 0b		 je	 SHORT $L206939
  00bd0	8b 55 f0	 mov	 edx, DWORD PTR _pDibDown$[ebp]
  00bd3	0f b6 42 5c	 movzx	 eax, BYTE PTR [edx+92]
  00bd7	85 c0		 test	 eax, eax
  00bd9	75 06		 jne	 SHORT $L206931
$L206939:

; 178  : 			pDibDown = pDibNormal;

  00bdb	8b 4d d4	 mov	 ecx, DWORD PTR _pDibNormal$[ebp]
  00bde	89 4d f0	 mov	 DWORD PTR _pDibDown$[ebp], ecx
$L206931:

; 179  : 	}
; 180  : 
; 181  : 	if((pDibOver = pSkin->GetDibBmp(name + "over", false)) == NULL){

  00be1	68 00 00 00 00	 push	 OFFSET FLAT:$SG206943
  00be6	8d 55 d8	 lea	 edx, DWORD PTR _name$[ebp]
  00be9	52		 push	 edx
  00bea	8d 45 90	 lea	 eax, DWORD PTR $T209117[ebp]
  00bed	50		 push	 eax
  00bee	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00bf3	83 c4 0c	 add	 esp, 12			; 0000000cH
  00bf6	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv927[ebp], eax
  00bfc	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv927[ebp]
  00c02	89 8d dc fe ff
	ff		 mov	 DWORD PTR tv844[ebp], ecx
  00c08	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00c0c	6a 00		 push	 0
  00c0e	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv844[ebp]
  00c14	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00c1a	50		 push	 eax
  00c1b	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00c1e	83 c1 04	 add	 ecx, 4
  00c21	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00c24	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00c27	ff 10		 call	 DWORD PTR [eax]
  00c29	89 45 d0	 mov	 DWORD PTR _pDibOver$[ebp], eax
  00c2c	33 c9		 xor	 ecx, ecx
  00c2e	83 7d d0 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  00c32	0f 94 c1	 sete	 cl
  00c35	88 4d 97	 mov	 BYTE PTR $T209116[ebp], cl
  00c38	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00c3c	8d 4d 90	 lea	 ecx, DWORD PTR $T209117[ebp]
  00c3f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00c45	0f b6 55 97	 movzx	 edx, BYTE PTR $T209116[ebp]
  00c49	85 d2		 test	 edx, edx
  00c4b	0f 84 87 00 00
	00		 je	 $L206941

; 182  : 		pDibOver = pSkin->PutDibBmp(name + "over", pSkin->m_strSkinPath);

  00c51	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  00c54	83 c0 08	 add	 eax, 8
  00c57	51		 push	 ecx
  00c58	8b cc		 mov	 ecx, esp
  00c5a	89 65 8c	 mov	 DWORD PTR $T209118[ebp], esp
  00c5d	50		 push	 eax
  00c5e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00c64	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv928[ebp], eax
  00c6a	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv928[ebp]
  00c70	89 8d d4 fe ff
	ff		 mov	 DWORD PTR tv846[ebp], ecx
  00c76	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00c7a	51		 push	 ecx
  00c7b	8b d4		 mov	 edx, esp
  00c7d	89 65 88	 mov	 DWORD PTR $T209119[ebp], esp
  00c80	68 00 00 00 00	 push	 OFFSET FLAT:$SG206947
  00c85	8d 45 d8	 lea	 eax, DWORD PTR _name$[ebp]
  00c88	50		 push	 eax
  00c89	52		 push	 edx
  00c8a	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00c8f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00c92	89 85 d0 fe ff
	ff		 mov	 DWORD PTR tv850[ebp], eax
  00c98	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00c9c	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00c9f	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  00ca4	89 85 cc fe ff
	ff		 mov	 DWORD PTR tv847[ebp], eax
  00caa	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR tv847[ebp]
  00cb0	89 4d d0	 mov	 DWORD PTR _pDibOver$[ebp], ecx

; 183  : 		if(pDibOver == NULL || !pDibOver->is_Loaded)

  00cb3	83 7d d0 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  00cb7	74 0b		 je	 SHORT $L206949
  00cb9	8b 55 d0	 mov	 edx, DWORD PTR _pDibOver$[ebp]
  00cbc	0f b6 42 5c	 movzx	 eax, BYTE PTR [edx+92]
  00cc0	85 c0		 test	 eax, eax
  00cc2	75 08		 jne	 SHORT $L206948
$L206949:

; 184  : 			pDibOver = pDibDown;

  00cc4	8b 4d f0	 mov	 ecx, DWORD PTR _pDibDown$[ebp]
  00cc7	89 4d d0	 mov	 DWORD PTR _pDibOver$[ebp], ecx

; 185  : 		else if(pDibOver == NULL)

  00cca	eb 0c		 jmp	 SHORT $L206941
$L206948:
  00ccc	83 7d d0 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  00cd0	75 06		 jne	 SHORT $L206941

; 186  : 			pDibOver = pDibNormal;

  00cd2	8b 55 d4	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  00cd5	89 55 d0	 mov	 DWORD PTR _pDibOver$[ebp], edx
$L206941:

; 187  : 	}
; 188  : 
; 189  : 	if((pDibDisable = pSkin->GetDibBmp(name + "disable", false)) == NULL){

  00cd8	68 00 00 00 00	 push	 OFFSET FLAT:$SG206955
  00cdd	8d 45 d8	 lea	 eax, DWORD PTR _name$[ebp]
  00ce0	50		 push	 eax
  00ce1	8d 4d 80	 lea	 ecx, DWORD PTR $T209121[ebp]
  00ce4	51		 push	 ecx
  00ce5	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00cea	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ced	89 85 c8 fe ff
	ff		 mov	 DWORD PTR tv929[ebp], eax
  00cf3	8b 95 c8 fe ff
	ff		 mov	 edx, DWORD PTR tv929[ebp]
  00cf9	89 95 c4 fe ff
	ff		 mov	 DWORD PTR tv852[ebp], edx
  00cff	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00d03	6a 00		 push	 0
  00d05	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR tv852[ebp]
  00d0b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00d11	50		 push	 eax
  00d12	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00d15	83 c1 04	 add	 ecx, 4
  00d18	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  00d1b	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00d1e	ff 12		 call	 DWORD PTR [edx]
  00d20	89 45 c8	 mov	 DWORD PTR _pDibDisable$[ebp], eax
  00d23	33 c0		 xor	 eax, eax
  00d25	83 7d c8 00	 cmp	 DWORD PTR _pDibDisable$[ebp], 0
  00d29	0f 94 c0	 sete	 al
  00d2c	88 45 87	 mov	 BYTE PTR $T209120[ebp], al
  00d2f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00d33	8d 4d 80	 lea	 ecx, DWORD PTR $T209121[ebp]
  00d36	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00d3c	0f b6 4d 87	 movzx	 ecx, BYTE PTR $T209120[ebp]
  00d40	85 c9		 test	 ecx, ecx
  00d42	74 7f		 je	 SHORT $L206953

; 190  : 		pDibDisable = pSkin->PutDibBmp(name + "disable", pSkin->m_strSkinPath);

  00d44	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00d47	83 c2 08	 add	 edx, 8
  00d4a	51		 push	 ecx
  00d4b	8b cc		 mov	 ecx, esp
  00d4d	89 a5 7c ff ff
	ff		 mov	 DWORD PTR $T209122[ebp], esp
  00d53	52		 push	 edx
  00d54	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00d5a	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv930[ebp], eax
  00d60	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR tv930[ebp]
  00d66	89 85 bc fe ff
	ff		 mov	 DWORD PTR tv854[ebp], eax
  00d6c	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  00d70	51		 push	 ecx
  00d71	8b cc		 mov	 ecx, esp
  00d73	89 a5 78 ff ff
	ff		 mov	 DWORD PTR $T209123[ebp], esp
  00d79	68 00 00 00 00	 push	 OFFSET FLAT:$SG206959
  00d7e	8d 55 d8	 lea	 edx, DWORD PTR _name$[ebp]
  00d81	52		 push	 edx
  00d82	51		 push	 ecx
  00d83	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00d88	83 c4 0c	 add	 esp, 12			; 0000000cH
  00d8b	89 85 b8 fe ff
	ff		 mov	 DWORD PTR tv858[ebp], eax
  00d91	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00d95	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00d98	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  00d9d	89 85 b4 fe ff
	ff		 mov	 DWORD PTR tv855[ebp], eax
  00da3	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR tv855[ebp]
  00da9	89 45 c8	 mov	 DWORD PTR _pDibDisable$[ebp], eax

; 191  : 		if(pDibDisable == NULL || !pDibDisable->is_Loaded)

  00dac	83 7d c8 00	 cmp	 DWORD PTR _pDibDisable$[ebp], 0
  00db0	74 0b		 je	 SHORT $L206961
  00db2	8b 4d c8	 mov	 ecx, DWORD PTR _pDibDisable$[ebp]
  00db5	0f b6 51 5c	 movzx	 edx, BYTE PTR [ecx+92]
  00db9	85 d2		 test	 edx, edx
  00dbb	75 06		 jne	 SHORT $L206953
$L206961:

; 192  : 			pDibDisable = pDibNormal;

  00dbd	8b 45 d4	 mov	 eax, DWORD PTR _pDibNormal$[ebp]
  00dc0	89 45 c8	 mov	 DWORD PTR _pDibDisable$[ebp], eax
$L206953:

; 193  : 	}
; 194  : 
; 195  : 	if((pDibMask = pSkin->GetDibBmp(name + "mask",false)) == NULL){

  00dc3	68 00 00 00 00	 push	 OFFSET FLAT:$SG206965
  00dc8	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  00dcb	51		 push	 ecx
  00dcc	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR $T209125[ebp]
  00dd2	52		 push	 edx
  00dd3	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00dd8	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ddb	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv931[ebp], eax
  00de1	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR tv931[ebp]
  00de7	89 85 ac fe ff
	ff		 mov	 DWORD PTR tv860[ebp], eax
  00ded	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00df1	6a 00		 push	 0
  00df3	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR tv860[ebp]
  00df9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00dff	50		 push	 eax
  00e00	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00e03	83 c1 04	 add	 ecx, 4
  00e06	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00e09	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00e0c	ff 10		 call	 DWORD PTR [eax]
  00e0e	89 45 e0	 mov	 DWORD PTR _pDibMask$[ebp], eax
  00e11	33 c9		 xor	 ecx, ecx
  00e13	83 7d e0 00	 cmp	 DWORD PTR _pDibMask$[ebp], 0
  00e17	0f 94 c1	 sete	 cl
  00e1a	88 8d 77 ff ff
	ff		 mov	 BYTE PTR $T209124[ebp], cl
  00e20	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00e24	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T209125[ebp]
  00e2a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00e30	0f b6 95 77 ff
	ff ff		 movzx	 edx, BYTE PTR $T209124[ebp]
  00e37	85 d2		 test	 edx, edx
  00e39	74 68		 je	 SHORT $L206963

; 196  : 		pDibMask = pSkin->PutDibBmp(name + "mask", pSkin->m_strSkinPath);

  00e3b	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  00e3e	83 c0 08	 add	 eax, 8
  00e41	51		 push	 ecx
  00e42	8b cc		 mov	 ecx, esp
  00e44	89 a5 6c ff ff
	ff		 mov	 DWORD PTR $T209126[ebp], esp
  00e4a	50		 push	 eax
  00e4b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00e51	89 85 a8 fe ff
	ff		 mov	 DWORD PTR tv932[ebp], eax
  00e57	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR tv932[ebp]
  00e5d	89 8d a4 fe ff
	ff		 mov	 DWORD PTR tv862[ebp], ecx
  00e63	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  00e67	51		 push	 ecx
  00e68	8b d4		 mov	 edx, esp
  00e6a	89 a5 68 ff ff
	ff		 mov	 DWORD PTR $T209127[ebp], esp
  00e70	68 00 00 00 00	 push	 OFFSET FLAT:$SG206969
  00e75	8d 45 d8	 lea	 eax, DWORD PTR _name$[ebp]
  00e78	50		 push	 eax
  00e79	52		 push	 edx
  00e7a	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00e7f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00e82	89 85 a0 fe ff
	ff		 mov	 DWORD PTR tv866[ebp], eax
  00e88	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00e8c	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00e8f	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  00e94	89 85 9c fe ff
	ff		 mov	 DWORD PTR tv863[ebp], eax
  00e9a	8b 8d 9c fe ff
	ff		 mov	 ecx, DWORD PTR tv863[ebp]
  00ea0	89 4d e0	 mov	 DWORD PTR _pDibMask$[ebp], ecx
$L206963:

; 197  : 	}
; 198  : 
; 199  : 	pSkin->SetChangeColorSign(name+"normal", bDontChangeColor);

  00ea3	0f b6 55 df	 movzx	 edx, BYTE PTR _bDontChangeColor$[ebp]
  00ea7	52		 push	 edx
  00ea8	51		 push	 ecx
  00ea9	8b c4		 mov	 eax, esp
  00eab	89 a5 64 ff ff
	ff		 mov	 DWORD PTR $T209128[ebp], esp
  00eb1	68 00 00 00 00	 push	 OFFSET FLAT:$SG206972
  00eb6	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  00eb9	51		 push	 ecx
  00eba	50		 push	 eax
  00ebb	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00ec0	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ec3	89 85 98 fe ff
	ff		 mov	 DWORD PTR tv869[ebp], eax
  00ec9	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00ecc	e8 00 00 00 00	 call	 ?SetChangeColorSign@CSkinMgr@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CSkinMgr::SetChangeColorSign

; 200  : 	pSkin->SetChangeColorSign(name+"over", bDontChangeColor);

  00ed1	0f b6 55 df	 movzx	 edx, BYTE PTR _bDontChangeColor$[ebp]
  00ed5	52		 push	 edx
  00ed6	51		 push	 ecx
  00ed7	8b c4		 mov	 eax, esp
  00ed9	89 a5 60 ff ff
	ff		 mov	 DWORD PTR $T209129[ebp], esp
  00edf	68 00 00 00 00	 push	 OFFSET FLAT:$SG206975
  00ee4	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  00ee7	51		 push	 ecx
  00ee8	50		 push	 eax
  00ee9	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00eee	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ef1	89 85 94 fe ff
	ff		 mov	 DWORD PTR tv872[ebp], eax
  00ef7	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00efa	e8 00 00 00 00	 call	 ?SetChangeColorSign@CSkinMgr@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CSkinMgr::SetChangeColorSign

; 201  : 	pSkin->SetChangeColorSign(name+"down", bDontChangeColor);

  00eff	0f b6 55 df	 movzx	 edx, BYTE PTR _bDontChangeColor$[ebp]
  00f03	52		 push	 edx
  00f04	51		 push	 ecx
  00f05	8b c4		 mov	 eax, esp
  00f07	89 a5 5c ff ff
	ff		 mov	 DWORD PTR $T209130[ebp], esp
  00f0d	68 00 00 00 00	 push	 OFFSET FLAT:$SG206978
  00f12	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  00f15	51		 push	 ecx
  00f16	50		 push	 eax
  00f17	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00f1c	83 c4 0c	 add	 esp, 12			; 0000000cH
  00f1f	89 85 90 fe ff
	ff		 mov	 DWORD PTR tv875[ebp], eax
  00f25	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00f28	e8 00 00 00 00	 call	 ?SetChangeColorSign@CSkinMgr@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CSkinMgr::SetChangeColorSign

; 202  : 	pSkin->SetChangeColorSign(name+"disable", bDontChangeColor);

  00f2d	0f b6 55 df	 movzx	 edx, BYTE PTR _bDontChangeColor$[ebp]
  00f31	52		 push	 edx
  00f32	51		 push	 ecx
  00f33	8b c4		 mov	 eax, esp
  00f35	89 a5 58 ff ff
	ff		 mov	 DWORD PTR $T209131[ebp], esp
  00f3b	68 00 00 00 00	 push	 OFFSET FLAT:$SG206981
  00f40	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  00f43	51		 push	 ecx
  00f44	50		 push	 eax
  00f45	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00f4a	83 c4 0c	 add	 esp, 12			; 0000000cH
  00f4d	89 85 8c fe ff
	ff		 mov	 DWORD PTR tv878[ebp], eax
  00f53	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00f56	e8 00 00 00 00	 call	 ?SetChangeColorSign@CSkinMgr@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CSkinMgr::SetChangeColorSign

; 203  : 
; 204  : 	CString value;

  00f5b	8d 4d ec	 lea	 ecx, DWORD PTR _value$[ebp]
  00f5e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00f64	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH

; 205  : 	if(pXml->GetAttrib("x_delta") == "0")

  00f68	68 00 00 00 00	 push	 OFFSET FLAT:$SG206987
  00f6d	8d 95 50 ff ff
	ff		 lea	 edx, DWORD PTR $T209133[ebp]
  00f73	52		 push	 edx
  00f74	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00f77	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00f7c	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv881[ebp], eax
  00f82	68 00 00 00 00	 push	 OFFSET FLAT:$SG206986
  00f87	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR tv881[ebp]
  00f8d	50		 push	 eax
  00f8e	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  00f93	83 c4 08	 add	 esp, 8
  00f96	88 85 57 ff ff
	ff		 mov	 BYTE PTR $T209132[ebp], al
  00f9c	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T209133[ebp]
  00fa2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00fa8	0f b6 8d 57 ff
	ff ff		 movzx	 ecx, BYTE PTR $T209132[ebp]
  00faf	85 c9		 test	 ecx, ecx
  00fb1	74 32		 je	 SHORT $L206984

; 206  : 	{
; 207  : 		value.Format("%d", pDibNormal->GetWidth());

  00fb3	8b 4d d4	 mov	 ecx, DWORD PTR _pDibNormal$[ebp]
  00fb6	e8 00 00 00 00	 call	 ?GetWidth@CDibBitmap@@QAEHXZ ; CDibBitmap::GetWidth
  00fbb	50		 push	 eax
  00fbc	68 00 00 00 00	 push	 OFFSET FLAT:$SG206988
  00fc1	8d 55 ec	 lea	 edx, DWORD PTR _value$[ebp]
  00fc4	52		 push	 edx
  00fc5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  00fcb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 208  : 		pXml->SetAttrib("x_delta", value);

  00fce	8d 4d ec	 lea	 ecx, DWORD PTR _value$[ebp]
  00fd1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00fd7	50		 push	 eax
  00fd8	68 00 00 00 00	 push	 OFFSET FLAT:$SG206989
  00fdd	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00fe0	e8 00 00 00 00	 call	 ?SetAttrib@CMarkup@@QAE_NPBD0@Z ; CMarkup::SetAttrib
$L206984:

; 209  : 	}
; 210  : 	if(pXml->GetAttrib("y_delta") == "0")

  00fe5	68 00 00 00 00	 push	 OFFSET FLAT:$SG206994
  00fea	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T209135[ebp]
  00ff0	50		 push	 eax
  00ff1	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00ff4	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00ff9	89 85 84 fe ff
	ff		 mov	 DWORD PTR tv883[ebp], eax
  00fff	68 00 00 00 00	 push	 OFFSET FLAT:$SG206993
  01004	8b 8d 84 fe ff
	ff		 mov	 ecx, DWORD PTR tv883[ebp]
  0100a	51		 push	 ecx
  0100b	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  01010	83 c4 08	 add	 esp, 8
  01013	88 85 4f ff ff
	ff		 mov	 BYTE PTR $T209134[ebp], al
  01019	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T209135[ebp]
  0101f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01025	0f b6 95 4f ff
	ff ff		 movzx	 edx, BYTE PTR $T209134[ebp]
  0102c	85 d2		 test	 edx, edx
  0102e	74 32		 je	 SHORT $L206991

; 211  : 	{
; 212  : 		value.Format("%d", pDibNormal->GetHeight());

  01030	8b 4d d4	 mov	 ecx, DWORD PTR _pDibNormal$[ebp]
  01033	e8 00 00 00 00	 call	 ?GetHeight@CDibBitmap@@QAEHXZ ; CDibBitmap::GetHeight
  01038	50		 push	 eax
  01039	68 00 00 00 00	 push	 OFFSET FLAT:$SG206995
  0103e	8d 45 ec	 lea	 eax, DWORD PTR _value$[ebp]
  01041	50		 push	 eax
  01042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  01048	83 c4 0c	 add	 esp, 12			; 0000000cH

; 213  : 		pXml->SetAttrib("y_delta", value);

  0104b	8d 4d ec	 lea	 ecx, DWORD PTR _value$[ebp]
  0104e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01054	50		 push	 eax
  01055	68 00 00 00 00	 push	 OFFSET FLAT:$SG206996
  0105a	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0105d	e8 00 00 00 00	 call	 ?SetAttrib@CMarkup@@QAE_NPBD0@Z ; CMarkup::SetAttrib
$L206991:

; 214  : 	}
; 215  : 
; 216  : 	if(pDibMask == NULL ||pDibMask->is_Loaded)

  01062	83 7d e0 00	 cmp	 DWORD PTR _pDibMask$[ebp], 0
  01066	74 0b		 je	 SHORT $L206998
  01068	8b 4d e0	 mov	 ecx, DWORD PTR _pDibMask$[ebp]
  0106b	0f b6 51 5c	 movzx	 edx, BYTE PTR [ecx+92]
  0106f	85 d2		 test	 edx, edx
  01071	74 26		 je	 SHORT $L206997
$L206998:

; 217  : 		pBtn->SetSkin(pDibNormal, pDibDown, pDibOver, pDibDisable,0,0,0,0,0);

  01073	6a 00		 push	 0
  01075	6a 00		 push	 0
  01077	6a 00		 push	 0
  01079	6a 00		 push	 0
  0107b	6a 00		 push	 0
  0107d	6a 00		 push	 0
  0107f	8b 45 c8	 mov	 eax, DWORD PTR _pDibDisable$[ebp]
  01082	50		 push	 eax
  01083	8b 4d d0	 mov	 ecx, DWORD PTR _pDibOver$[ebp]
  01086	51		 push	 ecx
  01087	8b 55 f0	 mov	 edx, DWORD PTR _pDibDown$[ebp]
  0108a	52		 push	 edx
  0108b	8b 45 d4	 mov	 eax, DWORD PTR _pDibNormal$[ebp]
  0108e	50		 push	 eax
  0108f	8b 4d c0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  01092	e8 00 00 00 00	 call	 ?SetSkin@CxSkinButton@@QAEXPAVCDibBitmap@@00000FFF_N@Z ; CxSkinButton::SetSkin

; 218  : 	else

  01097	eb 26		 jmp	 SHORT $L206999
$L206997:

; 219  : 		pBtn->SetSkin(pDibNormal, pDibDown, pDibOver, pDibDisable,0,pDibMask,0,0,0);

  01099	6a 00		 push	 0
  0109b	6a 00		 push	 0
  0109d	6a 00		 push	 0
  0109f	6a 00		 push	 0
  010a1	8b 4d e0	 mov	 ecx, DWORD PTR _pDibMask$[ebp]
  010a4	51		 push	 ecx
  010a5	6a 00		 push	 0
  010a7	8b 55 c8	 mov	 edx, DWORD PTR _pDibDisable$[ebp]
  010aa	52		 push	 edx
  010ab	8b 45 d0	 mov	 eax, DWORD PTR _pDibOver$[ebp]
  010ae	50		 push	 eax
  010af	8b 4d f0	 mov	 ecx, DWORD PTR _pDibDown$[ebp]
  010b2	51		 push	 ecx
  010b3	8b 55 d4	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  010b6	52		 push	 edx
  010b7	8b 4d c0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  010ba	e8 00 00 00 00	 call	 ?SetSkin@CxSkinButton@@QAEXPAVCDibBitmap@@00000FFF_N@Z ; CxSkinButton::SetSkin
$L206999:

; 220  : 
; 221  : 	CString strTooltip = pBtn->GetToolTipText();

  010bf	8d 45 e8	 lea	 eax, DWORD PTR _strTooltip$[ebp]
  010c2	50		 push	 eax
  010c3	8b 4d c0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  010c6	e8 00 00 00 00	 call	 ?GetToolTipText@CxSkinButton@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CxSkinButton::GetToolTipText
  010cb	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH

; 222  : 	if(strTooltip == "")

  010cf	68 00 00 00 00	 push	 OFFSET FLAT:$SG207003
  010d4	8d 4d e8	 lea	 ecx, DWORD PTR _strTooltip$[ebp]
  010d7	51		 push	 ecx
  010d8	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  010dd	83 c4 08	 add	 esp, 8
  010e0	0f b6 d0	 movzx	 edx, al
  010e3	85 d2		 test	 edx, edx
  010e5	74 21		 je	 SHORT $L207002

; 223  : 		pBtn->SetToolTipText(tooltip);

  010e7	51		 push	 ecx
  010e8	8b cc		 mov	 ecx, esp
  010ea	89 a5 44 ff ff
	ff		 mov	 DWORD PTR $T209136[ebp], esp
  010f0	8d 45 e4	 lea	 eax, DWORD PTR _tooltip$[ebp]
  010f3	50		 push	 eax
  010f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  010fa	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv886[ebp], eax
  01100	8b 4d c0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  01103	e8 00 00 00 00	 call	 ?SetToolTipText@CxSkinButton@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CxSkinButton::SetToolTipText
$L207002:

; 224  : 
; 225  : 	CString strColor;

  01108	8d 4d c4	 lea	 ecx, DWORD PTR _strColor$[ebp]
  0110b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01111	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH

; 226  : 	CString strNormalColor;

  01115	8d 4d cc	 lea	 ecx, DWORD PTR _strNormalColor$[ebp]
  01118	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0111e	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH

; 227  : 	strColor = pXml->GetAttrib("textcolor_normal");

  01122	68 00 00 00 00	 push	 OFFSET FLAT:$SG207008
  01127	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T209137[ebp]
  0112d	51		 push	 ecx
  0112e	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01131	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01136	89 85 7c fe ff
	ff		 mov	 DWORD PTR tv605[ebp], eax
  0113c	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR tv605[ebp]
  01142	89 95 78 fe ff
	ff		 mov	 DWORD PTR tv890[ebp], edx
  01148	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  0114c	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR tv890[ebp]
  01152	50		 push	 eax
  01153	8d 4d c4	 lea	 ecx, DWORD PTR _strColor$[ebp]
  01156	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  0115c	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  01160	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T209137[ebp]
  01166	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 228  : 	strNormalColor = strColor;

  0116c	8d 4d c4	 lea	 ecx, DWORD PTR _strColor$[ebp]
  0116f	51		 push	 ecx
  01170	8d 4d cc	 lea	 ecx, DWORD PTR _strNormalColor$[ebp]
  01173	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z

; 229  : 	if( strColor != "" )

  01179	68 00 00 00 00	 push	 OFFSET FLAT:$SG207010
  0117e	8d 55 c4	 lea	 edx, DWORD PTR _strColor$[ebp]
  01181	52		 push	 edx
  01182	e8 00 00 00 00	 call	 ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
  01187	83 c4 08	 add	 esp, 8
  0118a	0f b6 c0	 movzx	 eax, al
  0118d	85 c0		 test	 eax, eax
  0118f	74 38		 je	 SHORT $L207009

; 230  : 	{
; 231  : 		pBtn->SetNormalTextColor( StringToRGB(strColor) );

  01191	6a 01		 push	 1
  01193	51		 push	 ecx
  01194	8b cc		 mov	 ecx, esp
  01196	89 a5 3c ff ff
	ff		 mov	 DWORD PTR $T209138[ebp], esp
  0119c	8d 55 c4	 lea	 edx, DWORD PTR _strColor$[ebp]
  0119f	52		 push	 edx
  011a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  011a6	89 85 74 fe ff
	ff		 mov	 DWORD PTR tv893[ebp], eax
  011ac	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  011b1	83 c4 08	 add	 esp, 8
  011b4	89 85 70 fe ff
	ff		 mov	 DWORD PTR tv894[ebp], eax
  011ba	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR tv894[ebp]
  011c0	50		 push	 eax
  011c1	8b 4d c0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  011c4	e8 00 00 00 00	 call	 ?SetNormalTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetNormalTextColor
$L207009:

; 232  : 	}
; 233  : 
; 234  : 	strColor = pXml->GetAttrib("textcolor_over");

  011c9	68 00 00 00 00	 push	 OFFSET FLAT:$SG207013
  011ce	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR $T209139[ebp]
  011d4	51		 push	 ecx
  011d5	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  011d8	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  011dd	89 85 6c fe ff
	ff		 mov	 DWORD PTR tv602[ebp], eax
  011e3	8b 95 6c fe ff
	ff		 mov	 edx, DWORD PTR tv602[ebp]
  011e9	89 95 68 fe ff
	ff		 mov	 DWORD PTR tv896[ebp], edx
  011ef	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  011f3	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR tv896[ebp]
  011f9	50		 push	 eax
  011fa	8d 4d c4	 lea	 ecx, DWORD PTR _strColor$[ebp]
  011fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  01203	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  01207	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR $T209139[ebp]
  0120d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 235  : 	if( strColor != "" )

  01213	68 00 00 00 00	 push	 OFFSET FLAT:$SG207015
  01218	8d 4d c4	 lea	 ecx, DWORD PTR _strColor$[ebp]
  0121b	51		 push	 ecx
  0121c	e8 00 00 00 00	 call	 ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
  01221	83 c4 08	 add	 esp, 8
  01224	0f b6 d0	 movzx	 edx, al
  01227	85 d2		 test	 edx, edx
  01229	74 3a		 je	 SHORT $L207014

; 236  : 	{
; 237  : 		pBtn->SetOverTextColor( StringToRGB(strColor) );

  0122b	6a 01		 push	 1
  0122d	51		 push	 ecx
  0122e	8b cc		 mov	 ecx, esp
  01230	89 a5 34 ff ff
	ff		 mov	 DWORD PTR $T209140[ebp], esp
  01236	8d 45 c4	 lea	 eax, DWORD PTR _strColor$[ebp]
  01239	50		 push	 eax
  0123a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01240	89 85 64 fe ff
	ff		 mov	 DWORD PTR tv899[ebp], eax
  01246	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  0124b	83 c4 08	 add	 esp, 8
  0124e	89 85 60 fe ff
	ff		 mov	 DWORD PTR tv900[ebp], eax
  01254	8b 8d 60 fe ff
	ff		 mov	 ecx, DWORD PTR tv900[ebp]
  0125a	51		 push	 ecx
  0125b	8b 4d c0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  0125e	e8 00 00 00 00	 call	 ?SetOverTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetOverTextColor

; 238  : 	}
; 239  : 	else

  01263	eb 38		 jmp	 SHORT $L207017
$L207014:

; 240  : 	{
; 241  : 		pBtn->SetOverTextColor( StringToRGB(strNormalColor) );

  01265	6a 01		 push	 1
  01267	51		 push	 ecx
  01268	8b cc		 mov	 ecx, esp
  0126a	89 a5 30 ff ff
	ff		 mov	 DWORD PTR $T209141[ebp], esp
  01270	8d 55 cc	 lea	 edx, DWORD PTR _strNormalColor$[ebp]
  01273	52		 push	 edx
  01274	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0127a	89 85 5c fe ff
	ff		 mov	 DWORD PTR tv903[ebp], eax
  01280	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  01285	83 c4 08	 add	 esp, 8
  01288	89 85 58 fe ff
	ff		 mov	 DWORD PTR tv904[ebp], eax
  0128e	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR tv904[ebp]
  01294	50		 push	 eax
  01295	8b 4d c0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  01298	e8 00 00 00 00	 call	 ?SetOverTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetOverTextColor
$L207017:

; 242  : 	}
; 243  : 
; 244  : 
; 245  : 	strColor = pXml->GetAttrib("textcolor_down");

  0129d	68 00 00 00 00	 push	 OFFSET FLAT:$SG207020
  012a2	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR $T209142[ebp]
  012a8	51		 push	 ecx
  012a9	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  012ac	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  012b1	89 85 54 fe ff
	ff		 mov	 DWORD PTR tv578[ebp], eax
  012b7	8b 95 54 fe ff
	ff		 mov	 edx, DWORD PTR tv578[ebp]
  012bd	89 95 50 fe ff
	ff		 mov	 DWORD PTR tv906[ebp], edx
  012c3	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  012c7	8b 85 50 fe ff
	ff		 mov	 eax, DWORD PTR tv906[ebp]
  012cd	50		 push	 eax
  012ce	8d 4d c4	 lea	 ecx, DWORD PTR _strColor$[ebp]
  012d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  012d7	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  012db	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR $T209142[ebp]
  012e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 246  : 	if( strColor != "" )

  012e7	68 00 00 00 00	 push	 OFFSET FLAT:$SG207022
  012ec	8d 4d c4	 lea	 ecx, DWORD PTR _strColor$[ebp]
  012ef	51		 push	 ecx
  012f0	e8 00 00 00 00	 call	 ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
  012f5	83 c4 08	 add	 esp, 8
  012f8	0f b6 d0	 movzx	 edx, al
  012fb	85 d2		 test	 edx, edx
  012fd	74 3a		 je	 SHORT $L207021

; 247  : 	{
; 248  : 		pBtn->SetDownTextColor( StringToRGB(strColor) );

  012ff	6a 01		 push	 1
  01301	51		 push	 ecx
  01302	8b cc		 mov	 ecx, esp
  01304	89 a5 28 ff ff
	ff		 mov	 DWORD PTR $T209143[ebp], esp
  0130a	8d 45 c4	 lea	 eax, DWORD PTR _strColor$[ebp]
  0130d	50		 push	 eax
  0130e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01314	89 85 4c fe ff
	ff		 mov	 DWORD PTR tv909[ebp], eax
  0131a	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  0131f	83 c4 08	 add	 esp, 8
  01322	89 85 48 fe ff
	ff		 mov	 DWORD PTR tv910[ebp], eax
  01328	8b 8d 48 fe ff
	ff		 mov	 ecx, DWORD PTR tv910[ebp]
  0132e	51		 push	 ecx
  0132f	8b 4d c0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  01332	e8 00 00 00 00	 call	 ?SetDownTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetDownTextColor

; 249  : 	}
; 250  : 	else

  01337	eb 38		 jmp	 SHORT $L207024
$L207021:

; 251  : 	{
; 252  : 		pBtn->SetDownTextColor( StringToRGB(strNormalColor) );

  01339	6a 01		 push	 1
  0133b	51		 push	 ecx
  0133c	8b cc		 mov	 ecx, esp
  0133e	89 a5 24 ff ff
	ff		 mov	 DWORD PTR $T209144[ebp], esp
  01344	8d 55 cc	 lea	 edx, DWORD PTR _strNormalColor$[ebp]
  01347	52		 push	 edx
  01348	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0134e	89 85 44 fe ff
	ff		 mov	 DWORD PTR tv913[ebp], eax
  01354	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  01359	83 c4 08	 add	 esp, 8
  0135c	89 85 40 fe ff
	ff		 mov	 DWORD PTR tv914[ebp], eax
  01362	8b 85 40 fe ff
	ff		 mov	 eax, DWORD PTR tv914[ebp]
  01368	50		 push	 eax
  01369	8b 4d c0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  0136c	e8 00 00 00 00	 call	 ?SetDownTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetDownTextColor
$L207024:

; 253  : 	}
; 254  : 
; 255  : 	strColor = pXml->GetAttrib("textcolor_disable");

  01371	68 00 00 00 00	 push	 OFFSET FLAT:$SG207027
  01376	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR $T209145[ebp]
  0137c	51		 push	 ecx
  0137d	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01380	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01385	89 85 3c fe ff
	ff		 mov	 DWORD PTR tv507[ebp], eax
  0138b	8b 95 3c fe ff
	ff		 mov	 edx, DWORD PTR tv507[ebp]
  01391	89 95 38 fe ff
	ff		 mov	 DWORD PTR tv916[ebp], edx
  01397	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  0139b	8b 85 38 fe ff
	ff		 mov	 eax, DWORD PTR tv916[ebp]
  013a1	50		 push	 eax
  013a2	8d 4d c4	 lea	 ecx, DWORD PTR _strColor$[ebp]
  013a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  013ab	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  013af	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR $T209145[ebp]
  013b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 256  : 	if( strColor != "" )

  013bb	68 00 00 00 00	 push	 OFFSET FLAT:$SG207029
  013c0	8d 4d c4	 lea	 ecx, DWORD PTR _strColor$[ebp]
  013c3	51		 push	 ecx
  013c4	e8 00 00 00 00	 call	 ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
  013c9	83 c4 08	 add	 esp, 8
  013cc	0f b6 d0	 movzx	 edx, al
  013cf	85 d2		 test	 edx, edx
  013d1	74 3a		 je	 SHORT $L207028

; 257  : 	{
; 258  : 		pBtn->SetDisableTextColor( StringToRGB(strColor) );

  013d3	6a 01		 push	 1
  013d5	51		 push	 ecx
  013d6	8b cc		 mov	 ecx, esp
  013d8	89 a5 1c ff ff
	ff		 mov	 DWORD PTR $T209146[ebp], esp
  013de	8d 45 c4	 lea	 eax, DWORD PTR _strColor$[ebp]
  013e1	50		 push	 eax
  013e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  013e8	89 85 34 fe ff
	ff		 mov	 DWORD PTR tv919[ebp], eax
  013ee	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  013f3	83 c4 08	 add	 esp, 8
  013f6	89 85 30 fe ff
	ff		 mov	 DWORD PTR tv920[ebp], eax
  013fc	8b 8d 30 fe ff
	ff		 mov	 ecx, DWORD PTR tv920[ebp]
  01402	51		 push	 ecx
  01403	8b 4d c0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  01406	e8 00 00 00 00	 call	 ?SetDisableTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetDisableTextColor

; 259  : 	}
; 260  : 	else

  0140b	eb 38		 jmp	 SHORT $L207031
$L207028:

; 261  : 	{
; 262  : 		pBtn->SetDisableTextColor( StringToRGB(strNormalColor) );

  0140d	6a 01		 push	 1
  0140f	51		 push	 ecx
  01410	8b cc		 mov	 ecx, esp
  01412	89 a5 18 ff ff
	ff		 mov	 DWORD PTR $T209147[ebp], esp
  01418	8d 55 cc	 lea	 edx, DWORD PTR _strNormalColor$[ebp]
  0141b	52		 push	 edx
  0141c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01422	89 85 2c fe ff
	ff		 mov	 DWORD PTR tv923[ebp], eax
  01428	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  0142d	83 c4 08	 add	 esp, 8
  01430	89 85 28 fe ff
	ff		 mov	 DWORD PTR tv924[ebp], eax
  01436	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv924[ebp]
  0143c	50		 push	 eax
  0143d	8b 4d c0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  01440	e8 00 00 00 00	 call	 ?SetDisableTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetDisableTextColor
$L207031:

; 263  : 	}
; 264  : 
; 265  : }

  01445	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  01449	8d 4d cc	 lea	 ecx, DWORD PTR _strNormalColor$[ebp]
  0144c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01452	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  01456	8d 4d c4	 lea	 ecx, DWORD PTR _strColor$[ebp]
  01459	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0145f	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  01463	8d 4d e8	 lea	 ecx, DWORD PTR _strTooltip$[ebp]
  01466	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0146c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01470	8d 4d ec	 lea	 ecx, DWORD PTR _value$[ebp]
  01473	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01479	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0147d	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  01480	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01486	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0148d	8d 4d e4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  01490	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L206899:
  01496	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01499	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  014a0	8b e5		 mov	 esp, ebp
  014a2	5d		 pop	 ebp
  014a3	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L209148:
  000ca	8d 4d e4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  000cd	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209150:
  000d3	8d 4d d8	 lea	 ecx, DWORD PTR _name$[ebp]
  000d6	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209151:
  000dc	8d 4d b0	 lea	 ecx, DWORD PTR $T209109[ebp]
  000df	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209152:
  000e5	8b 4d ac	 mov	 ecx, DWORD PTR $T209110[ebp]
  000e8	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209154:
  000ee	8d 4d a0	 lea	 ecx, DWORD PTR $T209113[ebp]
  000f1	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209155:
  000f7	8b 4d 9c	 mov	 ecx, DWORD PTR $T209114[ebp]
  000fa	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209157:
  00100	8d 4d 90	 lea	 ecx, DWORD PTR $T209117[ebp]
  00103	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209158:
  00109	8b 4d 8c	 mov	 ecx, DWORD PTR $T209118[ebp]
  0010c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209160:
  00112	8d 4d 80	 lea	 ecx, DWORD PTR $T209121[ebp]
  00115	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209161:
  0011b	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR $T209122[ebp]
  00121	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209163:
  00127	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T209125[ebp]
  0012d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209164:
  00133	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR $T209126[ebp]
  00139	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209170:
  0013f	8d 4d ec	 lea	 ecx, DWORD PTR _value$[ebp]
  00142	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209173:
  00148	8d 4d e8	 lea	 ecx, DWORD PTR _strTooltip$[ebp]
  0014b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209175:
  00151	8d 4d c4	 lea	 ecx, DWORD PTR _strColor$[ebp]
  00154	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209176:
  0015a	8d 4d cc	 lea	 ecx, DWORD PTR _strNormalColor$[ebp]
  0015d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209177:
  00163	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T209137[ebp]
  00169	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209179:
  0016f	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR $T209139[ebp]
  00175	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209182:
  0017b	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR $T209142[ebp]
  00181	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209185:
  00187	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR $T209145[ebp]
  0018d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  00193	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209189
  00198	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateButton
EXTRN	?x_SetAttrib@CMarkup@@IAE_NHPBD0@Z:NEAR		; CMarkup::x_SetAttrib
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\util\markup.h
;	COMDAT ?SetAttrib@CMarkup@@QAE_NPBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_szAttrib$ = 8						; size = 4
_szValue$ = 12						; size = 4
?SetAttrib@CMarkup@@QAE_NPBD0@Z PROC NEAR		; CMarkup::SetAttrib, COMDAT
; _this$ = ecx

; 41   : 	bool SetAttrib( LPCTSTR szAttrib, LPCTSTR szValue ) { return x_SetAttrib(m_iPos,szAttrib,szValue); };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _szValue$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _szAttrib$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00015	50		 push	 eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?x_SetAttrib@CMarkup@@IAE_NHPBD0@Z ; CMarkup::x_SetAttrib
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?SetAttrib@CMarkup@@QAE_NPBD0@Z ENDP			; CMarkup::SetAttrib
_TEXT	ENDS
EXTRN	?SetBitmap@ETSSplitter@@QAEXPAVCDibBitmap@@000000000@Z:NEAR ; ETSSplitter::SetBitmap
xdata$x	SEGMENT
$T209219 DD	0ffffffffH
	DD	FLAT:$L209205
	DD	0ffffffffH
	DD	FLAT:$L209206
	DD	0ffffffffH
	DD	FLAT:$L209207
	DD	0ffffffffH
	DD	FLAT:$L209208
	DD	0ffffffffH
	DD	FLAT:$L209209
	DD	0ffffffffH
	DD	FLAT:$L209210
	DD	0ffffffffH
	DD	FLAT:$L209211
	DD	0ffffffffH
	DD	FLAT:$L209212
	DD	0ffffffffH
	DD	FLAT:$L209213
	DD	0ffffffffH
	DD	FLAT:$L209214
	DD	0ffffffffH
	DD	FLAT:$L209215
$T209217 DD	019930520H
	DD	0bH
	DD	FLAT:$T209219
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\createcontrolfactory.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv380 = -180						; size = 4
tv391 = -176						; size = 4
tv378 = -172						; size = 4
tv390 = -168						; size = 4
tv376 = -164						; size = 4
tv389 = -160						; size = 4
tv374 = -156						; size = 4
tv388 = -152						; size = 4
tv372 = -148						; size = 4
tv387 = -144						; size = 4
tv370 = -140						; size = 4
tv386 = -136						; size = 4
tv368 = -132						; size = 4
tv385 = -128						; size = 4
tv366 = -124						; size = 4
tv384 = -120						; size = 4
tv364 = -116						; size = 4
tv383 = -112						; size = 4
tv362 = -108						; size = 4
tv382 = -104						; size = 4
$T209204 = -100						; size = 4
$T209203 = -96						; size = 4
$T209202 = -92						; size = 4
$T209201 = -88						; size = 4
$T209200 = -84						; size = 4
$T209199 = -80						; size = 4
$T209198 = -76						; size = 4
$T209197 = -72						; size = 4
$T209196 = -68						; size = 4
$T209195 = -64						; size = 4
_right_over$ = -60					; size = 4
_pSpl$ = -56						; size = 4
_right$ = -52						; size = 4
_left$ = -48						; size = 4
_up_over$ = -44						; size = 4
_up$ = -40						; size = 4
_left_over$ = -36					; size = 4
_down$ = -32						; size = 4
_down_over$ = -28					; size = 4
_horz$ = -24						; size = 4
_vert$ = -20						; size = 4
_hide_btn$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z PROC NEAR ; CreateControlFactory::CreateSplitter

; 270  : {

  014b0	55		 push	 ebp
  014b1	8b ec		 mov	 ebp, esp
  014b3	6a ff		 push	 -1
  014b5	68 00 00 00 00	 push	 __ehhandler$?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z
  014ba	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  014c0	50		 push	 eax
  014c1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  014c8	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H

; 271  : 	ETSSplitter * pSpl = (ETSSplitter *) pWnd;

  014ce	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  014d1	89 45 c8	 mov	 DWORD PTR _pSpl$[ebp], eax

; 272  : 
; 273  : 	CDibBitmap * vert = pSkin->GetDibBmp(pXml->GetAttrib("vert"), false);

  014d4	68 00 00 00 00	 push	 OFFSET FLAT:$SG207042
  014d9	8d 4d c0	 lea	 ecx, DWORD PTR $T209195[ebp]
  014dc	51		 push	 ecx
  014dd	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  014e0	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  014e5	89 45 98	 mov	 DWORD PTR tv382[ebp], eax
  014e8	8b 55 98	 mov	 edx, DWORD PTR tv382[ebp]
  014eb	89 55 94	 mov	 DWORD PTR tv362[ebp], edx
  014ee	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  014f5	6a 00		 push	 0
  014f7	8b 4d 94	 mov	 ecx, DWORD PTR tv362[ebp]
  014fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01500	50		 push	 eax
  01501	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01504	83 c1 04	 add	 ecx, 4
  01507	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  0150a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0150d	ff 12		 call	 DWORD PTR [edx]
  0150f	89 45 ec	 mov	 DWORD PTR _vert$[ebp], eax
  01512	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01519	8d 4d c0	 lea	 ecx, DWORD PTR $T209195[ebp]
  0151c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 274  : 	CDibBitmap * horz = pSkin->GetDibBmp(pXml->GetAttrib("horz"), false);

  01522	68 00 00 00 00	 push	 OFFSET FLAT:$SG207045
  01527	8d 45 bc	 lea	 eax, DWORD PTR $T209196[ebp]
  0152a	50		 push	 eax
  0152b	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0152e	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01533	89 45 90	 mov	 DWORD PTR tv383[ebp], eax
  01536	8b 4d 90	 mov	 ecx, DWORD PTR tv383[ebp]
  01539	89 4d 8c	 mov	 DWORD PTR tv364[ebp], ecx
  0153c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  01543	6a 00		 push	 0
  01545	8b 4d 8c	 mov	 ecx, DWORD PTR tv364[ebp]
  01548	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0154e	50		 push	 eax
  0154f	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01552	83 c1 04	 add	 ecx, 4
  01555	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01558	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0155b	ff 10		 call	 DWORD PTR [eax]
  0155d	89 45 e8	 mov	 DWORD PTR _horz$[ebp], eax
  01560	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01567	8d 4d bc	 lea	 ecx, DWORD PTR $T209196[ebp]
  0156a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 275  : 	CDibBitmap * down = pSkin->GetDibBmp(pXml->GetAttrib("btn_down"), false);

  01570	68 00 00 00 00	 push	 OFFSET FLAT:$SG207048
  01575	8d 4d b8	 lea	 ecx, DWORD PTR $T209197[ebp]
  01578	51		 push	 ecx
  01579	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0157c	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01581	89 45 88	 mov	 DWORD PTR tv384[ebp], eax
  01584	8b 55 88	 mov	 edx, DWORD PTR tv384[ebp]
  01587	89 55 84	 mov	 DWORD PTR tv366[ebp], edx
  0158a	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  01591	6a 00		 push	 0
  01593	8b 4d 84	 mov	 ecx, DWORD PTR tv366[ebp]
  01596	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0159c	50		 push	 eax
  0159d	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  015a0	83 c1 04	 add	 ecx, 4
  015a3	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  015a6	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  015a9	ff 12		 call	 DWORD PTR [edx]
  015ab	89 45 e0	 mov	 DWORD PTR _down$[ebp], eax
  015ae	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  015b5	8d 4d b8	 lea	 ecx, DWORD PTR $T209197[ebp]
  015b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 276  : 	CDibBitmap * up = pSkin->GetDibBmp(pXml->GetAttrib("btn_up"), false);

  015be	68 00 00 00 00	 push	 OFFSET FLAT:$SG207051
  015c3	8d 45 b4	 lea	 eax, DWORD PTR $T209198[ebp]
  015c6	50		 push	 eax
  015c7	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  015ca	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  015cf	89 45 80	 mov	 DWORD PTR tv385[ebp], eax
  015d2	8b 4d 80	 mov	 ecx, DWORD PTR tv385[ebp]
  015d5	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv368[ebp], ecx
  015db	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  015e2	6a 00		 push	 0
  015e4	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv368[ebp]
  015ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  015f0	50		 push	 eax
  015f1	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  015f4	83 c1 04	 add	 ecx, 4
  015f7	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  015fa	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  015fd	ff 10		 call	 DWORD PTR [eax]
  015ff	89 45 d8	 mov	 DWORD PTR _up$[ebp], eax
  01602	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01609	8d 4d b4	 lea	 ecx, DWORD PTR $T209198[ebp]
  0160c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 277  : 	CDibBitmap * right = pSkin->GetDibBmp(pXml->GetAttrib("btn_right"), false);

  01612	68 00 00 00 00	 push	 OFFSET FLAT:$SG207054
  01617	8d 4d b0	 lea	 ecx, DWORD PTR $T209199[ebp]
  0161a	51		 push	 ecx
  0161b	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0161e	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01623	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv386[ebp], eax
  01629	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv386[ebp]
  0162f	89 95 74 ff ff
	ff		 mov	 DWORD PTR tv370[ebp], edx
  01635	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  0163c	6a 00		 push	 0
  0163e	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv370[ebp]
  01644	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0164a	50		 push	 eax
  0164b	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0164e	83 c1 04	 add	 ecx, 4
  01651	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  01654	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  01657	ff 12		 call	 DWORD PTR [edx]
  01659	89 45 cc	 mov	 DWORD PTR _right$[ebp], eax
  0165c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01663	8d 4d b0	 lea	 ecx, DWORD PTR $T209199[ebp]
  01666	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 278  : 	CDibBitmap * left = pSkin->GetDibBmp(pXml->GetAttrib("btn_left"), false);

  0166c	68 00 00 00 00	 push	 OFFSET FLAT:$SG207057
  01671	8d 45 ac	 lea	 eax, DWORD PTR $T209200[ebp]
  01674	50		 push	 eax
  01675	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01678	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  0167d	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv387[ebp], eax
  01683	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv387[ebp]
  01689	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv372[ebp], ecx
  0168f	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  01696	6a 00		 push	 0
  01698	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv372[ebp]
  0169e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  016a4	50		 push	 eax
  016a5	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  016a8	83 c1 04	 add	 ecx, 4
  016ab	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  016ae	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  016b1	ff 10		 call	 DWORD PTR [eax]
  016b3	89 45 d0	 mov	 DWORD PTR _left$[ebp], eax
  016b6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  016bd	8d 4d ac	 lea	 ecx, DWORD PTR $T209200[ebp]
  016c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 279  : 	CDibBitmap * down_over = pSkin->GetDibBmp(pXml->GetAttrib("btn_down_over"), false);

  016c6	68 00 00 00 00	 push	 OFFSET FLAT:$SG207060
  016cb	8d 4d a8	 lea	 ecx, DWORD PTR $T209201[ebp]
  016ce	51		 push	 ecx
  016cf	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  016d2	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  016d7	89 85 68 ff ff
	ff		 mov	 DWORD PTR tv388[ebp], eax
  016dd	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR tv388[ebp]
  016e3	89 95 64 ff ff
	ff		 mov	 DWORD PTR tv374[ebp], edx
  016e9	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 6
  016f0	6a 00		 push	 0
  016f2	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv374[ebp]
  016f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  016fe	50		 push	 eax
  016ff	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01702	83 c1 04	 add	 ecx, 4
  01705	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  01708	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0170b	ff 12		 call	 DWORD PTR [edx]
  0170d	89 45 e4	 mov	 DWORD PTR _down_over$[ebp], eax
  01710	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01717	8d 4d a8	 lea	 ecx, DWORD PTR $T209201[ebp]
  0171a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 280  : 	CDibBitmap * up_over = pSkin->GetDibBmp(pXml->GetAttrib("btn_up_over"), false);

  01720	68 00 00 00 00	 push	 OFFSET FLAT:$SG207063
  01725	8d 45 a4	 lea	 eax, DWORD PTR $T209202[ebp]
  01728	50		 push	 eax
  01729	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0172c	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01731	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv389[ebp], eax
  01737	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv389[ebp]
  0173d	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv376[ebp], ecx
  01743	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
  0174a	6a 00		 push	 0
  0174c	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv376[ebp]
  01752	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01758	50		 push	 eax
  01759	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0175c	83 c1 04	 add	 ecx, 4
  0175f	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01762	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01765	ff 10		 call	 DWORD PTR [eax]
  01767	89 45 d4	 mov	 DWORD PTR _up_over$[ebp], eax
  0176a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01771	8d 4d a4	 lea	 ecx, DWORD PTR $T209202[ebp]
  01774	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 281  : 	CDibBitmap * right_over = pSkin->GetDibBmp(pXml->GetAttrib("btn_right_over"), false);

  0177a	68 00 00 00 00	 push	 OFFSET FLAT:$SG207066
  0177f	8d 4d a0	 lea	 ecx, DWORD PTR $T209203[ebp]
  01782	51		 push	 ecx
  01783	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01786	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  0178b	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv390[ebp], eax
  01791	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR tv390[ebp]
  01797	89 95 54 ff ff
	ff		 mov	 DWORD PTR tv378[ebp], edx
  0179d	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
  017a4	6a 00		 push	 0
  017a6	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv378[ebp]
  017ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  017b2	50		 push	 eax
  017b3	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  017b6	83 c1 04	 add	 ecx, 4
  017b9	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  017bc	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  017bf	ff 12		 call	 DWORD PTR [edx]
  017c1	89 45 c4	 mov	 DWORD PTR _right_over$[ebp], eax
  017c4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  017cb	8d 4d a0	 lea	 ecx, DWORD PTR $T209203[ebp]
  017ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 282  : 	CDibBitmap * left_over = pSkin->GetDibBmp(pXml->GetAttrib("btn_left_over"), false);

  017d4	68 00 00 00 00	 push	 OFFSET FLAT:$SG207069
  017d9	8d 45 9c	 lea	 eax, DWORD PTR $T209204[ebp]
  017dc	50		 push	 eax
  017dd	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  017e0	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  017e5	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv391[ebp], eax
  017eb	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv391[ebp]
  017f1	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv380[ebp], ecx
  017f7	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
  017fe	6a 00		 push	 0
  01800	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv380[ebp]
  01806	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0180c	50		 push	 eax
  0180d	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01810	83 c1 04	 add	 ecx, 4
  01813	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01816	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01819	ff 10		 call	 DWORD PTR [eax]
  0181b	89 45 dc	 mov	 DWORD PTR _left_over$[ebp], eax
  0181e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01825	8d 4d 9c	 lea	 ecx, DWORD PTR $T209204[ebp]
  01828	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 283  : 
; 284  : 	if(vert == NULL && horz == NULL)

  0182e	83 7d ec 00	 cmp	 DWORD PTR _vert$[ebp], 0
  01832	0f 85 fa 00 00
	00		 jne	 $L207070
  01838	83 7d e8 00	 cmp	 DWORD PTR _horz$[ebp], 0
  0183c	0f 85 f0 00 00
	00		 jne	 $L207070

; 285  : 	{
; 286  : 		vert = pSkin->GetDibBmp("SpliterVertBK", false);

  01842	6a 00		 push	 0
  01844	68 00 00 00 00	 push	 OFFSET FLAT:$SG207071
  01849	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0184c	83 c1 04	 add	 ecx, 4
  0184f	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01852	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01855	ff 10		 call	 DWORD PTR [eax]
  01857	89 45 ec	 mov	 DWORD PTR _vert$[ebp], eax

; 287  : 		horz = pSkin->GetDibBmp("SpliterHorzBK", false);

  0185a	6a 00		 push	 0
  0185c	68 00 00 00 00	 push	 OFFSET FLAT:$SG207072
  01861	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01864	83 c1 04	 add	 ecx, 4
  01867	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  0186a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0186d	ff 10		 call	 DWORD PTR [eax]
  0186f	89 45 e8	 mov	 DWORD PTR _horz$[ebp], eax

; 288  : 		down = pSkin->GetDibBmp("SpliterBarDown", false);

  01872	6a 00		 push	 0
  01874	68 00 00 00 00	 push	 OFFSET FLAT:$SG207073
  01879	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0187c	83 c1 04	 add	 ecx, 4
  0187f	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01882	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01885	ff 10		 call	 DWORD PTR [eax]
  01887	89 45 e0	 mov	 DWORD PTR _down$[ebp], eax

; 289  : 		up = pSkin->GetDibBmp("SpliterBarUp", false);

  0188a	6a 00		 push	 0
  0188c	68 00 00 00 00	 push	 OFFSET FLAT:$SG207074
  01891	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01894	83 c1 04	 add	 ecx, 4
  01897	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  0189a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0189d	ff 10		 call	 DWORD PTR [eax]
  0189f	89 45 d8	 mov	 DWORD PTR _up$[ebp], eax

; 290  : 		right = pSkin->GetDibBmp("SpliterBarRight", false);

  018a2	6a 00		 push	 0
  018a4	68 00 00 00 00	 push	 OFFSET FLAT:$SG207075
  018a9	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  018ac	83 c1 04	 add	 ecx, 4
  018af	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  018b2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  018b5	ff 10		 call	 DWORD PTR [eax]
  018b7	89 45 cc	 mov	 DWORD PTR _right$[ebp], eax

; 291  : 		left = pSkin->GetDibBmp("SpliterBarLeft", false);

  018ba	6a 00		 push	 0
  018bc	68 00 00 00 00	 push	 OFFSET FLAT:$SG207076
  018c1	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  018c4	83 c1 04	 add	 ecx, 4
  018c7	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  018ca	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  018cd	ff 10		 call	 DWORD PTR [eax]
  018cf	89 45 d0	 mov	 DWORD PTR _left$[ebp], eax

; 292  : 		down_over = pSkin->GetDibBmp("SpliterBarDownOver", false);

  018d2	6a 00		 push	 0
  018d4	68 00 00 00 00	 push	 OFFSET FLAT:$SG207077
  018d9	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  018dc	83 c1 04	 add	 ecx, 4
  018df	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  018e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  018e5	ff 10		 call	 DWORD PTR [eax]
  018e7	89 45 e4	 mov	 DWORD PTR _down_over$[ebp], eax

; 293  : 		up_over = pSkin->GetDibBmp("SpliterBarUpOver", false);

  018ea	6a 00		 push	 0
  018ec	68 00 00 00 00	 push	 OFFSET FLAT:$SG207078
  018f1	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  018f4	83 c1 04	 add	 ecx, 4
  018f7	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  018fa	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  018fd	ff 10		 call	 DWORD PTR [eax]
  018ff	89 45 d4	 mov	 DWORD PTR _up_over$[ebp], eax

; 294  : 		right_over = pSkin->GetDibBmp("SpliterBarRightOver", false);

  01902	6a 00		 push	 0
  01904	68 00 00 00 00	 push	 OFFSET FLAT:$SG207079
  01909	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0190c	83 c1 04	 add	 ecx, 4
  0190f	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01912	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01915	ff 10		 call	 DWORD PTR [eax]
  01917	89 45 c4	 mov	 DWORD PTR _right_over$[ebp], eax

; 295  : 		left_over = pSkin->GetDibBmp("SpliterBarLeftOver", false);

  0191a	6a 00		 push	 0
  0191c	68 00 00 00 00	 push	 OFFSET FLAT:$SG207080
  01921	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01924	83 c1 04	 add	 ecx, 4
  01927	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  0192a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0192d	ff 10		 call	 DWORD PTR [eax]
  0192f	89 45 dc	 mov	 DWORD PTR _left_over$[ebp], eax
$L207070:

; 296  : 	}
; 297  : 
; 298  : 	CString hide_btn = pXml->GetAttrib("hide-closebtn");

  01932	68 00 00 00 00	 push	 OFFSET FLAT:$SG207083
  01937	8d 4d f0	 lea	 ecx, DWORD PTR _hide_btn$[ebp]
  0193a	51		 push	 ecx
  0193b	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0193e	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01943	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 10 ; 0000000aH

; 299  : 
; 300  : 	if(hide_btn == "1")

  0194a	68 00 00 00 00	 push	 OFFSET FLAT:$SG207085
  0194f	8d 55 f0	 lea	 edx, DWORD PTR _hide_btn$[ebp]
  01952	52		 push	 edx
  01953	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  01958	83 c4 08	 add	 esp, 8
  0195b	0f b6 c0	 movzx	 eax, al
  0195e	85 c0		 test	 eax, eax
  01960	74 09		 je	 SHORT $L207084

; 301  : 		pSpl->m_bHideCloseBtn = true;

  01962	8b 4d c8	 mov	 ecx, DWORD PTR _pSpl$[ebp]
  01965	c6 41 60 01	 mov	 BYTE PTR [ecx+96], 1

; 302  : 	else

  01969	eb 07		 jmp	 SHORT $L207086
$L207084:

; 303  : 		pSpl->m_bHideCloseBtn = false;

  0196b	8b 55 c8	 mov	 edx, DWORD PTR _pSpl$[ebp]
  0196e	c6 42 60 00	 mov	 BYTE PTR [edx+96], 0
$L207086:

; 304  : 
; 305  : 	pSpl->SetBitmap( vert,  horz, right, left, up, down, right_over, left_over, up_over, down_over);

  01972	8b 45 e4	 mov	 eax, DWORD PTR _down_over$[ebp]
  01975	50		 push	 eax
  01976	8b 4d d4	 mov	 ecx, DWORD PTR _up_over$[ebp]
  01979	51		 push	 ecx
  0197a	8b 55 dc	 mov	 edx, DWORD PTR _left_over$[ebp]
  0197d	52		 push	 edx
  0197e	8b 45 c4	 mov	 eax, DWORD PTR _right_over$[ebp]
  01981	50		 push	 eax
  01982	8b 4d e0	 mov	 ecx, DWORD PTR _down$[ebp]
  01985	51		 push	 ecx
  01986	8b 55 d8	 mov	 edx, DWORD PTR _up$[ebp]
  01989	52		 push	 edx
  0198a	8b 45 d0	 mov	 eax, DWORD PTR _left$[ebp]
  0198d	50		 push	 eax
  0198e	8b 4d cc	 mov	 ecx, DWORD PTR _right$[ebp]
  01991	51		 push	 ecx
  01992	8b 55 e8	 mov	 edx, DWORD PTR _horz$[ebp]
  01995	52		 push	 edx
  01996	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  01999	50		 push	 eax
  0199a	8b 4d c8	 mov	 ecx, DWORD PTR _pSpl$[ebp]
  0199d	e8 00 00 00 00	 call	 ?SetBitmap@ETSSplitter@@QAEXPAVCDibBitmap@@000000000@Z ; ETSSplitter::SetBitmap

; 306  : }

  019a2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  019a9	8d 4d f0	 lea	 ecx, DWORD PTR _hide_btn$[ebp]
  019ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  019b2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  019b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  019bc	8b e5		 mov	 esp, ebp
  019be	5d		 pop	 ebp
  019bf	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L209205:
  0019d	8d 4d c0	 lea	 ecx, DWORD PTR $T209195[ebp]
  001a0	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209206:
  001a6	8d 4d bc	 lea	 ecx, DWORD PTR $T209196[ebp]
  001a9	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209207:
  001af	8d 4d b8	 lea	 ecx, DWORD PTR $T209197[ebp]
  001b2	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209208:
  001b8	8d 4d b4	 lea	 ecx, DWORD PTR $T209198[ebp]
  001bb	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209209:
  001c1	8d 4d b0	 lea	 ecx, DWORD PTR $T209199[ebp]
  001c4	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209210:
  001ca	8d 4d ac	 lea	 ecx, DWORD PTR $T209200[ebp]
  001cd	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209211:
  001d3	8d 4d a8	 lea	 ecx, DWORD PTR $T209201[ebp]
  001d6	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209212:
  001dc	8d 4d a4	 lea	 ecx, DWORD PTR $T209202[ebp]
  001df	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209213:
  001e5	8d 4d a0	 lea	 ecx, DWORD PTR $T209203[ebp]
  001e8	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209214:
  001ee	8d 4d 9c	 lea	 ecx, DWORD PTR $T209204[ebp]
  001f1	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209215:
  001f7	8d 4d f0	 lea	 ecx, DWORD PTR _hide_btn$[ebp]
  001fa	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z:
  00200	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209217
  00205	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z ENDP ; CreateControlFactory::CreateSplitter
EXTRN	?SetSelectItemBKColor@CMyTreeCtrl@@QAEXK@Z:NEAR	; CMyTreeCtrl::SetSelectItemBKColor
EXTRN	?SetSelectItemTextColor@CMyTreeCtrl@@QAEXK@Z:NEAR ; CMyTreeCtrl::SetSelectItemTextColor
EXTRN	?SetNormalItemTextColor@CMyTreeCtrl@@QAEXK@Z:NEAR ; CMyTreeCtrl::SetNormalItemTextColor
EXTRN	?SetBackColor@CMyTreeCtrl@@QAEXK@Z:NEAR		; CMyTreeCtrl::SetBackColor
EXTRN	?SetScrollBitmap@CMyTreeCtrl@@QAEXPAVCDibBitmap@@0@Z:NEAR ; CMyTreeCtrl::SetScrollBitmap
EXTRN	?SetButtonBitmap@CMyBtnTreeCtrl@@QAEXPAVCDibBitmap@@00@Z:NEAR ; CMyBtnTreeCtrl::SetButtonBitmap
xdata$x	SEGMENT
$T209254 DD	0ffffffffH
	DD	FLAT:$L209237
	DD	00H
	DD	FLAT:$L209238
	DD	00H
	DD	FLAT:$L209239
	DD	00H
	DD	FLAT:$L209241
	DD	00H
	DD	FLAT:$L209242
	DD	00H
	DD	FLAT:$L209244
	DD	00H
	DD	FLAT:$L209245
$T209252 DD	019930520H
	DD	07H
	DD	FLAT:$T209254
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv396 = -200						; size = 4
tv395 = -196						; size = 4
tv392 = -192						; size = 4
tv391 = -188						; size = 4
tv388 = -184						; size = 4
tv387 = -180						; size = 4
tv384 = -176						; size = 4
tv383 = -172						; size = 4
tv377 = -168						; size = 4
tv380 = -164						; size = 4
tv376 = -160						; size = 4
tv401 = -156						; size = 4
tv374 = -152						; size = 4
tv400 = -148						; size = 4
tv369 = -144						; size = 4
tv372 = -140						; size = 4
tv368 = -136						; size = 4
tv399 = -132						; size = 4
tv366 = -128						; size = 4
tv398 = -124						; size = 4
tv360 = -120						; size = 4
tv363 = -116						; size = 4
tv359 = -112						; size = 4
tv397 = -108						; size = 4
tv357 = -104						; size = 4
tv65 = -100						; size = 4
$T209236 = -96						; size = 4
$T209235 = -92						; size = 4
$T209234 = -88						; size = 4
$T209233 = -84						; size = 4
$T209232 = -80						; size = 4
$T209231 = -76						; size = 4
$T209230 = -72						; size = 4
$T209229 = -65						; size = 1
$T209228 = -64						; size = 4
$T209227 = -60						; size = 4
$T209226 = -56						; size = 4
$T209225 = -49						; size = 1
$T209224 = -48						; size = 4
$T209223 = -44						; size = 4
$T209222 = -40						; size = 4
$T209221 = -33						; size = 1
_pTree$ = -32						; size = 4
_pDibOver$ = -28					; size = 4
_pDibNormal$ = -24					; size = 4
_name$ = -20						; size = 4
_pDibDown$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateBtnTree

; 309  : {

  019c0	55		 push	 ebp
  019c1	8b ec		 mov	 ebp, esp
  019c3	6a ff		 push	 -1
  019c5	68 00 00 00 00	 push	 __ehhandler$?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  019ca	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  019d0	50		 push	 eax
  019d1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  019d8	81 ec bc 00 00
	00		 sub	 esp, 188		; 000000bcH

; 310  : 	CMyBtnTreeCtrl *pTree = (CMyBtnTreeCtrl*) pWnd;

  019de	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  019e1	89 45 e0	 mov	 DWORD PTR _pTree$[ebp], eax

; 311  : 	CDibBitmap *pDibOver,*pDibNormal,*pDibDown;
; 312  : 
; 313  : 	CString name = pXml->GetAttrib("btnbmp");

  019e4	68 00 00 00 00	 push	 OFFSET FLAT:$SG207100
  019e9	8d 4d ec	 lea	 ecx, DWORD PTR _name$[ebp]
  019ec	51		 push	 ecx
  019ed	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  019f0	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  019f5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 314  : 
; 315  : 	if((pDibNormal = pSkin->GetDibBmp(name + "normal")) == NULL)

  019fc	68 00 00 00 00	 push	 OFFSET FLAT:$SG207104
  01a01	8d 55 ec	 lea	 edx, DWORD PTR _name$[ebp]
  01a04	52		 push	 edx
  01a05	8d 45 d8	 lea	 eax, DWORD PTR $T209222[ebp]
  01a08	50		 push	 eax
  01a09	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  01a0e	83 c4 0c	 add	 esp, 12			; 0000000cH
  01a11	89 45 9c	 mov	 DWORD PTR tv65[ebp], eax
  01a14	8b 4d 9c	 mov	 ecx, DWORD PTR tv65[ebp]
  01a17	89 4d 98	 mov	 DWORD PTR tv357[ebp], ecx
  01a1a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01a1e	8b 4d 98	 mov	 ecx, DWORD PTR tv357[ebp]
  01a21	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01a27	50		 push	 eax
  01a28	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01a2b	83 c1 04	 add	 ecx, 4
  01a2e	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01a31	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01a34	ff 50 04	 call	 DWORD PTR [eax+4]
  01a37	89 45 e8	 mov	 DWORD PTR _pDibNormal$[ebp], eax
  01a3a	33 c9		 xor	 ecx, ecx
  01a3c	83 7d e8 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  01a40	0f 94 c1	 sete	 cl
  01a43	88 4d df	 mov	 BYTE PTR $T209221[ebp], cl
  01a46	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01a4a	8d 4d d8	 lea	 ecx, DWORD PTR $T209222[ebp]
  01a4d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01a53	0f b6 55 df	 movzx	 edx, BYTE PTR $T209221[ebp]
  01a57	85 d2		 test	 edx, edx
  01a59	74 50		 je	 SHORT $L207102

; 316  : 		pDibNormal = pSkin->PutDibBmp(name + "normal", pSkin->m_strSkinPath);

  01a5b	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  01a5e	83 c0 08	 add	 eax, 8
  01a61	51		 push	 ecx
  01a62	8b cc		 mov	 ecx, esp
  01a64	89 65 d4	 mov	 DWORD PTR $T209223[ebp], esp
  01a67	50		 push	 eax
  01a68	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01a6e	89 45 94	 mov	 DWORD PTR tv397[ebp], eax
  01a71	8b 4d 94	 mov	 ecx, DWORD PTR tv397[ebp]
  01a74	89 4d 90	 mov	 DWORD PTR tv359[ebp], ecx
  01a77	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01a7b	51		 push	 ecx
  01a7c	8b d4		 mov	 edx, esp
  01a7e	89 65 d0	 mov	 DWORD PTR $T209224[ebp], esp
  01a81	68 00 00 00 00	 push	 OFFSET FLAT:$SG207108
  01a86	8d 45 ec	 lea	 eax, DWORD PTR _name$[ebp]
  01a89	50		 push	 eax
  01a8a	52		 push	 edx
  01a8b	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  01a90	83 c4 0c	 add	 esp, 12			; 0000000cH
  01a93	89 45 8c	 mov	 DWORD PTR tv363[ebp], eax
  01a96	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01a9a	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01a9d	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  01aa2	89 45 88	 mov	 DWORD PTR tv360[ebp], eax
  01aa5	8b 4d 88	 mov	 ecx, DWORD PTR tv360[ebp]
  01aa8	89 4d e8	 mov	 DWORD PTR _pDibNormal$[ebp], ecx
$L207102:

; 317  : 
; 318  : 	if(pDibNormal == NULL)

  01aab	83 7d e8 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  01aaf	75 15		 jne	 SHORT $L207109

; 319  : 		return;

  01ab1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01ab8	8d 4d ec	 lea	 ecx, DWORD PTR _name$[ebp]
  01abb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01ac1	e9 ec 02 00 00	 jmp	 $L207092
$L207109:

; 320  : 
; 321  : 	if((pDibDown = pSkin->GetDibBmp(name + "down")) == NULL){

  01ac6	68 00 00 00 00	 push	 OFFSET FLAT:$SG207113
  01acb	8d 55 ec	 lea	 edx, DWORD PTR _name$[ebp]
  01ace	52		 push	 edx
  01acf	8d 45 c8	 lea	 eax, DWORD PTR $T209226[ebp]
  01ad2	50		 push	 eax
  01ad3	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  01ad8	83 c4 0c	 add	 esp, 12			; 0000000cH
  01adb	89 45 84	 mov	 DWORD PTR tv398[ebp], eax
  01ade	8b 4d 84	 mov	 ecx, DWORD PTR tv398[ebp]
  01ae1	89 4d 80	 mov	 DWORD PTR tv366[ebp], ecx
  01ae4	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01ae8	8b 4d 80	 mov	 ecx, DWORD PTR tv366[ebp]
  01aeb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01af1	50		 push	 eax
  01af2	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01af5	83 c1 04	 add	 ecx, 4
  01af8	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01afb	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01afe	ff 50 04	 call	 DWORD PTR [eax+4]
  01b01	89 45 f0	 mov	 DWORD PTR _pDibDown$[ebp], eax
  01b04	33 c9		 xor	 ecx, ecx
  01b06	83 7d f0 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  01b0a	0f 94 c1	 sete	 cl
  01b0d	88 4d cf	 mov	 BYTE PTR $T209225[ebp], cl
  01b10	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01b14	8d 4d c8	 lea	 ecx, DWORD PTR $T209226[ebp]
  01b17	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01b1d	0f b6 55 cf	 movzx	 edx, BYTE PTR $T209225[ebp]
  01b21	85 d2		 test	 edx, edx
  01b23	74 6e		 je	 SHORT $L207111

; 322  : 		pDibDown = pSkin->PutDibBmp(name + "down", pSkin->m_strSkinPath);

  01b25	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  01b28	83 c0 08	 add	 eax, 8
  01b2b	51		 push	 ecx
  01b2c	8b cc		 mov	 ecx, esp
  01b2e	89 65 c4	 mov	 DWORD PTR $T209227[ebp], esp
  01b31	50		 push	 eax
  01b32	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01b38	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv399[ebp], eax
  01b3e	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv399[ebp]
  01b44	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv368[ebp], ecx
  01b4a	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01b4e	51		 push	 ecx
  01b4f	8b d4		 mov	 edx, esp
  01b51	89 65 c0	 mov	 DWORD PTR $T209228[ebp], esp
  01b54	68 00 00 00 00	 push	 OFFSET FLAT:$SG207117
  01b59	8d 45 ec	 lea	 eax, DWORD PTR _name$[ebp]
  01b5c	50		 push	 eax
  01b5d	52		 push	 edx
  01b5e	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  01b63	83 c4 0c	 add	 esp, 12			; 0000000cH
  01b66	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv372[ebp], eax
  01b6c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01b70	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01b73	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  01b78	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv369[ebp], eax
  01b7e	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv369[ebp]
  01b84	89 4d f0	 mov	 DWORD PTR _pDibDown$[ebp], ecx

; 323  : 		if(pDibDown == NULL)

  01b87	83 7d f0 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  01b8b	75 06		 jne	 SHORT $L207111

; 324  : 			pDibDown = pDibNormal;

  01b8d	8b 55 e8	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  01b90	89 55 f0	 mov	 DWORD PTR _pDibDown$[ebp], edx
$L207111:

; 325  : 	}
; 326  : 
; 327  : 	if((pDibOver = pSkin->GetDibBmp(name + "over")) == NULL){

  01b93	68 00 00 00 00	 push	 OFFSET FLAT:$SG207122
  01b98	8d 45 ec	 lea	 eax, DWORD PTR _name$[ebp]
  01b9b	50		 push	 eax
  01b9c	8d 4d b8	 lea	 ecx, DWORD PTR $T209230[ebp]
  01b9f	51		 push	 ecx
  01ba0	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  01ba5	83 c4 0c	 add	 esp, 12			; 0000000cH
  01ba8	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv400[ebp], eax
  01bae	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR tv400[ebp]
  01bb4	89 95 68 ff ff
	ff		 mov	 DWORD PTR tv374[ebp], edx
  01bba	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  01bbe	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv374[ebp]
  01bc4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01bca	50		 push	 eax
  01bcb	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01bce	83 c1 04	 add	 ecx, 4
  01bd1	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  01bd4	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  01bd7	ff 52 04	 call	 DWORD PTR [edx+4]
  01bda	89 45 e4	 mov	 DWORD PTR _pDibOver$[ebp], eax
  01bdd	33 c0		 xor	 eax, eax
  01bdf	83 7d e4 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  01be3	0f 94 c0	 sete	 al
  01be6	88 45 bf	 mov	 BYTE PTR $T209229[ebp], al
  01be9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01bed	8d 4d b8	 lea	 ecx, DWORD PTR $T209230[ebp]
  01bf0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01bf6	0f b6 4d bf	 movzx	 ecx, BYTE PTR $T209229[ebp]
  01bfa	85 c9		 test	 ecx, ecx
  01bfc	74 7a		 je	 SHORT $L207120

; 328  : 		pDibOver = pSkin->PutDibBmp(name + "over", pSkin->m_strSkinPath);

  01bfe	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01c01	83 c2 08	 add	 edx, 8
  01c04	51		 push	 ecx
  01c05	8b cc		 mov	 ecx, esp
  01c07	89 65 b4	 mov	 DWORD PTR $T209231[ebp], esp
  01c0a	52		 push	 edx
  01c0b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01c11	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv401[ebp], eax
  01c17	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv401[ebp]
  01c1d	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv376[ebp], eax
  01c23	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  01c27	51		 push	 ecx
  01c28	8b cc		 mov	 ecx, esp
  01c2a	89 65 b0	 mov	 DWORD PTR $T209232[ebp], esp
  01c2d	68 00 00 00 00	 push	 OFFSET FLAT:$SG207126
  01c32	8d 55 ec	 lea	 edx, DWORD PTR _name$[ebp]
  01c35	52		 push	 edx
  01c36	51		 push	 ecx
  01c37	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  01c3c	83 c4 0c	 add	 esp, 12			; 0000000cH
  01c3f	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv380[ebp], eax
  01c45	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01c49	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01c4c	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  01c51	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv377[ebp], eax
  01c57	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv377[ebp]
  01c5d	89 45 e4	 mov	 DWORD PTR _pDibOver$[ebp], eax

; 329  : 		if(pDibOver == NULL)

  01c60	83 7d e4 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  01c64	75 06		 jne	 SHORT $L207127

; 330  : 			pDibOver = pDibDown;

  01c66	8b 4d f0	 mov	 ecx, DWORD PTR _pDibDown$[ebp]
  01c69	89 4d e4	 mov	 DWORD PTR _pDibOver$[ebp], ecx
$L207127:

; 331  : 		if(pDibOver == NULL)

  01c6c	83 7d e4 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  01c70	75 06		 jne	 SHORT $L207120

; 332  : 			pDibOver = pDibNormal;

  01c72	8b 55 e8	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  01c75	89 55 e4	 mov	 DWORD PTR _pDibOver$[ebp], edx
$L207120:

; 333  : 	}
; 334  : 
; 335  : 	pTree->SetButtonBitmap(pDibNormal,pDibOver,pDibDown);	

  01c78	8b 45 f0	 mov	 eax, DWORD PTR _pDibDown$[ebp]
  01c7b	50		 push	 eax
  01c7c	8b 4d e4	 mov	 ecx, DWORD PTR _pDibOver$[ebp]
  01c7f	51		 push	 ecx
  01c80	8b 55 e8	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  01c83	52		 push	 edx
  01c84	8b 4d e0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  01c87	e8 00 00 00 00	 call	 ?SetButtonBitmap@CMyBtnTreeCtrl@@QAEXPAVCDibBitmap@@00@Z ; CMyBtnTreeCtrl::SetButtonBitmap

; 336  : 
; 337  : 	pTree->SetNormalItemTextColor( StringToRGB(pXml->GetAttrib("nortext")) );

  01c8c	6a 01		 push	 1
  01c8e	51		 push	 ecx
  01c8f	8b c4		 mov	 eax, esp
  01c91	89 65 ac	 mov	 DWORD PTR $T209233[ebp], esp
  01c94	68 00 00 00 00	 push	 OFFSET FLAT:$SG207131
  01c99	50		 push	 eax
  01c9a	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01c9d	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01ca2	89 85 54 ff ff
	ff		 mov	 DWORD PTR tv383[ebp], eax
  01ca8	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  01cad	83 c4 08	 add	 esp, 8
  01cb0	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv384[ebp], eax
  01cb6	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv384[ebp]
  01cbc	51		 push	 ecx
  01cbd	8b 4d e0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  01cc0	e8 00 00 00 00	 call	 ?SetNormalItemTextColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetNormalItemTextColor

; 338  : 	pTree->SetSelectItemBKColor( StringToRGB(pXml->GetAttrib("selbk")) );

  01cc5	6a 01		 push	 1
  01cc7	51		 push	 ecx
  01cc8	8b d4		 mov	 edx, esp
  01cca	89 65 a8	 mov	 DWORD PTR $T209234[ebp], esp
  01ccd	68 00 00 00 00	 push	 OFFSET FLAT:$SG207134
  01cd2	52		 push	 edx
  01cd3	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01cd6	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01cdb	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv387[ebp], eax
  01ce1	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  01ce6	83 c4 08	 add	 esp, 8
  01ce9	89 85 48 ff ff
	ff		 mov	 DWORD PTR tv388[ebp], eax
  01cef	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv388[ebp]
  01cf5	50		 push	 eax
  01cf6	8b 4d e0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  01cf9	e8 00 00 00 00	 call	 ?SetSelectItemBKColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetSelectItemBKColor

; 339  : 	pTree->SetSelectItemTextColor( StringToRGB( pXml->GetAttrib("seltext")) );

  01cfe	6a 01		 push	 1
  01d00	51		 push	 ecx
  01d01	8b cc		 mov	 ecx, esp
  01d03	89 65 a4	 mov	 DWORD PTR $T209235[ebp], esp
  01d06	68 00 00 00 00	 push	 OFFSET FLAT:$SG207137
  01d0b	51		 push	 ecx
  01d0c	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01d0f	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01d14	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv391[ebp], eax
  01d1a	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  01d1f	83 c4 08	 add	 esp, 8
  01d22	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv392[ebp], eax
  01d28	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR tv392[ebp]
  01d2e	52		 push	 edx
  01d2f	8b 4d e0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  01d32	e8 00 00 00 00	 call	 ?SetSelectItemTextColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetSelectItemTextColor

; 340  : 	pTree->SetBackColor( StringToRGB(pXml->GetAttrib("bk")) );

  01d37	6a 01		 push	 1
  01d39	51		 push	 ecx
  01d3a	8b c4		 mov	 eax, esp
  01d3c	89 65 a0	 mov	 DWORD PTR $T209236[ebp], esp
  01d3f	68 00 00 00 00	 push	 OFFSET FLAT:$SG207140
  01d44	50		 push	 eax
  01d45	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01d48	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01d4d	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv395[ebp], eax
  01d53	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  01d58	83 c4 08	 add	 esp, 8
  01d5b	89 85 38 ff ff
	ff		 mov	 DWORD PTR tv396[ebp], eax
  01d61	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv396[ebp]
  01d67	51		 push	 ecx
  01d68	8b 4d e0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  01d6b	e8 00 00 00 00	 call	 ?SetBackColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetBackColor

; 341  : 	pTree->SetScrollBitmap(pSkin->GetDibBmp("ScrollVert"), pSkin->GetDibBmp("ScrollHorz"));

  01d70	68 00 00 00 00	 push	 OFFSET FLAT:$SG207141
  01d75	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01d78	83 c1 04	 add	 ecx, 4
  01d7b	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01d7e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01d81	ff 50 04	 call	 DWORD PTR [eax+4]
  01d84	50		 push	 eax
  01d85	68 00 00 00 00	 push	 OFFSET FLAT:$SG207142
  01d8a	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01d8d	83 c1 04	 add	 ecx, 4
  01d90	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01d93	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01d96	ff 50 04	 call	 DWORD PTR [eax+4]
  01d99	50		 push	 eax
  01d9a	8b 4d e0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  01d9d	e8 00 00 00 00	 call	 ?SetScrollBitmap@CMyTreeCtrl@@QAEXPAVCDibBitmap@@0@Z ; CMyTreeCtrl::SetScrollBitmap

; 342  : }

  01da2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01da9	8d 4d ec	 lea	 ecx, DWORD PTR _name$[ebp]
  01dac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L207092:
  01db2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01db5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01dbc	8b e5		 mov	 esp, ebp
  01dbe	5d		 pop	 ebp
  01dbf	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L209237:
  0020a	8d 4d ec	 lea	 ecx, DWORD PTR _name$[ebp]
  0020d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209238:
  00213	8d 4d d8	 lea	 ecx, DWORD PTR $T209222[ebp]
  00216	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209239:
  0021c	8b 4d d4	 mov	 ecx, DWORD PTR $T209223[ebp]
  0021f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209241:
  00225	8d 4d c8	 lea	 ecx, DWORD PTR $T209226[ebp]
  00228	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209242:
  0022e	8b 4d c4	 mov	 ecx, DWORD PTR $T209227[ebp]
  00231	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209244:
  00237	8d 4d b8	 lea	 ecx, DWORD PTR $T209230[ebp]
  0023a	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209245:
  00240	8b 4d b4	 mov	 ecx, DWORD PTR $T209231[ebp]
  00243	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  00249	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209252
  0024e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateBtnTree
PUBLIC	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
EXTRN	__imp_?GetBuffer@?$CSimpleStringT@D$00@ATL@@QAEPADH@Z:NEAR
EXTRN	__imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ:NEAR
EXTRN	__imp_?Mid@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z:NEAR
EXTRN	__imp__sscanf:NEAR
EXTRN	?AfxGetUIManager@@YAPAVIUIManager@@XZ:NEAR	; AfxGetUIManager
xdata$x	SEGMENT
$T209276 DD	0ffffffffH
	DD	FLAT:$L209263
	DD	00H
	DD	FLAT:$L209264
	DD	01H
	DD	FLAT:$L209265
	DD	02H
	DD	FLAT:$L209266
	DD	03H
	DD	FLAT:$L209267
	DD	04H
	DD	FLAT:$L209268
	DD	03H
	DD	FLAT:$L209269
	DD	06H
	DD	FLAT:$L209270
	DD	03H
	DD	FLAT:$L209271
	DD	08H
	DD	FLAT:$L209272
$T209274 DD	019930520H
	DD	0aH
	DD	FLAT:$T209276
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv190 = -124						; size = 4
tv185 = -120						; size = 4
tv209 = -116						; size = 4
tv216 = -112						; size = 4
tv207 = -108						; size = 4
tv215 = -104						; size = 4
tv205 = -100						; size = 4
tv214 = -96						; size = 4
tv203 = -92						; size = 4
tv66 = -88						; size = 4
tv201 = -84						; size = 4
tv69 = -80						; size = 4
tv199 = -76						; size = 4
tv72 = -72						; size = 4
$T209262 = -68						; size = 4
$T209261 = -64						; size = 4
$T209260 = -60						; size = 4
$T209259 = -56						; size = 4
$T209258 = -52						; size = 4
$T209257 = -48						; size = 4
$T209256 = -44						; size = 4
_nb$ = -40						; size = 4
_r$ = -36						; size = 4
_ng$ = -32						; size = 4
_g$ = -28						; size = 4
_b$ = -24						; size = 4
_nr$ = -20						; size = 4
_color$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
_bChangeColor$ = 12					; size = 4
?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC NEAR ; CreateControlFactory::StringToRGB

; 346  : {

  01dc0	55		 push	 ebp
  01dc1	8b ec		 mov	 ebp, esp
  01dc3	6a ff		 push	 -1
  01dc5	68 00 00 00 00	 push	 __ehhandler$?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
  01dca	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01dd0	50		 push	 eax
  01dd1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01dd8	83 ec 70	 sub	 esp, 112		; 00000070H
  01ddb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 347  : 	CString r,g,b;	

  01de2	8d 4d dc	 lea	 ecx, DWORD PTR _r$[ebp]
  01de5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01deb	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01def	8d 4d e4	 lea	 ecx, DWORD PTR _g$[ebp]
  01df2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01df8	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01dfc	8d 4d e8	 lea	 ecx, DWORD PTR _b$[ebp]
  01dff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01e05	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 348  : 	r = "0"+str.Mid(0,2);

  01e09	6a 02		 push	 2
  01e0b	6a 00		 push	 0
  01e0d	8d 45 d4	 lea	 eax, DWORD PTR $T209256[ebp]
  01e10	50		 push	 eax
  01e11	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  01e14	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Mid@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z
  01e1a	89 45 b8	 mov	 DWORD PTR tv72[ebp], eax
  01e1d	8b 4d b8	 mov	 ecx, DWORD PTR tv72[ebp]
  01e20	89 4d b4	 mov	 DWORD PTR tv199[ebp], ecx
  01e23	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01e27	8b 55 b4	 mov	 edx, DWORD PTR tv199[ebp]
  01e2a	52		 push	 edx
  01e2b	68 00 00 00 00	 push	 OFFSET FLAT:$SG207152
  01e30	8d 45 d0	 lea	 eax, DWORD PTR $T209257[ebp]
  01e33	50		 push	 eax
  01e34	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
  01e39	83 c4 0c	 add	 esp, 12			; 0000000cH
  01e3c	89 45 b0	 mov	 DWORD PTR tv69[ebp], eax
  01e3f	8b 4d b0	 mov	 ecx, DWORD PTR tv69[ebp]
  01e42	89 4d ac	 mov	 DWORD PTR tv201[ebp], ecx
  01e45	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  01e49	8b 55 ac	 mov	 edx, DWORD PTR tv201[ebp]
  01e4c	52		 push	 edx
  01e4d	8d 4d dc	 lea	 ecx, DWORD PTR _r$[ebp]
  01e50	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  01e56	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01e5a	8d 4d d0	 lea	 ecx, DWORD PTR $T209257[ebp]
  01e5d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01e63	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01e67	8d 4d d4	 lea	 ecx, DWORD PTR $T209256[ebp]
  01e6a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 349  : 	g = "0"+str.Mid(2,2);

  01e70	6a 02		 push	 2
  01e72	6a 02		 push	 2
  01e74	8d 45 cc	 lea	 eax, DWORD PTR $T209258[ebp]
  01e77	50		 push	 eax
  01e78	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  01e7b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Mid@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z
  01e81	89 45 a8	 mov	 DWORD PTR tv66[ebp], eax
  01e84	8b 4d a8	 mov	 ecx, DWORD PTR tv66[ebp]
  01e87	89 4d a4	 mov	 DWORD PTR tv203[ebp], ecx
  01e8a	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  01e8e	8b 55 a4	 mov	 edx, DWORD PTR tv203[ebp]
  01e91	52		 push	 edx
  01e92	68 00 00 00 00	 push	 OFFSET FLAT:$SG207155
  01e97	8d 45 c8	 lea	 eax, DWORD PTR $T209259[ebp]
  01e9a	50		 push	 eax
  01e9b	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
  01ea0	83 c4 0c	 add	 esp, 12			; 0000000cH
  01ea3	89 45 a0	 mov	 DWORD PTR tv214[ebp], eax
  01ea6	8b 4d a0	 mov	 ecx, DWORD PTR tv214[ebp]
  01ea9	89 4d 9c	 mov	 DWORD PTR tv205[ebp], ecx
  01eac	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  01eb0	8b 55 9c	 mov	 edx, DWORD PTR tv205[ebp]
  01eb3	52		 push	 edx
  01eb4	8d 4d e4	 lea	 ecx, DWORD PTR _g$[ebp]
  01eb7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  01ebd	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  01ec1	8d 4d c8	 lea	 ecx, DWORD PTR $T209259[ebp]
  01ec4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01eca	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01ece	8d 4d cc	 lea	 ecx, DWORD PTR $T209258[ebp]
  01ed1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 350  : 	b = "0"+str.Mid(4,2);

  01ed7	6a 02		 push	 2
  01ed9	6a 04		 push	 4
  01edb	8d 45 c4	 lea	 eax, DWORD PTR $T209260[ebp]
  01ede	50		 push	 eax
  01edf	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  01ee2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Mid@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z
  01ee8	89 45 98	 mov	 DWORD PTR tv215[ebp], eax
  01eeb	8b 4d 98	 mov	 ecx, DWORD PTR tv215[ebp]
  01eee	89 4d 94	 mov	 DWORD PTR tv207[ebp], ecx
  01ef1	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  01ef5	8b 55 94	 mov	 edx, DWORD PTR tv207[ebp]
  01ef8	52		 push	 edx
  01ef9	68 00 00 00 00	 push	 OFFSET FLAT:$SG207158
  01efe	8d 45 c0	 lea	 eax, DWORD PTR $T209261[ebp]
  01f01	50		 push	 eax
  01f02	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
  01f07	83 c4 0c	 add	 esp, 12			; 0000000cH
  01f0a	89 45 90	 mov	 DWORD PTR tv216[ebp], eax
  01f0d	8b 4d 90	 mov	 ecx, DWORD PTR tv216[ebp]
  01f10	89 4d 8c	 mov	 DWORD PTR tv209[ebp], ecx
  01f13	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  01f17	8b 55 8c	 mov	 edx, DWORD PTR tv209[ebp]
  01f1a	52		 push	 edx
  01f1b	8d 4d e8	 lea	 ecx, DWORD PTR _b$[ebp]
  01f1e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  01f24	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  01f28	8d 4d c0	 lea	 ecx, DWORD PTR $T209261[ebp]
  01f2b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01f31	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01f35	8d 4d c4	 lea	 ecx, DWORD PTR $T209260[ebp]
  01f38	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 351  : 	int nr,ng,nb;
; 352  : 	sscanf(r.GetBuffer(r.GetLength()),"%x",&nr);

  01f3e	8d 45 ec	 lea	 eax, DWORD PTR _nr$[ebp]
  01f41	50		 push	 eax
  01f42	68 00 00 00 00	 push	 OFFSET FLAT:$SG207162
  01f47	8d 4d dc	 lea	 ecx, DWORD PTR _r$[ebp]
  01f4a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  01f50	50		 push	 eax
  01f51	8d 4d dc	 lea	 ecx, DWORD PTR _r$[ebp]
  01f54	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetBuffer@?$CSimpleStringT@D$00@ATL@@QAEPADH@Z
  01f5a	50		 push	 eax
  01f5b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf
  01f61	83 c4 0c	 add	 esp, 12			; 0000000cH

; 353  : 	sscanf(g.GetBuffer(g.GetLength()),"%x",&ng);

  01f64	8d 4d e0	 lea	 ecx, DWORD PTR _ng$[ebp]
  01f67	51		 push	 ecx
  01f68	68 00 00 00 00	 push	 OFFSET FLAT:$SG207163
  01f6d	8d 4d e4	 lea	 ecx, DWORD PTR _g$[ebp]
  01f70	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  01f76	50		 push	 eax
  01f77	8d 4d e4	 lea	 ecx, DWORD PTR _g$[ebp]
  01f7a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetBuffer@?$CSimpleStringT@D$00@ATL@@QAEPADH@Z
  01f80	50		 push	 eax
  01f81	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf
  01f87	83 c4 0c	 add	 esp, 12			; 0000000cH

; 354  : 	sscanf(b.GetBuffer(b.GetLength()),"%x",&nb);

  01f8a	8d 55 d8	 lea	 edx, DWORD PTR _nb$[ebp]
  01f8d	52		 push	 edx
  01f8e	68 00 00 00 00	 push	 OFFSET FLAT:$SG207164
  01f93	8d 4d e8	 lea	 ecx, DWORD PTR _b$[ebp]
  01f96	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  01f9c	50		 push	 eax
  01f9d	8d 4d e8	 lea	 ecx, DWORD PTR _b$[ebp]
  01fa0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetBuffer@?$CSimpleStringT@D$00@ATL@@QAEPADH@Z
  01fa6	50		 push	 eax
  01fa7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf
  01fad	83 c4 0c	 add	 esp, 12			; 0000000cH

; 355  : 
; 356  : 	COLORREF color = RGB(nr,ng,nb);

  01fb0	0f b6 45 ec	 movzx	 eax, BYTE PTR _nr$[ebp]
  01fb4	0f b6 4d e0	 movzx	 ecx, BYTE PTR _ng$[ebp]
  01fb8	c1 e1 08	 shl	 ecx, 8
  01fbb	0b c1		 or	 eax, ecx
  01fbd	0f b6 55 d8	 movzx	 edx, BYTE PTR _nb$[ebp]
  01fc1	c1 e2 10	 shl	 edx, 16			; 00000010H
  01fc4	0b c2		 or	 eax, edx
  01fc6	89 45 f0	 mov	 DWORD PTR _color$[ebp], eax

; 357  : 
; 358  : 	if(bChangeColor)

  01fc9	83 7d 0c 00	 cmp	 DWORD PTR _bChangeColor$[ebp], 0
  01fcd	74 25		 je	 SHORT $L207172

; 359  : 		::AfxGetUIManager()->UIGetChangeColorMgr()->ChangeColor(color);

  01fcf	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  01fd4	89 45 88	 mov	 DWORD PTR tv185[ebp], eax
  01fd7	8b 45 88	 mov	 eax, DWORD PTR tv185[ebp]
  01fda	8b 10		 mov	 edx, DWORD PTR [eax]
  01fdc	8b 4d 88	 mov	 ecx, DWORD PTR tv185[ebp]
  01fdf	ff 52 2c	 call	 DWORD PTR [edx+44]
  01fe2	89 45 84	 mov	 DWORD PTR tv190[ebp], eax
  01fe5	8d 45 f0	 lea	 eax, DWORD PTR _color$[ebp]
  01fe8	50		 push	 eax
  01fe9	8b 4d 84	 mov	 ecx, DWORD PTR tv190[ebp]
  01fec	8b 11		 mov	 edx, DWORD PTR [ecx]
  01fee	8b 4d 84	 mov	 ecx, DWORD PTR tv190[ebp]
  01ff1	ff 52 24	 call	 DWORD PTR [edx+36]
$L207172:

; 360  : 
; 361  : 	return color;	

  01ff4	8b 45 f0	 mov	 eax, DWORD PTR _color$[ebp]
  01ff7	89 45 bc	 mov	 DWORD PTR $T209262[ebp], eax
  01ffa	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01ffe	8d 4d e8	 lea	 ecx, DWORD PTR _b$[ebp]
  02001	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02007	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0200b	8d 4d e4	 lea	 ecx, DWORD PTR _g$[ebp]
  0200e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02014	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02018	8d 4d dc	 lea	 ecx, DWORD PTR _r$[ebp]
  0201b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02021	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02028	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  0202b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02031	8b 45 bc	 mov	 eax, DWORD PTR $T209262[ebp]

; 362  : }

  02034	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02037	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0203e	8b e5		 mov	 esp, ebp
  02040	5d		 pop	 ebp
  02041	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L209263:
  00253	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  00256	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209264:
  0025c	8d 4d dc	 lea	 ecx, DWORD PTR _r$[ebp]
  0025f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209265:
  00265	8d 4d e4	 lea	 ecx, DWORD PTR _g$[ebp]
  00268	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209266:
  0026e	8d 4d e8	 lea	 ecx, DWORD PTR _b$[ebp]
  00271	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209267:
  00277	8d 4d d4	 lea	 ecx, DWORD PTR $T209256[ebp]
  0027a	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209268:
  00280	8d 4d d0	 lea	 ecx, DWORD PTR $T209257[ebp]
  00283	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209269:
  00289	8d 4d cc	 lea	 ecx, DWORD PTR $T209258[ebp]
  0028c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209270:
  00292	8d 4d c8	 lea	 ecx, DWORD PTR $T209259[ebp]
  00295	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209271:
  0029b	8d 4d c4	 lea	 ecx, DWORD PTR $T209260[ebp]
  0029e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209272:
  002a4	8d 4d c0	 lea	 ecx, DWORD PTR $T209261[ebp]
  002a7	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:
  002ad	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209274
  002b2	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; CreateControlFactory::StringToRGB
EXTRN	?SetColor@CMyListCtrl@@QAEXKKKKK@Z:NEAR		; CMyListCtrl::SetColor
EXTRN	?SetScrollBitmap@CMyListCtrl@@QAEXPAVCDibBitmap@@0@Z:NEAR ; CMyListCtrl::SetScrollBitmap
xdata$x	SEGMENT
$T209297 DD	0ffffffffH
	DD	FLAT:$L209292
	DD	0ffffffffH
	DD	FLAT:$L209293
$T209295 DD	019930520H
	DD	02H
	DD	FLAT:$T209297
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
tv285 = -120						; size = 4
tv287 = -116						; size = 4
tv283 = -112						; size = 4
tv286 = -108						; size = 4
tv281 = -104						; size = 4
tv280 = -100						; size = 4
tv277 = -96						; size = 4
tv276 = -92						; size = 4
tv272 = -88						; size = 4
tv271 = -84						; size = 4
tv267 = -80						; size = 4
tv266 = -76						; size = 4
tv262 = -72						; size = 4
tv261 = -68						; size = 4
tv257 = -64						; size = 4
tv256 = -60						; size = 4
$T209285 = -56						; size = 4
$T209284 = -52						; size = 4
$T209283 = -48						; size = 4
$T209282 = -44						; size = 4
$T209281 = -40						; size = 4
$T209280 = -36						; size = 4
$T209279 = -32						; size = 4
$T209278 = -28						; size = 4
_V$ = -24						; size = 4
_pList$ = -20						; size = 4
_H$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateList

; 365  : {

  02050	55		 push	 ebp
  02051	8b ec		 mov	 ebp, esp
  02053	6a ff		 push	 -1
  02055	68 00 00 00 00	 push	 __ehhandler$?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  0205a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02060	50		 push	 eax
  02061	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02068	83 ec 6c	 sub	 esp, 108		; 0000006cH

; 366  : 	CMyListCtrl* pList = (CMyListCtrl*)pWnd;

  0206b	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  0206e	89 45 ec	 mov	 DWORD PTR _pList$[ebp], eax

; 367  : 	pList->SetColor(StringToRGB( pXml->GetAttrib("oddbk")),
; 368  : 					StringToRGB( pXml->GetAttrib("evenbk")),
; 369  : 					StringToRGB( pXml->GetAttrib("nortext")),
; 370  : 					StringToRGB( pXml->GetAttrib("selbk")),
; 371  : 					StringToRGB( pXml->GetAttrib("seltext")));

  02071	6a 01		 push	 1
  02073	51		 push	 ecx
  02074	8b cc		 mov	 ecx, esp
  02076	89 65 e4	 mov	 DWORD PTR $T209278[ebp], esp
  02079	68 00 00 00 00	 push	 OFFSET FLAT:$SG207192
  0207e	51		 push	 ecx
  0207f	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02082	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02087	89 45 c4	 mov	 DWORD PTR tv256[ebp], eax
  0208a	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  0208f	83 c4 08	 add	 esp, 8
  02092	89 45 c0	 mov	 DWORD PTR tv257[ebp], eax
  02095	8b 55 c0	 mov	 edx, DWORD PTR tv257[ebp]
  02098	52		 push	 edx
  02099	6a 01		 push	 1
  0209b	51		 push	 ecx
  0209c	8b c4		 mov	 eax, esp
  0209e	89 65 e0	 mov	 DWORD PTR $T209279[ebp], esp
  020a1	68 00 00 00 00	 push	 OFFSET FLAT:$SG207193
  020a6	50		 push	 eax
  020a7	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  020aa	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  020af	89 45 bc	 mov	 DWORD PTR tv261[ebp], eax
  020b2	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  020b7	83 c4 08	 add	 esp, 8
  020ba	89 45 b8	 mov	 DWORD PTR tv262[ebp], eax
  020bd	8b 4d b8	 mov	 ecx, DWORD PTR tv262[ebp]
  020c0	51		 push	 ecx
  020c1	6a 01		 push	 1
  020c3	51		 push	 ecx
  020c4	8b d4		 mov	 edx, esp
  020c6	89 65 dc	 mov	 DWORD PTR $T209280[ebp], esp
  020c9	68 00 00 00 00	 push	 OFFSET FLAT:$SG207194
  020ce	52		 push	 edx
  020cf	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  020d2	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  020d7	89 45 b4	 mov	 DWORD PTR tv266[ebp], eax
  020da	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  020df	83 c4 08	 add	 esp, 8
  020e2	89 45 b0	 mov	 DWORD PTR tv267[ebp], eax
  020e5	8b 45 b0	 mov	 eax, DWORD PTR tv267[ebp]
  020e8	50		 push	 eax
  020e9	6a 01		 push	 1
  020eb	51		 push	 ecx
  020ec	8b cc		 mov	 ecx, esp
  020ee	89 65 d8	 mov	 DWORD PTR $T209281[ebp], esp
  020f1	68 00 00 00 00	 push	 OFFSET FLAT:$SG207195
  020f6	51		 push	 ecx
  020f7	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  020fa	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  020ff	89 45 ac	 mov	 DWORD PTR tv271[ebp], eax
  02102	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02107	83 c4 08	 add	 esp, 8
  0210a	89 45 a8	 mov	 DWORD PTR tv272[ebp], eax
  0210d	8b 55 a8	 mov	 edx, DWORD PTR tv272[ebp]
  02110	52		 push	 edx
  02111	6a 01		 push	 1
  02113	51		 push	 ecx
  02114	8b c4		 mov	 eax, esp
  02116	89 65 d4	 mov	 DWORD PTR $T209282[ebp], esp
  02119	68 00 00 00 00	 push	 OFFSET FLAT:$SG207196
  0211e	50		 push	 eax
  0211f	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02122	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02127	89 45 a4	 mov	 DWORD PTR tv276[ebp], eax
  0212a	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  0212f	83 c4 08	 add	 esp, 8
  02132	89 45 a0	 mov	 DWORD PTR tv277[ebp], eax
  02135	8b 4d a0	 mov	 ecx, DWORD PTR tv277[ebp]
  02138	51		 push	 ecx
  02139	8b 4d ec	 mov	 ecx, DWORD PTR _pList$[ebp]
  0213c	e8 00 00 00 00	 call	 ?SetColor@CMyListCtrl@@QAEXKKKKK@Z ; CMyListCtrl::SetColor

; 372  : 
; 373  : 	pList->m_clrPlayItem=StringToRGB( pXml->GetAttrib("playbk"),false);

  02141	6a 00		 push	 0
  02143	51		 push	 ecx
  02144	8b d4		 mov	 edx, esp
  02146	89 65 d0	 mov	 DWORD PTR $T209283[ebp], esp
  02149	68 00 00 00 00	 push	 OFFSET FLAT:$SG207199
  0214e	52		 push	 edx
  0214f	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02152	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02157	89 45 9c	 mov	 DWORD PTR tv280[ebp], eax
  0215a	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  0215f	83 c4 08	 add	 esp, 8
  02162	89 45 98	 mov	 DWORD PTR tv281[ebp], eax
  02165	8b 45 ec	 mov	 eax, DWORD PTR _pList$[ebp]
  02168	8b 4d 98	 mov	 ecx, DWORD PTR tv281[ebp]
  0216b	89 88 50 01 00
	00		 mov	 DWORD PTR [eax+336], ecx

; 374  : 
; 375  : 	CDibBitmap *H = pSkin->GetDibBmp(pXml->GetAttrib("scrollH"));

  02171	68 00 00 00 00	 push	 OFFSET FLAT:$SG207202
  02176	8d 55 cc	 lea	 edx, DWORD PTR $T209284[ebp]
  02179	52		 push	 edx
  0217a	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0217d	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02182	89 45 94	 mov	 DWORD PTR tv286[ebp], eax
  02185	8b 45 94	 mov	 eax, DWORD PTR tv286[ebp]
  02188	89 45 90	 mov	 DWORD PTR tv283[ebp], eax
  0218b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  02192	8b 4d 90	 mov	 ecx, DWORD PTR tv283[ebp]
  02195	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0219b	50		 push	 eax
  0219c	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0219f	83 c1 04	 add	 ecx, 4
  021a2	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  021a5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  021a8	ff 50 04	 call	 DWORD PTR [eax+4]
  021ab	89 45 f0	 mov	 DWORD PTR _H$[ebp], eax
  021ae	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  021b5	8d 4d cc	 lea	 ecx, DWORD PTR $T209284[ebp]
  021b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 376  : 	if(H == NULL)

  021be	83 7d f0 00	 cmp	 DWORD PTR _H$[ebp], 0
  021c2	75 17		 jne	 SHORT $L207203

; 377  : 		H = pSkin->GetDibBmp("ScrollHorz");

  021c4	68 00 00 00 00	 push	 OFFSET FLAT:$SG207204
  021c9	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  021cc	83 c1 04	 add	 ecx, 4
  021cf	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  021d2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  021d5	ff 50 04	 call	 DWORD PTR [eax+4]
  021d8	89 45 f0	 mov	 DWORD PTR _H$[ebp], eax
$L207203:

; 378  : 
; 379  : 	CDibBitmap *V = pSkin->GetDibBmp(pXml->GetAttrib("scrollV"));

  021db	68 00 00 00 00	 push	 OFFSET FLAT:$SG207207
  021e0	8d 4d c8	 lea	 ecx, DWORD PTR $T209285[ebp]
  021e3	51		 push	 ecx
  021e4	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  021e7	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  021ec	89 45 8c	 mov	 DWORD PTR tv287[ebp], eax
  021ef	8b 55 8c	 mov	 edx, DWORD PTR tv287[ebp]
  021f2	89 55 88	 mov	 DWORD PTR tv285[ebp], edx
  021f5	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  021fc	8b 4d 88	 mov	 ecx, DWORD PTR tv285[ebp]
  021ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  02205	50		 push	 eax
  02206	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02209	83 c1 04	 add	 ecx, 4
  0220c	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  0220f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  02212	ff 52 04	 call	 DWORD PTR [edx+4]
  02215	89 45 e8	 mov	 DWORD PTR _V$[ebp], eax
  02218	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0221f	8d 4d c8	 lea	 ecx, DWORD PTR $T209285[ebp]
  02222	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 380  : 	if(V == NULL)

  02228	83 7d e8 00	 cmp	 DWORD PTR _V$[ebp], 0
  0222c	75 17		 jne	 SHORT $L207208

; 381  : 		V = pSkin->GetDibBmp("ScrollVert");

  0222e	68 00 00 00 00	 push	 OFFSET FLAT:$SG207209
  02233	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02236	83 c1 04	 add	 ecx, 4
  02239	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  0223c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0223f	ff 52 04	 call	 DWORD PTR [edx+4]
  02242	89 45 e8	 mov	 DWORD PTR _V$[ebp], eax
$L207208:

; 382  : 
; 383  : 
; 384  : 	pList->SetScrollBitmap(V ,H);

  02245	8b 45 f0	 mov	 eax, DWORD PTR _H$[ebp]
  02248	50		 push	 eax
  02249	8b 4d e8	 mov	 ecx, DWORD PTR _V$[ebp]
  0224c	51		 push	 ecx
  0224d	8b 4d ec	 mov	 ecx, DWORD PTR _pList$[ebp]
  02250	e8 00 00 00 00	 call	 ?SetScrollBitmap@CMyListCtrl@@QAEXPAVCDibBitmap@@0@Z ; CMyListCtrl::SetScrollBitmap

; 385  : }

  02255	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02258	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0225f	8b e5		 mov	 esp, ebp
  02261	5d		 pop	 ebp
  02262	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L209292:
  002b7	8d 4d cc	 lea	 ecx, DWORD PTR $T209284[ebp]
  002ba	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L209293:
  002c0	8d 4d c8	 lea	 ecx, DWORD PTR $T209285[ebp]
  002c3	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  002c9	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209295
  002ce	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateList
; Function compile flags: /Odt
_TEXT	SEGMENT
tv204 = -52						; size = 4
tv203 = -48						; size = 4
tv200 = -44						; size = 4
tv199 = -40						; size = 4
tv196 = -36						; size = 4
tv195 = -32						; size = 4
tv192 = -28						; size = 4
tv191 = -24						; size = 4
$T209302 = -20						; size = 4
$T209301 = -16						; size = 4
$T209300 = -12						; size = 4
$T209299 = -8						; size = 4
_pTree$ = -4						; size = 4
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateTree

; 389  : {

  02270	55		 push	 ebp
  02271	8b ec		 mov	 ebp, esp
  02273	83 ec 34	 sub	 esp, 52			; 00000034H

; 390  : 	CMyTreeCtrl *pTree = (CMyTreeCtrl*) pWnd;

  02276	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  02279	89 45 fc	 mov	 DWORD PTR _pTree$[ebp], eax

; 391  : 	pTree->SetNormalItemTextColor( StringToRGB(pXml->GetAttrib("nortext")) );

  0227c	6a 01		 push	 1
  0227e	51		 push	 ecx
  0227f	8b cc		 mov	 ecx, esp
  02281	89 65 f8	 mov	 DWORD PTR $T209299[ebp], esp
  02284	68 00 00 00 00	 push	 OFFSET FLAT:$SG207220
  02289	51		 push	 ecx
  0228a	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0228d	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02292	89 45 e8	 mov	 DWORD PTR tv191[ebp], eax
  02295	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  0229a	83 c4 08	 add	 esp, 8
  0229d	89 45 e4	 mov	 DWORD PTR tv192[ebp], eax
  022a0	8b 55 e4	 mov	 edx, DWORD PTR tv192[ebp]
  022a3	52		 push	 edx
  022a4	8b 4d fc	 mov	 ecx, DWORD PTR _pTree$[ebp]
  022a7	e8 00 00 00 00	 call	 ?SetNormalItemTextColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetNormalItemTextColor

; 392  : 	pTree->SetSelectItemBKColor( StringToRGB(pXml->GetAttrib("selbk")) );

  022ac	6a 01		 push	 1
  022ae	51		 push	 ecx
  022af	8b c4		 mov	 eax, esp
  022b1	89 65 f4	 mov	 DWORD PTR $T209300[ebp], esp
  022b4	68 00 00 00 00	 push	 OFFSET FLAT:$SG207223
  022b9	50		 push	 eax
  022ba	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  022bd	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  022c2	89 45 e0	 mov	 DWORD PTR tv195[ebp], eax
  022c5	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  022ca	83 c4 08	 add	 esp, 8
  022cd	89 45 dc	 mov	 DWORD PTR tv196[ebp], eax
  022d0	8b 4d dc	 mov	 ecx, DWORD PTR tv196[ebp]
  022d3	51		 push	 ecx
  022d4	8b 4d fc	 mov	 ecx, DWORD PTR _pTree$[ebp]
  022d7	e8 00 00 00 00	 call	 ?SetSelectItemBKColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetSelectItemBKColor

; 393  : 	pTree->SetSelectItemTextColor( StringToRGB( pXml->GetAttrib("seltext")) );

  022dc	6a 01		 push	 1
  022de	51		 push	 ecx
  022df	8b d4		 mov	 edx, esp
  022e1	89 65 f0	 mov	 DWORD PTR $T209301[ebp], esp
  022e4	68 00 00 00 00	 push	 OFFSET FLAT:$SG207226
  022e9	52		 push	 edx
  022ea	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  022ed	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  022f2	89 45 d8	 mov	 DWORD PTR tv199[ebp], eax
  022f5	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  022fa	83 c4 08	 add	 esp, 8
  022fd	89 45 d4	 mov	 DWORD PTR tv200[ebp], eax
  02300	8b 45 d4	 mov	 eax, DWORD PTR tv200[ebp]
  02303	50		 push	 eax
  02304	8b 4d fc	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02307	e8 00 00 00 00	 call	 ?SetSelectItemTextColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetSelectItemTextColor

; 394  : 	pTree->SetBackColor( StringToRGB(pXml->GetAttrib("bk")) );

  0230c	6a 01		 push	 1
  0230e	51		 push	 ecx
  0230f	8b cc		 mov	 ecx, esp
  02311	89 65 ec	 mov	 DWORD PTR $T209302[ebp], esp
  02314	68 00 00 00 00	 push	 OFFSET FLAT:$SG207229
  02319	51		 push	 ecx
  0231a	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0231d	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02322	89 45 d0	 mov	 DWORD PTR tv203[ebp], eax
  02325	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  0232a	83 c4 08	 add	 esp, 8
  0232d	89 45 cc	 mov	 DWORD PTR tv204[ebp], eax
  02330	8b 55 cc	 mov	 edx, DWORD PTR tv204[ebp]
  02333	52		 push	 edx
  02334	8b 4d fc	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02337	e8 00 00 00 00	 call	 ?SetBackColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetBackColor

; 395  : 	pTree->SetScrollBitmap(pSkin->GetDibBmp("ScrollVert"), pSkin->GetDibBmp("ScrollHorz"));

  0233c	68 00 00 00 00	 push	 OFFSET FLAT:$SG207230
  02341	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02344	83 c1 04	 add	 ecx, 4
  02347	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  0234a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0234d	ff 52 04	 call	 DWORD PTR [edx+4]
  02350	50		 push	 eax
  02351	68 00 00 00 00	 push	 OFFSET FLAT:$SG207231
  02356	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02359	83 c1 04	 add	 ecx, 4
  0235c	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  0235f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  02362	ff 52 04	 call	 DWORD PTR [edx+4]
  02365	50		 push	 eax
  02366	8b 4d fc	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02369	e8 00 00 00 00	 call	 ?SetScrollBitmap@CMyTreeCtrl@@QAEXPAVCDibBitmap@@0@Z ; CMyTreeCtrl::SetScrollBitmap

; 396  : }

  0236e	8b e5		 mov	 esp, ebp
  02370	5d		 pop	 ebp
  02371	c3		 ret	 0
?CreateTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateTree
_TEXT	ENDS
EXTRN	__imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ:NEAR
EXTRN	__imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z:NEAR
EXTRN	__imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z:NEAR
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
xdata$x	SEGMENT
$T209315 DD	0ffffffffH
	DD	FLAT:$L209308
$T209313 DD	019930520H
	DD	01H
	DD	FLAT:$T209315
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
_TEXT	SEGMENT
$T209310 = -20						; size = 4
_strResult$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_str1$ = 12						; size = 4
_psz2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z PROC NEAR ; ATL::operator+, COMDAT

; 2023 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T209310[ebp], 0

; 2024 : 		CStringT strResult( str1.GetManager() );

  00022	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ
  0002b	50		 push	 eax
  0002c	8d 4d f0	 lea	 ecx, DWORD PTR _strResult$[ebp]
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2025 : 
; 2026 : 		Concatenate( strResult, str1, str1.GetLength(), psz2, StringLength( psz2 ) );

  0003c	8b 45 10	 mov	 eax, DWORD PTR _psz2$[ebp]
  0003f	50		 push	 eax
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z
  00046	83 c4 04	 add	 esp, 4
  00049	50		 push	 eax
  0004a	8b 4d 10	 mov	 ecx, DWORD PTR _psz2$[ebp]
  0004d	51		 push	 ecx
  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  00057	50		 push	 eax
  00058	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00061	50		 push	 eax
  00062	8d 55 f0	 lea	 edx, DWORD PTR _strResult$[ebp]
  00065	52		 push	 edx
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z
  0006c	83 c4 14	 add	 esp, 20			; 00000014H

; 2027 : 
; 2028 : 		return( strResult );

  0006f	8d 45 f0	 lea	 eax, DWORD PTR _strResult$[ebp]
  00072	50		 push	 eax
  00073	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0007c	8b 4d ec	 mov	 ecx, DWORD PTR $T209310[ebp]
  0007f	83 c9 01	 or	 ecx, 1
  00082	89 4d ec	 mov	 DWORD PTR $T209310[ebp], ecx
  00085	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008c	8d 4d f0	 lea	 ecx, DWORD PTR _strResult$[ebp]
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00095	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2029 : 	}

  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L209308:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _strResult$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209313
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ENDP ; ATL::operator+
;	COMDAT xdata$x
xdata$x	SEGMENT
$T209327 DD	0ffffffffH
	DD	FLAT:$L209320
$T209325 DD	019930520H
	DD	01H
	DD	FLAT:$T209327
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
_TEXT	SEGMENT
$T209322 = -20						; size = 4
_strResult$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_psz1$ = 12						; size = 4
_str2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z PROC NEAR ; ATL::operator+, COMDAT

; 2032 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T209322[ebp], 0

; 2033 : 		CStringT strResult( str2.GetManager() );

  00022	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ
  0002b	50		 push	 eax
  0002c	8d 4d f0	 lea	 ecx, DWORD PTR _strResult$[ebp]
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2034 : 
; 2035 : 		Concatenate( strResult, psz1, StringLength( psz1 ), str2, str2.GetLength() );

  0003c	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  00045	50		 push	 eax
  00046	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0004f	50		 push	 eax
  00050	8b 45 0c	 mov	 eax, DWORD PTR _psz1$[ebp]
  00053	50		 push	 eax
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z
  0005a	83 c4 04	 add	 esp, 4
  0005d	50		 push	 eax
  0005e	8b 4d 0c	 mov	 ecx, DWORD PTR _psz1$[ebp]
  00061	51		 push	 ecx
  00062	8d 55 f0	 lea	 edx, DWORD PTR _strResult$[ebp]
  00065	52		 push	 edx
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z
  0006c	83 c4 14	 add	 esp, 20			; 00000014H

; 2036 : 
; 2037 : 		return( strResult );

  0006f	8d 45 f0	 lea	 eax, DWORD PTR _strResult$[ebp]
  00072	50		 push	 eax
  00073	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0007c	8b 4d ec	 mov	 ecx, DWORD PTR $T209322[ebp]
  0007f	83 c9 01	 or	 ecx, 1
  00082	89 4d ec	 mov	 DWORD PTR $T209322[ebp], ecx
  00085	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008c	8d 4d f0	 lea	 ecx, DWORD PTR _strResult$[ebp]
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00095	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2038 : 	}

  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L209320:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _strResult$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T209325
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ENDP ; ATL::operator+
EXTRN	__imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:NEAR
; Function compile flags: /Odt
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z PROC NEAR ; ATL::operator==, COMDAT

; 2087 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2088 : 		return( str1.Compare( psz2 ) == 0 );

  00003	8b 45 0c	 mov	 eax, DWORD PTR _psz2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _str1$[ebp]
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	40		 inc	 eax

; 2089 : 	}

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ENDP ; ATL::operator==
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z PROC NEAR ; ATL::operator!=, COMDAT

; 2121 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2122 : 		return( str1.Compare( psz2 ) != 0 );

  00003	8b 45 0c	 mov	 eax, DWORD PTR _psz2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _str1$[ebp]
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	f7 d8		 neg	 eax

; 2123 : 	}

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ENDP ; ATL::operator!=
_TEXT	ENDS
END
