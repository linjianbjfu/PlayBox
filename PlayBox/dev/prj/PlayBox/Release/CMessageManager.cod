; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\Core\CMessageManager.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1IMessageObserver@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GIMessageObserver@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1bad_exception@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gbad_exception@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1domain_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gdomain_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@runtime_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1overflow_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Goverflow_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1underflow_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gunderflow_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1range_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Grange_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1IMessageManager@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GIMessageManager@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMessageManager@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IMessageManager@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAEAAV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXABQAUMESSAGE_OBSERVER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@ABQAUMESSAGE_OBSERVER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEAAPAUMESSAGE_OBSERVER@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXABQAVIMessageObserver@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@12@ABQAUMESSAGE_OBSERVER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_List_val@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEABQAUMESSAGE_OBSERVER@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXViterator@12@ABQAVIMessageObserver@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABKABV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAUMESSAGE_OBSERVER@@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@0ABQAUMESSAGE_OBSERVER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Incsize@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_List_ptr@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@0ABQAVIMessageObserver@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Incsize@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU012@0ABQAUMESSAGE_OBSERVER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU012@0ABQAVIMessageObserver@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAUMESSAGE_OBSERVER@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAVIMessageObserver@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0PAUMESSAGE_OBSERVER@@@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0PAUMESSAGE_OBSERVER@@@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABVconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0Uinput_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R1A@?0A@A@overflow_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@out_of_range@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2domain_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3underflow_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@bad_alloc@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCMessageManager@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@exception@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7IMessageObserver@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R3IMessageObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CMessageManager@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4underflow_error@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2overflow_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@range_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3invalid_argument@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3overflow_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4overflow_error@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IMessageObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2IMessageManager@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4domain_error@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVIMessageObserver@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R3bad_exception@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2range_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMessageManager@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7IMessageManager@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3domain_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CMessageManager@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3IMessageManager@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2bad_exception@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4IMessageManager@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CMessageManager@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4invalid_argument@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4range_error@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@logic_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4CMessageManager@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@IMessageManager@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4IMessageObserver@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@runtime_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@invalid_argument@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4bad_exception@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@underflow_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@bad_exception@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2underflow_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3range_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2IMessageObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7underflow_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7overflow_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7bad_exception@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7range_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7domain_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R2invalid_argument@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@length_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@domain_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVIMessageManager@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??0?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >
PUBLIC	??_7CMessageManager@@6B@			; CMessageManager::`vftable'
PUBLIC	??_GCMessageManager@@UAEPAXI@Z			; CMessageManager::`scalar deleting destructor'
PUBLIC	??1IMessageManager@@UAE@XZ			; IMessageManager::~IMessageManager
PUBLIC	??0IMessageManager@@QAE@XZ			; IMessageManager::IMessageManager
PUBLIC	??_R4CMessageManager@@6B@			; CMessageManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMessageManager@@@8			; CMessageManager `RTTI Type Descriptor'
PUBLIC	??_R3CMessageManager@@8				; CMessageManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMessageManager@@8				; CMessageManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CMessageManager@@8			; CMessageManager::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R1A@?0A@A@IMessageManager@@8			; IMessageManager::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVIMessageManager@@@8			; IMessageManager `RTTI Type Descriptor'
PUBLIC	??0CMessageManager@@QAE@XZ			; CMessageManager::CMessageManager
PUBLIC	?AttachMessage@CMessageManager@@UAEXABKPAVIMessageObserver@@W4MESSAGE_OBSERVER_PRIORITY@@@Z ; CMessageManager::AttachMessage
PUBLIC	?AttachMessage@CMessageManager@@UAEXABU_GUID@@PAVIMessageObserver@@W4MESSAGE_OBSERVER_PRIORITY@@@Z ; CMessageManager::AttachMessage
PUBLIC	?DetachMessage@CMessageManager@@UAEXABKPAVIMessageObserver@@@Z ; CMessageManager::DetachMessage
PUBLIC	?DetachMessage@CMessageManager@@UAEXABU_GUID@@PAVIMessageObserver@@@Z ; CMessageManager::DetachMessage
PUBLIC	?QueryObservers@CMessageManager@@UAEXABKAAV?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@Z ; CMessageManager::QueryObservers
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECMessageManager@@UAEPAXI@Z:NEAR		; CMessageManager::`vector deleting destructor'
EXTRN	__imp__InitializeCriticalSection@4:NEAR
xdata$x	SEGMENT
$T66716	DD	0ffffffffH
	DD	FLAT:$L66708
$T66713	DD	019930520H
	DD	01H
	DD	FLAT:$T66716
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CMessageManager@@6B@
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\core\cmessagemanager.cpp
CONST	SEGMENT
??_7CMessageManager@@6B@ DD FLAT:??_R4CMessageManager@@6B@ ; CMessageManager::`vftable'
	DD	FLAT:??_ECMessageManager@@UAEPAXI@Z
	DD	FLAT:?AttachMessage@CMessageManager@@UAEXABKPAVIMessageObserver@@W4MESSAGE_OBSERVER_PRIORITY@@@Z
	DD	FLAT:?DetachMessage@CMessageManager@@UAEXABKPAVIMessageObserver@@@Z
	DD	FLAT:?QueryObservers@CMessageManager@@UAEXABKAAV?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@Z
	DD	FLAT:?AttachMessage@CMessageManager@@UAEXABU_GUID@@PAVIMessageObserver@@W4MESSAGE_OBSERVER_PRIORITY@@@Z
	DD	FLAT:?DetachMessage@CMessageManager@@UAEXABU_GUID@@PAVIMessageObserver@@@Z
CONST	ENDS
;	COMDAT ??_R4CMessageManager@@6B@
rdata$r	SEGMENT
??_R4CMessageManager@@6B@ DD 00H			; CMessageManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMessageManager@@@8
	DD	FLAT:??_R3CMessageManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMessageManager@@@8
_DATA	SEGMENT
??_R0?AVCMessageManager@@@8 DD FLAT:??_7type_info@@6B@	; CMessageManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMessageManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CMessageManager@@8
rdata$r	SEGMENT
??_R3CMessageManager@@8 DD 00H				; CMessageManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMessageManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CMessageManager@@8
rdata$r	SEGMENT
??_R2CMessageManager@@8 DD FLAT:??_R1A@?0A@A@CMessageManager@@8 ; CMessageManager::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@IMessageManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CMessageManager@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CMessageManager@@8 DD FLAT:??_R0?AVCMessageManager@@@8 ; CMessageManager::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IMessageManager@@8
rdata$r	SEGMENT
??_R1A@?0A@A@IMessageManager@@8 DD FLAT:??_R0?AVIMessageManager@@@8 ; IMessageManager::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVIMessageManager@@@8
_DATA	SEGMENT
??_R0?AVIMessageManager@@@8 DD FLAT:??_7type_info@@6B@	; IMessageManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIMessageManager@@', 00H
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CMessageManager@@QAE@XZ PROC NEAR			; CMessageManager::CMessageManager
; _this$ = ecx

; 4    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CMessageManager@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??0IMessageManager@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMessageManager@@6B@
  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 04	 add	 ecx, 4
  0003a	e8 00 00 00 00	 call	 ??0?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >

; 5    : 	InitializeCriticalSection( &m_cs );

  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	83 c1 10	 add	 ecx, 16			; 00000010H
  00045	51		 push	 ecx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4

; 6    : }

  0004c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00053	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L66708:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1IMessageManager@@UAE@XZ ; IMessageManager::~IMessageManager
__ehhandler$??0CMessageManager@@QAE@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T66713
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CMessageManager@@QAE@XZ ENDP				; CMessageManager::CMessageManager
PUBLIC	??_7IMessageManager@@6B@			; IMessageManager::`vftable'
PUBLIC	??_GIMessageManager@@UAEPAXI@Z			; IMessageManager::`scalar deleting destructor'
PUBLIC	??_R4IMessageManager@@6B@			; IMessageManager::`RTTI Complete Object Locator'
PUBLIC	??_R3IMessageManager@@8				; IMessageManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMessageManager@@8				; IMessageManager::`RTTI Base Class Array'
EXTRN	__purecall:NEAR
EXTRN	??_EIMessageManager@@UAEPAXI@Z:NEAR		; IMessageManager::`vector deleting destructor'
;	COMDAT ??_7IMessageManager@@6B@
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\core\imessagemanager.h
CONST	SEGMENT
??_7IMessageManager@@6B@ DD FLAT:??_R4IMessageManager@@6B@ ; IMessageManager::`vftable'
	DD	FLAT:??_EIMessageManager@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R4IMessageManager@@6B@
rdata$r	SEGMENT
??_R4IMessageManager@@6B@ DD 00H			; IMessageManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIMessageManager@@@8
	DD	FLAT:??_R3IMessageManager@@8
rdata$r	ENDS
;	COMDAT ??_R3IMessageManager@@8
rdata$r	SEGMENT
??_R3IMessageManager@@8 DD 00H				; IMessageManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IMessageManager@@8
rdata$r	ENDS
;	COMDAT ??_R2IMessageManager@@8
rdata$r	SEGMENT
??_R2IMessageManager@@8 DD FLAT:??_R1A@?0A@A@IMessageManager@@8 ; IMessageManager::`RTTI Base Class Array'
; Function compile flags: /Odt
rdata$r	ENDS
;	COMDAT ??1IMessageManager@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1IMessageManager@@UAE@XZ PROC NEAR			; IMessageManager::~IMessageManager, COMDAT
; _this$ = ecx

; 21   : 	virtual ~IMessageManager(){};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7IMessageManager@@6B@
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??1IMessageManager@@UAE@XZ ENDP				; IMessageManager::~IMessageManager
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Odt
;	COMDAT ??_GIMessageManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GIMessageManager@@UAEPAXI@Z PROC NEAR		; IMessageManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1IMessageManager@@UAE@XZ ; IMessageManager::~IMessageManager
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $L63009
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
$L63009:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GIMessageManager@@UAEPAXI@Z ENDP			; IMessageManager::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CMessageManager@@UAE@XZ			; CMessageManager::~CMessageManager
; Function compile flags: /Odt
;	COMDAT ??_GCMessageManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMessageManager@@UAEPAXI@Z PROC NEAR		; CMessageManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMessageManager@@UAE@XZ ; CMessageManager::~CMessageManager
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $L64009
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
$L64009:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GCMessageManager@@UAEPAXI@Z ENDP			; CMessageManager::`scalar deleting destructor'
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??0IMessageManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IMessageManager@@QAE@XZ PROC NEAR			; IMessageManager::IMessageManager, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7IMessageManager@@6B@
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0IMessageManager@@QAE@XZ ENDP				; IMessageManager::IMessageManager
_TEXT	ENDS
PUBLIC	??1?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::~map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >
EXTRN	__imp__DeleteCriticalSection@4:NEAR
xdata$x	SEGMENT
$T66732	DD	0ffffffffH
	DD	FLAT:$L66727
$T66730	DD	019930520H
	DD	01H
	DD	FLAT:$T66732
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\core\cmessagemanager.cpp
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMessageManager@@UAE@XZ PROC NEAR			; CMessageManager::~CMessageManager
; _this$ = ecx

; 8    : {

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	6a ff		 push	 -1
  00075	68 00 00 00 00	 push	 __ehhandler$??1CMessageManager@@UAE@XZ
  0007a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00080	50		 push	 eax
  00081	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00088	51		 push	 ecx
  00089	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0008c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMessageManager@@6B@
  00095	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 9    : 	DeleteCriticalSection( &m_cs );

  0009c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	83 c1 10	 add	 ecx, 16			; 00000010H
  000a2	51		 push	 ecx
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4

; 10   : }

  000a9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	83 c1 04	 add	 ecx, 4
  000af	e8 00 00 00 00	 call	 ??1?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ
  000b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	e8 00 00 00 00	 call	 ??1IMessageManager@@UAE@XZ ; IMessageManager::~IMessageManager
  000c3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L66727:
  00012	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1IMessageManager@@UAE@XZ ; IMessageManager::~IMessageManager
__ehhandler$??1CMessageManager@@UAE@XZ:
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T66730
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CMessageManager@@UAE@XZ ENDP				; CMessageManager::~CMessageManager
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
; Function compile flags: /Odt
;	COMDAT ??1?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::~map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::~map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >
_TEXT	ENDS
PUBLIC	??8const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator==
PUBLIC	??9const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator!=
PUBLIC	??Diterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEAAPAUMESSAGE_OBSERVER@@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator*
PUBLIC	??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AV012@H@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator++
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::find
PUBLIC	??A?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAEAAV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@ABK@Z ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::operator[]
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator!=
PUBLIC	??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
PUBLIC	??1?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::~list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
PUBLIC	??4?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::operator=
PUBLIC	?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin
PUBLIC	?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end
PUBLIC	?push_back@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXABQAUMESSAGE_OBSERVER@@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::push_back
PUBLIC	?insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@ABQAUMESSAGE_OBSERVER@@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::insert
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	__imp__EnterCriticalSection@4:NEAR
EXTRN	__imp__LeaveCriticalSection@4:NEAR
xdata$x	SEGMENT
$T66748	DD	0ffffffffH
	DD	FLAT:$L66744
$T66746	DD	019930520H
	DD	01H
	DD	FLAT:$T66748
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -68						; size = 4
$T66743 = -64						; size = 4
$T66742 = -60						; size = 4
$T66741 = -56						; size = 4
$T66740 = -52						; size = 4
$T66739 = -48						; size = 4
$T66738 = -44						; size = 4
$T66737 = -40						; size = 4
_listob$64613 = -36					; size = 12
_listOb$64107 = -24					; size = 4
_it$64600 = -20						; size = 4
_pMo$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_guidMessage$ = 8					; size = 4
_pObserver$ = 12					; size = 4
_enumPri$ = 16						; size = 4
?AttachMessage@CMessageManager@@UAEXABKPAVIMessageObserver@@W4MESSAGE_OBSERVER_PRIORITY@@@Z PROC NEAR ; CMessageManager::AttachMessage
; _this$ = ecx

; 14   : {

  000e0	55		 push	 ebp
  000e1	8b ec		 mov	 ebp, esp
  000e3	6a ff		 push	 -1
  000e5	68 00 00 00 00	 push	 __ehhandler$?AttachMessage@CMessageManager@@UAEXABKPAVIMessageObserver@@W4MESSAGE_OBSERVER_PRIORITY@@@Z
  000ea	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  000f0	50		 push	 eax
  000f1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  000f8	83 ec 38	 sub	 esp, 56			; 00000038H
  000fb	89 4d bc	 mov	 DWORD PTR _this$[ebp], ecx

; 15   : 	
; 16   : 	MESSAGE_OBSERVER* pMo = new MESSAGE_OBSERVER;

  000fe	6a 08		 push	 8
  00100	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00105	83 c4 04	 add	 esp, 4
  00108	89 45 d8	 mov	 DWORD PTR $T66737[ebp], eax
  0010b	8b 45 d8	 mov	 eax, DWORD PTR $T66737[ebp]
  0010e	89 45 f0	 mov	 DWORD PTR _pMo$[ebp], eax

; 17   : 	pMo->enumMessageObserverPriority = enumPri;

  00111	8b 4d f0	 mov	 ecx, DWORD PTR _pMo$[ebp]
  00114	8b 55 10	 mov	 edx, DWORD PTR _enumPri$[ebp]
  00117	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 18   : 	pMo->pMessageObserver = pObserver;

  0011a	8b 45 f0	 mov	 eax, DWORD PTR _pMo$[ebp]
  0011d	8b 4d 0c	 mov	 ecx, DWORD PTR _pObserver$[ebp]
  00120	89 08		 mov	 DWORD PTR [eax], ecx

; 19   : 
; 20   : EnterCriticalSection(&m_cs);

  00122	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  00125	83 c2 10	 add	 edx, 16			; 00000010H
  00128	52		 push	 edx
  00129	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 21   : 
; 22   : 	if( mapObservers.find(guidMessage) != mapObservers.end() )

  0012f	8d 45 d0	 lea	 eax, DWORD PTR $T66739[ebp]
  00132	50		 push	 eax
  00133	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00136	83 c1 04	 add	 ecx, 4
  00139	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  0013e	50		 push	 eax
  0013f	8b 4d 08	 mov	 ecx, DWORD PTR _guidMessage$[ebp]
  00142	51		 push	 ecx
  00143	8d 55 d4	 lea	 edx, DWORD PTR $T66738[ebp]
  00146	52		 push	 edx
  00147	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	83 c1 04	 add	 ecx, 4
  0014d	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::find
  00152	8b c8		 mov	 ecx, eax
  00154	e8 00 00 00 00	 call	 ??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator!=
  00159	0f b6 c0	 movzx	 eax, al
  0015c	85 c0		 test	 eax, eax
  0015e	0f 84 9e 00 00
	00		 je	 $L64105

; 23   : 	{
; 24   : 		list<MESSAGE_OBSERVER*>& listOb = mapObservers[guidMessage];	

  00164	8b 4d 08	 mov	 ecx, DWORD PTR _guidMessage$[ebp]
  00167	51		 push	 ecx
  00168	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016b	83 c1 04	 add	 ecx, 4
  0016e	e8 00 00 00 00	 call	 ??A?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAEAAV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@ABK@Z ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::operator[]
  00173	89 45 e8	 mov	 DWORD PTR _listOb$64107[ebp], eax

; 25   : 		list<MESSAGE_OBSERVER*>::iterator it = listOb.begin();

  00176	8d 55 ec	 lea	 edx, DWORD PTR _it$64600[ebp]
  00179	52		 push	 edx
  0017a	8b 4d e8	 mov	 ecx, DWORD PTR _listOb$64107[ebp]
  0017d	e8 00 00 00 00	 call	 ?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin

; 26   : 
; 27   : 		for(;it != listOb.end();it++ )

  00182	eb 0e		 jmp	 SHORT $L64604
$L64605:
  00184	6a 00		 push	 0
  00186	8d 45 cc	 lea	 eax, DWORD PTR $T66740[ebp]
  00189	50		 push	 eax
  0018a	8d 4d ec	 lea	 ecx, DWORD PTR _it$64600[ebp]
  0018d	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AV012@H@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator++
$L64604:
  00192	8d 4d c8	 lea	 ecx, DWORD PTR $T66741[ebp]
  00195	51		 push	 ecx
  00196	8b 4d e8	 mov	 ecx, DWORD PTR _listOb$64107[ebp]
  00199	e8 00 00 00 00	 call	 ?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end
  0019e	50		 push	 eax
  0019f	8d 4d ec	 lea	 ecx, DWORD PTR _it$64600[ebp]
  001a2	e8 00 00 00 00	 call	 ??9const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator!=
  001a7	0f b6 d0	 movzx	 edx, al
  001aa	85 d2		 test	 edx, edx
  001ac	74 2a		 je	 SHORT $L64606

; 28   : 		{
; 29   : 			if( (*it)->enumMessageObserverPriority >= enumPri )

  001ae	8d 4d ec	 lea	 ecx, DWORD PTR _it$64600[ebp]
  001b1	e8 00 00 00 00	 call	 ??Diterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEAAPAUMESSAGE_OBSERVER@@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator*
  001b6	8b 00		 mov	 eax, DWORD PTR [eax]
  001b8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001bb	3b 4d 10	 cmp	 ecx, DWORD PTR _enumPri$[ebp]
  001be	7c 16		 jl	 SHORT $L64607

; 30   : 			{
; 31   : 				listOb.insert(it,pMo);

  001c0	8d 55 f0	 lea	 edx, DWORD PTR _pMo$[ebp]
  001c3	52		 push	 edx
  001c4	8b 45 ec	 mov	 eax, DWORD PTR _it$64600[ebp]
  001c7	50		 push	 eax
  001c8	8d 4d c4	 lea	 ecx, DWORD PTR $T66742[ebp]
  001cb	51		 push	 ecx
  001cc	8b 4d e8	 mov	 ecx, DWORD PTR _listOb$64107[ebp]
  001cf	e8 00 00 00 00	 call	 ?insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@ABQAUMESSAGE_OBSERVER@@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::insert

; 32   : 				break;

  001d4	eb 02		 jmp	 SHORT $L64606
$L64607:

; 33   : 			}
; 34   : 		}

  001d6	eb ac		 jmp	 SHORT $L64605
$L64606:

; 35   : 		if( it == listOb.end() )

  001d8	8d 55 c0	 lea	 edx, DWORD PTR $T66743[ebp]
  001db	52		 push	 edx
  001dc	8b 4d e8	 mov	 ecx, DWORD PTR _listOb$64107[ebp]
  001df	e8 00 00 00 00	 call	 ?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end
  001e4	50		 push	 eax
  001e5	8d 4d ec	 lea	 ecx, DWORD PTR _it$64600[ebp]
  001e8	e8 00 00 00 00	 call	 ??8const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator==
  001ed	0f b6 c0	 movzx	 eax, al
  001f0	85 c0		 test	 eax, eax
  001f2	74 0c		 je	 SHORT $L64610

; 36   : 		{
; 37   : 			listOb.push_back(pMo);

  001f4	8d 4d f0	 lea	 ecx, DWORD PTR _pMo$[ebp]
  001f7	51		 push	 ecx
  001f8	8b 4d e8	 mov	 ecx, DWORD PTR _listOb$64107[ebp]
  001fb	e8 00 00 00 00	 call	 ?push_back@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXABQAUMESSAGE_OBSERVER@@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::push_back
$L64610:

; 38   : 		}
; 39   : 	}
; 40   : 	else

  00200	eb 44		 jmp	 SHORT $L64611
$L64105:

; 41   : 	{
; 42   : 		list<MESSAGE_OBSERVER*> listob;

  00202	8d 4d dc	 lea	 ecx, DWORD PTR _listob$64613[ebp]
  00205	e8 00 00 00 00	 call	 ??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
  0020a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 43   : 		listob.push_back(pMo);

  00211	8d 55 f0	 lea	 edx, DWORD PTR _pMo$[ebp]
  00214	52		 push	 edx
  00215	8d 4d dc	 lea	 ecx, DWORD PTR _listob$64613[ebp]
  00218	e8 00 00 00 00	 call	 ?push_back@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXABQAUMESSAGE_OBSERVER@@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::push_back

; 44   : 		mapObservers[guidMessage] = listob;		

  0021d	8d 45 dc	 lea	 eax, DWORD PTR _listob$64613[ebp]
  00220	50		 push	 eax
  00221	8b 4d 08	 mov	 ecx, DWORD PTR _guidMessage$[ebp]
  00224	51		 push	 ecx
  00225	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00228	83 c1 04	 add	 ecx, 4
  0022b	e8 00 00 00 00	 call	 ??A?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAEAAV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@ABK@Z ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::operator[]
  00230	8b c8		 mov	 ecx, eax
  00232	e8 00 00 00 00	 call	 ??4?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::operator=

; 45   : 	}

  00237	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0023e	8d 4d dc	 lea	 ecx, DWORD PTR _listob$64613[ebp]
  00241	e8 00 00 00 00	 call	 ??1?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::~list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
$L64611:

; 46   : 
; 47   : LeaveCriticalSection(&m_cs);

  00246	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  00249	83 c2 10	 add	 edx, 16			; 00000010H
  0024c	52		 push	 edx
  0024d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 48   : }

  00253	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00256	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0025d	8b e5		 mov	 esp, ebp
  0025f	5d		 pop	 ebp
  00260	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L66744:
  00024	8d 4d dc	 lea	 ecx, DWORD PTR _listob$64613[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::~list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
__ehhandler$?AttachMessage@CMessageManager@@UAEXABKPAVIMessageObserver@@W4MESSAGE_OBSERVER_PRIORITY@@@Z:
  0002c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T66746
  00031	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AttachMessage@CMessageManager@@UAEXABKPAVIMessageObserver@@W4MESSAGE_OBSERVER_PRIORITY@@@Z ENDP ; CMessageManager::AttachMessage
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
PUBLIC	?erase@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::erase
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T66755 = -32						; size = 4
$T66754 = -28						; size = 4
$T66753 = -24						; size = 4
$T66752 = -20						; size = 4
$T66751 = -16						; size = 4
$T66750 = -12						; size = 4
_it$64625 = -8						; size = 4
_listOb$ = -4						; size = 4
_guidMessage$ = 8					; size = 4
_pObserver$ = 12					; size = 4
?DetachMessage@CMessageManager@@UAEXABKPAVIMessageObserver@@@Z PROC NEAR ; CMessageManager::DetachMessage
; _this$ = ecx

; 52   : {

  00270	55		 push	 ebp
  00271	8b ec		 mov	 ebp, esp
  00273	83 ec 24	 sub	 esp, 36			; 00000024H
  00276	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx

; 53   : EnterCriticalSection(&m_cs);

  00279	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  0027c	83 c0 10	 add	 eax, 16			; 00000010H
  0027f	50		 push	 eax
  00280	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 54   : 	if( mapObservers.find(guidMessage) == mapObservers.end() )

  00286	8d 4d f0	 lea	 ecx, DWORD PTR $T66751[ebp]
  00289	51		 push	 ecx
  0028a	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0028d	83 c1 04	 add	 ecx, 4
  00290	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  00295	50		 push	 eax
  00296	8b 55 08	 mov	 edx, DWORD PTR _guidMessage$[ebp]
  00299	52		 push	 edx
  0029a	8d 45 f4	 lea	 eax, DWORD PTR $T66750[ebp]
  0029d	50		 push	 eax
  0029e	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  002a1	83 c1 04	 add	 ecx, 4
  002a4	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::find
  002a9	8b c8		 mov	 ecx, eax
  002ab	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  002b0	0f b6 c8	 movzx	 ecx, al
  002b3	85 c9		 test	 ecx, ecx
  002b5	74 12		 je	 SHORT $L64621

; 55   : 	{
; 56   : 		LeaveCriticalSection(&m_cs);

  002b7	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  002ba	83 c2 10	 add	 edx, 16			; 00000010H
  002bd	52		 push	 edx
  002be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 57   : 		return;

  002c4	e9 95 00 00 00	 jmp	 $L64618
$L64621:

; 58   : 	}
; 59   : 
; 60   : 	list<MESSAGE_OBSERVER*>& listOb = mapObservers[guidMessage];

  002c9	8b 45 08	 mov	 eax, DWORD PTR _guidMessage$[ebp]
  002cc	50		 push	 eax
  002cd	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d0	83 c1 04	 add	 ecx, 4
  002d3	e8 00 00 00 00	 call	 ??A?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAEAAV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@ABK@Z ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::operator[]
  002d8	89 45 fc	 mov	 DWORD PTR _listOb$[ebp], eax

; 61   : 
; 62   : 	for( list<MESSAGE_OBSERVER*>::iterator it = listOb.begin(); it != listOb.end(); it++ )

  002db	8d 4d f8	 lea	 ecx, DWORD PTR _it$64625[ebp]
  002de	51		 push	 ecx
  002df	8b 4d fc	 mov	 ecx, DWORD PTR _listOb$[ebp]
  002e2	e8 00 00 00 00	 call	 ?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin
  002e7	eb 0e		 jmp	 SHORT $L64629
$L64630:
  002e9	6a 00		 push	 0
  002eb	8d 55 ec	 lea	 edx, DWORD PTR $T66752[ebp]
  002ee	52		 push	 edx
  002ef	8d 4d f8	 lea	 ecx, DWORD PTR _it$64625[ebp]
  002f2	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AV012@H@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator++
$L64629:
  002f7	8d 45 e8	 lea	 eax, DWORD PTR $T66753[ebp]
  002fa	50		 push	 eax
  002fb	8b 4d fc	 mov	 ecx, DWORD PTR _listOb$[ebp]
  002fe	e8 00 00 00 00	 call	 ?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end
  00303	50		 push	 eax
  00304	8d 4d f8	 lea	 ecx, DWORD PTR _it$64625[ebp]
  00307	e8 00 00 00 00	 call	 ??9const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator!=
  0030c	0f b6 c8	 movzx	 ecx, al
  0030f	85 c9		 test	 ecx, ecx
  00311	74 3e		 je	 SHORT $L64631

; 63   : 	{
; 64   : 		if( (*it)->pMessageObserver == pObserver )

  00313	8d 4d f8	 lea	 ecx, DWORD PTR _it$64625[ebp]
  00316	e8 00 00 00 00	 call	 ??Diterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEAAPAUMESSAGE_OBSERVER@@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator*
  0031b	8b 10		 mov	 edx, DWORD PTR [eax]
  0031d	8b 02		 mov	 eax, DWORD PTR [edx]
  0031f	3b 45 0c	 cmp	 eax, DWORD PTR _pObserver$[ebp]
  00322	75 2b		 jne	 SHORT $L64632

; 65   : 		{
; 66   : 			delete (*it);

  00324	8d 4d f8	 lea	 ecx, DWORD PTR _it$64625[ebp]
  00327	e8 00 00 00 00	 call	 ??Diterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEAAPAUMESSAGE_OBSERVER@@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator*
  0032c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0032e	89 4d e4	 mov	 DWORD PTR $T66754[ebp], ecx
  00331	8b 55 e4	 mov	 edx, DWORD PTR $T66754[ebp]
  00334	52		 push	 edx
  00335	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0033a	83 c4 04	 add	 esp, 4

; 67   : 			listOb.erase(it);

  0033d	8b 45 f8	 mov	 eax, DWORD PTR _it$64625[ebp]
  00340	50		 push	 eax
  00341	8d 4d e0	 lea	 ecx, DWORD PTR $T66755[ebp]
  00344	51		 push	 ecx
  00345	8b 4d fc	 mov	 ecx, DWORD PTR _listOb$[ebp]
  00348	e8 00 00 00 00	 call	 ?erase@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::erase

; 68   : 			break;

  0034d	eb 02		 jmp	 SHORT $L64631
$L64632:

; 69   : 		}
; 70   : 	}

  0034f	eb 98		 jmp	 SHORT $L64630
$L64631:

; 71   : 
; 72   : LeaveCriticalSection(&m_cs);

  00351	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  00354	83 c2 10	 add	 edx, 16			; 00000010H
  00357	52		 push	 edx
  00358	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
$L64618:

; 73   : }

  0035e	8b e5		 mov	 esp, ebp
  00360	5d		 pop	 ebp
  00361	c2 08 00	 ret	 8
?DetachMessage@CMessageManager@@UAEXABKPAVIMessageObserver@@@Z ENDP ; CMessageManager::DetachMessage
_TEXT	ENDS
PUBLIC	?push_back@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXABQAVIMessageObserver@@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::push_back
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T66760 = -24						; size = 4
$T66759 = -20						; size = 4
$T66758 = -16						; size = 4
$T66757 = -12						; size = 4
_it$64647 = -8						; size = 4
_listOb2$ = -4						; size = 4
_guidMessage$ = 8					; size = 4
_listOb$ = 12						; size = 4
?QueryObservers@CMessageManager@@UAEXABKAAV?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@Z PROC NEAR ; CMessageManager::QueryObservers
; _this$ = ecx

; 77   : {

  00370	55		 push	 ebp
  00371	8b ec		 mov	 ebp, esp
  00373	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00376	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 78   : //EnterCriticalSection(&m_cs);
; 79   : 	if( mapObservers.find( guidMessage) == mapObservers.end() )

  00379	8d 45 f0	 lea	 eax, DWORD PTR $T66758[ebp]
  0037c	50		 push	 eax
  0037d	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00380	83 c1 04	 add	 ecx, 4
  00383	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  00388	50		 push	 eax
  00389	8b 4d 08	 mov	 ecx, DWORD PTR _guidMessage$[ebp]
  0038c	51		 push	 ecx
  0038d	8d 55 f4	 lea	 edx, DWORD PTR $T66757[ebp]
  00390	52		 push	 edx
  00391	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00394	83 c1 04	 add	 ecx, 4
  00397	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::find
  0039c	8b c8		 mov	 ecx, eax
  0039e	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  003a3	0f b6 c0	 movzx	 eax, al
  003a6	85 c0		 test	 eax, eax
  003a8	74 02		 je	 SHORT $L64643

; 80   : 	{
; 81   : //		LeaveCriticalSection(&m_cs);
; 82   : 		return;

  003aa	eb 5f		 jmp	 SHORT $L64640
$L64643:

; 83   : 	}
; 84   : 
; 85   : 	list<MESSAGE_OBSERVER*>& listOb2 = mapObservers[guidMessage];

  003ac	8b 4d 08	 mov	 ecx, DWORD PTR _guidMessage$[ebp]
  003af	51		 push	 ecx
  003b0	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  003b3	83 c1 04	 add	 ecx, 4
  003b6	e8 00 00 00 00	 call	 ??A?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAEAAV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@ABK@Z ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::operator[]
  003bb	89 45 fc	 mov	 DWORD PTR _listOb2$[ebp], eax

; 86   : 
; 87   : 	for( list<MESSAGE_OBSERVER*>::iterator it = listOb2.begin(); it != listOb2.end(); it++ )

  003be	8d 55 f8	 lea	 edx, DWORD PTR _it$64647[ebp]
  003c1	52		 push	 edx
  003c2	8b 4d fc	 mov	 ecx, DWORD PTR _listOb2$[ebp]
  003c5	e8 00 00 00 00	 call	 ?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin
  003ca	eb 0e		 jmp	 SHORT $L64651
$L64652:
  003cc	6a 00		 push	 0
  003ce	8d 45 ec	 lea	 eax, DWORD PTR $T66759[ebp]
  003d1	50		 push	 eax
  003d2	8d 4d f8	 lea	 ecx, DWORD PTR _it$64647[ebp]
  003d5	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AV012@H@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator++
$L64651:
  003da	8d 4d e8	 lea	 ecx, DWORD PTR $T66760[ebp]
  003dd	51		 push	 ecx
  003de	8b 4d fc	 mov	 ecx, DWORD PTR _listOb2$[ebp]
  003e1	e8 00 00 00 00	 call	 ?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end
  003e6	50		 push	 eax
  003e7	8d 4d f8	 lea	 ecx, DWORD PTR _it$64647[ebp]
  003ea	e8 00 00 00 00	 call	 ??9const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator!=
  003ef	0f b6 d0	 movzx	 edx, al
  003f2	85 d2		 test	 edx, edx
  003f4	74 15		 je	 SHORT $L64640

; 88   : 	{
; 89   : 		listOb.push_back((*it)->pMessageObserver);

  003f6	8d 4d f8	 lea	 ecx, DWORD PTR _it$64647[ebp]
  003f9	e8 00 00 00 00	 call	 ??Diterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEAAPAUMESSAGE_OBSERVER@@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator*
  003fe	8b 00		 mov	 eax, DWORD PTR [eax]
  00400	50		 push	 eax
  00401	8b 4d 0c	 mov	 ecx, DWORD PTR _listOb$[ebp]
  00404	e8 00 00 00 00	 call	 ?push_back@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXABQAVIMessageObserver@@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::push_back

; 90   : 	}

  00409	eb c1		 jmp	 SHORT $L64652
$L64640:

; 91   : //LeaveCriticalSection(&m_cs);
; 92   : }

  0040b	8b e5		 mov	 esp, ebp
  0040d	5d		 pop	 ebp
  0040e	c2 08 00	 ret	 8
?QueryObservers@CMessageManager@@UAEXABKAAV?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@Z ENDP ; CMessageManager::QueryObservers
; Function compile flags: /Odt
_this$ = -4						; size = 4
_guidMessage$ = 8					; size = 4
_pObserver$ = 12					; size = 4
_enumPri$ = 16						; size = 4
?AttachMessage@CMessageManager@@UAEXABU_GUID@@PAVIMessageObserver@@W4MESSAGE_OBSERVER_PRIORITY@@@Z PROC NEAR ; CMessageManager::AttachMessage
; _this$ = ecx

; 107  : {

  00420	55		 push	 ebp
  00421	8b ec		 mov	 ebp, esp
  00423	51		 push	 ecx
  00424	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 108  : 	AttachMessage( guidMessage,pObserver,enumPri);

  00427	8b 45 10	 mov	 eax, DWORD PTR _enumPri$[ebp]
  0042a	50		 push	 eax
  0042b	8b 4d 0c	 mov	 ecx, DWORD PTR _pObserver$[ebp]
  0042e	51		 push	 ecx
  0042f	8b 55 08	 mov	 edx, DWORD PTR _guidMessage$[ebp]
  00432	52		 push	 edx
  00433	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00436	8b 10		 mov	 edx, DWORD PTR [eax]
  00438	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0043b	ff 52 10	 call	 DWORD PTR [edx+16]

; 109  : }

  0043e	8b e5		 mov	 esp, ebp
  00440	5d		 pop	 ebp
  00441	c2 0c 00	 ret	 12			; 0000000cH
?AttachMessage@CMessageManager@@UAEXABU_GUID@@PAVIMessageObserver@@W4MESSAGE_OBSERVER_PRIORITY@@@Z ENDP ; CMessageManager::AttachMessage
; Function compile flags: /Odt
_this$ = -4						; size = 4
_guidMessage$ = 8					; size = 4
_pObserver$ = 12					; size = 4
?DetachMessage@CMessageManager@@UAEXABU_GUID@@PAVIMessageObserver@@@Z PROC NEAR ; CMessageManager::DetachMessage
; _this$ = ecx

; 112  : {

  00450	55		 push	 ebp
  00451	8b ec		 mov	 ebp, esp
  00453	51		 push	 ecx
  00454	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 113  : 	DetachMessage( guidMessage,pObserver);

  00457	8b 45 0c	 mov	 eax, DWORD PTR _pObserver$[ebp]
  0045a	50		 push	 eax
  0045b	8b 4d 08	 mov	 ecx, DWORD PTR _guidMessage$[ebp]
  0045e	51		 push	 ecx
  0045f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00462	8b 02		 mov	 eax, DWORD PTR [edx]
  00464	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00467	ff 50 14	 call	 DWORD PTR [eax+20]

; 114  : }

  0046a	8b e5		 mov	 esp, ebp
  0046c	5d		 pop	 ebp
  0046d	c2 08 00	 ret	 8
?DetachMessage@CMessageManager@@UAEXABU_GUID@@PAVIMessageObserver@@@Z ENDP ; CMessageManager::DetachMessage
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
PUBLIC	??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T66765 = -2						; size = 1
$T66764 = -1						; size = 1
??0?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 4d ff	 lea	 ecx, DWORD PTR $T66764[ebp]
  0000c	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
  00011	50		 push	 eax
  00012	8d 45 fe	 lea	 eax, DWORD PTR $T66765[ebp]
  00015	50		 push	 eax
  00016	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >

; 103  : 		}

  0001e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??0?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::insert
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::lower_bound
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator*
PUBLIC	??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABKABV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@@Z ; std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >
PUBLIC	??1?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@XZ ; std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >::~pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
$T66778	DD	0ffffffffH
	DD	FLAT:$L66773
	DD	00H
	DD	FLAT:$L66774
$T66776	DD	019930520H
	DD	02H
	DD	FLAT:$T66778
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ??A?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAEAAV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@ABK@Z
_TEXT	SEGMENT
tv139 = -72						; size = 4
tv141 = -68						; size = 4
tv137 = -64						; size = 4
tv140 = -60						; size = 4
_this$ = -56						; size = 4
$T66772 = -52						; size = 4
$T66771 = -48						; size = 12
$T66770 = -36						; size = 16
$T66769 = -20						; size = 4
__Where$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
??A?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAEAAV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@ABK@Z PROC NEAR ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::operator[], COMDAT
; _this$ = ecx

; 142  : 		{	// find element matching _Keyval or insert with default mapped

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??A?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAEAAV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@ABK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 3c	 sub	 esp, 60			; 0000003cH
  0001b	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 		iterator _Where = this->lower_bound(_Keyval);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00021	50		 push	 eax
  00022	8d 4d f0	 lea	 ecx, DWORD PTR __Where$[ebp]
  00025	51		 push	 ecx
  00026	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::lower_bound

; 144  : 		if (_Where == this->end() || this->comp(_Keyval, this->_Key(_Where._Mynode())))

  0002e	8d 55 ec	 lea	 edx, DWORD PTR $T66769[ebp]
  00031	52		 push	 edx
  00032	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  0003a	50		 push	 eax
  0003b	8d 4d f0	 lea	 ecx, DWORD PTR __Where$[ebp]
  0003e	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  00043	0f b6 c0	 movzx	 eax, al
  00046	85 c0		 test	 eax, eax
  00048	75 25		 jne	 SHORT $L65108
  0004a	8d 4d f0	 lea	 ecx, DWORD PTR __Where$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 4d 08	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  0005f	51		 push	 ecx
  00060	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  00068	0f b6 d0	 movzx	 edx, al
  0006b	85 d2		 test	 edx, edx
  0006d	74 69		 je	 SHORT $L65107
$L65108:

; 145  : 			_Where = this->insert(_Where,
; 146  : 				value_type(_Keyval, mapped_type()));

  0006f	8d 4d d0	 lea	 ecx, DWORD PTR $T66771[ebp]
  00072	e8 00 00 00 00	 call	 ??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
  00077	89 45 c4	 mov	 DWORD PTR tv140[ebp], eax
  0007a	8b 45 c4	 mov	 eax, DWORD PTR tv140[ebp]
  0007d	89 45 c0	 mov	 DWORD PTR tv137[ebp], eax
  00080	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00087	8b 4d c0	 mov	 ecx, DWORD PTR tv137[ebp]
  0008a	51		 push	 ecx
  0008b	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  0008e	52		 push	 edx
  0008f	8d 4d dc	 lea	 ecx, DWORD PTR $T66770[ebp]
  00092	e8 00 00 00 00	 call	 ??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABKABV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@@Z ; std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >
  00097	89 45 bc	 mov	 DWORD PTR tv141[ebp], eax
  0009a	8b 45 bc	 mov	 eax, DWORD PTR tv141[ebp]
  0009d	89 45 b8	 mov	 DWORD PTR tv139[ebp], eax
  000a0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a4	8b 4d b8	 mov	 ecx, DWORD PTR tv139[ebp]
  000a7	51		 push	 ecx
  000a8	8b 55 f0	 mov	 edx, DWORD PTR __Where$[ebp]
  000ab	52		 push	 edx
  000ac	8d 45 cc	 lea	 eax, DWORD PTR $T66772[ebp]
  000af	50		 push	 eax
  000b0	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::insert
  000b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ba	89 4d f0	 mov	 DWORD PTR __Where$[ebp], ecx
  000bd	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000c1	8d 4d dc	 lea	 ecx, DWORD PTR $T66770[ebp]
  000c4	e8 00 00 00 00	 call	 ??1?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@XZ
  000c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d0	8d 4d d0	 lea	 ecx, DWORD PTR $T66771[ebp]
  000d3	e8 00 00 00 00	 call	 ??1?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::~list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
$L65107:

; 147  : 		return ((*_Where).second);

  000d8	8d 4d f0	 lea	 ecx, DWORD PTR __Where$[ebp]
  000db	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator*
  000e0	83 c0 04	 add	 eax, 4

; 148  : 		}

  000e3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L66773:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR $T66771[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::~list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
$L66774:
  00008	8d 4d dc	 lea	 ecx, DWORD PTR $T66770[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??A?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAEAAV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@ABK@Z:
  00010	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T66776
  00015	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??A?$map@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@@std@@QAEAAV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@ABK@Z ENDP ; std::map<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > > >::operator[]
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tidy
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 392  : 		_Tidy();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tidy

; 393  : 		}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::~_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator
; Function compile flags: /Odt
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end, COMDAT
; _this$ = ecx

; 417  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 419  : 		}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
tv88 = -24						; size = 4
_this$ = -20						; size = 4
$T66790 = -16						; size = 4
$T66788 = -12						; size = 4
$T66787 = -8						; size = 4
__Where$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR __Where$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::lower_bound

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00019	8d 55 f4	 lea	 edx, DWORD PTR $T66788[ebp]
  0001c	52		 push	 edx
  0001d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  00025	50		 push	 eax
  00026	8d 4d fc	 lea	 ecx, DWORD PTR __Where$[ebp]
  00029	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  0002e	0f b6 c0	 movzx	 eax, al
  00031	85 c0		 test	 eax, eax
  00033	75 2d		 jne	 SHORT $L66789
  00035	8d 4d fc	 lea	 ecx, DWORD PTR __Where$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  00043	83 c4 04	 add	 esp, 4
  00046	50		 push	 eax
  00047	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  00053	0f b6 d0	 movzx	 edx, al
  00056	85 d2		 test	 edx, edx
  00058	75 08		 jne	 SHORT $L66789
  0005a	8d 45 fc	 lea	 eax, DWORD PTR __Where$[ebp]
  0005d	89 45 e8	 mov	 DWORD PTR tv88[ebp], eax
  00060	eb 0f		 jmp	 SHORT $L66791
$L66789:
  00062	8d 4d f0	 lea	 ecx, DWORD PTR $T66790[ebp]
  00065	51		 push	 ecx
  00066	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  0006e	89 45 e8	 mov	 DWORD PTR tv88[ebp], eax
$L66791:
  00071	8b 55 e8	 mov	 edx, DWORD PTR tv88[ebp]
  00074	89 55 f8	 mov	 DWORD PTR $T66787[ebp], edx
  00077	8b 45 f8	 mov	 eax, DWORD PTR $T66787[ebp]
  0007a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007c	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0007f	89 0a		 mov	 DWORD PTR [edx], ecx
  00081	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 791  : 		}

  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::find
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 240  : 			{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]
  0000f	2b 01		 sub	 eax, DWORD PTR [ecx]
  00011	f7 d8		 neg	 eax
  00013	1b c0		 sbb	 eax, eax
  00015	40		 inc	 eax

; 242  : 			}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 245  : 			{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 246  : 			return (!(*this == _Right));

  00007	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  00013	0f b6 c0	 movzx	 eax, al
  00016	f7 d8		 neg	 eax
  00018	1b c0		 sbb	 eax, eax
  0001a	40		 inc	 eax

; 247  : 			}

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@XZ ; std::allocator<MESSAGE_OBSERVER *>::allocator<MESSAGE_OBSERVER *>
PUBLIC	??0?$_List_val@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ; std::_List_val<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_val<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
PUBLIC	?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Buynode
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
;	COMDAT ??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >, COMDAT
; _this$ = ecx

; 280  : 		{	// construct empty list

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	51		 push	 ecx
  0000a	8b cc		 mov	 ecx, esp
  0000c	e8 00 00 00 00	 call	 ??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@XZ ; std::allocator<MESSAGE_OBSERVER *>::allocator<MESSAGE_OBSERVER *>
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0?$_List_val@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ; std::_List_val<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_val<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Buynode
  00021	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00027	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 281  : 		}

  00031	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXXZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Tidy
; Function compile flags: /Odt
;	COMDAT ??1?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::~list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >, COMDAT
; _this$ = ecx

; 364  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 365  : 		_Tidy();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXXZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Tidy

; 366  : 		}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::~list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
_TEXT	ENDS
PUBLIC	??$assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::assign<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
PUBLIC	?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin
PUBLIC	?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end
; Function compile flags: /Odt
;	COMDAT ??4?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T66804 = -8						; size = 4
$T66803 = -4						; size = 4
__Right$ = 8						; size = 4
??4?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV01@ABV01@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::operator=, COMDAT
; _this$ = ecx

; 369  : 		{	// assign _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 370  : 		if (this != &_Right)

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	3b 45 08	 cmp	 eax, DWORD PTR __Right$[ebp]
  0000f	74 26		 je	 SHORT $L65164

; 371  : 			assign(_Right.begin(), _Right.end());

  00011	8d 4d fc	 lea	 ecx, DWORD PTR $T66803[ebp]
  00014	51		 push	 ecx
  00015	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00018	e8 00 00 00 00	 call	 ?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end
  0001d	8b 10		 mov	 edx, DWORD PTR [eax]
  0001f	52		 push	 edx
  00020	8d 45 f8	 lea	 eax, DWORD PTR $T66804[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00027	e8 00 00 00 00	 call	 ?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	51		 push	 ecx
  0002f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??$assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::assign<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
$L65164:

; 372  : 		return (*this);

  00037	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]

; 373  : 		}

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??4?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::operator=
_TEXT	ENDS
PUBLIC	??0iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::iterator
PUBLIC	?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
; Function compile flags: /Odt
;	COMDAT ?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin, COMDAT
; _this$ = ecx

; 376  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 377  : 		return (iterator(_Nextnode(_Myhead)));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  00013	83 c4 04	 add	 esp, 4
  00016	8b 10		 mov	 edx, DWORD PTR [eax]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::iterator
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 378  : 		}

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end, COMDAT
; _this$ = ecx

; 386  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 387  : 		return (iterator(_Myhead));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::iterator
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 388  : 		}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end
_TEXT	ENDS
PUBLIC	?_Insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@12@ABQAUMESSAGE_OBSERVER@@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Insert
; Function compile flags: /Odt
;	COMDAT ?push_back@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXABQAUMESSAGE_OBSERVER@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T66811 = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXABQAUMESSAGE_OBSERVER@@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::push_back, COMDAT
; _this$ = ecx

; 480  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 		_Insert(end(), _Val);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T66811[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	52		 push	 edx
  0001c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?_Insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@12@ABQAUMESSAGE_OBSERVER@@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Insert

; 482  : 		}

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?push_back@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXABQAUMESSAGE_OBSERVER@@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::push_back
_TEXT	ENDS
PUBLIC	??Fiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator--
; Function compile flags: /Odt
;	COMDAT ?insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@ABQAUMESSAGE_OBSERVER@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@ABQAUMESSAGE_OBSERVER@@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::insert, COMDAT
; _this$ = ecx

; 514  : 		{	// insert _Val at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 515  : 		_Insert(_Where, _Val);

  00007	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@12@ABQAUMESSAGE_OBSERVER@@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Insert

; 516  : 		return (--_Where);

  00017	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0001a	e8 00 00 00 00	 call	 ??Fiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator--
  0001f	8b 10		 mov	 edx, DWORD PTR [eax]
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	89 10		 mov	 DWORD PTR [eax], edx
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 517  : 		}

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@ABQAUMESSAGE_OBSERVER@@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::insert
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@3@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::_Mynode
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::deallocate
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::destroy
PUBLIC	?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
; Function compile flags: /Odt
;	COMDAT ?erase@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T66816 = -8						; size = 4
__Pnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::erase, COMDAT
; _this$ = ecx

; 586  : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 587  : 		_Nodeptr _Pnode = (_Where++)._Mynode();

  0000a	6a 00		 push	 0
  0000c	8d 45 f8	 lea	 eax, DWORD PTR $T66816[ebp]
  0000f	50		 push	 eax
  00010	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00013	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AV012@H@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator++
  00018	8b c8		 mov	 ecx, eax
  0001a	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@3@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::_Mynode
  0001f	89 45 fc	 mov	 DWORD PTR __Pnode$[ebp], eax

; 588  : 		if (_Pnode != _Myhead)

  00022	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00028	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  0002b	74 7b		 je	 SHORT $L65190

; 589  : 			{	// not list head, safe to erase
; 590  : 			_Nextnode(_Prevnode(_Pnode)) = _Nextnode(_Pnode);

  0002d	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  00036	83 c4 04	 add	 esp, 4
  00039	8b f0		 mov	 esi, eax
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
  00044	83 c4 04	 add	 esp, 4
  00047	8b 10		 mov	 edx, DWORD PTR [eax]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  0004f	83 c4 04	 add	 esp, 4
  00052	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00054	89 08		 mov	 DWORD PTR [eax], ecx

; 591  : 			_Prevnode(_Nextnode(_Pnode)) = _Prevnode(_Pnode);

  00056	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00059	52		 push	 edx
  0005a	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
  0005f	83 c4 04	 add	 esp, 4
  00062	8b f0		 mov	 esi, eax
  00064	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  0006d	83 c4 04	 add	 esp, 4
  00070	8b 08		 mov	 ecx, DWORD PTR [eax]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
  00078	83 c4 04	 add	 esp, 4
  0007b	8b 16		 mov	 edx, DWORD PTR [esi]
  0007d	89 10		 mov	 DWORD PTR [eax], edx

; 592  : 			this->_Alnod.destroy(_Pnode);

  0007f	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00082	50		 push	 eax
  00083	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?destroy@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::destroy

; 593  : 			this->_Alnod.deallocate(_Pnode, 1);

  0008b	6a 01		 push	 1
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00090	51		 push	 ecx
  00091	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::deallocate

; 594  : 			--_Mysize;

  00099	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0009c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009f	83 e8 01	 sub	 eax, 1
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$L65190:

; 595  : 			}
; 596  : 		return (_Where);

  000a8	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  000ab	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  000ae	89 02		 mov	 DWORD PTR [edx], eax
  000b0	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 597  : 		}

  000b3	5e		 pop	 esi
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 08 00	 ret	 8
?erase@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::erase
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEABQAUMESSAGE_OBSERVER@@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator*
; Function compile flags: /Odt
;	COMDAT ??Diterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEAAPAUMESSAGE_OBSERVER@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Diterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEAAPAUMESSAGE_OBSERVER@@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 239  : 			{	// return designated value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 240  : 			return ((reference)**(const_iterator *)this);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??Dconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEABQAUMESSAGE_OBSERVER@@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator*

; 241  : 			}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??Diterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEAAPAUMESSAGE_OBSERVER@@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator++
; Function compile flags: /Odt
;	COMDAT ??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Tmp$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator++, COMDAT
; _this$ = ecx

; 255  : 			{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 256  : 			iterator _Tmp = *this;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 257  : 			++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator++

; 258  : 			return (_Tmp);

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 259  : 			}

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AV012@H@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator++
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 196  : 			{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 197  : 			return (_Ptr == _Right._Ptr);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]
  0000f	2b 01		 sub	 eax, DWORD PTR [ecx]
  00011	f7 d8		 neg	 eax
  00013	1b c0		 sbb	 eax, eax
  00015	40		 inc	 eax

; 198  : 			}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator==
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 201  : 			{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 202  : 			return (!(*this == _Right));

  00007	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator==
  00013	0f b6 c0	 movzx	 eax, al
  00016	f7 d8		 neg	 eax
  00018	1b c0		 sbb	 eax, eax
  0001a	40		 inc	 eax

; 203  : 			}

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??9const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end
PUBLIC	?_Insert@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXViterator@12@ABQAVIMessageObserver@@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Insert
; Function compile flags: /Odt
;	COMDAT ?push_back@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXABQAVIMessageObserver@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T66827 = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXABQAVIMessageObserver@@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::push_back, COMDAT
; _this$ = ecx

; 480  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 		_Insert(end(), _Val);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T66827[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	52		 push	 edx
  0001c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?_Insert@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXViterator@12@ABQAVIMessageObserver@@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Insert

; 482  : 		}

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?push_back@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXABQAVIMessageObserver@@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::push_back
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@XZ PROC NEAR ; std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >::~pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 04	 add	 ecx, 4
  0000d	e8 00 00 00 00	 call	 ??1?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::~list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??1?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@XZ ENDP ; std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >::~pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Myval
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key, COMDAT

; 141  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Myval@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Myval
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  00015	83 c4 04	 add	 esp, 4

; 143  : 		}

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Init
PUBLIC	??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
; Function compile flags: /Odt
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	51		 push	 ecx
  0000a	8b cc		 mov	 ecx, esp
  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
  00015	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00018	51		 push	 ecx
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Tree_val@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >

; 362  : 		_Init();

  00021	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Init@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Init

; 363  : 		}

  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::begin
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::size
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator++
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator--
; Function compile flags: /Odt
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T66844 = -36						; size = 8
$T66843 = -28						; size = 4
$T66842 = -24						; size = 4
$T66841 = -20						; size = 4
$T66840 = -16						; size = 4
$T66839 = -12						; size = 4
$T66838 = -8						; size = 4
__Next$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::insert, COMDAT
; _this$ = ecx

; 509  : 		{	// try to insert node with value _Val using _Where as a hint

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 510  : 		iterator _Next;

  00009	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator

; 511  : 
; 512  : 		if (size() == 0)

  00011	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::size
  00019	85 c0		 test	 eax, eax
  0001b	75 21		 jne	 SHORT $L65430

; 513  : 			return (_Insert(true, _Myhead, _Val));	// insert into empty tree

  0001d	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  00020	50		 push	 eax
  00021	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00027	52		 push	 edx
  00028	6a 01		 push	 1
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  00036	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00039	e9 81 05 00 00	 jmp	 $L65428
$L65430:

; 514  : 		else if (this->_Multi)

  0003e	33 c9		 xor	 ecx, ecx
  00040	0f 84 b5 02 00
	00		 je	 $L65433

; 515  : 			{	// insert even if duplicate
; 516  : 			if (_Where == begin())

  00046	8d 55 f8	 lea	 edx, DWORD PTR $T66838[ebp]
  00049	52		 push	 edx
  0004a	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::begin
  00052	50		 push	 eax
  00053	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00056	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  0005b	0f b6 c0	 movzx	 eax, al
  0005e	85 c0		 test	 eax, eax
  00060	74 56		 je	 SHORT $L65435

; 517  : 				{	// insert at beginning if before first element
; 518  : 				if (!this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  00062	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  0006b	83 c4 04	 add	 esp, 4
  0006e	50		 push	 eax
  0006f	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00072	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  0007d	83 c4 04	 add	 esp, 4
  00080	50		 push	 eax
  00081	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  00089	0f b6 d0	 movzx	 edx, al
  0008c	85 d2		 test	 edx, edx
  0008e	75 23		 jne	 SHORT $L65436

; 519  : 					return (_Insert(true, _Where._Mynode(), _Val));

  00090	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  00093	50		 push	 eax
  00094	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00097	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  0009c	50		 push	 eax
  0009d	6a 01		 push	 1
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000a2	51		 push	 ecx
  000a3	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  000ab	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000ae	e9 0c 05 00 00	 jmp	 $L65428
$L65436:

; 520  : 				}
; 521  : 			else if (_Where == end())

  000b3	e9 3e 02 00 00	 jmp	 $L65438
$L65435:
  000b8	8d 55 f4	 lea	 edx, DWORD PTR $T66839[ebp]
  000bb	52		 push	 edx
  000bc	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  000c4	50		 push	 eax
  000c5	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  000c8	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  000cd	0f b6 c0	 movzx	 eax, al
  000d0	85 c0		 test	 eax, eax
  000d2	74 5a		 je	 SHORT $L65440

; 522  : 				{	// insert at end if after last element
; 523  : 				if (!this->comp(this->_Kfn(_Val), _Key(_Rmost())))

  000d4	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
  000dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000de	51		 push	 ecx
  000df	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  000e4	83 c4 04	 add	 esp, 4
  000e7	50		 push	 eax
  000e8	8b 55 10	 mov	 edx, DWORD PTR __Val$[ebp]
  000eb	52		 push	 edx
  000ec	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  000f1	83 c4 04	 add	 esp, 4
  000f4	50		 push	 eax
  000f5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  000fd	0f b6 c0	 movzx	 eax, al
  00100	85 c0		 test	 eax, eax
  00102	75 25		 jne	 SHORT $L65441

; 524  : 					return (_Insert(false, _Rmost(), _Val));

  00104	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  00107	51		 push	 ecx
  00108	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
  00110	8b 10		 mov	 edx, DWORD PTR [eax]
  00112	52		 push	 edx
  00113	6a 00		 push	 0
  00115	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00118	50		 push	 eax
  00119	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  00121	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00124	e9 96 04 00 00	 jmp	 $L65428
$L65441:

; 525  : 				}
; 526  : 			else if (!this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val))

  00129	e9 c8 01 00 00	 jmp	 $L65438
$L65440:

; 527  : 				&& !this->comp(this->_Kfn(_Val),
; 528  : 					_Key((--(_Next = _Where))._Mynode())))

  0012e	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  00131	51		 push	 ecx
  00132	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  00137	83 c4 04	 add	 esp, 4
  0013a	50		 push	 eax
  0013b	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0013e	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00143	50		 push	 eax
  00144	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  00149	83 c4 04	 add	 esp, 4
  0014c	50		 push	 eax
  0014d	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00150	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  00155	0f b6 d0	 movzx	 edx, al
  00158	85 d2		 test	 edx, edx
  0015a	0f 85 a4 00 00
	00		 jne	 $L65444
  00160	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00163	89 45 fc	 mov	 DWORD PTR __Next$[ebp], eax
  00166	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  00169	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator--
  0016e	8b c8		 mov	 ecx, eax
  00170	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00175	50		 push	 eax
  00176	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  0017b	83 c4 04	 add	 esp, 4
  0017e	50		 push	 eax
  0017f	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  00182	51		 push	 ecx
  00183	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  00188	83 c4 04	 add	 esp, 4
  0018b	50		 push	 eax
  0018c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018f	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  00194	0f b6 d0	 movzx	 edx, al
  00197	85 d2		 test	 edx, edx
  00199	75 69		 jne	 SHORT $L65444

; 529  : 				{	// insert before _Where
; 530  : 				if (_Isnil(_Right(_Next._Mynode())))

  0019b	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  0019e	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  001a3	50		 push	 eax
  001a4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  001a9	83 c4 04	 add	 esp, 4
  001ac	8b 00		 mov	 eax, DWORD PTR [eax]
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  001b4	83 c4 04	 add	 esp, 4
  001b7	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001ba	85 c9		 test	 ecx, ecx
  001bc	74 23		 je	 SHORT $L65445

; 531  : 					return (_Insert(false, _Next._Mynode(), _Val));

  001be	8b 55 10	 mov	 edx, DWORD PTR __Val$[ebp]
  001c1	52		 push	 edx
  001c2	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  001c5	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  001ca	50		 push	 eax
  001cb	6a 00		 push	 0
  001cd	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001d0	50		 push	 eax
  001d1	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d4	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  001d9	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001dc	e9 de 03 00 00	 jmp	 $L65428
$L65445:

; 532  : 				else
; 533  : 					return (_Insert(true, _Where._Mynode(), _Val));

  001e1	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  001e4	51		 push	 ecx
  001e5	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  001e8	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  001ed	50		 push	 eax
  001ee	6a 01		 push	 1
  001f0	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  001f3	52		 push	 edx
  001f4	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f7	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  001fc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001ff	e9 bb 03 00 00	 jmp	 $L65428
$L65444:

; 534  : 				}
; 535  : 			else if (!this->comp(this->_Kfn(_Val), _Key(_Where._Mynode()))
; 536  : 				&& (++(_Next = _Where) == end()
; 537  : 					|| !this->comp(_Key(_Next._Mynode()),
; 538  : 						this->_Kfn(_Val))))

  00204	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00207	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  0020c	50		 push	 eax
  0020d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  00212	83 c4 04	 add	 esp, 4
  00215	50		 push	 eax
  00216	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  00219	50		 push	 eax
  0021a	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  0021f	83 c4 04	 add	 esp, 4
  00222	50		 push	 eax
  00223	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00226	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  0022b	0f b6 c8	 movzx	 ecx, al
  0022e	85 c9		 test	 ecx, ecx
  00230	0f 85 c0 00 00
	00		 jne	 $L65438
  00236	8b 55 0c	 mov	 edx, DWORD PTR __Where$[ebp]
  00239	89 55 fc	 mov	 DWORD PTR __Next$[ebp], edx
  0023c	8d 45 f0	 lea	 eax, DWORD PTR $T66840[ebp]
  0023f	50		 push	 eax
  00240	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00243	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  00248	50		 push	 eax
  00249	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  0024c	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator++
  00251	8b c8		 mov	 ecx, eax
  00253	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  00258	0f b6 c8	 movzx	 ecx, al
  0025b	85 c9		 test	 ecx, ecx
  0025d	75 2e		 jne	 SHORT $L65452
  0025f	8b 55 10	 mov	 edx, DWORD PTR __Val$[ebp]
  00262	52		 push	 edx
  00263	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  00268	83 c4 04	 add	 esp, 4
  0026b	50		 push	 eax
  0026c	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  0026f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00274	50		 push	 eax
  00275	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  0027a	83 c4 04	 add	 esp, 4
  0027d	50		 push	 eax
  0027e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00281	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  00286	0f b6 c0	 movzx	 eax, al
  00289	85 c0		 test	 eax, eax
  0028b	75 69		 jne	 SHORT $L65438
$L65452:

; 539  : 				{	// insert after _Where
; 540  : 				if (_Isnil(_Right(_Where._Mynode())))

  0028d	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00290	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00295	50		 push	 eax
  00296	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0029b	83 c4 04	 add	 esp, 4
  0029e	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a0	51		 push	 ecx
  002a1	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  002a6	83 c4 04	 add	 esp, 4
  002a9	0f be 10	 movsx	 edx, BYTE PTR [eax]
  002ac	85 d2		 test	 edx, edx
  002ae	74 23		 je	 SHORT $L65453

; 541  : 					return (_Insert(false, _Where._Mynode(), _Val));

  002b0	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  002b3	50		 push	 eax
  002b4	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  002b7	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  002bc	50		 push	 eax
  002bd	6a 00		 push	 0
  002bf	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  002c2	51		 push	 ecx
  002c3	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  002cb	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  002ce	e9 ec 02 00 00	 jmp	 $L65428
$L65453:

; 542  : 				else
; 543  : 					return (_Insert(true, _Next._Mynode(), _Val));

  002d3	8b 55 10	 mov	 edx, DWORD PTR __Val$[ebp]
  002d6	52		 push	 edx
  002d7	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  002da	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  002df	50		 push	 eax
  002e0	6a 01		 push	 1
  002e2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  002e5	50		 push	 eax
  002e6	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  002e9	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  002ee	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  002f1	e9 c9 02 00 00	 jmp	 $L65428
$L65438:

; 544  : 				}
; 545  : 			}
; 546  : 		else

  002f6	e9 aa 02 00 00	 jmp	 $L65432
$L65433:

; 547  : 			{	// insert only if unique
; 548  : 			if (_Where == begin())

  002fb	8d 4d ec	 lea	 ecx, DWORD PTR $T66841[ebp]
  002fe	51		 push	 ecx
  002ff	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::begin
  00307	50		 push	 eax
  00308	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0030b	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  00310	0f b6 d0	 movzx	 edx, al
  00313	85 d2		 test	 edx, edx
  00315	74 56		 je	 SHORT $L65459

; 549  : 				{	// insert at beginning if before first element
; 550  : 				if (this->comp(this->_Kfn(_Val), _Key(_Where._Mynode())))

  00317	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0031a	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  0031f	50		 push	 eax
  00320	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  00325	83 c4 04	 add	 esp, 4
  00328	50		 push	 eax
  00329	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  0032c	50		 push	 eax
  0032d	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  00332	83 c4 04	 add	 esp, 4
  00335	50		 push	 eax
  00336	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00339	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  0033e	0f b6 c8	 movzx	 ecx, al
  00341	85 c9		 test	 ecx, ecx
  00343	74 23		 je	 SHORT $L65460

; 551  : 					return (_Insert(true, _Where._Mynode(), _Val));

  00345	8b 55 10	 mov	 edx, DWORD PTR __Val$[ebp]
  00348	52		 push	 edx
  00349	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0034c	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00351	50		 push	 eax
  00352	6a 01		 push	 1
  00354	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00357	50		 push	 eax
  00358	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0035b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  00360	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00363	e9 57 02 00 00	 jmp	 $L65428
$L65460:

; 552  : 				}
; 553  : 			else if (_Where == end())

  00368	e9 38 02 00 00	 jmp	 $L65432
$L65459:
  0036d	8d 4d e8	 lea	 ecx, DWORD PTR $T66842[ebp]
  00370	51		 push	 ecx
  00371	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00374	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  00379	50		 push	 eax
  0037a	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0037d	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  00382	0f b6 d0	 movzx	 edx, al
  00385	85 d2		 test	 edx, edx
  00387	74 5a		 je	 SHORT $L65464

; 554  : 				{	// insert at end if after last element
; 555  : 				if (this->comp(_Key(_Rmost()), this->_Kfn(_Val)))

  00389	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  0038c	50		 push	 eax
  0038d	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  00392	83 c4 04	 add	 esp, 4
  00395	50		 push	 eax
  00396	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00399	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
  0039e	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a0	51		 push	 ecx
  003a1	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  003a6	83 c4 04	 add	 esp, 4
  003a9	50		 push	 eax
  003aa	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  003ad	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  003b2	0f b6 d0	 movzx	 edx, al
  003b5	85 d2		 test	 edx, edx
  003b7	74 25		 je	 SHORT $L65465

; 556  : 					return (_Insert(false, _Rmost(), _Val));

  003b9	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  003bc	50		 push	 eax
  003bd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  003c0	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
  003c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c7	51		 push	 ecx
  003c8	6a 00		 push	 0
  003ca	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  003cd	52		 push	 edx
  003ce	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  003d1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  003d6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  003d9	e9 e1 01 00 00	 jmp	 $L65428
$L65465:

; 557  : 				}
; 558  : 			else if (this->comp(this->_Kfn(_Val), _Key(_Where._Mynode()))

  003de	e9 c2 01 00 00	 jmp	 $L65432
$L65464:

; 559  : 				&& this->comp(_Key((--(_Next = _Where))._Mynode()),
; 560  : 					this->_Kfn(_Val)))

  003e3	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  003e6	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  003eb	50		 push	 eax
  003ec	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  003f1	83 c4 04	 add	 esp, 4
  003f4	50		 push	 eax
  003f5	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  003f8	50		 push	 eax
  003f9	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  003fe	83 c4 04	 add	 esp, 4
  00401	50		 push	 eax
  00402	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00405	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  0040a	0f b6 c8	 movzx	 ecx, al
  0040d	85 c9		 test	 ecx, ecx
  0040f	0f 84 a4 00 00
	00		 je	 $L65468
  00415	8b 55 0c	 mov	 edx, DWORD PTR __Where$[ebp]
  00418	89 55 fc	 mov	 DWORD PTR __Next$[ebp], edx
  0041b	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  0041e	50		 push	 eax
  0041f	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  00424	83 c4 04	 add	 esp, 4
  00427	50		 push	 eax
  00428	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  0042b	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator--
  00430	8b c8		 mov	 ecx, eax
  00432	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  0043d	83 c4 04	 add	 esp, 4
  00440	50		 push	 eax
  00441	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00444	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  00449	0f b6 c8	 movzx	 ecx, al
  0044c	85 c9		 test	 ecx, ecx
  0044e	74 69		 je	 SHORT $L65468

; 561  : 				{	// insert before _Where
; 562  : 				if (_Isnil(_Right(_Next._Mynode())))

  00450	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  00453	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00458	50		 push	 eax
  00459	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0045e	83 c4 04	 add	 esp, 4
  00461	8b 10		 mov	 edx, DWORD PTR [eax]
  00463	52		 push	 edx
  00464	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00469	83 c4 04	 add	 esp, 4
  0046c	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0046f	85 c0		 test	 eax, eax
  00471	74 23		 je	 SHORT $L65469

; 563  : 					return (_Insert(false, _Next._Mynode(), _Val));

  00473	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  00476	51		 push	 ecx
  00477	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  0047a	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  0047f	50		 push	 eax
  00480	6a 00		 push	 0
  00482	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00485	52		 push	 edx
  00486	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00489	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  0048e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00491	e9 29 01 00 00	 jmp	 $L65428
$L65469:

; 564  : 				else
; 565  : 					return (_Insert(true, _Where._Mynode(), _Val));

  00496	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  00499	50		 push	 eax
  0049a	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0049d	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  004a2	50		 push	 eax
  004a3	6a 01		 push	 1
  004a5	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  004a8	51		 push	 ecx
  004a9	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  004ac	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  004b1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004b4	e9 06 01 00 00	 jmp	 $L65428
$L65468:

; 566  : 				}
; 567  : 			else if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val))
; 568  : 				&& (++(_Next = _Where) == end()
; 569  : 					|| this->comp(this->_Kfn(_Val),
; 570  : 						_Key(_Next._Mynode()))))

  004b9	8b 55 10	 mov	 edx, DWORD PTR __Val$[ebp]
  004bc	52		 push	 edx
  004bd	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  004c2	83 c4 04	 add	 esp, 4
  004c5	50		 push	 eax
  004c6	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  004c9	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  004ce	50		 push	 eax
  004cf	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  004d4	83 c4 04	 add	 esp, 4
  004d7	50		 push	 eax
  004d8	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  004db	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  004e0	0f b6 c0	 movzx	 eax, al
  004e3	85 c0		 test	 eax, eax
  004e5	0f 84 ba 00 00
	00		 je	 $L65432
  004eb	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  004ee	89 4d fc	 mov	 DWORD PTR __Next$[ebp], ecx
  004f1	8d 55 e4	 lea	 edx, DWORD PTR $T66843[ebp]
  004f4	52		 push	 edx
  004f5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  004f8	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  004fd	50		 push	 eax
  004fe	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  00501	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator++
  00506	8b c8		 mov	 ecx, eax
  00508	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  0050d	0f b6 c0	 movzx	 eax, al
  00510	85 c0		 test	 eax, eax
  00512	75 2e		 jne	 SHORT $L65476
  00514	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  00517	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  0051c	50		 push	 eax
  0051d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  00522	83 c4 04	 add	 esp, 4
  00525	50		 push	 eax
  00526	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  00529	51		 push	 ecx
  0052a	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  0052f	83 c4 04	 add	 esp, 4
  00532	50		 push	 eax
  00533	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00536	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  0053b	0f b6 d0	 movzx	 edx, al
  0053e	85 d2		 test	 edx, edx
  00540	74 63		 je	 SHORT $L65432
$L65476:

; 571  : 				{	// insert after _Where
; 572  : 				if (_Isnil(_Right(_Where._Mynode())))

  00542	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00545	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  0054a	50		 push	 eax
  0054b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00550	83 c4 04	 add	 esp, 4
  00553	8b 00		 mov	 eax, DWORD PTR [eax]
  00555	50		 push	 eax
  00556	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  0055b	83 c4 04	 add	 esp, 4
  0055e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00561	85 c9		 test	 ecx, ecx
  00563	74 20		 je	 SHORT $L65477

; 573  : 					return (_Insert(false, _Where._Mynode(), _Val));

  00565	8b 55 10	 mov	 edx, DWORD PTR __Val$[ebp]
  00568	52		 push	 edx
  00569	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0056c	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00571	50		 push	 eax
  00572	6a 00		 push	 0
  00574	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00577	50		 push	 eax
  00578	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0057b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  00580	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00583	eb 3a		 jmp	 SHORT $L65428
$L65477:

; 574  : 				else
; 575  : 					return (_Insert(true, _Next._Mynode(), _Val));

  00585	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  00588	51		 push	 ecx
  00589	8d 4d fc	 lea	 ecx, DWORD PTR __Next$[ebp]
  0058c	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00591	50		 push	 eax
  00592	6a 01		 push	 1
  00594	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00597	52		 push	 edx
  00598	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0059b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  005a0	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  005a3	eb 1a		 jmp	 SHORT $L65428
$L65432:

; 576  : 				}
; 577  : 			}
; 578  : 
; 579  : 		return (insert(_Val).first);	// try usual insert if all else fails

  005a5	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  005a8	50		 push	 eax
  005a9	8d 4d dc	 lea	 ecx, DWORD PTR $T66844[ebp]
  005ac	51		 push	 ecx
  005ad	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  005b0	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::insert
  005b5	8b 10		 mov	 edx, DWORD PTR [eax]
  005b7	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  005ba	89 10		 mov	 DWORD PTR [eax], edx
  005bc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L65428:

; 580  : 		}

  005bf	8b e5		 mov	 esp, ebp
  005c1	5d		 pop	 ebp
  005c2	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::insert
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lbound
; Function compile flags: /Odt
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 809  : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00007	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lbound
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00017	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 811  : 		}

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::deallocate
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::destroy
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::erase
; Function compile flags: /Odt
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T66851 = -12						; size = 4
$T66850 = -8						; size = 4
$T66849 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1143 : 		erase(begin(), end());

  00009	8d 45 fc	 lea	 eax, DWORD PTR $T66849[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 55 f8	 lea	 edx, DWORD PTR $T66850[ebp]
  0001b	52		 push	 edx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::begin
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	50		 push	 eax
  00027	8d 4d f4	 lea	 ecx, DWORD PTR $T66851[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));

  00033	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  0003f	83 c4 04	 add	 esp, 4
  00042	50		 push	 eax
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 c1 02	 add	 ecx, 2
  00049	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::destroy

; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));

  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0005a	83 c4 04	 add	 esp, 4
  0005d	50		 push	 eax
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 02	 add	 ecx, 2
  00064	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::destroy

; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));

  00069	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	83 c1 02	 add	 ecx, 2
  0007f	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::destroy

; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00084	6a 01		 push	 1
  00086	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00089	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0008c	50		 push	 eax
  0008d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	83 c1 01	 add	 ecx, 1
  00093	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::deallocate

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00098	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  000a2	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000a5	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 1149 : 		}

  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tidy
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\functional
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 138  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 139  : 		return (_Left < _Right);

  00007	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00011	1b c0		 sbb	 eax, eax
  00013	f7 d8		 neg	 eax

; 140  : 		}

  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::const_iterator
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::const_iterator

; 313  : 			}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator*
; Function compile flags: /Odt
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Diterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 316  : 			{	// return designated value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator*

; 318  : 			}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator*
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 283  : 			{	// return node pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 284  : 			return (_Ptr);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 285  : 			}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode, COMDAT

; 107  : 		{	// return reference to successor pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 108  : 		return ((_Nodepref)(*_Pnode)._Next);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 109  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode, COMDAT

; 112  : 		{	// return reference to predecessor pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 113  : 		return ((_Nodepref)(*_Pnode)._Prev);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 114  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::const_iterator
; Function compile flags: /Odt
;	COMDAT ?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin, COMDAT
; _this$ = ecx

; 381  : 		{	// return iterator for beginning of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 382  : 		return (const_iterator(_Nextnode(_Myhead)));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  00013	83 c4 04	 add	 esp, 4
  00016	8b 10		 mov	 edx, DWORD PTR [eax]
  00018	52		 push	 edx
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::const_iterator
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 383  : 		}

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end, COMDAT
; _this$ = ecx

; 391  : 		{	// return iterator for end of nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 392  : 		return (const_iterator(_Myhead));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::const_iterator
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 393  : 		}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end
_TEXT	ENDS
PUBLIC	?_Incsize@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXI@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Incsize
PUBLIC	?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@0ABQAUMESSAGE_OBSERVER@@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Buynode
; Function compile flags: /Odt
;	COMDAT ?_Insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@12@ABQAUMESSAGE_OBSERVER@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
__Newnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@12@ABQAUMESSAGE_OBSERVER@@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Insert, COMDAT
; _this$ = ecx

; 521  : 		{	// insert _Val at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 522  : 		_Nodeptr _Pnode = _Where._Mynode();

  00009	8d 4d 08	 lea	 ecx, DWORD PTR __Where$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@3@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::_Mynode
  00011	89 45 f8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 523  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00017	50		 push	 eax
  00018	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
  00021	83 c4 04	 add	 esp, 4
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	52		 push	 edx
  00027	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@0ABQAUMESSAGE_OBSERVER@@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Buynode
  00033	89 45 fc	 mov	 DWORD PTR __Newnode$[ebp], eax

; 524  : 		_Incsize(1);

  00036	6a 01		 push	 1
  00038	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Incsize@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXI@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Incsize

; 525  : 		_Prevnode(_Pnode) = _Newnode;

  00040	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 55 fc	 mov	 edx, DWORD PTR __Newnode$[ebp]
  0004f	89 10		 mov	 DWORD PTR [eax], edx

; 526  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

  00051	8b 45 fc	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
  0005a	83 c4 04	 add	 esp, 4
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  00065	83 c4 04	 add	 esp, 4
  00068	8b 55 fc	 mov	 edx, DWORD PTR __Newnode$[ebp]
  0006b	89 10		 mov	 DWORD PTR [eax], edx

; 527  : 		}

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 08 00	 ret	 8
?_Insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@12@ABQAUMESSAGE_OBSERVER@@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Insert
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::allocate
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::construct
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::destroy
EXTRN	__CxxThrowException@8:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T66880	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T66882	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L66876
$T66881	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T66882
$T66878	DD	019930520H
	DD	02H
	DD	FLAT:$T66880
	DD	01H
	DD	FLAT:$T66881
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@XZ
_TEXT	SEGMENT
tv93 = -36						; size = 4
tv92 = -32						; size = 4
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Buynode, COMDAT
; _this$ = ecx

; 898  : 		{	// allocate a head node and set links

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	83 ec 14	 sub	 esp, 20			; 00000014H
  0001c	53		 push	 ebx
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00022	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 899  : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

  00025	6a 01		 push	 1
  00027	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::allocate
  0002f	89 45 e8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 900  : 		int _Linkcnt = 0;

  00032	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __Linkcnt$[ebp], 0

; 901  : 
; 902  : 		_TRY_BEGIN

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 903  : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

  00040	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  00049	83 c4 04	 add	 esp, 4
  0004c	89 45 e0	 mov	 DWORD PTR tv92[ebp], eax
  0004f	8d 4d e8	 lea	 ecx, DWORD PTR __Pnode$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 e0	 mov	 edx, DWORD PTR tv92[ebp]
  00056	52		 push	 edx
  00057	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	83 c1 01	 add	 ecx, 1
  0005d	e8 00 00 00 00	 call	 ?construct@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::construct

; 904  : 		++_Linkcnt;

  00062	8b 45 ec	 mov	 eax, DWORD PTR __Linkcnt$[ebp]
  00065	83 c0 01	 add	 eax, 1
  00068	89 45 ec	 mov	 DWORD PTR __Linkcnt$[ebp], eax

; 905  : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

  0006b	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0006e	51		 push	 ecx
  0006f	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
  00074	83 c4 04	 add	 esp, 4
  00077	89 45 dc	 mov	 DWORD PTR tv93[ebp], eax
  0007a	8d 55 e8	 lea	 edx, DWORD PTR __Pnode$[ebp]
  0007d	52		 push	 edx
  0007e	8b 45 dc	 mov	 eax, DWORD PTR tv93[ebp]
  00081	50		 push	 eax
  00082	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	83 c1 01	 add	 ecx, 1
  00088	e8 00 00 00 00	 call	 ?construct@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::construct
  0008d	eb 35		 jmp	 SHORT $L66875
$L66876:

; 906  : 		_CATCH_ALL
; 907  : 		if (0 < _Linkcnt)

  0008f	83 7d ec 00	 cmp	 DWORD PTR __Linkcnt$[ebp], 0
  00093	7e 18		 jle	 SHORT $L65556

; 908  : 			this->_Alptr.destroy(&_Nextnode(_Pnode));

  00095	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  0009e	83 c4 04	 add	 esp, 4
  000a1	50		 push	 eax
  000a2	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	83 c1 01	 add	 ecx, 1
  000a8	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::destroy
$L65556:

; 909  : 		this->_Alnod.deallocate(_Pnode, 1);

  000ad	6a 01		 push	 1
  000af	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000b2	52		 push	 edx
  000b3	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::deallocate

; 910  : 		_RERAISE;

  000bb	6a 00		 push	 0
  000bd	6a 00		 push	 0
  000bf	e8 00 00 00 00	 call	 __CxxThrowException@8
$L66875:

; 911  : 		_CATCH_END

  000c4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 912  : 		return (_Pnode);

  000cb	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
$L66873:

; 913  : 		}

  000ce	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000d1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@XZ:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T66878
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Buynode
PUBLIC	?clear@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXXZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::clear
; Function compile flags: /Odt
;	COMDAT ?_Tidy@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXXZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Tidy, COMDAT
; _this$ = ecx

; 929  : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 930  : 		clear();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?clear@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXXZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::clear

; 931  : 		this->_Alptr.destroy(&_Nextnode(_Myhead));

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  0001b	83 c4 04	 add	 esp, 4
  0001e	50		 push	 eax
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	83 c1 01	 add	 ecx, 1
  00025	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::destroy

; 932  : 		this->_Alptr.destroy(&_Prevnode(_Myhead));

  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
  00036	83 c4 04	 add	 esp, 4
  00039	50		 push	 eax
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 c1 01	 add	 ecx, 1
  00040	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::destroy

; 933  : 		this->_Alnod.deallocate(_Myhead, 1);

  00045	6a 01		 push	 1
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004d	52		 push	 edx
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::deallocate

; 934  : 		_Myhead = 0;

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 935  : 		}

  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?_Tidy@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXXZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@ABV01@@Z ; std::allocator<MESSAGE_OBSERVER *>::allocator<MESSAGE_OBSERVER *>
PUBLIC	??0?$_List_ptr@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ; std::_List_ptr<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_ptr<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
; Function compile flags: /Odt
;	COMDAT ??0?$_List_val@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = 8						; size = 1
??0?$_List_val@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z PROC NEAR ; std::_List_val<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_val<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >, COMDAT
; _this$ = ecx

; 82   : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	51		 push	 ecx
  0000a	8b cc		 mov	 ecx, esp
  0000c	8d 45 08	 lea	 eax, DWORD PTR __Al$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@ABV01@@Z ; std::allocator<MESSAGE_OBSERVER *>::allocator<MESSAGE_OBSERVER *>
  00015	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??0?$_List_ptr@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ; std::_List_ptr<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_ptr<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
  0001d	8d 4d 08	 lea	 ecx, DWORD PTR __Al$[ebp]
  00020	51		 push	 ecx
  00021	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 02	 add	 ecx, 2
  00027	e8 00 00 00 00	 call	 ??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@ABV01@@Z ; std::allocator<MESSAGE_OBSERVER *>::allocator<MESSAGE_OBSERVER *>

; 83   : 		}

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
??0?$_List_val@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ENDP ; std::_List_val<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_val<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@XZ PROC NEAR ; std::allocator<MESSAGE_OBSERVER *>::allocator<MESSAGE_OBSERVER *>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@XZ ENDP	; std::allocator<MESSAGE_OBSERVER *>::allocator<MESSAGE_OBSERVER *>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 131  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 132  : 		operator delete(_Ptr);

  00007	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4

; 133  : 		}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>
; Function compile flags: /Odt
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z PROC NEAR ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 151  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 152  : 		_Destroy(_Ptr);

  00007	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??$_Destroy@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>
  00010	83 c4 04	 add	 esp, 4

; 153  : 		}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::destroy
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
??0iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 235  : 			{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::const_iterator

; 236  : 			}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator++
; Function compile flags: /Odt
;	COMDAT ??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator++, COMDAT
; _this$ = ecx

; 249  : 			{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 250  : 			++(*(const_iterator *)this);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??Econst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator++

; 251  : 			return (*this);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 252  : 			}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator--
; Function compile flags: /Odt
;	COMDAT ??Fiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Fiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator--, COMDAT
; _this$ = ecx

; 262  : 			{	// predecrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 263  : 			--(*(const_iterator *)this);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??Fconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator--

; 264  : 			return (*this);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 265  : 			}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator--
_TEXT	ENDS
PUBLIC	?_Myval@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAUMESSAGE_OBSERVER@@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Myval
; Function compile flags: /Odt
;	COMDAT ??Dconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEABQAUMESSAGE_OBSERVER@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Dconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEABQAUMESSAGE_OBSERVER@@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 160  : 			{	// return designated value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 161  : 			return (_Myval(_Ptr));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Myval@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAUMESSAGE_OBSERVER@@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Myval
  00012	83 c4 04	 add	 esp, 4

; 162  : 			}

  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Dconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEABQAUMESSAGE_OBSERVER@@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator*
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@3@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@3@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 206  : 			{	// return node pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 207  : 			return (_Ptr);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 208  : 			}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@3@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::iterator
; Function compile flags: /Odt
;	COMDAT ?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end, COMDAT
; _this$ = ecx

; 386  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 387  : 		return (iterator(_Myhead));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::iterator
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 388  : 		}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end
_TEXT	ENDS
PUBLIC	?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
PUBLIC	?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode
PUBLIC	?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@0ABQAVIMessageObserver@@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Buynode
PUBLIC	?_Incsize@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXI@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Incsize
PUBLIC	?_Mynode@const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@3@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::_Mynode
; Function compile flags: /Odt
;	COMDAT ?_Insert@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXViterator@12@ABQAVIMessageObserver@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
__Newnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Insert@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXViterator@12@ABQAVIMessageObserver@@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Insert, COMDAT
; _this$ = ecx

; 521  : 		{	// insert _Val at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 522  : 		_Nodeptr _Pnode = _Where._Mynode();

  00009	8d 4d 08	 lea	 ecx, DWORD PTR __Where$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@3@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::_Mynode
  00011	89 45 f8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 523  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00017	50		 push	 eax
  00018	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode
  00021	83 c4 04	 add	 esp, 4
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	52		 push	 edx
  00027	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@0ABQAVIMessageObserver@@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Buynode
  00033	89 45 fc	 mov	 DWORD PTR __Newnode$[ebp], eax

; 524  : 		_Incsize(1);

  00036	6a 01		 push	 1
  00038	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Incsize@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXI@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Incsize

; 525  : 		_Prevnode(_Pnode) = _Newnode;

  00040	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 55 fc	 mov	 edx, DWORD PTR __Newnode$[ebp]
  0004f	89 10		 mov	 DWORD PTR [eax], edx

; 526  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

  00051	8b 45 fc	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode
  0005a	83 c4 04	 add	 esp, 4
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
  00065	83 c4 04	 add	 esp, 4
  00068	8b 55 fc	 mov	 edx, DWORD PTR __Newnode$[ebp]
  0006b	89 10		 mov	 DWORD PTR [eax], edx

; 527  : 		}

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 08 00	 ret	 8
?_Insert@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXViterator@12@ABQAVIMessageObserver@@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Insert
_TEXT	ENDS
PUBLIC	??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@ABV01@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABKABV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABKABV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@@Z PROC NEAR ; std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00014	50		 push	 eax
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 04	 add	 ecx, 4
  0001b	e8 00 00 00 00	 call	 ??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@ABV01@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >

; 35   : 		}

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABKABV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@1@@Z ENDP ; std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil, COMDAT

; 136  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 1d	 add	 eax, 29			; 0000001dH

; 138  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left, COMDAT

; 146  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 148  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent, COMDAT

; 151  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 153  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right, COMDAT

; 156  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 158  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Myval, COMDAT

; 161  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lmost
; Function compile flags: /Odt
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::begin, COMDAT
; _this$ = ecx

; 407  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lmost
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00015	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 409  : 		}

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::begin
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::size, COMDAT
; _this$ = ecx

; 447  : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 448  : 		return (_Mysize);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 449  : 		}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>
; Function compile flags: /Odt
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv85 = -56						; size = 4
_this$ = -52						; size = 4
$T66938 = -45						; size = 1
$T66937 = -44						; size = 4
$T66936 = -37						; size = 1
$T66935 = -36						; size = 4
$T66934 = -29						; size = 1
$T66933 = -28						; size = 4
$T66932 = -24						; size = 4
$T66931 = -17						; size = 1
__Where$65670 = -16					; size = 4
__Trynode$ = -12					; size = 4
__Wherenode$ = -8					; size = 4
__Addleft$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 478  : 		_Nodeptr _Trynode = _Root();

  00009	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	89 45 f4	 mov	 DWORD PTR __Trynode$[ebp], eax

; 479  : 		_Nodeptr _Wherenode = _Myhead;

  00016	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001c	89 55 f8	 mov	 DWORD PTR __Wherenode$[ebp], edx

; 480  : 		bool _Addleft = true;	// add to left of head if tree empty

  0001f	c6 45 ff 01	 mov	 BYTE PTR __Addleft$[ebp], 1
$L65659:

; 481  : 		while (!_Isnil(_Trynode))

  00023	8b 45 f4	 mov	 eax, DWORD PTR __Trynode$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  0002c	83 c4 04	 add	 esp, 4
  0002f	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00032	85 c9		 test	 ecx, ecx
  00034	75 5f		 jne	 SHORT $L65660

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;

  00036	8b 55 f4	 mov	 edx, DWORD PTR __Trynode$[ebp]
  00039	89 55 f8	 mov	 DWORD PTR __Wherenode$[ebp], edx

; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  0003c	8b 45 f4	 mov	 eax, DWORD PTR __Trynode$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  00052	83 c4 04	 add	 esp, 4
  00055	50		 push	 eax
  00056	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  0005e	88 45 ff	 mov	 BYTE PTR __Addleft$[ebp], al

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00061	0f b6 55 ff	 movzx	 edx, BYTE PTR __Addleft$[ebp]
  00065	85 d2		 test	 edx, edx
  00067	74 13		 je	 SHORT $L66929
  00069	8b 45 f4	 mov	 eax, DWORD PTR __Trynode$[ebp]
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00072	83 c4 04	 add	 esp, 4
  00075	8b 08		 mov	 ecx, DWORD PTR [eax]
  00077	89 4d c8	 mov	 DWORD PTR tv85[ebp], ecx
  0007a	eb 11		 jmp	 SHORT $L66930
$L66929:
  0007c	8b 55 f4	 mov	 edx, DWORD PTR __Trynode$[ebp]
  0007f	52		 push	 edx
  00080	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00085	83 c4 04	 add	 esp, 4
  00088	8b 00		 mov	 eax, DWORD PTR [eax]
  0008a	89 45 c8	 mov	 DWORD PTR tv85[ebp], eax
$L66930:
  0008d	8b 4d c8	 mov	 ecx, DWORD PTR tv85[ebp]
  00090	89 4d f4	 mov	 DWORD PTR __Trynode$[ebp], ecx

; 486  : 			}

  00093	eb 8e		 jmp	 SHORT $L65659
$L65660:

; 487  : 
; 488  : 		if (this->_Multi)

  00095	33 d2		 xor	 edx, edx
  00097	74 31		 je	 SHORT $L65661

; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00099	c6 45 ef 01	 mov	 BYTE PTR $T66931[ebp], 1
  0009d	8d 45 ef	 lea	 eax, DWORD PTR $T66931[ebp]
  000a0	50		 push	 eax
  000a1	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  000a4	51		 push	 ecx
  000a5	8b 55 f8	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000a8	52		 push	 edx
  000a9	8a 45 ff	 mov	 al, BYTE PTR __Addleft$[ebp]
  000ac	50		 push	 eax
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR $T66932[ebp]
  000b0	51		 push	 ecx
  000b1	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  000b9	50		 push	 eax
  000ba	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000bd	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>
  000c2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000c5	e9 d9 00 00 00	 jmp	 $L65654
$L65661:

; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);

  000ca	8b 55 f8	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000cd	52		 push	 edx
  000ce	8d 4d f0	 lea	 ecx, DWORD PTR __Where$65670[ebp]
  000d1	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator

; 493  : 			if (!_Addleft)

  000d6	0f b6 45 ff	 movzx	 eax, BYTE PTR __Addleft$[ebp]
  000da	85 c0		 test	 eax, eax
  000dc	75 02		 jne	 SHORT $L65672

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  000de	eb 50		 jmp	 SHORT $L65673
$L65672:
  000e0	8d 4d e4	 lea	 ecx, DWORD PTR $T66933[ebp]
  000e3	51		 push	 ecx
  000e4	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::begin
  000ec	50		 push	 eax
  000ed	8d 4d f0	 lea	 ecx, DWORD PTR __Where$65670[ebp]
  000f0	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  000f5	0f b6 d0	 movzx	 edx, al
  000f8	85 d2		 test	 edx, edx
  000fa	74 2c		 je	 SHORT $L65675

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  000fc	c6 45 e3 01	 mov	 BYTE PTR $T66934[ebp], 1
  00100	8d 45 e3	 lea	 eax, DWORD PTR $T66934[ebp]
  00103	50		 push	 eax
  00104	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  00107	51		 push	 ecx
  00108	8b 55 f8	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  0010b	52		 push	 edx
  0010c	6a 01		 push	 1
  0010e	8d 45 dc	 lea	 eax, DWORD PTR $T66935[ebp]
  00111	50		 push	 eax
  00112	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00115	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  0011a	50		 push	 eax
  0011b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0011e	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>
  00123	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00126	eb 7b		 jmp	 SHORT $L65654
$L65675:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00128	8d 4d f0	 lea	 ecx, DWORD PTR __Where$65670[ebp]
  0012b	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator--
$L65673:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  00130	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  00133	51		 push	 ecx
  00134	e8 00 00 00 00	 call	 ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
  00139	83 c4 04	 add	 esp, 4
  0013c	50		 push	 eax
  0013d	8d 4d f0	 lea	 ecx, DWORD PTR __Where$65670[ebp]
  00140	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00145	50		 push	 eax
  00146	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  0014b	83 c4 04	 add	 esp, 4
  0014e	50		 push	 eax
  0014f	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00152	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  00157	0f b6 d0	 movzx	 edx, al
  0015a	85 d2		 test	 edx, edx
  0015c	74 2e		 je	 SHORT $L65680

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  0015e	c6 45 db 01	 mov	 BYTE PTR $T66936[ebp], 1
  00162	8d 45 db	 lea	 eax, DWORD PTR $T66936[ebp]
  00165	50		 push	 eax
  00166	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  00169	51		 push	 ecx
  0016a	8b 55 f8	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  0016d	52		 push	 edx
  0016e	8a 45 ff	 mov	 al, BYTE PTR __Addleft$[ebp]
  00171	50		 push	 eax
  00172	8d 4d d4	 lea	 ecx, DWORD PTR $T66937[ebp]
  00175	51		 push	 ecx
  00176	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00179	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
  0017e	50		 push	 eax
  0017f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00182	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>
  00187	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0018a	eb 17		 jmp	 SHORT $L65654
$L65680:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0018c	c6 45 d3 00	 mov	 BYTE PTR $T66938[ebp], 0
  00190	8d 55 d3	 lea	 edx, DWORD PTR $T66938[ebp]
  00193	52		 push	 edx
  00194	8d 45 f0	 lea	 eax, DWORD PTR __Where$65670[ebp]
  00197	50		 push	 eax
  00198	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0019b	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>
  001a0	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L65654:

; 504  : 			}
; 505  : 		}

  001a3	8b e5		 mov	 esp, ebp
  001a5	5d		 pop	 ebp
  001a6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::insert
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::clear
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator++
; Function compile flags: /Odt
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T66944 = -16						; size = 4
$T66943 = -12						; size = 4
$T66942 = -8						; size = 4
$T66941 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 751  : 		if (_First == begin() && _Last == end())

  00009	8d 45 fc	 lea	 eax, DWORD PTR $T66941[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::begin
  00015	50		 push	 eax
  00016	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00019	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  0001e	0f b6 c8	 movzx	 ecx, al
  00021	85 c9		 test	 ecx, ecx
  00023	74 35		 je	 SHORT $L65696
  00025	8d 55 f8	 lea	 edx, DWORD PTR $T66942[ebp]
  00028	52		 push	 edx
  00029	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::end
  00031	50		 push	 eax
  00032	8d 4d 10	 lea	 ecx, DWORD PTR __Last$[ebp]
  00035	e8 00 00 00 00	 call	 ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator==
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	85 c0		 test	 eax, eax
  0003f	74 19		 je	 SHORT $L65696

; 752  : 			{	// erase all
; 753  : 			clear();

  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::clear

; 754  : 			return (begin());

  00049	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::begin
  00055	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00058	eb 3d		 jmp	 SHORT $L65689
$L65696:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0005a	8d 55 10	 lea	 edx, DWORD PTR __Last$[ebp]
  0005d	52		 push	 edx
  0005e	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00061	e8 00 00 00 00	 call	 ??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator!=
  00066	0f b6 c0	 movzx	 eax, al
  00069	85 c0		 test	 eax, eax
  0006b	74 1f		 je	 SHORT $L65697

; 759  : 				erase(_First++);

  0006d	6a 00		 push	 0
  0006f	8d 4d f4	 lea	 ecx, DWORD PTR $T66943[ebp]
  00072	51		 push	 ecx
  00073	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00076	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator++
  0007b	8b 10		 mov	 edx, DWORD PTR [eax]
  0007d	52		 push	 edx
  0007e	8d 45 f0	 lea	 eax, DWORD PTR $T66944[ebp]
  00081	50		 push	 eax
  00082	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::erase
  0008a	eb ce		 jmp	 SHORT $L65696
$L65697:

; 760  : 			return (_First);

  0008c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0008f	8b 55 0c	 mov	 edx, DWORD PTR __First$[ebp]
  00092	89 11		 mov	 DWORD PTR [ecx], edx
  00094	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L65689:

; 761  : 			}
; 762  : 		}

  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Buynode
; Function compile flags: /Odt
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Init@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 902  : 		_Myhead = _Buynode();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Buynode
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00021	83 c4 04	 add	 esp, 4
  00024	c6 00 01	 mov	 BYTE PTR [eax], 1

; 904  : 		_Root() = _Myhead;

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00035	89 10		 mov	 DWORD PTR [eax], edx

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lmost
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00045	89 10		 mov	 DWORD PTR [eax], edx
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00055	89 10		 mov	 DWORD PTR [eax], edx

; 906  : 		_Mysize = 0;

  00057	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 907  : 		}

  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::max_size
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rrotate
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Buynode
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:NEAR
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T66955	DD	0ffffffffH
	DD	FLAT:$L66951
$T66953	DD	019930520H
	DD	01H
	DD	FLAT:$T66955
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Odt
_DATA	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -92						; size = 4
$T66950 = -88						; size = 28
$T66949 = -60						; size = 40
__Pnode$65726 = -20					; size = 4
__Newnode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 50	 sub	 esp, 80			; 00000050H
  0001b	56		 push	 esi
  0001c	89 4d a4	 mov	 DWORD PTR _this$[ebp], ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001f	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?max_size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::max_size
  00027	83 e8 01	 sub	 eax, 1
  0002a	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00030	77 2f		 ja	 SHORT $L65705

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00032	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  00037	8d 4d a8	 lea	 ecx, DWORD PTR $T66950[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00047	8d 55 a8	 lea	 edx, DWORD PTR $T66950[ebp]
  0004a	52		 push	 edx
  0004b	8d 4d c4	 lea	 ecx, DWORD PTR $T66949[ebp]
  0004e	e8 00 00 00 00	 call	 ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
  00053	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00058	8d 45 c4	 lea	 eax, DWORD PTR $T66949[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L65705:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00061	6a 00		 push	 0
  00063	8b 4d 14	 mov	 ecx, DWORD PTR __Val$[ebp]
  00066	51		 push	 ecx
  00067	8b 55 a4	 mov	 edx, DWORD PTR _this$[ebp]
  0006a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0006d	50		 push	 eax
  0006e	8b 4d 10	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00071	51		 push	 ecx
  00072	8b 55 a4	 mov	 edx, DWORD PTR _this$[ebp]
  00075	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00078	50		 push	 eax
  00079	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Buynode
  00081	89 45 f0	 mov	 DWORD PTR __Newnode$[ebp], eax

; 916  : 
; 917  : 		++_Mysize;

  00084	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0008a	83 c2 01	 add	 edx, 1
  0008d	8b 45 a4	 mov	 eax, DWORD PTR _this$[ebp]
  00090	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 918  : 		if (_Wherenode == _Myhead)

  00093	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	8b 55 10	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00099	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  0009c	75 29		 jne	 SHORT $L65720

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  000a6	8b 4d f0	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000a9	89 08		 mov	 DWORD PTR [eax], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000ab	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lmost
  000b3	8b 55 f0	 mov	 edx, DWORD PTR __Newnode$[ebp]
  000b6	89 10		 mov	 DWORD PTR [eax], edx
  000b8	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
  000c0	8b 4d f0	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000c3	89 08		 mov	 DWORD PTR [eax], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000c5	eb 64		 jmp	 SHORT $L65721
$L65720:
  000c7	0f b6 55 0c	 movzx	 edx, BYTE PTR __Addleft$[ebp]
  000cb	85 d2		 test	 edx, edx
  000cd	74 2f		 je	 SHORT $L65722

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000cf	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  000d8	83 c4 04	 add	 esp, 4
  000db	8b 4d f0	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000de	89 08		 mov	 DWORD PTR [eax], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000e0	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  000e3	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lmost
  000e8	8b 55 10	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000eb	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ed	75 0d		 jne	 SHORT $L65723

; 927  : 				_Lmost() = _Newnode;

  000ef	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lmost
  000f7	8b 4d f0	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000fa	89 08		 mov	 DWORD PTR [eax], ecx
$L65723:

; 928  : 			}
; 929  : 		else

  000fc	eb 2d		 jmp	 SHORT $L65721
$L65722:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000fe	8b 55 10	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00101	52		 push	 edx
  00102	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00107	83 c4 04	 add	 esp, 4
  0010a	8b 4d f0	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  0010d	89 08		 mov	 DWORD PTR [eax], ecx

; 932  : 			if (_Wherenode == _Rmost())

  0010f	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00112	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
  00117	8b 55 10	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  0011a	3b 10		 cmp	 edx, DWORD PTR [eax]
  0011c	75 0d		 jne	 SHORT $L65721

; 933  : 				_Rmost() = _Newnode;

  0011e	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00121	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
  00126	8b 4d f0	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  00129	89 08		 mov	 DWORD PTR [eax], ecx
$L65721:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  0012b	8b 55 f0	 mov	 edx, DWORD PTR __Newnode$[ebp]
  0012e	89 55 ec	 mov	 DWORD PTR __Pnode$65726[ebp], edx
$L65728:
  00131	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$65726[ebp]
  00134	50		 push	 eax
  00135	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0013a	83 c4 04	 add	 esp, 4
  0013d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013f	51		 push	 ecx
  00140	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00145	83 c4 04	 add	 esp, 4
  00148	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0014b	85 d2		 test	 edx, edx
  0014d	0f 85 ce 02 00
	00		 jne	 $L65729

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  00153	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$65726[ebp]
  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0015c	83 c4 04	 add	 esp, 4
  0015f	8b f0		 mov	 esi, eax
  00161	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  00164	51		 push	 ecx
  00165	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0016a	83 c4 04	 add	 esp, 4
  0016d	8b 10		 mov	 edx, DWORD PTR [eax]
  0016f	52		 push	 edx
  00170	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00175	83 c4 04	 add	 esp, 4
  00178	8b 00		 mov	 eax, DWORD PTR [eax]
  0017a	50		 push	 eax
  0017b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00180	83 c4 04	 add	 esp, 4
  00183	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00185	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00187	0f 85 4a 01 00
	00		 jne	 $L65730

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  0018d	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$65726[ebp]
  00190	52		 push	 edx
  00191	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00196	83 c4 04	 add	 esp, 4
  00199	8b 00		 mov	 eax, DWORD PTR [eax]
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  001a1	83 c4 04	 add	 esp, 4
  001a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a6	51		 push	 ecx
  001a7	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  001ac	83 c4 04	 add	 esp, 4
  001af	8b 10		 mov	 edx, DWORD PTR [eax]
  001b1	89 55 10	 mov	 DWORD PTR __Wherenode$[ebp], edx

; 940  : 				if (_Color(_Wherenode) == _Red)

  001b4	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  001b7	50		 push	 eax
  001b8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  001bd	83 c4 04	 add	 esp, 4
  001c0	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001c3	85 c9		 test	 ecx, ecx
  001c5	75 6f		 jne	 SHORT $L65731

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  001c7	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$65726[ebp]
  001ca	52		 push	 edx
  001cb	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  001d0	83 c4 04	 add	 esp, 4
  001d3	8b 00		 mov	 eax, DWORD PTR [eax]
  001d5	50		 push	 eax
  001d6	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  001db	83 c4 04	 add	 esp, 4
  001de	c6 00 01	 mov	 BYTE PTR [eax], 1

; 943  : 					_Color(_Wherenode) = _Black;

  001e1	8b 4d 10	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  001e4	51		 push	 ecx
  001e5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  001ea	83 c4 04	 add	 esp, 4
  001ed	c6 00 01	 mov	 BYTE PTR [eax], 1

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  001f0	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$65726[ebp]
  001f3	52		 push	 edx
  001f4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  001f9	83 c4 04	 add	 esp, 4
  001fc	8b 00		 mov	 eax, DWORD PTR [eax]
  001fe	50		 push	 eax
  001ff	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00204	83 c4 04	 add	 esp, 4
  00207	8b 08		 mov	 ecx, DWORD PTR [eax]
  00209	51		 push	 ecx
  0020a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  0020f	83 c4 04	 add	 esp, 4
  00212	c6 00 00	 mov	 BYTE PTR [eax], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  00215	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$65726[ebp]
  00218	52		 push	 edx
  00219	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0021e	83 c4 04	 add	 esp, 4
  00221	8b 00		 mov	 eax, DWORD PTR [eax]
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00229	83 c4 04	 add	 esp, 4
  0022c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022e	89 4d ec	 mov	 DWORD PTR __Pnode$65726[ebp], ecx

; 946  : 					}
; 947  : 				else

  00231	e9 9c 00 00 00	 jmp	 $L65732
$L65731:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00236	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$65726[ebp]
  00239	52		 push	 edx
  0023a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0023f	83 c4 04	 add	 esp, 4
  00242	8b 00		 mov	 eax, DWORD PTR [eax]
  00244	50		 push	 eax
  00245	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0024a	83 c4 04	 add	 esp, 4
  0024d	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  00250	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00252	75 1d		 jne	 SHORT $L65733

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00254	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$65726[ebp]
  00257	52		 push	 edx
  00258	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0025d	83 c4 04	 add	 esp, 4
  00260	8b 00		 mov	 eax, DWORD PTR [eax]
  00262	89 45 ec	 mov	 DWORD PTR __Pnode$65726[ebp], eax

; 952  : 						_Lrotate(_Pnode);

  00265	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  00268	51		 push	 ecx
  00269	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  0026c	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lrotate
$L65733:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00271	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$65726[ebp]
  00274	52		 push	 edx
  00275	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0027a	83 c4 04	 add	 esp, 4
  0027d	8b 00		 mov	 eax, DWORD PTR [eax]
  0027f	50		 push	 eax
  00280	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00285	83 c4 04	 add	 esp, 4
  00288	c6 00 01	 mov	 BYTE PTR [eax], 1

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0028b	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  0028e	51		 push	 ecx
  0028f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00294	83 c4 04	 add	 esp, 4
  00297	8b 10		 mov	 edx, DWORD PTR [eax]
  00299	52		 push	 edx
  0029a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0029f	83 c4 04	 add	 esp, 4
  002a2	8b 00		 mov	 eax, DWORD PTR [eax]
  002a4	50		 push	 eax
  002a5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  002aa	83 c4 04	 add	 esp, 4
  002ad	c6 00 00	 mov	 BYTE PTR [eax], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  002b0	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  002b3	51		 push	 ecx
  002b4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  002b9	83 c4 04	 add	 esp, 4
  002bc	8b 10		 mov	 edx, DWORD PTR [eax]
  002be	52		 push	 edx
  002bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  002c4	83 c4 04	 add	 esp, 4
  002c7	8b 00		 mov	 eax, DWORD PTR [eax]
  002c9	50		 push	 eax
  002ca	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  002cd	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rrotate
$L65732:

; 957  : 					}
; 958  : 				}
; 959  : 			else

  002d2	e9 45 01 00 00	 jmp	 $L65734
$L65730:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));

  002d7	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  002da	51		 push	 ecx
  002db	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  002e0	83 c4 04	 add	 esp, 4
  002e3	8b 10		 mov	 edx, DWORD PTR [eax]
  002e5	52		 push	 edx
  002e6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  002eb	83 c4 04	 add	 esp, 4
  002ee	8b 00		 mov	 eax, DWORD PTR [eax]
  002f0	50		 push	 eax
  002f1	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  002f6	83 c4 04	 add	 esp, 4
  002f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002fb	89 4d 10	 mov	 DWORD PTR __Wherenode$[ebp], ecx

; 962  : 				if (_Color(_Wherenode) == _Red)

  002fe	8b 55 10	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00301	52		 push	 edx
  00302	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00307	83 c4 04	 add	 esp, 4
  0030a	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0030d	85 c0		 test	 eax, eax
  0030f	75 6f		 jne	 SHORT $L65735

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;

  00311	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  00314	51		 push	 ecx
  00315	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0031a	83 c4 04	 add	 esp, 4
  0031d	8b 10		 mov	 edx, DWORD PTR [eax]
  0031f	52		 push	 edx
  00320	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00325	83 c4 04	 add	 esp, 4
  00328	c6 00 01	 mov	 BYTE PTR [eax], 1

; 965  : 					_Color(_Wherenode) = _Black;

  0032b	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0032e	50		 push	 eax
  0032f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00334	83 c4 04	 add	 esp, 4
  00337	c6 00 01	 mov	 BYTE PTR [eax], 1

; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0033a	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  0033d	51		 push	 ecx
  0033e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00343	83 c4 04	 add	 esp, 4
  00346	8b 10		 mov	 edx, DWORD PTR [eax]
  00348	52		 push	 edx
  00349	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0034e	83 c4 04	 add	 esp, 4
  00351	8b 00		 mov	 eax, DWORD PTR [eax]
  00353	50		 push	 eax
  00354	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00359	83 c4 04	 add	 esp, 4
  0035c	c6 00 00	 mov	 BYTE PTR [eax], 0

; 967  : 					_Pnode = _Parent(_Parent(_Pnode));

  0035f	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  00362	51		 push	 ecx
  00363	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00368	83 c4 04	 add	 esp, 4
  0036b	8b 10		 mov	 edx, DWORD PTR [eax]
  0036d	52		 push	 edx
  0036e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00373	83 c4 04	 add	 esp, 4
  00376	8b 00		 mov	 eax, DWORD PTR [eax]
  00378	89 45 ec	 mov	 DWORD PTR __Pnode$65726[ebp], eax

; 968  : 					}
; 969  : 				else

  0037b	e9 9c 00 00 00	 jmp	 $L65734
$L65735:

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00380	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  00383	51		 push	 ecx
  00384	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00389	83 c4 04	 add	 esp, 4
  0038c	8b 10		 mov	 edx, DWORD PTR [eax]
  0038e	52		 push	 edx
  0038f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00394	83 c4 04	 add	 esp, 4
  00397	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  0039a	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0039c	75 1d		 jne	 SHORT $L65737

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0039e	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$65726[ebp]
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  003a7	83 c4 04	 add	 esp, 4
  003aa	8b 00		 mov	 eax, DWORD PTR [eax]
  003ac	89 45 ec	 mov	 DWORD PTR __Pnode$65726[ebp], eax

; 974  : 						_Rrotate(_Pnode);

  003af	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  003b2	51		 push	 ecx
  003b3	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  003b6	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rrotate
$L65737:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  003bb	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$65726[ebp]
  003be	52		 push	 edx
  003bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  003c4	83 c4 04	 add	 esp, 4
  003c7	8b 00		 mov	 eax, DWORD PTR [eax]
  003c9	50		 push	 eax
  003ca	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  003cf	83 c4 04	 add	 esp, 4
  003d2	c6 00 01	 mov	 BYTE PTR [eax], 1

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  003d5	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  003d8	51		 push	 ecx
  003d9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  003de	83 c4 04	 add	 esp, 4
  003e1	8b 10		 mov	 edx, DWORD PTR [eax]
  003e3	52		 push	 edx
  003e4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  003e9	83 c4 04	 add	 esp, 4
  003ec	8b 00		 mov	 eax, DWORD PTR [eax]
  003ee	50		 push	 eax
  003ef	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  003f4	83 c4 04	 add	 esp, 4
  003f7	c6 00 00	 mov	 BYTE PTR [eax], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  003fa	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$65726[ebp]
  003fd	51		 push	 ecx
  003fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00403	83 c4 04	 add	 esp, 4
  00406	8b 10		 mov	 edx, DWORD PTR [eax]
  00408	52		 push	 edx
  00409	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0040e	83 c4 04	 add	 esp, 4
  00411	8b 00		 mov	 eax, DWORD PTR [eax]
  00413	50		 push	 eax
  00414	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00417	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lrotate
$L65734:

; 979  : 					}
; 980  : 				}

  0041c	e9 10 fd ff ff	 jmp	 $L65728
$L65729:

; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  00421	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00424	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  00429	8b 08		 mov	 ecx, DWORD PTR [eax]
  0042b	51		 push	 ecx
  0042c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00431	83 c4 04	 add	 esp, 4
  00434	c6 00 01	 mov	 BYTE PTR [eax], 1

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00437	8b 55 f0	 mov	 edx, DWORD PTR __Newnode$[ebp]
  0043a	52		 push	 edx
  0043b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0043e	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator
  00443	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L66948:

; 984  : 		}

  00446	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00449	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00450	5e		 pop	 esi
  00451	8b e5		 mov	 esp, ebp
  00453	5d		 pop	 ebp
  00454	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L66951:
  00000	8d 4d a8	 lea	 ecx, DWORD PTR $T66950[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T66953
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Insert
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
PUBLIC	??_R1A@?0A@A@exception@@8			; exception::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R1A@?0A@A@logic_error@std@@8			; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R4length_error@std@@6B@			; std::length_error::`RTTI Complete Object Locator'
PUBLIC	??_R3length_error@std@@8			; std::length_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2length_error@std@@8			; std::length_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@length_error@std@@8		; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,0)'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:NEAR		; std::length_error::`vector deleting destructor'
;	COMDAT ??_7length_error@std@@6B@
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_R4length_error@std@@6B@ ; std::length_error::`vftable'
	DD	FLAT:??_Elength_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT
??_R4length_error@std@@6B@ DD 00H			; std::length_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT
??_R3length_error@std@@8 DD 00H				; std::length_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT
??_R2length_error@std@@8 DD FLAT:??_R1A@?0A@A@length_error@std@@8 ; std::length_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@A@exception@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@length_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@A@length_error@std@@8 DD FLAT:??_R0?AVlength_error@std@@@8 ; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@A@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@exception@@8
rdata$r	SEGMENT
??_R1A@?0A@A@exception@@8 DD FLAT:??_R0?AVexception@@@8	; exception::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
; Function compile flags: /Odt
rdata$r	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 95   : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Message$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7length_error@std@@6B@

; 96   : 		}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:NEAR
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
EXTRN	__imp_??0exception@@QAE@XZ:NEAR
EXTRN	__imp_??1exception@@UAE@XZ:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T66968	DD	0ffffffffH
	DD	FLAT:$L66963
$T66966	DD	019930520H
	DD	01H
	DD	FLAT:$T66968
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@A@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@exception@@8
; Function compile flags: /Odt
rdata$r	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@@QAE@XZ
  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	8b 4d 08	 mov	 ecx, DWORD PTR __Message$[ebp]
  00038	51		 push	 ecx
  00039	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 20   : 		}

  00045	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L66963:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T66966
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:NEAR
; Function compile flags: /Odt
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 26   : 		{	// return pointer to message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 27   : 		return (_Str.c_str());

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 28   : 		}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
_TEXT	ENDS
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
; Function compile flags: /Odt
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $L62494
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
$L62494:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T66982	DD	0ffffffffH
	DD	FLAT:$L66977
$T66980	DD	019930520H
	DD	01H
	DD	FLAT:$T66982
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1logic_error@std@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7logic_error@std@@6B@
  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00038	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1exception@@UAE@XZ
  00048	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L66977:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@@UAE@XZ
__ehhandler$??1logic_error@std@@UAE@XZ:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T66980
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Odt
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1length_error@std@@UAE@XZ PROC NEAR			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 99   : 		{}	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7length_error@std@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC NEAR		; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1length_error@std@@UAE@XZ ; std::length_error::~length_error
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $L62560
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
$L62560:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
__Wherenode$ = -4					; size = 4
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 987  : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00009	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	89 45 f8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails

  00016	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001c	89 55 fc	 mov	 DWORD PTR __Wherenode$[ebp], edx
$L65745:

; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  0001f	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00028	83 c4 04	 add	 esp, 4
  0002b	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0002e	85 c9		 test	 ecx, ecx
  00030	75 4c		 jne	 SHORT $L65746

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00032	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00035	52		 push	 edx
  00036	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Key
  0003f	83 c4 04	 add	 esp, 4
  00042	50		 push	 eax
  00043	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ??R?$less@K@std@@QBE_NABK0@Z ; std::less<unsigned long>::operator()
  0004b	0f b6 c8	 movzx	 ecx, al
  0004e	85 c9		 test	 ecx, ecx
  00050	74 13		 je	 SHORT $L65747

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00052	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00055	52		 push	 edx
  00056	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0005b	83 c4 04	 add	 esp, 4
  0005e	8b 00		 mov	 eax, DWORD PTR [eax]
  00060	89 45 f8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 994  : 			else

  00063	eb 17		 jmp	 SHORT $L65748
$L65747:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  00065	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00068	89 4d fc	 mov	 DWORD PTR __Wherenode$[ebp], ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  0006b	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0006e	52		 push	 edx
  0006f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00074	83 c4 04	 add	 esp, 4
  00077	8b 00		 mov	 eax, DWORD PTR [eax]
  00079	89 45 f8	 mov	 DWORD PTR __Pnode$[ebp], eax
$L65748:

; 998  : 				}

  0007c	eb a1		 jmp	 SHORT $L65745
$L65746:

; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate

  0007e	8b 45 fc	 mov	 eax, DWORD PTR __Wherenode$[ebp]

; 1001 : 		}

  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lbound
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1048 : 		{	// return rightmost node in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1049 : 		return (_Right(_Myhead));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00013	83 c4 04	 add	 esp, 4

; 1050 : 		}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
; Function compile flags: /Odt
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	51		 push	 ecx
  0000a	8b cc		 mov	 ecx, esp
  0000c	8d 45 0c	 lea	 eax, DWORD PTR __Al$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
  00015	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00018	51		 push	 ecx
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Tree_ptr@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
  00021	8d 55 0c	 lea	 edx, DWORD PTR __Al$[ebp]
  00024	52		 push	 edx
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 03	 add	 ecx, 3
  0002b	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >

; 96   : 		}

  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn, COMDAT

; 63   : 		{	// extract key from element value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 64   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 65   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Kfn
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 131  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 132  : 		operator delete(_Ptr);

  00007	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4

; 133  : 		}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>
; Function compile flags: /Odt
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 151  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 152  : 		_Destroy(_Ptr);

  00007	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>
  00010	83 c4 04	 add	 esp, 4

; 153  : 		}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::const_iterator
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::const_iterator

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator++
; Function compile flags: /Odt
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 327  : 			++(*(const_iterator *)this);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator++

; 328  : 			return (*this);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 329  : 			}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator--
; Function compile flags: /Odt
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Fiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 340  : 			--(*(const_iterator *)this);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator--

; 341  : 			return (*this);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 342  : 			}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator--
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::const_iterator
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 204  : 			{	// return designated value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 205  : 			return (_Myval(_Ptr));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Myval@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Myval
  00012	83 c4 04	 add	 esp, 4

; 206  : 			}

  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator*
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAUMESSAGE_OBSERVER@@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAUMESSAGE_OBSERVER@@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Myval, COMDAT

; 117  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 118  : 		return ((_Vref)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 119  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAUMESSAGE_OBSERVER@@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Myval
_TEXT	ENDS
PUBLIC	??$insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::insert<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
;	COMDAT xdata$x
xdata$x	SEGMENT
$T67028	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T67030	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L67024
$T67029	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T67030
$T67026	DD	019930520H
	DD	02H
	DD	FLAT:$T67028
	DD	01H
	DD	FLAT:$T67029
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv132 = -48						; size = 4
tv131 = -44						; size = 4
tv130 = -40						; size = 4
_this$ = -36						; size = 4
$T67022 = -32						; size = 4
$T67021 = -28						; size = 4
$T67020 = -24						; size = 4
$T67019 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >, COMDAT
; _this$ = ecx

; 311  : 		{	// construct list by copying _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	83 ec 20	 sub	 esp, 32			; 00000020H
  0001c	53		 push	 ebx
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00022	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00028	83 c0 02	 add	 eax, 2
  0002b	51		 push	 ecx
  0002c	8b cc		 mov	 ecx, esp
  0002e	89 65 ec	 mov	 DWORD PTR $T67019[ebp], esp
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@ABV01@@Z ; std::allocator<MESSAGE_OBSERVER *>::allocator<MESSAGE_OBSERVER *>
  00037	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0?$_List_val@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ; std::_List_val<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_val<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
  0003f	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Buynode
  00047	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0004d	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  00050	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 312  : 		_TRY_BEGIN

  00057	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 313  : 		insert(begin(), _Right.begin(), _Right.end());

  0005e	8d 45 e8	 lea	 eax, DWORD PTR $T67020[ebp]
  00061	50		 push	 eax
  00062	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00065	e8 00 00 00 00	 call	 ?end@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::end
  0006a	89 45 d8	 mov	 DWORD PTR tv130[ebp], eax
  0006d	8d 4d e4	 lea	 ecx, DWORD PTR $T67021[ebp]
  00070	51		 push	 ecx
  00071	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00074	e8 00 00 00 00	 call	 ?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin
  00079	89 45 d4	 mov	 DWORD PTR tv131[ebp], eax
  0007c	8d 55 e0	 lea	 edx, DWORD PTR $T67022[ebp]
  0007f	52		 push	 edx
  00080	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin
  00088	89 45 d0	 mov	 DWORD PTR tv132[ebp], eax
  0008b	8b 45 d8	 mov	 eax, DWORD PTR tv130[ebp]
  0008e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00090	51		 push	 ecx
  00091	8b 55 d4	 mov	 edx, DWORD PTR tv131[ebp]
  00094	8b 02		 mov	 eax, DWORD PTR [edx]
  00096	50		 push	 eax
  00097	8b 4d d0	 mov	 ecx, DWORD PTR tv132[ebp]
  0009a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009c	52		 push	 edx
  0009d	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	e8 00 00 00 00	 call	 ??$insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::insert<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
  000a5	eb 11		 jmp	 SHORT $L67023
$L67024:

; 314  : 		_CATCH_ALL
; 315  : 		_Tidy();

  000a7	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	e8 00 00 00 00	 call	 ?_Tidy@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXXZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Tidy

; 316  : 		_RERAISE;

  000af	6a 00		 push	 0
  000b1	6a 00		 push	 0
  000b3	e8 00 00 00 00	 call	 __CxxThrowException@8
$L67023:

; 317  : 		_CATCH_END

  000b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 318  : 		}

  000bf	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
$L67018:
  000c2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000c5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	5b		 pop	 ebx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@ABV01@@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T67026
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
; Function compile flags: /Odt
;	COMDAT ?clear@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXXZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::clear, COMDAT
; _this$ = ecx

; 610  : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 611  : 		_Nodeptr _Pnext;
; 612  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  00015	83 c4 04	 add	 esp, 4
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	89 55 fc	 mov	 DWORD PTR __Pnode$[ebp], edx

; 613  : 		_Nextnode(_Myhead) = _Myhead;

  0001d	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  00029	83 c4 04	 add	 esp, 4
  0002c	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00032	89 08		 mov	 DWORD PTR [eax], ecx

; 614  : 		_Prevnode(_Myhead) = _Myhead;

  00034	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
  00040	83 c4 04	 add	 esp, 4
  00043	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00049	89 10		 mov	 DWORD PTR [eax], edx

; 615  : 		_Mysize = 0;

  0004b	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 616  : 
; 617  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

  00055	eb 06		 jmp	 SHORT $L65795
$L65796:
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0005a	89 4d fc	 mov	 DWORD PTR __Pnode$[ebp], ecx
$L65795:
  0005d	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00060	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00063	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00066	74 2d		 je	 SHORT $L65792

; 618  : 			{	// delete an element
; 619  : 			_Pnext = _Nextnode(_Pnode);

  00068	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  00071	83 c4 04	 add	 esp, 4
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 55 f8	 mov	 DWORD PTR __Pnext$[ebp], edx

; 620  : 			this->_Alnod.destroy(_Pnode);

  00079	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0007c	50		 push	 eax
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?destroy@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::destroy

; 621  : 			this->_Alnod.deallocate(_Pnode, 1);

  00085	6a 01		 push	 1
  00087	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0008a	51		 push	 ecx
  0008b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::deallocate

; 622  : 			}

  00093	eb c2		 jmp	 SHORT $L65796
$L65792:

; 623  : 		}

  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
?clear@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXXZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::clear
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??0_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU012@0ABQAUMESSAGE_OBSERVER@@@Z ; std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node::_Node
;	COMDAT xdata$x
xdata$x	SEGMENT
$T67047	DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:$L67043
	DD	0ffffffffH
	DD	00H
$T67049	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L67042
$T67048	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:$T67049
$T67045	DD	019930520H
	DD	03H
	DD	FLAT:$T67047
	DD	01H
	DD	FLAT:$T67048
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@0ABQAUMESSAGE_OBSERVER@@@Z
_TEXT	SEGMENT
tv79 = -40						; size = 4
tv89 = -36						; size = 4
_this$ = -32						; size = 4
$T67038 = -28						; size = 4
$T67037 = -24						; size = 4
__Pnode$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@0ABQAUMESSAGE_OBSERVER@@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Buynode, COMDAT
; _this$ = ecx

; 917  : 		{	// allocate a node and set links and value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@0ABQAUMESSAGE_OBSERVER@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	83 ec 18	 sub	 esp, 24			; 00000018H
  0001c	53		 push	 ebx
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00022	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 918  : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

  00025	6a 01		 push	 1
  00027	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::allocate
  0002f	89 45 ec	 mov	 DWORD PTR __Pnode$[ebp], eax

; 919  : 		_TRY_BEGIN

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 920  : 		new ((void *)_Pnode) _Node(_Next, _Prev, _Val);

  00039	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0003c	50		 push	 eax
  0003d	6a 0c		 push	 12			; 0000000cH
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e4	 mov	 DWORD PTR $T67038[ebp], eax
  0004a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  0004e	83 7d e4 00	 cmp	 DWORD PTR $T67038[ebp], 0
  00052	74 1f		 je	 SHORT $L67039
  00054	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  00057	51		 push	 ecx
  00058	8b 55 0c	 mov	 edx, DWORD PTR __Prev$[ebp]
  0005b	52		 push	 edx
  0005c	8b 45 08	 mov	 eax, DWORD PTR __Next$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d e4	 mov	 ecx, DWORD PTR $T67038[ebp]
  00063	e8 00 00 00 00	 call	 ??0_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU012@0ABQAUMESSAGE_OBSERVER@@@Z ; std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node::_Node
  00068	89 45 dc	 mov	 DWORD PTR tv89[ebp], eax
  0006b	8b 4d dc	 mov	 ecx, DWORD PTR tv89[ebp]
  0006e	89 4d d8	 mov	 DWORD PTR tv79[ebp], ecx
  00071	eb 07		 jmp	 SHORT $L67040
$L67039:
  00073	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$L67040:
  0007a	8b 55 d8	 mov	 edx, DWORD PTR tv79[ebp]
  0007d	89 55 e8	 mov	 DWORD PTR $T67037[ebp], edx
  00080	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00084	eb 17		 jmp	 SHORT $L67041
$L67042:

; 921  : 		_CATCH_ALL
; 922  : 		this->_Alnod.deallocate(_Pnode, 1);

  00086	6a 01		 push	 1
  00088	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::deallocate

; 923  : 		_RERAISE;

  00094	6a 00		 push	 0
  00096	6a 00		 push	 0
  00098	e8 00 00 00 00	 call	 __CxxThrowException@8
$L67041:

; 924  : 		_CATCH_END

  0009d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 925  : 		return (_Pnode);

  000a4	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
$L67036:

; 926  : 		}

  000a7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000aa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L67043:
  00000	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00003	50		 push	 eax
  00004	8b 4d e4	 mov	 ecx, DWORD PTR $T67038[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@0ABQAUMESSAGE_OBSERVER@@@Z:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T67045
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Buynode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@0ABQAUMESSAGE_OBSERVER@@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Buynode
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 63   : 	{	// construct array with placement at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 64   : 	return (_Where);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 65   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 68   : 	{	// delete if placement new fails

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 69   : 	}

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEIXZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::max_size
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
xdata$x	SEGMENT
$T67064	DD	0ffffffffH
	DD	FLAT:$L67060
$T67062	DD	019930520H
	DD	01H
	DD	FLAT:$T67064
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?_Incsize@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -84						; size = 4
$T67059 = -80						; size = 28
$T67058 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXI@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Incsize, COMDAT
; _this$ = ecx

; 956  : 		{	// alter element count, with checking

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Incsize@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 48	 sub	 esp, 72			; 00000048H
  0001b	89 4d ac	 mov	 DWORD PTR _this$[ebp], ecx

; 957  : 		if (max_size() - _Mysize < _Count)

  0001e	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEIXZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::max_size
  00026	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0002c	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002f	73 2f		 jae	 SHORT $L65810

; 958  : 			_THROW(length_error, "list<T> too long");

  00031	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
  00036	8d 4d b0	 lea	 ecx, DWORD PTR $T67059[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8d 55 b0	 lea	 edx, DWORD PTR $T67059[ebp]
  00049	52		 push	 edx
  0004a	8d 4d cc	 lea	 ecx, DWORD PTR $T67058[ebp]
  0004d	e8 00 00 00 00	 call	 ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 45 cc	 lea	 eax, DWORD PTR $T67058[ebp]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 __CxxThrowException@8
$L65810:

; 959  : 		_Mysize += _Count;

  00060	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00066	03 55 08	 add	 edx, DWORD PTR __Count$[ebp]
  00069	8b 45 ac	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	89 50 08	 mov	 DWORD PTR [eax+8], edx
$L67057:

; 960  : 		}

  0006f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00072	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L67060:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T67059[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Incsize@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXI@Z:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T67062
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Incsize@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAEXI@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Incsize
PUBLIC	??$?0PAUMESSAGE_OBSERVER@@@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *><MESSAGE_OBSERVER *>
PUBLIC	??0?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ; std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
; Function compile flags: /Odt
;	COMDAT ??0?$_List_ptr@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = 8						; size = 1
??0?$_List_ptr@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z PROC NEAR ; std::_List_ptr<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_ptr<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >, COMDAT
; _this$ = ecx

; 64   : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	51		 push	 ecx
  0000a	8b cc		 mov	 ecx, esp
  0000c	8d 45 08	 lea	 eax, DWORD PTR __Al$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@ABV01@@Z ; std::allocator<MESSAGE_OBSERVER *>::allocator<MESSAGE_OBSERVER *>
  00015	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??0?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ; std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
  0001d	8d 4d 08	 lea	 ecx, DWORD PTR __Al$[ebp]
  00020	51		 push	 ecx
  00021	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 01	 add	 ecx, 1
  00027	e8 00 00 00 00	 call	 ??$?0PAUMESSAGE_OBSERVER@@@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *><MESSAGE_OBSERVER *>

; 65   : 		}

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
??0?$_List_ptr@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ENDP ; std::_List_ptr<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_ptr<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<MESSAGE_OBSERVER *>::allocator<MESSAGE_OBSERVER *>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$allocator@PAUMESSAGE_OBSERVER@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<MESSAGE_OBSERVER *>::allocator<MESSAGE_OBSERVER *>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>
; Function compile flags: /Odt
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 136  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>
  00012	83 c4 08	 add	 esp, 8

; 138  : 		}

  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *,std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>
; Function compile flags: /Odt
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 146  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 147  : 		_Construct(_Ptr, _Val);

  00007	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??$_Construct@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *,std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>
  00014	83 c4 08	 add	 esp, 8

; 148  : 		}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>
; Function compile flags: /Odt
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z PROC NEAR ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 151  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 152  : 		_Destroy(_Ptr);

  00007	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??$_Destroy@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>
  00010	83 c4 04	 add	 esp, 4

; 153  : 		}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::destroy
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
??0const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 156  : 			{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 157  : 			}

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::const_iterator
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Econst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 170  : 			{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 			_Ptr = _Nextnode(_Ptr);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Nextnode
  00012	83 c4 04	 add	 esp, 4
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	89 02		 mov	 DWORD PTR [edx], eax

; 172  : 			return (*this);

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 173  : 			}

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??Econst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator++
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Fconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 183  : 			{	// predecrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 184  : 			_Ptr = _Prevnode(_Ptr);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@2@PAU342@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Prevnode
  00012	83 c4 04	 add	 esp, 4
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	89 02		 mov	 DWORD PTR [edx], eax

; 185  : 			return (*this);

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 186  : 			}

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??Fconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator--
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode, COMDAT

; 107  : 		{	// return reference to successor pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 108  : 		return ((_Nodepref)(*_Pnode)._Next);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 109  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode, COMDAT

; 112  : 		{	// return reference to predecessor pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 113  : 		return ((_Nodepref)(*_Pnode)._Prev);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 114  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::deallocate
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocate
PUBLIC	??0_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU012@0ABQAVIMessageObserver@@@Z ; std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node::_Node
;	COMDAT xdata$x
xdata$x	SEGMENT
$T67100	DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:$L67096
	DD	0ffffffffH
	DD	00H
$T67102	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L67095
$T67101	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:$T67102
$T67098	DD	019930520H
	DD	03H
	DD	FLAT:$T67100
	DD	01H
	DD	FLAT:$T67101
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@0ABQAVIMessageObserver@@@Z
_TEXT	SEGMENT
tv79 = -40						; size = 4
tv89 = -36						; size = 4
_this$ = -32						; size = 4
$T67091 = -28						; size = 4
$T67090 = -24						; size = 4
__Pnode$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@0ABQAVIMessageObserver@@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Buynode, COMDAT
; _this$ = ecx

; 917  : 		{	// allocate a node and set links and value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@0ABQAVIMessageObserver@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	83 ec 18	 sub	 esp, 24			; 00000018H
  0001c	53		 push	 ebx
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00022	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 918  : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

  00025	6a 01		 push	 1
  00027	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocate
  0002f	89 45 ec	 mov	 DWORD PTR __Pnode$[ebp], eax

; 919  : 		_TRY_BEGIN

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 920  : 		new ((void *)_Pnode) _Node(_Next, _Prev, _Val);

  00039	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0003c	50		 push	 eax
  0003d	6a 0c		 push	 12			; 0000000cH
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e4	 mov	 DWORD PTR $T67091[ebp], eax
  0004a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  0004e	83 7d e4 00	 cmp	 DWORD PTR $T67091[ebp], 0
  00052	74 1f		 je	 SHORT $L67092
  00054	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  00057	51		 push	 ecx
  00058	8b 55 0c	 mov	 edx, DWORD PTR __Prev$[ebp]
  0005b	52		 push	 edx
  0005c	8b 45 08	 mov	 eax, DWORD PTR __Next$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d e4	 mov	 ecx, DWORD PTR $T67091[ebp]
  00063	e8 00 00 00 00	 call	 ??0_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU012@0ABQAVIMessageObserver@@@Z ; std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node::_Node
  00068	89 45 dc	 mov	 DWORD PTR tv89[ebp], eax
  0006b	8b 4d dc	 mov	 ecx, DWORD PTR tv89[ebp]
  0006e	89 4d d8	 mov	 DWORD PTR tv79[ebp], ecx
  00071	eb 07		 jmp	 SHORT $L67093
$L67092:
  00073	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$L67093:
  0007a	8b 55 d8	 mov	 edx, DWORD PTR tv79[ebp]
  0007d	89 55 e8	 mov	 DWORD PTR $T67090[ebp], edx
  00080	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00084	eb 17		 jmp	 SHORT $L67094
$L67095:

; 921  : 		_CATCH_ALL
; 922  : 		this->_Alnod.deallocate(_Pnode, 1);

  00086	6a 01		 push	 1
  00088	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::deallocate

; 923  : 		_RERAISE;

  00094	6a 00		 push	 0
  00096	6a 00		 push	 0
  00098	e8 00 00 00 00	 call	 __CxxThrowException@8
$L67094:

; 924  : 		_CATCH_END

  0009d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 925  : 		return (_Pnode);

  000a4	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
$L67089:

; 926  : 		}

  000a7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000aa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L67096:
  00000	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00003	50		 push	 eax
  00004	8b 4d e4	 mov	 ecx, DWORD PTR $T67091[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@0ABQAVIMessageObserver@@@Z:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T67098
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@0ABQAVIMessageObserver@@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Buynode
PUBLIC	?max_size@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEIXZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::max_size
;	COMDAT xdata$x
xdata$x	SEGMENT
$T67113	DD	0ffffffffH
	DD	FLAT:$L67109
$T67111	DD	019930520H
	DD	01H
	DD	FLAT:$T67113
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -84						; size = 4
$T67108 = -80						; size = 28
$T67107 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXI@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Incsize, COMDAT
; _this$ = ecx

; 956  : 		{	// alter element count, with checking

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Incsize@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 48	 sub	 esp, 72			; 00000048H
  0001b	89 4d ac	 mov	 DWORD PTR _this$[ebp], ecx

; 957  : 		if (max_size() - _Mysize < _Count)

  0001e	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEIXZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::max_size
  00026	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0002c	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002f	73 2f		 jae	 SHORT $L65879

; 958  : 			_THROW(length_error, "list<T> too long");

  00031	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
  00036	8d 4d b0	 lea	 ecx, DWORD PTR $T67108[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8d 55 b0	 lea	 edx, DWORD PTR $T67108[ebp]
  00049	52		 push	 edx
  0004a	8d 4d cc	 lea	 ecx, DWORD PTR $T67107[ebp]
  0004d	e8 00 00 00 00	 call	 ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 45 cc	 lea	 eax, DWORD PTR $T67107[ebp]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 __CxxThrowException@8
$L65879:

; 959  : 		_Mysize += _Count;

  00060	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00066	03 55 08	 add	 edx, DWORD PTR __Count$[ebp]
  00069	8b 45 ac	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	89 50 08	 mov	 DWORD PTR [eax+8], edx
$L67106:

; 960  : 		}

  0006f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00072	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L67109:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T67108[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Incsize@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXI@Z:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T67111
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Incsize@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXI@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Incsize
PUBLIC	??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::const_iterator
; Function compile flags: /Odt
;	COMDAT ??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 235  : 			{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::const_iterator

; 236  : 			}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::iterator
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@3@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@3@XZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 206  : 			{	// return node pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 207  : 			return (_Ptr);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 208  : 			}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@3@XZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::_Mynode
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC NEAR		; std::length_error::length_error, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7length_error@std@@6B@
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
EXTRN	__imp_??0exception@@QAE@ABV0@@Z:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T67130	DD	0ffffffffH
	DD	FLAT:$L67125
$T67128	DD	019930520H
	DD	01H
	DD	FLAT:$T67130
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0exception@@QAE@ABV0@@Z
  00029	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7logic_error@std@@6B@
  00039	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  0003c	83 c2 0c	 add	 edx, 12			; 0000000cH
  0003f	52		 push	 edx
  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
  0004c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00053	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L67125:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1exception@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T67128
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color, COMDAT

; 131  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 1c	 add	 eax, 28			; 0000001cH

; 133  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::max_size
; Function compile flags: /Odt
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::max_size, COMDAT
; _this$ = ecx

; 452  : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 453  : 		return (this->_Alval.max_size());

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 03	 add	 ecx, 3
  0000d	e8 00 00 00 00	 call	 ?max_size@?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::max_size

; 454  : 		}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::max_size
_TEXT	ENDS
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::destroy
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Max
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Min
;	COMDAT xdata$x
xdata$x	SEGMENT
$T67149	DD	0ffffffffH
	DD	FLAT:$L67145
$T67147	DD	019930520H
	DD	01H
	DD	FLAT:$T67149
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
; Function compile flags: /Odt
_DATA	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
tv177 = -108						; size = 4
tv165 = -104						; size = 4
_this$ = -100						; size = 4
$T67140 = -96						; size = 28
$T67139 = -68						; size = 40
__Fixnodeparent$ = -28					; size = 4
__Pnode$ = -24						; size = 4
__Fixnode$ = -20					; size = 4
__Erasednode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 60	 sub	 esp, 96			; 00000060H
  0001b	56		 push	 esi
  0001c	89 4d 9c	 mov	 DWORD PTR _this$[ebp], ecx

; 591  : 		if (_Isnil(_Where._Mynode()))

  0001f	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00022	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  0002d	83 c4 04	 add	 esp, 4
  00030	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00033	85 c0		 test	 eax, eax
  00035	74 2f		 je	 SHORT $L65916

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00037	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  0003c	8d 4d a0	 lea	 ecx, DWORD PTR $T67140[ebp]
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004c	8d 4d a0	 lea	 ecx, DWORD PTR $T67140[ebp]
  0004f	51		 push	 ecx
  00050	8d 4d bc	 lea	 ecx, DWORD PTR $T67139[ebp]
  00053	e8 00 00 00 00	 call	 ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
  00058	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  0005d	8d 55 bc	 lea	 edx, DWORD PTR $T67139[ebp]
  00060	52		 push	 edx
  00061	e8 00 00 00 00	 call	 __CxxThrowException@8
$L65916:

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00066	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  0006e	89 45 f0	 mov	 DWORD PTR __Erasednode$[ebp], eax

; 594  : 		++_Where;	// save successor iterator for return

  00071	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00074	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator++

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;

  00079	8b 45 f0	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0007c	89 45 e8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  0007f	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 10		 mov	 edx, DWORD PTR [eax]
  0008d	52		 push	 edx
  0008e	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00093	83 c4 04	 add	 esp, 4
  00096	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00099	85 c0		 test	 eax, eax
  0009b	74 13		 je	 SHORT $L65929

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0009d	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000a0	51		 push	 ecx
  000a1	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  000a6	83 c4 04	 add	 esp, 4
  000a9	8b 10		 mov	 edx, DWORD PTR [eax]
  000ab	89 55 ec	 mov	 DWORD PTR __Fixnode$[ebp], edx

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  000ae	eb 4d		 jmp	 SHORT $L65930
$L65929:
  000b0	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  000b9	83 c4 04	 add	 esp, 4
  000bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  000c4	83 c4 04	 add	 esp, 4
  000c7	0f be 10	 movsx	 edx, BYTE PTR [eax]
  000ca	85 d2		 test	 edx, edx
  000cc	74 13		 je	 SHORT $L65931

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  000ce	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  000d7	83 c4 04	 add	 esp, 4
  000da	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dc	89 4d ec	 mov	 DWORD PTR __Fixnode$[ebp], ecx

; 604  : 		else

  000df	eb 1c		 jmp	 SHORT $L65930
$L65931:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  000e1	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  000e4	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Mynode
  000e9	89 45 e8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000ec	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000ef	52		 push	 edx
  000f0	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  000f5	83 c4 04	 add	 esp, 4
  000f8	8b 00		 mov	 eax, DWORD PTR [eax]
  000fa	89 45 ec	 mov	 DWORD PTR __Fixnode$[ebp], eax
$L65930:

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000fd	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00100	3b 4d f0	 cmp	 ecx, DWORD PTR __Erasednode$[ebp]
  00103	0f 85 1b 01 00
	00		 jne	 $L65933

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);

  00109	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  0010c	52		 push	 edx
  0010d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00112	83 c4 04	 add	 esp, 4
  00115	8b 00		 mov	 eax, DWORD PTR [eax]
  00117	89 45 e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], eax

; 613  : 			if (!_Isnil(_Fixnode))

  0011a	8b 4d ec	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  0011d	51		 push	 ecx
  0011e	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00123	83 c4 04	 add	 esp, 4
  00126	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00129	85 d2		 test	 edx, edx
  0012b	75 11		 jne	 SHORT $L65934

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  0012d	8b 45 ec	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00136	83 c4 04	 add	 esp, 4
  00139	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  0013c	89 08		 mov	 DWORD PTR [eax], ecx
$L65934:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  0013e	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00141	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  00146	8b 10		 mov	 edx, DWORD PTR [eax]
  00148	3b 55 f0	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  0014b	75 0f		 jne	 SHORT $L65935

; 617  : 				_Root() = _Fixnode;	// link down from root

  0014d	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00150	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  00155	8b 4d ec	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  0015a	eb 37		 jmp	 SHORT $L65936
$L65935:
  0015c	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0015f	52		 push	 edx
  00160	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00165	83 c4 04	 add	 esp, 4
  00168	8b 00		 mov	 eax, DWORD PTR [eax]
  0016a	3b 45 f0	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  0016d	75 13		 jne	 SHORT $L65937

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0016f	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00172	51		 push	 ecx
  00173	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00178	83 c4 04	 add	 esp, 4
  0017b	8b 55 ec	 mov	 edx, DWORD PTR __Fixnode$[ebp]
  0017e	89 10		 mov	 DWORD PTR [eax], edx

; 620  : 			else

  00180	eb 11		 jmp	 SHORT $L65936
$L65937:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  00182	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00185	50		 push	 eax
  00186	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0018b	83 c4 04	 add	 esp, 4
  0018e	8b 4d ec	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00191	89 08		 mov	 DWORD PTR [eax], ecx
$L65936:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  00193	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00196	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lmost
  0019b	8b 10		 mov	 edx, DWORD PTR [eax]
  0019d	3b 55 f0	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  001a0	75 37		 jne	 SHORT $L65939

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  001a2	8b 45 ec	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  001a5	50		 push	 eax
  001a6	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  001ab	83 c4 04	 add	 esp, 4
  001ae	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001b1	85 c9		 test	 ecx, ecx
  001b3	74 08		 je	 SHORT $L67141
  001b5	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  001b8	89 55 98	 mov	 DWORD PTR tv165[ebp], edx
  001bb	eb 0f		 jmp	 SHORT $L67142
$L67141:
  001bd	8b 45 ec	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  001c0	50		 push	 eax
  001c1	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Min
  001c6	83 c4 04	 add	 esp, 4
  001c9	89 45 98	 mov	 DWORD PTR tv165[ebp], eax
$L67142:
  001cc	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  001cf	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lmost
  001d4	8b 4d 98	 mov	 ecx, DWORD PTR tv165[ebp]
  001d7	89 08		 mov	 DWORD PTR [eax], ecx
$L65939:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  001d9	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  001dc	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	3b 55 f0	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  001e6	75 37		 jne	 SHORT $L65940

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  001e8	8b 45 ec	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  001eb	50		 push	 eax
  001ec	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  001f1	83 c4 04	 add	 esp, 4
  001f4	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001f7	85 c9		 test	 ecx, ecx
  001f9	74 08		 je	 SHORT $L67143
  001fb	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  001fe	89 55 94	 mov	 DWORD PTR tv177[ebp], edx
  00201	eb 0f		 jmp	 SHORT $L67144
$L67143:
  00203	8b 45 ec	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00206	50		 push	 eax
  00207	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Max
  0020c	83 c4 04	 add	 esp, 4
  0020f	89 45 94	 mov	 DWORD PTR tv177[ebp], eax
$L67144:
  00212	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00215	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
  0021a	8b 4d 94	 mov	 ecx, DWORD PTR tv177[ebp]
  0021d	89 08		 mov	 DWORD PTR [eax], ecx
$L65940:

; 632  : 			}
; 633  : 		else

  0021f	e9 8e 01 00 00	 jmp	 $L65941
$L65933:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00224	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00227	52		 push	 edx
  00228	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  0022d	83 c4 04	 add	 esp, 4
  00230	8b 00		 mov	 eax, DWORD PTR [eax]
  00232	50		 push	 eax
  00233	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00238	83 c4 04	 add	 esp, 4
  0023b	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0023e	89 08		 mov	 DWORD PTR [eax], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  00240	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00243	52		 push	 edx
  00244	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00249	83 c4 04	 add	 esp, 4
  0024c	8b f0		 mov	 esi, eax
  0024e	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00257	83 c4 04	 add	 esp, 4
  0025a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0025c	89 08		 mov	 DWORD PTR [eax], ecx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  0025e	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00261	52		 push	 edx
  00262	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00267	83 c4 04	 add	 esp, 4
  0026a	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0026d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0026f	75 0b		 jne	 SHORT $L65942

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00271	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00274	89 55 e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], edx

; 640  : 			else

  00277	e9 80 00 00 00	 jmp	 $L65943
$L65942:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's

  0027c	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0027f	50		 push	 eax
  00280	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00285	83 c4 04	 add	 esp, 4
  00288	8b 08		 mov	 ecx, DWORD PTR [eax]
  0028a	89 4d e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx

; 643  : 				if (!_Isnil(_Fixnode))

  0028d	8b 55 ec	 mov	 edx, DWORD PTR __Fixnode$[ebp]
  00290	52		 push	 edx
  00291	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00296	83 c4 04	 add	 esp, 4
  00299	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0029c	85 c0		 test	 eax, eax
  0029e	75 11		 jne	 SHORT $L65944

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  002a0	8b 4d ec	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  002a3	51		 push	 ecx
  002a4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  002a9	83 c4 04	 add	 esp, 4
  002ac	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  002af	89 10		 mov	 DWORD PTR [eax], edx
$L65944:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  002b1	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  002b4	50		 push	 eax
  002b5	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  002ba	83 c4 04	 add	 esp, 4
  002bd	8b 4d ec	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  002c0	89 08		 mov	 DWORD PTR [eax], ecx

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  002c2	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  002c5	52		 push	 edx
  002c6	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  002cb	83 c4 04	 add	 esp, 4
  002ce	8b f0		 mov	 esi, eax
  002d0	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  002d9	83 c4 04	 add	 esp, 4
  002dc	8b 0e		 mov	 ecx, DWORD PTR [esi]
  002de	89 08		 mov	 DWORD PTR [eax], ecx

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  002e0	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  002e3	52		 push	 edx
  002e4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  002e9	83 c4 04	 add	 esp, 4
  002ec	8b 00		 mov	 eax, DWORD PTR [eax]
  002ee	50		 push	 eax
  002ef	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  002f4	83 c4 04	 add	 esp, 4
  002f7	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  002fa	89 08		 mov	 DWORD PTR [eax], ecx
$L65943:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  002fc	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  002ff	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  00304	8b 10		 mov	 edx, DWORD PTR [eax]
  00306	3b 55 f0	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  00309	75 0f		 jne	 SHORT $L65945

; 651  : 				_Root() = _Pnode;	// link down from root

  0030b	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  0030e	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  00313	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00316	89 08		 mov	 DWORD PTR [eax], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  00318	eb 58		 jmp	 SHORT $L65946
$L65945:
  0031a	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  0031d	52		 push	 edx
  0031e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00323	83 c4 04	 add	 esp, 4
  00326	8b 00		 mov	 eax, DWORD PTR [eax]
  00328	50		 push	 eax
  00329	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  0032e	83 c4 04	 add	 esp, 4
  00331	8b 08		 mov	 ecx, DWORD PTR [eax]
  00333	3b 4d f0	 cmp	 ecx, DWORD PTR __Erasednode$[ebp]
  00336	75 1e		 jne	 SHORT $L65947

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00338	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  0033b	52		 push	 edx
  0033c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00341	83 c4 04	 add	 esp, 4
  00344	8b 00		 mov	 eax, DWORD PTR [eax]
  00346	50		 push	 eax
  00347	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  0034c	83 c4 04	 add	 esp, 4
  0034f	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00352	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  00354	eb 1c		 jmp	 SHORT $L65946
$L65947:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  00356	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00359	52		 push	 edx
  0035a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0035f	83 c4 04	 add	 esp, 4
  00362	8b 00		 mov	 eax, DWORD PTR [eax]
  00364	50		 push	 eax
  00365	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0036a	83 c4 04	 add	 esp, 4
  0036d	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00370	89 08		 mov	 DWORD PTR [eax], ecx
$L65946:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  00372	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00375	52		 push	 edx
  00376	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0037b	83 c4 04	 add	 esp, 4
  0037e	8b f0		 mov	 esi, eax
  00380	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00383	50		 push	 eax
  00384	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00389	83 c4 04	 add	 esp, 4
  0038c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0038e	89 08		 mov	 DWORD PTR [eax], ecx

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00390	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00393	52		 push	 edx
  00394	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00399	83 c4 04	 add	 esp, 4
  0039c	50		 push	 eax
  0039d	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  003a0	50		 push	 eax
  003a1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  003a6	83 c4 04	 add	 esp, 4
  003a9	50		 push	 eax
  003aa	e8 00 00 00 00	 call	 ??$swap@D@std@@YAXAAD0@Z ; std::swap<char>
  003af	83 c4 08	 add	 esp, 8
$L65941:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  003b2	8b 4d f0	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  003b5	51		 push	 ecx
  003b6	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  003bb	83 c4 04	 add	 esp, 4
  003be	0f be 10	 movsx	 edx, BYTE PTR [eax]
  003c1	83 fa 01	 cmp	 edx, 1
  003c4	0f 85 8f 03 00
	00		 jne	 $L65954

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  003ca	eb 11		 jmp	 SHORT $L65955
$L65956:
  003cc	8b 45 ec	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  003cf	50		 push	 eax
  003d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  003d5	83 c4 04	 add	 esp, 4
  003d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  003da	89 4d e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx
$L65955:
  003dd	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  003e0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  003e5	8b 55 ec	 mov	 edx, DWORD PTR __Fixnode$[ebp]
  003e8	3b 10		 cmp	 edx, DWORD PTR [eax]
  003ea	0f 84 5a 03 00
	00		 je	 $L65957
  003f0	8b 45 ec	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  003f3	50		 push	 eax
  003f4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  003f9	83 c4 04	 add	 esp, 4
  003fc	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  003ff	83 f9 01	 cmp	 ecx, 1
  00402	0f 85 42 03 00
	00		 jne	 $L65957

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00408	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0040b	52		 push	 edx
  0040c	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00411	83 c4 04	 add	 esp, 4
  00414	8b 4d ec	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00417	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00419	0f 85 97 01 00
	00		 jne	 $L65958

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0041f	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00422	52		 push	 edx
  00423	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00428	83 c4 04	 add	 esp, 4
  0042b	8b 00		 mov	 eax, DWORD PTR [eax]
  0042d	89 45 e8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 668  : 					if (_Color(_Pnode) == _Red)

  00430	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00433	51		 push	 ecx
  00434	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00439	83 c4 04	 add	 esp, 4
  0043c	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0043f	85 d2		 test	 edx, edx
  00441	75 3b		 jne	 SHORT $L65959

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  00443	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00446	50		 push	 eax
  00447	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  0044c	83 c4 04	 add	 esp, 4
  0044f	c6 00 01	 mov	 BYTE PTR [eax], 1

; 671  : 						_Color(_Fixnodeparent) = _Red;

  00452	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00455	51		 push	 ecx
  00456	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  0045b	83 c4 04	 add	 esp, 4
  0045e	c6 00 00	 mov	 BYTE PTR [eax], 0

; 672  : 						_Lrotate(_Fixnodeparent);

  00461	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00464	52		 push	 edx
  00465	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00468	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  0046d	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00470	50		 push	 eax
  00471	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00476	83 c4 04	 add	 esp, 4
  00479	8b 08		 mov	 ecx, DWORD PTR [eax]
  0047b	89 4d e8	 mov	 DWORD PTR __Pnode$[ebp], ecx
$L65959:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  0047e	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00481	52		 push	 edx
  00482	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00487	83 c4 04	 add	 esp, 4
  0048a	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0048d	85 c0		 test	 eax, eax
  0048f	74 0b		 je	 SHORT $L65960

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

  00491	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00494	89 4d ec	 mov	 DWORD PTR __Fixnode$[ebp], ecx

; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  00497	e9 15 01 00 00	 jmp	 $L65961
$L65960:

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  0049c	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0049f	52		 push	 edx
  004a0	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  004a5	83 c4 04	 add	 esp, 4
  004a8	8b 00		 mov	 eax, DWORD PTR [eax]
  004aa	50		 push	 eax
  004ab	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  004b0	83 c4 04	 add	 esp, 4
  004b3	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  004b6	83 f9 01	 cmp	 ecx, 1
  004b9	75 39		 jne	 SHORT $L65962
  004bb	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  004be	52		 push	 edx
  004bf	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  004c4	83 c4 04	 add	 esp, 4
  004c7	8b 00		 mov	 eax, DWORD PTR [eax]
  004c9	50		 push	 eax
  004ca	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  004cf	83 c4 04	 add	 esp, 4
  004d2	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  004d5	83 f9 01	 cmp	 ecx, 1
  004d8	75 1a		 jne	 SHORT $L65962

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;

  004da	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  004dd	52		 push	 edx
  004de	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  004e3	83 c4 04	 add	 esp, 4
  004e6	c6 00 00	 mov	 BYTE PTR [eax], 0

; 682  : 						_Fixnode = _Fixnodeparent;

  004e9	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  004ec	89 45 ec	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 683  : 						}
; 684  : 					else

  004ef	e9 bd 00 00 00	 jmp	 $L65961
$L65962:

; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  004f4	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  004f7	51		 push	 ecx
  004f8	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  004fd	83 c4 04	 add	 esp, 4
  00500	8b 10		 mov	 edx, DWORD PTR [eax]
  00502	52		 push	 edx
  00503	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00508	83 c4 04	 add	 esp, 4
  0050b	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0050e	83 f8 01	 cmp	 eax, 1
  00511	75 46		 jne	 SHORT $L65964

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  00513	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00516	51		 push	 ecx
  00517	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  0051c	83 c4 04	 add	 esp, 4
  0051f	8b 10		 mov	 edx, DWORD PTR [eax]
  00521	52		 push	 edx
  00522	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00527	83 c4 04	 add	 esp, 4
  0052a	c6 00 01	 mov	 BYTE PTR [eax], 1

; 689  : 							_Color(_Pnode) = _Red;

  0052d	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00530	50		 push	 eax
  00531	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00536	83 c4 04	 add	 esp, 4
  00539	c6 00 00	 mov	 BYTE PTR [eax], 0

; 690  : 							_Rrotate(_Pnode);

  0053c	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0053f	51		 push	 ecx
  00540	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00543	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  00548	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0054b	52		 push	 edx
  0054c	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00551	83 c4 04	 add	 esp, 4
  00554	8b 00		 mov	 eax, DWORD PTR [eax]
  00556	89 45 e8	 mov	 DWORD PTR __Pnode$[ebp], eax
$L65964:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00559	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  0055c	51		 push	 ecx
  0055d	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00562	83 c4 04	 add	 esp, 4
  00565	8b f0		 mov	 esi, eax
  00567	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0056a	52		 push	 edx
  0056b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00570	83 c4 04	 add	 esp, 4
  00573	8a 0e		 mov	 cl, BYTE PTR [esi]
  00575	88 08		 mov	 BYTE PTR [eax], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  00577	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0057a	52		 push	 edx
  0057b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00580	83 c4 04	 add	 esp, 4
  00583	c6 00 01	 mov	 BYTE PTR [eax], 1

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  00586	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00589	50		 push	 eax
  0058a	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0058f	83 c4 04	 add	 esp, 4
  00592	8b 08		 mov	 ecx, DWORD PTR [eax]
  00594	51		 push	 ecx
  00595	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  0059a	83 c4 04	 add	 esp, 4
  0059d	c6 00 01	 mov	 BYTE PTR [eax], 1

; 697  : 						_Lrotate(_Fixnodeparent);

  005a0	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  005a3	52		 push	 edx
  005a4	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  005a7	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  005ac	e9 99 01 00 00	 jmp	 $L65957
$L65961:

; 699  : 						}
; 700  : 					}
; 701  : 				else

  005b1	e9 8f 01 00 00	 jmp	 $L65965
$L65958:

; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);

  005b6	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  005b9	50		 push	 eax
  005ba	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  005bf	83 c4 04	 add	 esp, 4
  005c2	8b 08		 mov	 ecx, DWORD PTR [eax]
  005c4	89 4d e8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 704  : 					if (_Color(_Pnode) == _Red)

  005c7	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  005ca	52		 push	 edx
  005cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  005d0	83 c4 04	 add	 esp, 4
  005d3	0f be 00	 movsx	 eax, BYTE PTR [eax]
  005d6	85 c0		 test	 eax, eax
  005d8	75 3b		 jne	 SHORT $L65966

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  005da	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  005dd	51		 push	 ecx
  005de	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  005e3	83 c4 04	 add	 esp, 4
  005e6	c6 00 01	 mov	 BYTE PTR [eax], 1

; 707  : 						_Color(_Fixnodeparent) = _Red;

  005e9	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  005ec	52		 push	 edx
  005ed	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  005f2	83 c4 04	 add	 esp, 4
  005f5	c6 00 00	 mov	 BYTE PTR [eax], 0

; 708  : 						_Rrotate(_Fixnodeparent);

  005f8	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  005fb	50		 push	 eax
  005fc	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  005ff	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  00604	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00607	51		 push	 ecx
  00608	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  0060d	83 c4 04	 add	 esp, 4
  00610	8b 10		 mov	 edx, DWORD PTR [eax]
  00612	89 55 e8	 mov	 DWORD PTR __Pnode$[ebp], edx
$L65966:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  00615	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00618	50		 push	 eax
  00619	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  0061e	83 c4 04	 add	 esp, 4
  00621	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00624	85 c9		 test	 ecx, ecx
  00626	74 0b		 je	 SHORT $L65967

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

  00628	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0062b	89 55 ec	 mov	 DWORD PTR __Fixnode$[ebp], edx

; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  0062e	e9 12 01 00 00	 jmp	 $L65965
$L65967:

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00633	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00636	50		 push	 eax
  00637	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0063c	83 c4 04	 add	 esp, 4
  0063f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00641	51		 push	 ecx
  00642	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00647	83 c4 04	 add	 esp, 4
  0064a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0064d	83 fa 01	 cmp	 edx, 1
  00650	75 39		 jne	 SHORT $L65969
  00652	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00655	50		 push	 eax
  00656	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  0065b	83 c4 04	 add	 esp, 4
  0065e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00660	51		 push	 ecx
  00661	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00666	83 c4 04	 add	 esp, 4
  00669	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0066c	83 fa 01	 cmp	 edx, 1
  0066f	75 1a		 jne	 SHORT $L65969

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00671	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00674	50		 push	 eax
  00675	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  0067a	83 c4 04	 add	 esp, 4
  0067d	c6 00 00	 mov	 BYTE PTR [eax], 0

; 717  : 						_Fixnode = _Fixnodeparent;

  00680	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00683	89 4d ec	 mov	 DWORD PTR __Fixnode$[ebp], ecx

; 718  : 						}
; 719  : 					else

  00686	e9 ba 00 00 00	 jmp	 $L65965
$L65969:

; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0068b	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0068e	52		 push	 edx
  0068f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00694	83 c4 04	 add	 esp, 4
  00697	8b 00		 mov	 eax, DWORD PTR [eax]
  00699	50		 push	 eax
  0069a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  0069f	83 c4 04	 add	 esp, 4
  006a2	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  006a5	83 f9 01	 cmp	 ecx, 1
  006a8	75 46		 jne	 SHORT $L65971

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  006aa	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  006ad	52		 push	 edx
  006ae	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  006b3	83 c4 04	 add	 esp, 4
  006b6	8b 00		 mov	 eax, DWORD PTR [eax]
  006b8	50		 push	 eax
  006b9	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  006be	83 c4 04	 add	 esp, 4
  006c1	c6 00 01	 mov	 BYTE PTR [eax], 1

; 724  : 							_Color(_Pnode) = _Red;

  006c4	8b 4d e8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  006c7	51		 push	 ecx
  006c8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  006cd	83 c4 04	 add	 esp, 4
  006d0	c6 00 00	 mov	 BYTE PTR [eax], 0

; 725  : 							_Lrotate(_Pnode);

  006d3	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  006d6	52		 push	 edx
  006d7	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  006da	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  006df	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  006e2	50		 push	 eax
  006e3	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  006e8	83 c4 04	 add	 esp, 4
  006eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  006ed	89 4d e8	 mov	 DWORD PTR __Pnode$[ebp], ecx
$L65971:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  006f0	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  006f3	52		 push	 edx
  006f4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  006f9	83 c4 04	 add	 esp, 4
  006fc	8b f0		 mov	 esi, eax
  006fe	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00701	50		 push	 eax
  00702	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00707	83 c4 04	 add	 esp, 4
  0070a	8a 0e		 mov	 cl, BYTE PTR [esi]
  0070c	88 08		 mov	 BYTE PTR [eax], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0070e	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00711	52		 push	 edx
  00712	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00717	83 c4 04	 add	 esp, 4
  0071a	c6 00 01	 mov	 BYTE PTR [eax], 1

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  0071d	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00720	50		 push	 eax
  00721	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00726	83 c4 04	 add	 esp, 4
  00729	8b 08		 mov	 ecx, DWORD PTR [eax]
  0072b	51		 push	 ecx
  0072c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00731	83 c4 04	 add	 esp, 4
  00734	c6 00 01	 mov	 BYTE PTR [eax], 1

; 732  : 						_Rrotate(_Fixnodeparent);

  00737	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0073a	52		 push	 edx
  0073b	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  0073e	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rrotate

; 733  : 						break;	// tree now recolored/rebalanced

  00743	eb 05		 jmp	 SHORT $L65957
$L65965:

; 734  : 						}
; 735  : 					}

  00745	e9 82 fc ff ff	 jmp	 $L65956
$L65957:

; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0074a	8b 45 ec	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  0074d	50		 push	 eax
  0074e	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00753	83 c4 04	 add	 esp, 4
  00756	c6 00 01	 mov	 BYTE PTR [eax], 1
$L65954:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node

  00759	8b 4d f0	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  0075c	51		 push	 ecx
  0075d	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00760	83 c1 01	 add	 ecx, 1
  00763	e8 00 00 00 00	 call	 ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::destroy

; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00768	6a 01		 push	 1
  0076a	8b 55 f0	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  0076d	52		 push	 edx
  0076e	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00771	83 c1 01	 add	 ecx, 1
  00774	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::deallocate

; 742  : 
; 743  : 		if (0 < _Mysize)

  00779	8b 45 9c	 mov	 eax, DWORD PTR _this$[ebp]
  0077c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00780	76 0f		 jbe	 SHORT $L65972

; 744  : 			--_Mysize;

  00782	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00785	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00788	83 ea 01	 sub	 edx, 1
  0078b	8b 45 9c	 mov	 eax, DWORD PTR _this$[ebp]
  0078e	89 50 08	 mov	 DWORD PTR [eax+8], edx
$L65972:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  00791	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00794	8b 55 0c	 mov	 edx, DWORD PTR __Where$[ebp]
  00797	89 11		 mov	 DWORD PTR [ecx], edx
  00799	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L67138:

; 747  : 		}

  0079c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0079f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  007a6	5e		 pop	 esi
  007a7	8b e5		 mov	 esp, ebp
  007a9	5d		 pop	 ebp
  007aa	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L67145:
  00000	8d 4d a0	 lea	 ecx, DWORD PTR $T67140[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T67147
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::erase
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,0)'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:NEAR		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_7out_of_range@std@@6B@
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@A@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@A@exception@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@out_of_range@std@@8
rdata$r	SEGMENT
??_R1A@?0A@A@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
; Function compile flags: /Odt
rdata$r	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 118  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Message$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7out_of_range@std@@6B@

; 119  : 		}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1out_of_range@std@@UAE@XZ PROC NEAR			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 122  : 		{}	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7out_of_range@std@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC NEAR		; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1out_of_range@std@@UAE@XZ ; std::out_of_range::~out_of_range
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $L62582
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
$L62582:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Erase
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 781  : 		_Erase(_Root());

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00028	89 10		 mov	 DWORD PTR [eax], edx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lmost
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00042	89 10		 mov	 DWORD PTR [eax], edx
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rmost
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00052	89 10		 mov	 DWORD PTR [eax], edx

; 784  : 		}

  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::clear
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1004 : 		{	// return leftmost node in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1005 : 		return (_Left(_Myhead));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00013	83 c4 04	 add	 esp, 4

; 1006 : 		}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lmost
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1014 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  0000a	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00013	83 c4 04	 add	 esp, 4
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	89 4d fc	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  0001b	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0001e	52		 push	 edx
  0001f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00024	83 c4 04	 add	 esp, 4
  00027	8b f0		 mov	 esi, eax
  00029	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00032	83 c4 04	 add	 esp, 4
  00035	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00037	89 08		 mov	 DWORD PTR [eax], ecx

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  00039	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0003c	52		 push	 edx
  0003d	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00042	83 c4 04	 add	 esp, 4
  00045	8b 00		 mov	 eax, DWORD PTR [eax]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  0004d	83 c4 04	 add	 esp, 4
  00050	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00053	85 c9		 test	 ecx, ecx
  00055	75 1c		 jne	 SHORT $L65980

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00057	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0005a	52		 push	 edx
  0005b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00060	83 c4 04	 add	 esp, 4
  00063	8b 00		 mov	 eax, DWORD PTR [eax]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0006b	83 c4 04	 add	 esp, 4
  0006e	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00071	89 08		 mov	 DWORD PTR [eax], ecx
$L65980:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  00073	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00076	52		 push	 edx
  00077	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0007c	83 c4 04	 add	 esp, 4
  0007f	8b f0		 mov	 esi, eax
  00081	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0008a	83 c4 04	 add	 esp, 4
  0008d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0008f	89 08		 mov	 DWORD PTR [eax], ecx

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00091	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  00099	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  0009c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0009e	75 0f		 jne	 SHORT $L65981

; 1023 : 			_Root() = _Pnode;

  000a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000ab	89 08		 mov	 DWORD PTR [eax], ecx

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  000ad	eb 58		 jmp	 SHORT $L65982
$L65981:
  000af	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000b2	52		 push	 edx
  000b3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  000b8	83 c4 04	 add	 esp, 4
  000bb	8b 00		 mov	 eax, DWORD PTR [eax]
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  000c3	83 c4 04	 add	 esp, 4
  000c6	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  000c9	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000cb	75 1e		 jne	 SHORT $L65983

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  000cd	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000d0	52		 push	 edx
  000d1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  000d6	83 c4 04	 add	 esp, 4
  000d9	8b 00		 mov	 eax, DWORD PTR [eax]
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  000e1	83 c4 04	 add	 esp, 4
  000e4	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000e7	89 08		 mov	 DWORD PTR [eax], ecx

; 1026 : 		else

  000e9	eb 1c		 jmp	 SHORT $L65982
$L65983:

; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  000eb	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000ee	52		 push	 edx
  000ef	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  000f4	83 c4 04	 add	 esp, 4
  000f7	8b 00		 mov	 eax, DWORD PTR [eax]
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  000ff	83 c4 04	 add	 esp, 4
  00102	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00105	89 08		 mov	 DWORD PTR [eax], ecx
$L65982:

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  00107	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0010a	52		 push	 edx
  0010b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00110	83 c4 04	 add	 esp, 4
  00113	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00116	89 08		 mov	 DWORD PTR [eax], ecx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00118	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  0011b	52		 push	 edx
  0011c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00121	83 c4 04	 add	 esp, 4
  00124	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00127	89 08		 mov	 DWORD PTR [eax], ecx

; 1031 : 		}

  00129	5e		 pop	 esi
  0012a	8b e5		 mov	 esp, ebp
  0012c	5d		 pop	 ebp
  0012d	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Lrotate
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root, COMDAT
; _this$ = ecx

; 1058 : 		{	// return root of mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1059 : 		return (_Parent(_Myhead));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00013	83 c4 04	 add	 esp, 4

; 1060 : 		}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root, COMDAT
; _this$ = ecx

; 1063 : 		{	// return root of nonmutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1064 : 		return (_Parent(_Myhead));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00013	83 c4 04	 add	 esp, 4

; 1065 : 		}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1068 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  0000a	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00013	83 c4 04	 add	 esp, 4
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	89 4d fc	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  0001b	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0001e	52		 push	 edx
  0001f	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00024	83 c4 04	 add	 esp, 4
  00027	8b f0		 mov	 esi, eax
  00029	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00032	83 c4 04	 add	 esp, 4
  00035	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00037	89 08		 mov	 DWORD PTR [eax], ecx

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  00039	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0003c	52		 push	 edx
  0003d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00042	83 c4 04	 add	 esp, 4
  00045	8b 00		 mov	 eax, DWORD PTR [eax]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  0004d	83 c4 04	 add	 esp, 4
  00050	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00053	85 c9		 test	 ecx, ecx
  00055	75 1c		 jne	 SHORT $L65992

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00057	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0005a	52		 push	 edx
  0005b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00060	83 c4 04	 add	 esp, 4
  00063	8b 00		 mov	 eax, DWORD PTR [eax]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0006b	83 c4 04	 add	 esp, 4
  0006e	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00071	89 08		 mov	 DWORD PTR [eax], ecx
$L65992:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  00073	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00076	52		 push	 edx
  00077	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0007c	83 c4 04	 add	 esp, 4
  0007f	8b f0		 mov	 esi, eax
  00081	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0008a	83 c4 04	 add	 esp, 4
  0008d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0008f	89 08		 mov	 DWORD PTR [eax], ecx

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00091	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  00099	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  0009c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0009e	75 0f		 jne	 SHORT $L65993

; 1077 : 			_Root() = _Pnode;

  000a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Root
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000ab	89 08		 mov	 DWORD PTR [eax], ecx

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  000ad	eb 58		 jmp	 SHORT $L65994
$L65993:
  000af	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000b2	52		 push	 edx
  000b3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  000b8	83 c4 04	 add	 esp, 4
  000bb	8b 00		 mov	 eax, DWORD PTR [eax]
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  000c3	83 c4 04	 add	 esp, 4
  000c6	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  000c9	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000cb	75 1e		 jne	 SHORT $L65995

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  000cd	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000d0	52		 push	 edx
  000d1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  000d6	83 c4 04	 add	 esp, 4
  000d9	8b 00		 mov	 eax, DWORD PTR [eax]
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  000e1	83 c4 04	 add	 esp, 4
  000e4	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000e7	89 08		 mov	 DWORD PTR [eax], ecx

; 1080 : 		else

  000e9	eb 1c		 jmp	 SHORT $L65994
$L65995:

; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  000eb	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000ee	52		 push	 edx
  000ef	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  000f4	83 c4 04	 add	 esp, 4
  000f7	8b 00		 mov	 eax, DWORD PTR [eax]
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  000ff	83 c4 04	 add	 esp, 4
  00102	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00105	89 08		 mov	 DWORD PTR [eax], ecx
$L65994:

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00107	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0010a	52		 push	 edx
  0010b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00110	83 c4 04	 add	 esp, 4
  00113	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00116	89 08		 mov	 DWORD PTR [eax], ecx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00118	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  0011b	52		 push	 edx
  0011c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00121	83 c4 04	 add	 esp, 4
  00124	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00127	89 08		 mov	 DWORD PTR [eax], ecx

; 1085 : 		}

  00129	5e		 pop	 esi
  0012a	8b e5		 mov	 esp, ebp
  0012c	5d		 pop	 ebp
  0012d	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::allocate
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::construct
;	COMDAT xdata$x
xdata$x	SEGMENT
$T67182	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T67184	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L67178
$T67183	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T67184
$T67180	DD	019930520H
	DD	02H
	DD	FLAT:$T67182
	DD	01H
	DD	FLAT:$T67183
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
tv145 = -52						; size = 4
tv144 = -48						; size = 4
tv143 = -44						; size = 4
_this$ = -40						; size = 4
$T67176 = -36						; size = 4
$T67175 = -32						; size = 4
$T67174 = -28						; size = 4
__Wherenode$ = -24					; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1105 : 		{	// allocate a head/nil node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	83 ec 24	 sub	 esp, 36			; 00000024H
  0001c	53		 push	 ebx
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00022	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00025	6a 01		 push	 1
  00027	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 01	 add	 ecx, 1
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::allocate
  00032	89 45 e8	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 1107 : 		int _Linkcnt = 0;

  00035	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __Linkcnt$[ebp], 0

; 1108 : 
; 1109 : 		_TRY_BEGIN

  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  00043	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T67174[ebp], 0
  0004a	8b 45 e8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00053	83 c4 04	 add	 esp, 4
  00056	89 45 d4	 mov	 DWORD PTR tv143[ebp], eax
  00059	8d 4d e4	 lea	 ecx, DWORD PTR $T67174[ebp]
  0005c	51		 push	 ecx
  0005d	8b 55 d4	 mov	 edx, DWORD PTR tv143[ebp]
  00060	52		 push	 edx
  00061	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	83 c1 02	 add	 ecx, 2
  00067	e8 00 00 00 00	 call	 ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::construct

; 1111 : 		++_Linkcnt;

  0006c	8b 45 ec	 mov	 eax, DWORD PTR __Linkcnt$[ebp]
  0006f	83 c0 01	 add	 eax, 1
  00072	89 45 ec	 mov	 DWORD PTR __Linkcnt$[ebp], eax

; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00075	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T67175[ebp], 0
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00085	83 c4 04	 add	 esp, 4
  00088	89 45 d0	 mov	 DWORD PTR tv144[ebp], eax
  0008b	8d 55 e0	 lea	 edx, DWORD PTR $T67175[ebp]
  0008e	52		 push	 edx
  0008f	8b 45 d0	 mov	 eax, DWORD PTR tv144[ebp]
  00092	50		 push	 eax
  00093	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	83 c1 02	 add	 ecx, 2
  00099	e8 00 00 00 00	 call	 ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::construct

; 1113 : 		++_Linkcnt;

  0009e	8b 4d ec	 mov	 ecx, DWORD PTR __Linkcnt$[ebp]
  000a1	83 c1 01	 add	 ecx, 1
  000a4	89 4d ec	 mov	 DWORD PTR __Linkcnt$[ebp], ecx

; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  000a7	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T67176[ebp], 0
  000ae	8b 55 e8	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000b1	52		 push	 edx
  000b2	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  000b7	83 c4 04	 add	 esp, 4
  000ba	89 45 cc	 mov	 DWORD PTR tv145[ebp], eax
  000bd	8d 45 dc	 lea	 eax, DWORD PTR $T67176[ebp]
  000c0	50		 push	 eax
  000c1	8b 4d cc	 mov	 ecx, DWORD PTR tv145[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	83 c1 02	 add	 ecx, 2
  000cb	e8 00 00 00 00	 call	 ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::construct
  000d0	eb 56		 jmp	 SHORT $L67177
$L67178:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)

  000d2	83 7d ec 01	 cmp	 DWORD PTR __Linkcnt$[ebp], 1
  000d6	7e 18		 jle	 SHORT $L66005

; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));

  000d8	8b 55 e8	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000db	52		 push	 edx
  000dc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  000e1	83 c4 04	 add	 esp, 4
  000e4	50		 push	 eax
  000e5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	83 c1 02	 add	 ecx, 2
  000eb	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::destroy
$L66005:

; 1118 : 		if (0 < _Linkcnt)

  000f0	83 7d ec 00	 cmp	 DWORD PTR __Linkcnt$[ebp], 0
  000f4	7e 18		 jle	 SHORT $L66006

; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));

  000f6	8b 45 e8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  000ff	83 c4 04	 add	 esp, 4
  00102	50		 push	 eax
  00103	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	83 c1 02	 add	 ecx, 2
  00109	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::destroy
$L66006:

; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);

  0010e	6a 01		 push	 1
  00110	8b 4d e8	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00113	51		 push	 ecx
  00114	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	83 c1 01	 add	 ecx, 1
  0011a	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::deallocate

; 1121 : 		_RERAISE;

  0011f	6a 00		 push	 0
  00121	6a 00		 push	 0
  00123	e8 00 00 00 00	 call	 __CxxThrowException@8
$L67177:

; 1122 : 		_CATCH_END

  00128	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 1123 : 		_Color(_Wherenode) = _Black;

  0012f	8b 55 e8	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00132	52		 push	 edx
  00133	e8 00 00 00 00	 call	 ?_Color@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Color
  00138	83 c4 04	 add	 esp, 4
  0013b	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  0013e	8b 45 e8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00147	83 c4 04	 add	 esp, 4
  0014a	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1125 : 		return (_Wherenode);

  0014d	8b 45 e8	 mov	 eax, DWORD PTR __Wherenode$[ebp]
$L67173:

; 1126 : 		}

  00150	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00153	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0015a	5f		 pop	 edi
  0015b	5e		 pop	 esi
  0015c	5b		 pop	 ebx
  0015d	8b e5		 mov	 esp, ebp
  0015f	5d		 pop	 ebp
  00160	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T67180
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Buynode
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node::_Node
;	COMDAT xdata$x
xdata$x	SEGMENT
$T67199	DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:$L67195
	DD	0ffffffffH
	DD	00H
$T67201	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L67194
$T67200	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:$T67201
$T67197	DD	019930520H
	DD	03H
	DD	FLAT:$T67199
	DD	01H
	DD	FLAT:$T67200
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z
_TEXT	SEGMENT
tv82 = -40						; size = 4
tv93 = -36						; size = 4
_this$ = -32						; size = 4
$T67190 = -28						; size = 4
$T67189 = -24						; size = 4
__Wherenode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1130 : 		{	// allocate a node with pointers, value, and color

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	83 ec 18	 sub	 esp, 24			; 00000018H
  0001c	53		 push	 ebx
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00022	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00025	6a 01		 push	 1
  00027	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 01	 add	 ecx, 1
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::allocate
  00032	89 45 ec	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 1132 : 		_TRY_BEGIN

  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0003c	8b 45 ec	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0003f	50		 push	 eax
  00040	6a 20		 push	 32			; 00000020H
  00042	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00047	83 c4 08	 add	 esp, 8
  0004a	89 45 e4	 mov	 DWORD PTR $T67190[ebp], eax
  0004d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00051	83 7d e4 00	 cmp	 DWORD PTR $T67190[ebp], 0
  00055	74 27		 je	 SHORT $L67191
  00057	8a 4d 18	 mov	 cl, BYTE PTR __Carg$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 55 14	 mov	 edx, DWORD PTR __Val$[ebp]
  0005e	52		 push	 edx
  0005f	8b 45 10	 mov	 eax, DWORD PTR __Rarg$[ebp]
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00066	51		 push	 ecx
  00067	8b 55 08	 mov	 edx, DWORD PTR __Larg$[ebp]
  0006a	52		 push	 edx
  0006b	8b 4d e4	 mov	 ecx, DWORD PTR $T67190[ebp]
  0006e	e8 00 00 00 00	 call	 ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node::_Node
  00073	89 45 dc	 mov	 DWORD PTR tv93[ebp], eax
  00076	8b 45 dc	 mov	 eax, DWORD PTR tv93[ebp]
  00079	89 45 d8	 mov	 DWORD PTR tv82[ebp], eax
  0007c	eb 07		 jmp	 SHORT $L67192
$L67191:
  0007e	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$L67192:
  00085	8b 4d d8	 mov	 ecx, DWORD PTR tv82[ebp]
  00088	89 4d e8	 mov	 DWORD PTR $T67189[ebp], ecx
  0008b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0008f	eb 1a		 jmp	 SHORT $L67193
$L67194:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);

  00091	6a 01		 push	 1
  00093	8b 55 ec	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00096	52		 push	 edx
  00097	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	83 c1 01	 add	 ecx, 1
  0009d	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::deallocate

; 1136 : 		_RERAISE;

  000a2	6a 00		 push	 0
  000a4	6a 00		 push	 0
  000a6	e8 00 00 00 00	 call	 __CxxThrowException@8
$L67193:

; 1137 : 		_CATCH_END

  000ab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 1138 : 		return (_Wherenode);

  000b2	8b 45 ec	 mov	 eax, DWORD PTR __Wherenode$[ebp]
$L67188:

; 1139 : 		}

  000b5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000b8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L67195:
  00000	8b 45 ec	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00003	50		 push	 eax
  00004	8b 4d e4	 mov	 ecx, DWORD PTR $T67190[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T67197
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Buynode@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Buynode
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
PUBLIC	??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *><std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
; Function compile flags: /Odt
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	51		 push	 ecx
  0000a	8b cc		 mov	 ecx, esp
  0000c	8d 45 0c	 lea	 eax, DWORD PTR __Al$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
  00015	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00018	51		 push	 ecx
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
  00021	8d 55 0c	 lea	 edx, DWORD PTR __Al$[ebp]
  00024	52		 push	 edx
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 02	 add	 ecx, 2
  0002b	e8 00 00 00 00	 call	 ??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *><std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >

; 77   : 		}

  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Tmp$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 333  : 			iterator _Tmp = *this;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 334  : 			++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator++

; 335  : 			return (_Tmp);

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 336  : 			}

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator::operator++
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Inc
; Function compile flags: /Odt
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 215  : 			_Inc();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 217  : 			}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Dec
; Function compile flags: /Odt
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 228  : 			_Dec();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 230  : 			}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAUMESSAGE_OBSERVER@@@std@@QBEIXZ ; std::allocator<MESSAGE_OBSERVER *>::max_size
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
;	COMDAT ?max_size@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEIXZ PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::max_size, COMDAT
; _this$ = ecx

; 435  : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 436  : 		return (this->_Alval.max_size());

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 02	 add	 ecx, 2
  0000d	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAUMESSAGE_OBSERVER@@@std@@QBEIXZ ; std::allocator<MESSAGE_OBSERVER *>::max_size

; 437  : 		}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?max_size@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEIXZ ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::max_size
_TEXT	ENDS
PUBLIC	??$?0PAUMESSAGE_OBSERVER@@@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node><MESSAGE_OBSERVER *>
; Function compile flags: /Odt
;	COMDAT ??0?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z PROC NEAR ; std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >, COMDAT
; _this$ = ecx

; 44   : 		{	// construct allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8d 45 08	 lea	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??$?0PAUMESSAGE_OBSERVER@@@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node><MESSAGE_OBSERVER *>

; 45   : 		}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@IAE@V?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ENDP ; std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVIMessageObserver@@@std@@QBEIXZ ; std::allocator<IMessageObserver *>::max_size
; Function compile flags: /Odt
;	COMDAT ?max_size@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEIXZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::max_size, COMDAT
; _this$ = ecx

; 435  : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 436  : 		return (this->_Alval.max_size());

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 02	 add	 ecx, 2
  0000d	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAVIMessageObserver@@@std@@QBEIXZ ; std::allocator<IMessageObserver *>::max_size

; 437  : 		}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?max_size@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEIXZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::max_size
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 131  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 132  : 		operator delete(_Ptr);

  00007	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4

; 133  : 		}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>
; Function compile flags: /Odt
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 136  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>
  00012	83 c4 08	 add	 esp, 8

; 138  : 		}

  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocate
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 156  : 			{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 157  : 			}

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::const_iterator
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  00017	8a 11		 mov	 dl, BYTE PTR [ecx]
  00019	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::iterator,bool>
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
_TEXT	ENDS
;	COMDAT ??0_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU012@0ABQAUMESSAGE_OBSERVER@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Nextarg$ = 8						; size = 4
__Prevarg$ = 12						; size = 4
__Myvalarg$ = 16					; size = 4
??0_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU012@0ABQAUMESSAGE_OBSERVER@@@Z PROC NEAR ; std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node::_Node, COMDAT
; _this$ = ecx

; 34   : 			{	// construct a node with value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Nextarg$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __Prevarg$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR __Myvalarg$[ebp]
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 35   : 			}

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 0c 00	 ret	 12			; 0000000cH
??0_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@PAU012@0ABQAUMESSAGE_OBSERVER@@@Z ENDP ; std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node::_Node
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??0_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU012@0ABQAVIMessageObserver@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Nextarg$ = 8						; size = 4
__Prevarg$ = 12						; size = 4
__Myvalarg$ = 16					; size = 4
??0_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU012@0ABQAVIMessageObserver@@@Z PROC NEAR ; std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node::_Node, COMDAT
; _this$ = ecx

; 34   : 			{	// construct a node with value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Nextarg$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __Prevarg$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR __Myvalarg$[ebp]
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 35   : 			}

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 0c 00	 ret	 12			; 0000000cH
??0_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU012@0ABQAVIMessageObserver@@@Z ENDP ; std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node::_Node
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC NEAR		; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7out_of_range@std@@6B@
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$66079 = -4					; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR __Pnode$66079[ebp], eax
  0000f	eb 06		 jmp	 SHORT $L66080
$L66081:
  00011	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$66079[ebp]
  00014	89 4d 08	 mov	 DWORD PTR __Rootnode$[ebp], ecx
$L66080:
  00017	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$66079[ebp]
  0001a	52		 push	 edx
  0001b	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00020	83 c4 04	 add	 esp, 4
  00023	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00026	85 c0		 test	 eax, eax
  00028	75 4a		 jne	 SHORT $L66078

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  0002a	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$66079[ebp]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00033	83 c4 04	 add	 esp, 4
  00036	8b 10		 mov	 edx, DWORD PTR [eax]
  00038	52		 push	 edx
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  00041	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$66079[ebp]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004f	89 4d fc	 mov	 DWORD PTR __Pnode$66079[ebp], ecx

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node

  00052	8b 55 08	 mov	 edx, DWORD PTR __Rootnode$[ebp]
  00055	52		 push	 edx
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	83 c1 01	 add	 ecx, 1
  0005c	e8 00 00 00 00	 call	 ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::destroy

; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  00061	6a 01		 push	 1
  00063	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  00066	50		 push	 eax
  00067	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	83 c1 01	 add	 ecx, 1
  0006d	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::deallocate

; 897  : 			}

  00072	eb 9d		 jmp	 SHORT $L66081
$L66078:

; 898  : 		}

  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Erase
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Max, COMDAT

; 1034 : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
$L66085:

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0000c	83 c4 04	 add	 esp, 4
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00017	83 c4 04	 add	 esp, 4
  0001a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0001d	85 d2		 test	 edx, edx
  0001f	75 13		 jne	 SHORT $L66086

; 1036 : 			_Pnode = _Right(_Pnode);

  00021	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0002a	83 c4 04	 add	 esp, 4
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	89 4d 08	 mov	 DWORD PTR __Pnode$[ebp], ecx
  00032	eb cf		 jmp	 SHORT $L66085
$L66086:

; 1037 : 		return (_Pnode);

  00034	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 1038 : 		}

  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Max
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Min, COMDAT

; 1041 : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
$L66089:

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  0000c	83 c4 04	 add	 esp, 4
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00017	83 c4 04	 add	 esp, 4
  0001a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0001d	85 d2		 test	 edx, edx
  0001f	75 13		 jne	 SHORT $L66090

; 1043 : 			_Pnode = _Left(_Pnode);

  00021	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  0002a	83 c4 04	 add	 esp, 4
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	89 4d 08	 mov	 DWORD PTR __Pnode$[ebp], ecx
  00032	eb cf		 jmp	 SHORT $L66089
$L66090:

; 1044 : 		return (_Pnode);

  00034	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 1045 : 		}

  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>
PUBLIC	??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node><std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
; Function compile flags: /Odt
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	51		 push	 ecx
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ??0?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>
  00015	8d 55 0c	 lea	 edx, DWORD PTR __Al$[ebp]
  00018	52		 push	 edx
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 01	 add	 ecx, 1
  0001f	e8 00 00 00 00	 call	 ??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node><std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >

; 55   : 		}

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::max_size, COMDAT
; _this$ = ecx

; 156  : 		{	// estimate maximum array size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

  00009	c7 45 fc ff ff
	ff 0f		 mov	 DWORD PTR __Count$[ebp], 268435455 ; 0fffffffH

; 158  : 		return (0 < _Count ? _Count : 1);

  00010	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00014	76 08		 jbe	 SHORT $L67246
  00016	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  00019	89 45 f4	 mov	 DWORD PTR tv65[ebp], eax
  0001c	eb 07		 jmp	 SHORT $L67247
$L67246:
  0001e	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
$L67247:
  00025	8b 45 f4	 mov	 eax, DWORD PTR tv65[ebp]

; 159  : 		}

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >::max_size
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>
; Function compile flags: /Odt
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 136  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>
  00012	83 c4 08	 add	 esp, 8

; 138  : 		}

  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>
; Function compile flags: /Odt
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 151  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 152  : 		_Destroy(_Ptr);

  00007	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>
  00010	83 c4 04	 add	 esp, 4

; 153  : 		}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>
; Function compile flags: /Odt
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 146  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 147  : 		_Construct(_Ptr, _Val);

  00007	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>
  00014	83 c4 08	 add	 esp, 8

; 148  : 		}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::construct
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$66129 = -4					; size = 4
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 250  : 			{	// move to node with next smaller value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 251  : 			if (_Isnil(_Ptr))

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00014	83 c4 04	 add	 esp, 4
  00017	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0001a	85 d2		 test	 edx, edx
  0001c	74 1a		 je	 SHORT $L66125

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  0001e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00029	83 c4 04	 add	 esp, 4
  0002c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	8b 00		 mov	 eax, DWORD PTR [eax]
  00031	89 02		 mov	 DWORD PTR [edx], eax

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  00033	e9 a0 00 00 00	 jmp	 $L66124
$L66125:
  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00043	83 c4 04	 add	 esp, 4
  00046	8b 00		 mov	 eax, DWORD PTR [eax]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  0004e	83 c4 04	 add	 esp, 4
  00051	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00054	85 c9		 test	 ecx, ecx
  00056	75 20		 jne	 SHORT $L66131

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00058	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005b	8b 02		 mov	 eax, DWORD PTR [edx]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  00063	83 c4 04	 add	 esp, 4
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Max
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00074	89 02		 mov	 DWORD PTR [edx], eax

; 255  : 			else

  00076	eb 60		 jmp	 SHORT $L66124
$L66131:

; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00078	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  00083	83 c4 04	 add	 esp, 4
  00086	8b 10		 mov	 edx, DWORD PTR [eax]
  00088	89 55 fc	 mov	 DWORD PTR __Pnode$66129[ebp], edx
  0008b	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$66129[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00094	83 c4 04	 add	 esp, 4
  00097	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0009a	85 c9		 test	 ecx, ecx
  0009c	75 1f		 jne	 SHORT $L66132
  0009e	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$66129[ebp]
  000a1	52		 push	 edx
  000a2	e8 00 00 00 00	 call	 ?_Left@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Left
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  000af	3b 10		 cmp	 edx, DWORD PTR [eax]
  000b1	75 0a		 jne	 SHORT $L66132

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$66129[ebp]
  000b9	89 08		 mov	 DWORD PTR [eax], ecx
  000bb	eb bb		 jmp	 SHORT $L66131
$L66132:

; 261  : 				if (!_Isnil(_Pnode))

  000bd	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$66129[ebp]
  000c0	52		 push	 edx
  000c1	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  000c6	83 c4 04	 add	 esp, 4
  000c9	0f be 00	 movsx	 eax, BYTE PTR [eax]
  000cc	85 c0		 test	 eax, eax
  000ce	75 08		 jne	 SHORT $L66124

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$66129[ebp]
  000d6	89 11		 mov	 DWORD PTR [ecx], edx
$L66124:

; 263  : 				}
; 264  : 			}

  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Dec
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$66140 = -4					; size = 4
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 267  : 			{	// move to node with next larger value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 268  : 			if (_Isnil(_Ptr))

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00014	83 c4 04	 add	 esp, 4
  00017	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0001a	85 d2		 test	 edx, edx
  0001c	74 05		 je	 SHORT $L66136

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  0001e	e9 8d 00 00 00	 jmp	 $L66135
$L66136:
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0002e	83 c4 04	 add	 esp, 4
  00031	8b 10		 mov	 edx, DWORD PTR [eax]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  00039	83 c4 04	 add	 esp, 4
  0003c	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0003f	85 c0		 test	 eax, eax
  00041	75 20		 jne	 SHORT $L66142

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00043	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	8b 11		 mov	 edx, DWORD PTR [ecx]
  00048	52		 push	 edx
  00049	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  0004e	83 c4 04	 add	 esp, 4
  00051	8b 00		 mov	 eax, DWORD PTR [eax]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Min
  00059	83 c4 04	 add	 esp, 4
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	89 01		 mov	 DWORD PTR [ecx], eax

; 272  : 			else

  00061	eb 4d		 jmp	 SHORT $L66135
$L66142:

; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  00063	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00066	8b 02		 mov	 eax, DWORD PTR [edx]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Parent
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 08		 mov	 ecx, DWORD PTR [eax]
  00073	89 4d fc	 mov	 DWORD PTR __Pnode$66140[ebp], ecx
  00076	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$66140[ebp]
  00079	52		 push	 edx
  0007a	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Isnil
  0007f	83 c4 04	 add	 esp, 4
  00082	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00085	85 c0		 test	 eax, eax
  00087	75 1f		 jne	 SHORT $L66143
  00089	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$66140[ebp]
  0008c	51		 push	 ecx
  0008d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Right
  00092	83 c4 04	 add	 esp, 4
  00095	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00098	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0009a	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0009c	75 0a		 jne	 SHORT $L66143

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  0009e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a1	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$66140[ebp]
  000a4	89 02		 mov	 DWORD PTR [edx], eax
  000a6	eb bb		 jmp	 SHORT $L66142
$L66143:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  000a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$66140[ebp]
  000ae	89 11		 mov	 DWORD PTR [ecx], edx
$L66135:

; 279  : 				}
; 280  : 			}

  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::const_iterator::_Inc
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAUMESSAGE_OBSERVER@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@PAUMESSAGE_OBSERVER@@@std@@QBEIXZ PROC NEAR ; std::allocator<MESSAGE_OBSERVER *>::max_size, COMDAT
; _this$ = ecx

; 156  : 		{	// estimate maximum array size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

  00009	c7 45 fc ff ff
	ff 3f		 mov	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH

; 158  : 		return (0 < _Count ? _Count : 1);

  00010	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00014	76 08		 jbe	 SHORT $L67260
  00016	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  00019	89 45 f4	 mov	 DWORD PTR tv65[ebp], eax
  0001c	eb 07		 jmp	 SHORT $L67261
$L67260:
  0001e	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
$L67261:
  00025	8b 45 f4	 mov	 eax, DWORD PTR tv65[ebp]

; 159  : 		}

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?max_size@?$allocator@PAUMESSAGE_OBSERVER@@@std@@QBEIXZ ENDP ; std::allocator<MESSAGE_OBSERVER *>::max_size
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAVIMessageObserver@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@PAVIMessageObserver@@@std@@QBEIXZ PROC NEAR ; std::allocator<IMessageObserver *>::max_size, COMDAT
; _this$ = ecx

; 156  : 		{	// estimate maximum array size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

  00009	c7 45 fc ff ff
	ff 3f		 mov	 DWORD PTR __Count$[ebp], 1073741823 ; 3fffffffH

; 158  : 		return (0 < _Count ? _Count : 1);

  00010	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00014	76 08		 jbe	 SHORT $L67264
  00016	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  00019	89 45 f4	 mov	 DWORD PTR tv65[ebp], eax
  0001c	eb 07		 jmp	 SHORT $L67265
$L67264:
  0001e	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
$L67265:
  00025	8b 45 f4	 mov	 eax, DWORD PTR tv65[ebp]

; 159  : 		}

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?max_size@?$allocator@PAVIMessageObserver@@@std@@QBEIXZ ENDP ; std::allocator<IMessageObserver *>::max_size
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABU01@@Z ; std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Larg$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __Parg$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR __Rarg$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0002b	e8 00 00 00 00	 call	 ??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABU01@@Z
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	8a 55 18	 mov	 dl, BYTE PTR __Carg$[ebp]
  00036	88 51 1c	 mov	 BYTE PTR [ecx+28], dl
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	c6 40 1d 00	 mov	 BYTE PTR [eax+29], 0

; 41   : 			}

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node::_Node
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABU01@@Z PROC NEAR ; std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	83 c1 04	 add	 ecx, 4
  0001e	e8 00 00 00 00	 call	 ??0?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE@ABV01@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??0?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABU01@@Z ENDP ; std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > >
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 39   : 		}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABVconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z ; std::_Iter_cat<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
PUBLIC	??$_Assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0Uinput_iterator_tag@1@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Assign<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
;	COMDAT ??$assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T67277 = -2						; size = 1
$T67276 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::assign<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>, COMDAT
; _this$ = ecx

; 490  : 		void assign(_Iter _First, _Iter _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 491  : 		{	// assign [_First, _Last)
; 492  : 		_Assign(_First, _Last, _Iter_cat(_First));

  00009	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d ff	 lea	 ecx, DWORD PTR $T67276[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??$_Iter_cat@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABVconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z ; std::_Iter_cat<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
  00016	83 c4 08	 add	 esp, 8
  00019	8a 55 fe	 mov	 dl, BYTE PTR $T67277[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00020	50		 push	 eax
  00021	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00024	51		 push	 ecx
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ??$_Assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0Uinput_iterator_tag@1@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Assign<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>

; 493  : 		}

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
??$assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::assign<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>, COMDAT

; 48   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>, COMDAT

; 48   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1Uforward_iterator_tag@1@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Insert<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
;	COMDAT ??$insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T67285 = -2						; size = 1
$T67284 = -1						; size = 1
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
??$insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::insert<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>, COMDAT
; _this$ = ecx

; 535  : 		void insert(iterator _Where, _Iter _First, _Iter _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 536  : 		{	// insert [_First, _Last) at _Where
; 537  : 		_Insert(_Where, _First, _Last, _Iter_cat(_First));

  00009	8d 45 0c	 lea	 eax, DWORD PTR __First$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d ff	 lea	 ecx, DWORD PTR $T67284[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??$_Iter_cat@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABVconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z ; std::_Iter_cat<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
  00016	83 c4 08	 add	 esp, 8
  00019	8a 55 fe	 mov	 dl, BYTE PTR $T67285[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00020	50		 push	 eax
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 08	 mov	 edx, DWORD PTR __Where$[ebp]
  00028	52		 push	 edx
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ??$_Insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1Uforward_iterator_tag@1@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Insert<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>

; 538  : 		}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 0c 00	 ret	 12			; 0000000cH
??$insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::insert<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?0PAUMESSAGE_OBSERVER@@@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0PAUMESSAGE_OBSERVER@@@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z PROC NEAR ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *><MESSAGE_OBSERVER *>, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??$?0PAUMESSAGE_OBSERVER@@@?$allocator@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ENDP ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *><MESSAGE_OBSERVER *>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>, COMDAT

; 33   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	6b c0 0c	 imul	 eax, 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000f	83 c4 04	 add	 esp, 4

; 35   : 	}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
$T67292 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *,std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>, COMDAT

; 41   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00009	50		 push	 eax
  0000a	6a 04		 push	 4
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T67292[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T67292[ebp], 0
  0001b	74 12		 je	 SHORT $L67293
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR $T67292[ebp]
  00020	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	89 01		 mov	 DWORD PTR [ecx], eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR $T67292[ebp]
  0002a	89 4d f8	 mov	 DWORD PTR tv68[ebp], ecx
  0002d	eb 07		 jmp	 SHORT $L66235
$L67293:
  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$L66235:

; 43   : 	}

  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
??$_Construct@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *,std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>, COMDAT

; 48   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy@PAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node *>
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
_TEXT	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Tmp$ = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC NEAR			; std::swap<char>, COMDAT

; 14   : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 15   : 	_Ty _Tmp = _Left;

  00004	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	88 4d ff	 mov	 BYTE PTR __Tmp$[ebp], cl

; 16   : 	_Left = _Right, _Right = _Tmp;

  0000c	8b 55 08	 mov	 edx, DWORD PTR __Left$[ebp]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00012	8a 08		 mov	 cl, BYTE PTR [eax]
  00014	88 0a		 mov	 BYTE PTR [edx], cl
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  00019	8a 45 ff	 mov	 al, BYTE PTR __Tmp$[ebp]
  0001c	88 02		 mov	 BYTE PTR [edx], al

; 17   : 	}

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *><std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *><std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??$?0PAUMESSAGE_OBSERVER@@@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0PAUMESSAGE_OBSERVER@@@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z PROC NEAR ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node><MESSAGE_OBSERVER *>, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??$?0PAUMESSAGE_OBSERVER@@@?$allocator@U_Node@?$_List_nod@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUMESSAGE_OBSERVER@@@1@@Z ENDP ; std::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node>::allocator<std::_List_nod<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Node><MESSAGE_OBSERVER *>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>, COMDAT

; 33   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	6b c0 0c	 imul	 eax, 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000f	83 c4 04	 add	 esp, 4

; 35   : 	}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node><std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node><std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>, COMDAT

; 33   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	c1 e0 05	 shl	 eax, 5
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000f	83 c4 04	 add	 esp, 4

; 35   : 	}

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??_G_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node::`scalar deleting destructor'
; Function compile flags: /Odt
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>, COMDAT

; 48   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);

  00003	6a 00		 push	 0
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00008	e8 00 00 00 00	 call	 ??_G_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z

; 50   : 	}

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node>
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
$T67313 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>, COMDAT

; 41   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00009	50		 push	 eax
  0000a	6a 04		 push	 4
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T67313[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T67313[ebp], 0
  0001b	74 12		 je	 SHORT $L67314
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR $T67313[ebp]
  00020	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	89 01		 mov	 DWORD PTR [ecx], eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR $T67313[ebp]
  0002a	89 4d f8	 mov	 DWORD PTR tv68[ebp], ecx
  0002d	eb 07		 jmp	 SHORT $L66258
$L67314:
  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$L66258:

; 43   : 	}

  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??1_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node::~_Node
; Function compile flags: /Odt
;	COMDAT ??_G_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $L66265
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
$L66265:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_G_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node::`scalar deleting destructor'
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??1_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node::~_Node, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0000d	e8 00 00 00 00	 call	 ??1?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@QAE@XZ
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??1_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> > > >,0> >::_Node::~_Node
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABVconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABVconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z PROC NEAR ; std::_Iter_cat<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>, COMDAT

; 201  : 	{	// return category from iterator argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 202  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 203  : 	return (_Cat);

  00004	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 204  : 	}

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??$_Iter_cat@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABVconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
_TEXT	ENDS
;	COMDAT ??$_Assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0Uinput_iterator_tag@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T67325 = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0Uinput_iterator_tag@1@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Assign<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>, COMDAT
; _this$ = ecx

; 502  : 		void _Assign(_Iter _First, _Iter _Last, input_iterator_tag)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 503  : 		{	// assign [_First, _Last), input iterators
; 504  : 		clear();

  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?clear@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXXZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::clear

; 505  : 		insert(begin(), _First, _Last);

  00011	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00018	51		 push	 ecx
  00019	8d 55 fc	 lea	 edx, DWORD PTR $T67325[ebp]
  0001c	52		 push	 edx
  0001d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?begin@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::begin
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
  00027	50		 push	 eax
  00028	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ??$insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::insert<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>

; 506  : 		}

  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
??$_Assign@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXVconst_iterator@01@0Uinput_iterator_tag@1@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Assign<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T67334	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T67336	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L67330
$T67335	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T67336
$T67332	DD	019930520H
	DD	02H
	DD	FLAT:$T67334
	DD	01H
	DD	FLAT:$T67335
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
;	COMDAT ??$_Insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
tv90 = -40						; size = 4
tv89 = -33						; size = 1
_this$ = -32						; size = 4
$T67328 = -28						; size = 4
__Before$66284 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1Uforward_iterator_tag@1@@Z PROC NEAR ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Insert<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>, COMDAT
; _this$ = ecx

; 567  : 		void _Insert(iterator _Where,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1Uforward_iterator_tag@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	83 ec 18	 sub	 esp, 24			; 00000018H
  0001c	53		 push	 ebx
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00022	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 568  : 			_Iter _First, _Iter _Last, forward_iterator_tag)
; 569  : 		{	// insert [_First, _Last) at _Where, forward iterators
; 570  : 		_Iter _Next = _First;

  00025	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00028	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax

; 571  : 
; 572  : 		_TRY_BEGIN

  0002b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 573  : 		for (; _First != _Last; ++_First)

  00032	eb 08		 jmp	 SHORT $L66278
$L66279:
  00034	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00037	e8 00 00 00 00	 call	 ??Econst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator++
$L66278:
  0003c	8d 4d 10	 lea	 ecx, DWORD PTR __Last$[ebp]
  0003f	51		 push	 ecx
  00040	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00043	e8 00 00 00 00	 call	 ??9const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator!=
  00048	88 45 df	 mov	 BYTE PTR tv89[ebp], al
  0004b	0f b6 55 df	 movzx	 edx, BYTE PTR tv89[ebp]
  0004f	85 d2		 test	 edx, edx
  00051	74 1d		 je	 SHORT $L66280

; 574  : 			_Insert(_Where, *_First);

  00053	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00056	e8 00 00 00 00	 call	 ??Dconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBEABQAUMESSAGE_OBSERVER@@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator*
  0005b	89 45 d8	 mov	 DWORD PTR tv90[ebp], eax
  0005e	8b 45 d8	 mov	 eax, DWORD PTR tv90[ebp]
  00061	50		 push	 eax
  00062	8b 4d 08	 mov	 ecx, DWORD PTR __Where$[ebp]
  00065	51		 push	 ecx
  00066	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Insert@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@12@ABQAUMESSAGE_OBSERVER@@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Insert
  0006e	eb c4		 jmp	 SHORT $L66279
$L66280:
  00070	eb 45		 jmp	 SHORT $L67329
$L67330:

; 575  : 		_CATCH_ALL
; 576  : 		for (; _Next != _First; ++_Next)

  00072	eb 08		 jmp	 SHORT $L66281
$L66282:
  00074	8d 4d ec	 lea	 ecx, DWORD PTR __Next$[ebp]
  00077	e8 00 00 00 00	 call	 ??Econst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator++
$L66281:
  0007c	8d 55 0c	 lea	 edx, DWORD PTR __First$[ebp]
  0007f	52		 push	 edx
  00080	8d 4d ec	 lea	 ecx, DWORD PTR __Next$[ebp]
  00083	e8 00 00 00 00	 call	 ??9const_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QBE_NABV012@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator::operator!=
  00088	0f b6 c0	 movzx	 eax, al
  0008b	85 c0		 test	 eax, eax
  0008d	74 1f		 je	 SHORT $L66283

; 577  : 			{	// undo inserts
; 578  : 			iterator _Before = _Where;

  0008f	8b 4d 08	 mov	 ecx, DWORD PTR __Where$[ebp]
  00092	89 4d e8	 mov	 DWORD PTR __Before$66284[ebp], ecx

; 579  : 			erase(--_Before);

  00095	8d 4d e8	 lea	 ecx, DWORD PTR __Before$66284[ebp]
  00098	e8 00 00 00 00	 call	 ??Fiterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEAAV012@XZ ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::iterator::operator--
  0009d	8b 10		 mov	 edx, DWORD PTR [eax]
  0009f	52		 push	 edx
  000a0	8d 45 e4	 lea	 eax, DWORD PTR $T67328[ebp]
  000a3	50		 push	 eax
  000a4	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	e8 00 00 00 00	 call	 ?erase@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::erase

; 580  : 			}

  000ac	eb c6		 jmp	 SHORT $L66282
$L66283:

; 581  : 		_RERAISE;

  000ae	6a 00		 push	 0
  000b0	6a 00		 push	 0
  000b2	e8 00 00 00 00	 call	 __CxxThrowException@8
$L67329:

; 582  : 		_CATCH_END

  000b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
$L67327:

; 583  : 		}

  000be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1Uforward_iterator_tag@1@@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T67332
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??$_Insert@Vconst_iterator@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@@?$list@PAUMESSAGE_OBSERVER@@V?$allocator@PAUMESSAGE_OBSERVER@@@std@@@std@@QAEXViterator@01@Vconst_iterator@01@1Uforward_iterator_tag@1@@Z ENDP ; std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::_Insert<std::list<MESSAGE_OBSERVER *,std::allocator<MESSAGE_OBSERVER *> >::const_iterator>
END
