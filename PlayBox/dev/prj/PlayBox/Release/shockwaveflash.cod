; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\Gui\CommonControl\shockwaveflash.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CShockwaveFlash@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCShockwaveFlash@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CShockwaveFlash@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3CShockwaveFlash@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CShockwaveFlash@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CShockwaveFlash@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCShockwaveFlash@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4CShockwaveFlash@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?parms@?1??SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetReturnValue@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetProfilePort@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetProfile@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetMovieData@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetFlashVars@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetSWRemote@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TCallLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetVariable@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TStopPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??LoadMovie@CShockwaveFlash@@QAEXJPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetQuality2@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetBGColor@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetEmbedMovie@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetDeviceFont@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetScale@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetBase@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetMenu@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetSAlign@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetWMode@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??FrameLoaded@CShockwaveFlash@@QAEHJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??GotoFrame@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??Pan@CShockwaveFlash@@QAEXJJJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??Zoom@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetFrameNum@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetMovie@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?parms@?1??SetLoop@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetAlignMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetScaleMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetQuality@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetPlaying@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CShockwaveFlash@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B ; CShockwaveFlash::classCShockwaveFlash
PUBLIC	?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ	; CShockwaveFlash::CreateObject
EXTRN	?GetThisClass@CWnd@@SGPAUCRuntimeClass@@XZ:NEAR	; CWnd::GetThisClass
CONST	SEGMENT
$SG197580 DB	'CShockwaveFlash', 00H
CONST	ENDS
;	COMDAT ?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B DD FLAT:$SG197580 ; CShockwaveFlash::classCShockwaveFlash
	DD	054H
	DD	0ffffH
	DD	FLAT:?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ
	DD	FLAT:?GetThisClass@CWnd@@SGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	??0CShockwaveFlash@@QAE@XZ			; CShockwaveFlash::CShockwaveFlash
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
xdata$x	SEGMENT
$T198624 DD	0ffffffffH
	DD	FLAT:$L198617
$T198621 DD	019930520H
	DD	01H
	DD	FLAT:$T198624
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\gui\commoncontrol\shockwaveflash.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv71 = -24						; size = 4
$T198614 = -20						; size = 4
$T198613 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ PROC NEAR ; CShockwaveFlash::CreateObject

; 13   : IMPLEMENT_DYNCREATE(CShockwaveFlash, CWnd)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	6a 54		 push	 84			; 00000054H
  0001d	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00022	89 45 ec	 mov	 DWORD PTR $T198614[ebp], eax
  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	83 7d ec 00	 cmp	 DWORD PTR $T198614[ebp], 0
  00030	74 0d		 je	 SHORT $L198615
  00032	8b 4d ec	 mov	 ecx, DWORD PTR $T198614[ebp]
  00035	e8 00 00 00 00	 call	 ??0CShockwaveFlash@@QAE@XZ
  0003a	89 45 e8	 mov	 DWORD PTR tv71[ebp], eax
  0003d	eb 07		 jmp	 SHORT $L198616
$L198615:
  0003f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$L198616:
  00046	8b 45 e8	 mov	 eax, DWORD PTR tv71[ebp]
  00049	89 45 f0	 mov	 DWORD PTR $T198613[ebp], eax
  0004c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00053	8b 45 f0	 mov	 eax, DWORD PTR $T198613[ebp]
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L198617:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T198614[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00009	c3		 ret	 0
__ehhandler$?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198621
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ ENDP	; CShockwaveFlash::CreateObject
PUBLIC	??_R1A@?0A@A@CObject@@8				; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??_R4CShockwaveFlash@@6B@			; CShockwaveFlash::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCShockwaveFlash@@@8			; CShockwaveFlash `RTTI Type Descriptor'
PUBLIC	??_R3CShockwaveFlash@@8				; CShockwaveFlash::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CShockwaveFlash@@8				; CShockwaveFlash::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CShockwaveFlash@@8			; CShockwaveFlash::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	?GetRuntimeClass@CShockwaveFlash@@UBEPAUCRuntimeClass@@XZ ; CShockwaveFlash::GetRuntimeClass
PUBLIC	?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ; CShockwaveFlash::Create
PUBLIC	??_7CShockwaveFlash@@6B@			; CShockwaveFlash::`vftable'
PUBLIC	??_GCShockwaveFlash@@UAEPAXI@Z			; CShockwaveFlash::`scalar deleting destructor'
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR	; CWnd::GetMessageMap
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDescription
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??0CWnd@@QAE@XZ:NEAR				; CWnd::CWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	??_ECShockwaveFlash@@UAEPAXI@Z:NEAR		; CShockwaveFlash::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
;	COMDAT ??_7CShockwaveFlash@@6B@
CONST	SEGMENT
??_7CShockwaveFlash@@6B@ DD FLAT:??_R4CShockwaveFlash@@6B@ ; CShockwaveFlash::`vftable'
	DD	FLAT:?GetRuntimeClass@CShockwaveFlash@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECShockwaveFlash@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
CONST	ENDS
;	COMDAT ??_R4CShockwaveFlash@@6B@
rdata$r	SEGMENT
??_R4CShockwaveFlash@@6B@ DD 00H			; CShockwaveFlash::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCShockwaveFlash@@@8
	DD	FLAT:??_R3CShockwaveFlash@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCShockwaveFlash@@@8
_DATA	SEGMENT
??_R0?AVCShockwaveFlash@@@8 DD FLAT:??_7type_info@@6B@	; CShockwaveFlash `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCShockwaveFlash@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CShockwaveFlash@@8
rdata$r	SEGMENT
??_R3CShockwaveFlash@@8 DD 00H				; CShockwaveFlash::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CShockwaveFlash@@8
rdata$r	ENDS
;	COMDAT ??_R2CShockwaveFlash@@8
rdata$r	SEGMENT
??_R2CShockwaveFlash@@8 DD FLAT:??_R1A@?0A@A@CShockwaveFlash@@8 ; CShockwaveFlash::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@CWnd@@8
	DD	FLAT:??_R1A@?0A@A@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@A@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CShockwaveFlash@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CShockwaveFlash@@8 DD FLAT:??_R0?AVCShockwaveFlash@@@8 ; CShockwaveFlash::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
; Function compile flags: /Odt
_DATA	ENDS
;	COMDAT ??0CShockwaveFlash@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CShockwaveFlash@@QAE@XZ PROC NEAR			; CShockwaveFlash::CShockwaveFlash, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CShockwaveFlash@@6B@
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CShockwaveFlash@@QAE@XZ ENDP				; CShockwaveFlash::CShockwaveFlash
_TEXT	ENDS
PUBLIC	?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ	; CShockwaveFlash::GetClsid
EXTRN	?CreateControl@CWnd@@QAEHABU_GUID@@PBDKABUtagRECT@@PAV1@IPAVCFile@@HPA_W@Z:NEAR ; CWnd::CreateControl
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\gui\commoncontrol\shockwaveflash.h
;	COMDAT ?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszClassName$ = 8					; size = 4
_lpszWindowName$ = 12					; size = 4
_dwStyle$ = 16						; size = 4
_rect$ = 20						; size = 4
_pParentWnd$ = 24					; size = 4
_nID$ = 28						; size = 4
_pContext$ = 32						; size = 4
?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z PROC NEAR ; CShockwaveFlash::Create, COMDAT
; _this$ = ecx

; 33   : 	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	8b 45 1c	 mov	 eax, DWORD PTR _nID$[ebp]
  00010	50		 push	 eax
  00011	8b 4d 18	 mov	 ecx, DWORD PTR _pParentWnd$[ebp]
  00014	51		 push	 ecx
  00015	8b 55 14	 mov	 edx, DWORD PTR _rect$[ebp]
  00018	52		 push	 edx
  00019	8b 45 10	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszWindowName$[ebp]
  00020	51		 push	 ecx
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ ; CShockwaveFlash::GetClsid
  00029	50		 push	 eax
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?CreateControl@CWnd@@QAEHABU_GUID@@PBDKABUtagRECT@@PAV1@IPAVCFile@@HPA_W@Z ; CWnd::CreateControl
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 1c 00	 ret	 28			; 0000001cH
?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ENDP ; CShockwaveFlash::Create
_TEXT	ENDS
PUBLIC	?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B ; `CShockwaveFlash::GetClsid'::`2'::clsid
;	COMDAT ?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT
?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B DD 0d27cdb6eH ; `CShockwaveFlash::GetClsid'::`2'::clsid
	DW	0ae6dH
	DW	011cfH
	DB	096H
	DB	0b8H
	DB	044H
	DB	045H
	DB	053H
	DB	054H
	DB	00H
	DB	00H
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ PROC NEAR	; CShockwaveFlash::GetClsid, COMDAT
; _this$ = ecx

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 24   : 		static CLSID const clsid
; 25   : 			= { 0xd27cdb6e, 0xae6d, 0x11cf, { 0x96, 0xb8, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0 } };
; 26   : 		return clsid;

  00007	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B ; `CShockwaveFlash::GetClsid'::`2'::clsid

; 27   : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ ENDP		; CShockwaveFlash::GetClsid
_TEXT	ENDS
PUBLIC	??1CShockwaveFlash@@UAE@XZ			; CShockwaveFlash::~CShockwaveFlash
; Function compile flags: /Odt
;	COMDAT ??_GCShockwaveFlash@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCShockwaveFlash@@UAEPAXI@Z PROC NEAR		; CShockwaveFlash::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CShockwaveFlash@@UAE@XZ
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 09		 je	 SHORT $L197577
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L197577:
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??_GCShockwaveFlash@@UAEPAXI@Z ENDP			; CShockwaveFlash::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CWnd@@UAE@XZ:NEAR				; CWnd::~CWnd
; Function compile flags: /Odt
;	COMDAT ??1CShockwaveFlash@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CShockwaveFlash@@UAE@XZ PROC NEAR			; CShockwaveFlash::~CShockwaveFlash, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CShockwaveFlash@@UAE@XZ ENDP				; CShockwaveFlash::~CShockwaveFlash
_TEXT	ENDS
PUBLIC	?GetThisClass@CShockwaveFlash@@SGPAUCRuntimeClass@@XZ ; CShockwaveFlash::GetThisClass
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\gui\commoncontrol\shockwaveflash.cpp
_TEXT	SEGMENT
?GetThisClass@CShockwaveFlash@@SGPAUCRuntimeClass@@XZ PROC NEAR ; CShockwaveFlash::GetThisClass

; 13   : IMPLEMENT_DYNCREATE(CShockwaveFlash, CWnd)

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B ; CShockwaveFlash::classCShockwaveFlash
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
?GetThisClass@CShockwaveFlash@@SGPAUCRuntimeClass@@XZ ENDP ; CShockwaveFlash::GetThisClass
; Function compile flags: /Odt
_this$ = -4						; size = 4
?GetRuntimeClass@CShockwaveFlash@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; CShockwaveFlash::GetRuntimeClass
; _this$ = ecx

; 13   : IMPLEMENT_DYNCREATE(CShockwaveFlash, CWnd)

  00080	55		 push	 ebp
  00081	8b ec		 mov	 ebp, esp
  00083	51		 push	 ecx
  00084	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00087	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B ; CShockwaveFlash::classCShockwaveFlash
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
?GetRuntimeClass@CShockwaveFlash@@UBEPAUCRuntimeClass@@XZ ENDP ; CShockwaveFlash::GetRuntimeClass
_TEXT	ENDS
PUBLIC	?GetReadyState@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetReadyState
EXTRN	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ:NEAR	; CWnd::InvokeHelper
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetReadyState@CShockwaveFlash@@QAEJXZ PROC NEAR	; CShockwaveFlash::GetReadyState
; _this$ = ecx

; 22   : {

  00090	55		 push	 ebp
  00091	8b ec		 mov	 ebp, esp
  00093	83 ec 08	 sub	 esp, 8
  00096	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 	long result;
; 24   : 	InvokeHelper(DISPID_READYSTATE, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00099	6a 00		 push	 0
  0009b	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0009e	50		 push	 eax
  0009f	6a 03		 push	 3
  000a1	6a 02		 push	 2
  000a3	68 f3 fd ff ff	 push	 -525			; fffffdf3H
  000a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	51		 push	 ecx
  000ac	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  000b1	83 c4 18	 add	 esp, 24			; 00000018H

; 25   : 	return result;

  000b4	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 26   : }

  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c3		 ret	 0
?GetReadyState@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetReadyState
_TEXT	ENDS
PUBLIC	?GetTotalFrames@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetTotalFrames
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetTotalFrames@CShockwaveFlash@@QAEJXZ PROC NEAR	; CShockwaveFlash::GetTotalFrames
; _this$ = ecx

; 29   : {

  000c0	55		 push	 ebp
  000c1	8b ec		 mov	 ebp, esp
  000c3	83 ec 08	 sub	 esp, 8
  000c6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 30   : 	long result;
; 31   : 	InvokeHelper(0x7c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  000c9	6a 00		 push	 0
  000cb	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  000ce	50		 push	 eax
  000cf	6a 03		 push	 3
  000d1	6a 02		 push	 2
  000d3	6a 7c		 push	 124			; 0000007cH
  000d5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	51		 push	 ecx
  000d9	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  000de	83 c4 18	 add	 esp, 24			; 00000018H

; 32   : 	return result;

  000e1	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 33   : }

  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c3		 ret	 0
?GetTotalFrames@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetTotalFrames
_TEXT	ENDS
PUBLIC	?GetPlaying@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetPlaying
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetPlaying@CShockwaveFlash@@QAEHXZ PROC NEAR		; CShockwaveFlash::GetPlaying
; _this$ = ecx

; 36   : {

  000f0	55		 push	 ebp
  000f1	8b ec		 mov	 ebp, esp
  000f3	83 ec 08	 sub	 esp, 8
  000f6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 37   : 	BOOL result;
; 38   : 	InvokeHelper(0x7d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  000f9	6a 00		 push	 0
  000fb	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  000fe	50		 push	 eax
  000ff	6a 0b		 push	 11			; 0000000bH
  00101	6a 02		 push	 2
  00103	6a 7d		 push	 125			; 0000007dH
  00105	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	51		 push	 ecx
  00109	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0010e	83 c4 18	 add	 esp, 24			; 00000018H

; 39   : 	return result;

  00111	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 40   : }

  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c3		 ret	 0
?GetPlaying@CShockwaveFlash@@QAEHXZ ENDP		; CShockwaveFlash::GetPlaying
_TEXT	ENDS
PUBLIC	?SetPlaying@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetPlaying
;	COMDAT ?parms@?1??SetPlaying@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetPlaying@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetPlaying'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetPlaying@CShockwaveFlash@@QAEXH@Z PROC NEAR		; CShockwaveFlash::SetPlaying
; _this$ = ecx

; 43   : {

  00120	55		 push	 ebp
  00121	8b ec		 mov	 ebp, esp
  00123	51		 push	 ecx
  00124	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 44   : 	static BYTE parms[] =
; 45   : 		VTS_BOOL;
; 46   : 	InvokeHelper(0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 47   : 		 bNewValue);

  00127	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  0012a	50		 push	 eax
  0012b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetPlaying@CShockwaveFlash@@QAEXH@Z@4PAEA
  00130	6a 00		 push	 0
  00132	6a 00		 push	 0
  00134	6a 04		 push	 4
  00136	6a 7d		 push	 125			; 0000007dH
  00138	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	51		 push	 ecx
  0013c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00141	83 c4 1c	 add	 esp, 28			; 0000001cH

; 48   : }

  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c2 04 00	 ret	 4
?SetPlaying@CShockwaveFlash@@QAEXH@Z ENDP		; CShockwaveFlash::SetPlaying
_TEXT	ENDS
PUBLIC	?GetQuality@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetQuality
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetQuality@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::GetQuality
; _this$ = ecx

; 51   : {

  00150	55		 push	 ebp
  00151	8b ec		 mov	 ebp, esp
  00153	83 ec 08	 sub	 esp, 8
  00156	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 52   : 	long result;
; 53   : 	InvokeHelper(0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00159	6a 00		 push	 0
  0015b	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0015e	50		 push	 eax
  0015f	6a 03		 push	 3
  00161	6a 02		 push	 2
  00163	6a 69		 push	 105			; 00000069H
  00165	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00168	51		 push	 ecx
  00169	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0016e	83 c4 18	 add	 esp, 24			; 00000018H

; 54   : 	return result;

  00171	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 55   : }

  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c3		 ret	 0
?GetQuality@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetQuality
_TEXT	ENDS
PUBLIC	?SetQuality@CShockwaveFlash@@QAEXJ@Z		; CShockwaveFlash::SetQuality
;	COMDAT ?parms@?1??SetQuality@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetQuality@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetQuality'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetQuality@CShockwaveFlash@@QAEXJ@Z PROC NEAR		; CShockwaveFlash::SetQuality
; _this$ = ecx

; 58   : {

  00180	55		 push	 ebp
  00181	8b ec		 mov	 ebp, esp
  00183	51		 push	 ecx
  00184	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 59   : 	static BYTE parms[] =
; 60   : 		VTS_I4;
; 61   : 	InvokeHelper(0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 62   : 		 nNewValue);

  00187	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  0018a	50		 push	 eax
  0018b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetQuality@CShockwaveFlash@@QAEXJ@Z@4PAEA
  00190	6a 00		 push	 0
  00192	6a 00		 push	 0
  00194	6a 04		 push	 4
  00196	6a 69		 push	 105			; 00000069H
  00198	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019b	51		 push	 ecx
  0019c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  001a1	83 c4 1c	 add	 esp, 28			; 0000001cH

; 63   : }

  001a4	8b e5		 mov	 esp, ebp
  001a6	5d		 pop	 ebp
  001a7	c2 04 00	 ret	 4
?SetQuality@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::SetQuality
_TEXT	ENDS
PUBLIC	?GetScaleMode@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetScaleMode
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetScaleMode@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::GetScaleMode
; _this$ = ecx

; 66   : {

  001b0	55		 push	 ebp
  001b1	8b ec		 mov	 ebp, esp
  001b3	83 ec 08	 sub	 esp, 8
  001b6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 67   : 	long result;
; 68   : 	InvokeHelper(0x78, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  001b9	6a 00		 push	 0
  001bb	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  001be	50		 push	 eax
  001bf	6a 03		 push	 3
  001c1	6a 02		 push	 2
  001c3	6a 78		 push	 120			; 00000078H
  001c5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c8	51		 push	 ecx
  001c9	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  001ce	83 c4 18	 add	 esp, 24			; 00000018H

; 69   : 	return result;

  001d1	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 70   : }

  001d4	8b e5		 mov	 esp, ebp
  001d6	5d		 pop	 ebp
  001d7	c3		 ret	 0
?GetScaleMode@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetScaleMode
_TEXT	ENDS
PUBLIC	?SetScaleMode@CShockwaveFlash@@QAEXJ@Z		; CShockwaveFlash::SetScaleMode
;	COMDAT ?parms@?1??SetScaleMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetScaleMode@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetScaleMode'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetScaleMode@CShockwaveFlash@@QAEXJ@Z PROC NEAR	; CShockwaveFlash::SetScaleMode
; _this$ = ecx

; 73   : {

  001e0	55		 push	 ebp
  001e1	8b ec		 mov	 ebp, esp
  001e3	51		 push	 ecx
  001e4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 74   : 	static BYTE parms[] =
; 75   : 		VTS_I4;
; 76   : 	InvokeHelper(0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 77   : 		 nNewValue);

  001e7	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  001ea	50		 push	 eax
  001eb	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetScaleMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
  001f0	6a 00		 push	 0
  001f2	6a 00		 push	 0
  001f4	6a 04		 push	 4
  001f6	6a 78		 push	 120			; 00000078H
  001f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fb	51		 push	 ecx
  001fc	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00201	83 c4 1c	 add	 esp, 28			; 0000001cH

; 78   : }

  00204	8b e5		 mov	 esp, ebp
  00206	5d		 pop	 ebp
  00207	c2 04 00	 ret	 4
?SetScaleMode@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::SetScaleMode
_TEXT	ENDS
PUBLIC	?GetAlignMode@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetAlignMode
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetAlignMode@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::GetAlignMode
; _this$ = ecx

; 81   : {

  00210	55		 push	 ebp
  00211	8b ec		 mov	 ebp, esp
  00213	83 ec 08	 sub	 esp, 8
  00216	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	long result;
; 83   : 	InvokeHelper(0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00219	6a 00		 push	 0
  0021b	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0021e	50		 push	 eax
  0021f	6a 03		 push	 3
  00221	6a 02		 push	 2
  00223	6a 79		 push	 121			; 00000079H
  00225	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00228	51		 push	 ecx
  00229	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0022e	83 c4 18	 add	 esp, 24			; 00000018H

; 84   : 	return result;

  00231	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 85   : }

  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c3		 ret	 0
?GetAlignMode@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetAlignMode
_TEXT	ENDS
PUBLIC	?SetAlignMode@CShockwaveFlash@@QAEXJ@Z		; CShockwaveFlash::SetAlignMode
;	COMDAT ?parms@?1??SetAlignMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetAlignMode@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetAlignMode'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetAlignMode@CShockwaveFlash@@QAEXJ@Z PROC NEAR	; CShockwaveFlash::SetAlignMode
; _this$ = ecx

; 88   : {

  00240	55		 push	 ebp
  00241	8b ec		 mov	 ebp, esp
  00243	51		 push	 ecx
  00244	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   : 	static BYTE parms[] =
; 90   : 		VTS_I4;
; 91   : 	InvokeHelper(0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 92   : 		 nNewValue);

  00247	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  0024a	50		 push	 eax
  0024b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetAlignMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
  00250	6a 00		 push	 0
  00252	6a 00		 push	 0
  00254	6a 04		 push	 4
  00256	6a 79		 push	 121			; 00000079H
  00258	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0025b	51		 push	 ecx
  0025c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00261	83 c4 1c	 add	 esp, 28			; 0000001cH

; 93   : }

  00264	8b e5		 mov	 esp, ebp
  00266	5d		 pop	 ebp
  00267	c2 04 00	 ret	 4
?SetAlignMode@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::SetAlignMode
_TEXT	ENDS
PUBLIC	?GetBackgroundColor@CShockwaveFlash@@QAEJXZ	; CShockwaveFlash::GetBackgroundColor
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetBackgroundColor@CShockwaveFlash@@QAEJXZ PROC NEAR	; CShockwaveFlash::GetBackgroundColor
; _this$ = ecx

; 96   : {

  00270	55		 push	 ebp
  00271	8b ec		 mov	 ebp, esp
  00273	83 ec 08	 sub	 esp, 8
  00276	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 97   : 	long result;
; 98   : 	InvokeHelper(0x7b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  00279	6a 00		 push	 0
  0027b	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0027e	50		 push	 eax
  0027f	6a 03		 push	 3
  00281	6a 02		 push	 2
  00283	6a 7b		 push	 123			; 0000007bH
  00285	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00288	51		 push	 ecx
  00289	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0028e	83 c4 18	 add	 esp, 24			; 00000018H

; 99   : 	return result;

  00291	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 100  : }

  00294	8b e5		 mov	 esp, ebp
  00296	5d		 pop	 ebp
  00297	c3		 ret	 0
?GetBackgroundColor@CShockwaveFlash@@QAEJXZ ENDP	; CShockwaveFlash::GetBackgroundColor
_TEXT	ENDS
PUBLIC	?SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z	; CShockwaveFlash::SetBackgroundColor
;	COMDAT ?parms@?1??SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetBackgroundColor'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z PROC NEAR	; CShockwaveFlash::SetBackgroundColor
; _this$ = ecx

; 103  : {

  002a0	55		 push	 ebp
  002a1	8b ec		 mov	 ebp, esp
  002a3	51		 push	 ecx
  002a4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 104  : 	static BYTE parms[] =
; 105  : 		VTS_I4;
; 106  : 	InvokeHelper(0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 107  : 		 nNewValue);

  002a7	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  002aa	50		 push	 eax
  002ab	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z@4PAEA
  002b0	6a 00		 push	 0
  002b2	6a 00		 push	 0
  002b4	6a 04		 push	 4
  002b6	6a 7b		 push	 123			; 0000007bH
  002b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002bb	51		 push	 ecx
  002bc	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  002c1	83 c4 1c	 add	 esp, 28			; 0000001cH

; 108  : }

  002c4	8b e5		 mov	 esp, ebp
  002c6	5d		 pop	 ebp
  002c7	c2 04 00	 ret	 4
?SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z ENDP	; CShockwaveFlash::SetBackgroundColor
_TEXT	ENDS
PUBLIC	?GetLoop@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetLoop
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetLoop@CShockwaveFlash@@QAEHXZ PROC NEAR		; CShockwaveFlash::GetLoop
; _this$ = ecx

; 111  : {

  002d0	55		 push	 ebp
  002d1	8b ec		 mov	 ebp, esp
  002d3	83 ec 08	 sub	 esp, 8
  002d6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 112  : 	BOOL result;
; 113  : 	InvokeHelper(0x6a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  002d9	6a 00		 push	 0
  002db	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  002de	50		 push	 eax
  002df	6a 0b		 push	 11			; 0000000bH
  002e1	6a 02		 push	 2
  002e3	6a 6a		 push	 106			; 0000006aH
  002e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002e8	51		 push	 ecx
  002e9	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  002ee	83 c4 18	 add	 esp, 24			; 00000018H

; 114  : 	return result;

  002f1	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 115  : }

  002f4	8b e5		 mov	 esp, ebp
  002f6	5d		 pop	 ebp
  002f7	c3		 ret	 0
?GetLoop@CShockwaveFlash@@QAEHXZ ENDP			; CShockwaveFlash::GetLoop
_TEXT	ENDS
PUBLIC	?SetLoop@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetLoop
;	COMDAT ?parms@?1??SetLoop@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetLoop@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetLoop'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetLoop@CShockwaveFlash@@QAEXH@Z PROC NEAR		; CShockwaveFlash::SetLoop
; _this$ = ecx

; 118  : {

  00300	55		 push	 ebp
  00301	8b ec		 mov	 ebp, esp
  00303	51		 push	 ecx
  00304	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 119  : 	static BYTE parms[] =
; 120  : 		VTS_BOOL;
; 121  : 	InvokeHelper(0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 122  : 		 bNewValue);

  00307	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  0030a	50		 push	 eax
  0030b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetLoop@CShockwaveFlash@@QAEXH@Z@4PAEA
  00310	6a 00		 push	 0
  00312	6a 00		 push	 0
  00314	6a 04		 push	 4
  00316	6a 6a		 push	 106			; 0000006aH
  00318	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0031b	51		 push	 ecx
  0031c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00321	83 c4 1c	 add	 esp, 28			; 0000001cH

; 123  : }

  00324	8b e5		 mov	 esp, ebp
  00326	5d		 pop	 ebp
  00327	c2 04 00	 ret	 4
?SetLoop@CShockwaveFlash@@QAEXH@Z ENDP			; CShockwaveFlash::SetLoop
_TEXT	ENDS
PUBLIC	?GetMovie@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetMovie
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:NEAR
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
xdata$x	SEGMENT
$T198662 DD	0ffffffffH
	DD	FLAT:$L198655
$T198660 DD	019930520H
	DD	01H
	DD	FLAT:$T198662
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198657 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetMovie@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetMovie
; _this$ = ecx

; 126  : {

  00330	55		 push	 ebp
  00331	8b ec		 mov	 ebp, esp
  00333	6a ff		 push	 -1
  00335	68 00 00 00 00	 push	 __ehhandler$?GetMovie@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0033a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00340	50		 push	 eax
  00341	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00348	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0034b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0034e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198657[ebp], 0

; 127  : 	CString result;

  00355	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00358	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0035e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 128  : 	InvokeHelper(0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  00365	6a 00		 push	 0
  00367	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  0036a	50		 push	 eax
  0036b	6a 08		 push	 8
  0036d	6a 02		 push	 2
  0036f	6a 66		 push	 102			; 00000066H
  00371	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00374	51		 push	 ecx
  00375	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0037a	83 c4 18	 add	 esp, 24			; 00000018H

; 129  : 	return result;

  0037d	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  00380	52		 push	 edx
  00381	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00384	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0038a	8b 45 ec	 mov	 eax, DWORD PTR $T198657[ebp]
  0038d	83 c8 01	 or	 eax, 1
  00390	89 45 ec	 mov	 DWORD PTR $T198657[ebp], eax
  00393	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0039a	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  0039d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  003a3	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 130  : }

  003a6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  003b0	8b e5		 mov	 esp, ebp
  003b2	5d		 pop	 ebp
  003b3	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198655:
  00014	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00017	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetMovie@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198660
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetMovie@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetMovie
PUBLIC	?SetMovie@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetMovie
;	COMDAT ?parms@?1??SetMovie@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetMovie@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetMovie'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetMovie@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::SetMovie
; _this$ = ecx

; 133  : {

  003c0	55		 push	 ebp
  003c1	8b ec		 mov	 ebp, esp
  003c3	51		 push	 ecx
  003c4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 134  : 	static BYTE parms[] =
; 135  : 		VTS_BSTR;
; 136  : 	InvokeHelper(0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 137  : 		 lpszNewValue);

  003c7	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  003ca	50		 push	 eax
  003cb	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetMovie@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  003d0	6a 00		 push	 0
  003d2	6a 00		 push	 0
  003d4	6a 04		 push	 4
  003d6	6a 66		 push	 102			; 00000066H
  003d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003db	51		 push	 ecx
  003dc	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  003e1	83 c4 1c	 add	 esp, 28			; 0000001cH

; 138  : }

  003e4	8b e5		 mov	 esp, ebp
  003e6	5d		 pop	 ebp
  003e7	c2 04 00	 ret	 4
?SetMovie@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetMovie
_TEXT	ENDS
PUBLIC	?GetFrameNum@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetFrameNum
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetFrameNum@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::GetFrameNum
; _this$ = ecx

; 141  : {

  003f0	55		 push	 ebp
  003f1	8b ec		 mov	 ebp, esp
  003f3	83 ec 08	 sub	 esp, 8
  003f6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 142  : 	long result;
; 143  : 	InvokeHelper(0x6b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  003f9	6a 00		 push	 0
  003fb	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  003fe	50		 push	 eax
  003ff	6a 03		 push	 3
  00401	6a 02		 push	 2
  00403	6a 6b		 push	 107			; 0000006bH
  00405	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00408	51		 push	 ecx
  00409	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0040e	83 c4 18	 add	 esp, 24			; 00000018H

; 144  : 	return result;

  00411	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 145  : }

  00414	8b e5		 mov	 esp, ebp
  00416	5d		 pop	 ebp
  00417	c3		 ret	 0
?GetFrameNum@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetFrameNum
_TEXT	ENDS
PUBLIC	?SetFrameNum@CShockwaveFlash@@QAEXJ@Z		; CShockwaveFlash::SetFrameNum
;	COMDAT ?parms@?1??SetFrameNum@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetFrameNum@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetFrameNum'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetFrameNum@CShockwaveFlash@@QAEXJ@Z PROC NEAR		; CShockwaveFlash::SetFrameNum
; _this$ = ecx

; 148  : {

  00420	55		 push	 ebp
  00421	8b ec		 mov	 ebp, esp
  00423	51		 push	 ecx
  00424	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 149  : 	static BYTE parms[] =
; 150  : 		VTS_I4;
; 151  : 	InvokeHelper(0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 152  : 		 nNewValue);

  00427	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  0042a	50		 push	 eax
  0042b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetFrameNum@CShockwaveFlash@@QAEXJ@Z@4PAEA
  00430	6a 00		 push	 0
  00432	6a 00		 push	 0
  00434	6a 04		 push	 4
  00436	6a 6b		 push	 107			; 0000006bH
  00438	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0043b	51		 push	 ecx
  0043c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00441	83 c4 1c	 add	 esp, 28			; 0000001cH

; 153  : }

  00444	8b e5		 mov	 esp, ebp
  00446	5d		 pop	 ebp
  00447	c2 04 00	 ret	 4
?SetFrameNum@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::SetFrameNum
_TEXT	ENDS
PUBLIC	?SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z	; CShockwaveFlash::SetZoomRect
;	COMDAT ?parms@?1??SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z@4PAEA DB 03H, 03H, 03H
	DB	03H, 00H					; `CShockwaveFlash::SetZoomRect'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_left$ = 8						; size = 4
_top$ = 12						; size = 4
_right$ = 16						; size = 4
_bottom$ = 20						; size = 4
?SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z PROC NEAR	; CShockwaveFlash::SetZoomRect
; _this$ = ecx

; 156  : {

  00450	55		 push	 ebp
  00451	8b ec		 mov	 ebp, esp
  00453	51		 push	 ecx
  00454	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 157  : 	static BYTE parms[] =
; 158  : 		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
; 159  : 	InvokeHelper(0x6d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 160  : 		 left, top, right, bottom);

  00457	8b 45 14	 mov	 eax, DWORD PTR _bottom$[ebp]
  0045a	50		 push	 eax
  0045b	8b 4d 10	 mov	 ecx, DWORD PTR _right$[ebp]
  0045e	51		 push	 ecx
  0045f	8b 55 0c	 mov	 edx, DWORD PTR _top$[ebp]
  00462	52		 push	 edx
  00463	8b 45 08	 mov	 eax, DWORD PTR _left$[ebp]
  00466	50		 push	 eax
  00467	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z@4PAEA
  0046c	6a 00		 push	 0
  0046e	6a 00		 push	 0
  00470	6a 01		 push	 1
  00472	6a 6d		 push	 109			; 0000006dH
  00474	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00477	51		 push	 ecx
  00478	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0047d	83 c4 28	 add	 esp, 40			; 00000028H

; 161  : }

  00480	8b e5		 mov	 esp, ebp
  00482	5d		 pop	 ebp
  00483	c2 10 00	 ret	 16			; 00000010H
?SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z ENDP		; CShockwaveFlash::SetZoomRect
_TEXT	ENDS
PUBLIC	?Zoom@CShockwaveFlash@@QAEXJ@Z			; CShockwaveFlash::Zoom
;	COMDAT ?parms@?1??Zoom@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??Zoom@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::Zoom'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_factor$ = 8						; size = 4
?Zoom@CShockwaveFlash@@QAEXJ@Z PROC NEAR		; CShockwaveFlash::Zoom
; _this$ = ecx

; 164  : {

  00490	55		 push	 ebp
  00491	8b ec		 mov	 ebp, esp
  00493	51		 push	 ecx
  00494	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 165  : 	static BYTE parms[] =
; 166  : 		VTS_I4;
; 167  : 	InvokeHelper(0x76, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 168  : 		 factor);

  00497	8b 45 08	 mov	 eax, DWORD PTR _factor$[ebp]
  0049a	50		 push	 eax
  0049b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??Zoom@CShockwaveFlash@@QAEXJ@Z@4PAEA
  004a0	6a 00		 push	 0
  004a2	6a 00		 push	 0
  004a4	6a 01		 push	 1
  004a6	6a 76		 push	 118			; 00000076H
  004a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004ab	51		 push	 ecx
  004ac	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  004b1	83 c4 1c	 add	 esp, 28			; 0000001cH

; 169  : }

  004b4	8b e5		 mov	 esp, ebp
  004b6	5d		 pop	 ebp
  004b7	c2 04 00	 ret	 4
?Zoom@CShockwaveFlash@@QAEXJ@Z ENDP			; CShockwaveFlash::Zoom
_TEXT	ENDS
PUBLIC	?Pan@CShockwaveFlash@@QAEXJJJ@Z			; CShockwaveFlash::Pan
;	COMDAT ?parms@?1??Pan@CShockwaveFlash@@QAEXJJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??Pan@CShockwaveFlash@@QAEXJJJ@Z@4PAEA DB 03H, 03H, 03H, 00H ; `CShockwaveFlash::Pan'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_mode$ = 16						; size = 4
?Pan@CShockwaveFlash@@QAEXJJJ@Z PROC NEAR		; CShockwaveFlash::Pan
; _this$ = ecx

; 172  : {

  004c0	55		 push	 ebp
  004c1	8b ec		 mov	 ebp, esp
  004c3	51		 push	 ecx
  004c4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 173  : 	static BYTE parms[] =
; 174  : 		VTS_I4 VTS_I4 VTS_I4;
; 175  : 	InvokeHelper(0x77, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 176  : 		 x, y, mode);

  004c7	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  004ca	50		 push	 eax
  004cb	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  004ce	51		 push	 ecx
  004cf	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  004d2	52		 push	 edx
  004d3	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??Pan@CShockwaveFlash@@QAEXJJJ@Z@4PAEA
  004d8	6a 00		 push	 0
  004da	6a 00		 push	 0
  004dc	6a 01		 push	 1
  004de	6a 77		 push	 119			; 00000077H
  004e0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004e3	50		 push	 eax
  004e4	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  004e9	83 c4 24	 add	 esp, 36			; 00000024H

; 177  : }

  004ec	8b e5		 mov	 esp, ebp
  004ee	5d		 pop	 ebp
  004ef	c2 0c 00	 ret	 12			; 0000000cH
?Pan@CShockwaveFlash@@QAEXJJJ@Z ENDP			; CShockwaveFlash::Pan
_TEXT	ENDS
PUBLIC	?Play@CShockwaveFlash@@QAEXXZ			; CShockwaveFlash::Play
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Play@CShockwaveFlash@@QAEXXZ PROC NEAR			; CShockwaveFlash::Play
; _this$ = ecx

; 180  : {

  00500	55		 push	 ebp
  00501	8b ec		 mov	 ebp, esp
  00503	51		 push	 ecx
  00504	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 181  : 	InvokeHelper(0x70, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00507	6a 00		 push	 0
  00509	6a 00		 push	 0
  0050b	6a 00		 push	 0
  0050d	6a 01		 push	 1
  0050f	6a 70		 push	 112			; 00000070H
  00511	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00514	50		 push	 eax
  00515	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0051a	83 c4 18	 add	 esp, 24			; 00000018H

; 182  : }

  0051d	8b e5		 mov	 esp, ebp
  0051f	5d		 pop	 ebp
  00520	c3		 ret	 0
?Play@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::Play
_TEXT	ENDS
PUBLIC	?Stop@CShockwaveFlash@@QAEXXZ			; CShockwaveFlash::Stop
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Stop@CShockwaveFlash@@QAEXXZ PROC NEAR			; CShockwaveFlash::Stop
; _this$ = ecx

; 185  : {

  00530	55		 push	 ebp
  00531	8b ec		 mov	 ebp, esp
  00533	51		 push	 ecx
  00534	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 186  : 	InvokeHelper(0x71, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00537	6a 00		 push	 0
  00539	6a 00		 push	 0
  0053b	6a 00		 push	 0
  0053d	6a 01		 push	 1
  0053f	6a 71		 push	 113			; 00000071H
  00541	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00544	50		 push	 eax
  00545	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0054a	83 c4 18	 add	 esp, 24			; 00000018H

; 187  : }

  0054d	8b e5		 mov	 esp, ebp
  0054f	5d		 pop	 ebp
  00550	c3		 ret	 0
?Stop@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::Stop
_TEXT	ENDS
PUBLIC	?Back@CShockwaveFlash@@QAEXXZ			; CShockwaveFlash::Back
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Back@CShockwaveFlash@@QAEXXZ PROC NEAR			; CShockwaveFlash::Back
; _this$ = ecx

; 190  : {

  00560	55		 push	 ebp
  00561	8b ec		 mov	 ebp, esp
  00563	51		 push	 ecx
  00564	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 191  : 	InvokeHelper(0x72, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00567	6a 00		 push	 0
  00569	6a 00		 push	 0
  0056b	6a 00		 push	 0
  0056d	6a 01		 push	 1
  0056f	6a 72		 push	 114			; 00000072H
  00571	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00574	50		 push	 eax
  00575	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0057a	83 c4 18	 add	 esp, 24			; 00000018H

; 192  : }

  0057d	8b e5		 mov	 esp, ebp
  0057f	5d		 pop	 ebp
  00580	c3		 ret	 0
?Back@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::Back
_TEXT	ENDS
PUBLIC	?Forward@CShockwaveFlash@@QAEXXZ		; CShockwaveFlash::Forward
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Forward@CShockwaveFlash@@QAEXXZ PROC NEAR		; CShockwaveFlash::Forward
; _this$ = ecx

; 195  : {

  00590	55		 push	 ebp
  00591	8b ec		 mov	 ebp, esp
  00593	51		 push	 ecx
  00594	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 196  : 	InvokeHelper(0x73, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  00597	6a 00		 push	 0
  00599	6a 00		 push	 0
  0059b	6a 00		 push	 0
  0059d	6a 01		 push	 1
  0059f	6a 73		 push	 115			; 00000073H
  005a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005a4	50		 push	 eax
  005a5	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  005aa	83 c4 18	 add	 esp, 24			; 00000018H

; 197  : }

  005ad	8b e5		 mov	 esp, ebp
  005af	5d		 pop	 ebp
  005b0	c3		 ret	 0
?Forward@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::Forward
_TEXT	ENDS
PUBLIC	?Rewind@CShockwaveFlash@@QAEXXZ			; CShockwaveFlash::Rewind
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Rewind@CShockwaveFlash@@QAEXXZ PROC NEAR		; CShockwaveFlash::Rewind
; _this$ = ecx

; 200  : {

  005c0	55		 push	 ebp
  005c1	8b ec		 mov	 ebp, esp
  005c3	51		 push	 ecx
  005c4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 201  : 	InvokeHelper(0x74, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  005c7	6a 00		 push	 0
  005c9	6a 00		 push	 0
  005cb	6a 00		 push	 0
  005cd	6a 01		 push	 1
  005cf	6a 74		 push	 116			; 00000074H
  005d1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005d4	50		 push	 eax
  005d5	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  005da	83 c4 18	 add	 esp, 24			; 00000018H

; 202  : }

  005dd	8b e5		 mov	 esp, ebp
  005df	5d		 pop	 ebp
  005e0	c3		 ret	 0
?Rewind@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::Rewind
_TEXT	ENDS
PUBLIC	?StopPlay@CShockwaveFlash@@QAEXXZ		; CShockwaveFlash::StopPlay
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StopPlay@CShockwaveFlash@@QAEXXZ PROC NEAR		; CShockwaveFlash::StopPlay
; _this$ = ecx

; 205  : {

  005f0	55		 push	 ebp
  005f1	8b ec		 mov	 ebp, esp
  005f3	51		 push	 ecx
  005f4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 206  : 	InvokeHelper(0x7e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  005f7	6a 00		 push	 0
  005f9	6a 00		 push	 0
  005fb	6a 00		 push	 0
  005fd	6a 01		 push	 1
  005ff	6a 7e		 push	 126			; 0000007eH
  00601	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00604	50		 push	 eax
  00605	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0060a	83 c4 18	 add	 esp, 24			; 00000018H

; 207  : }

  0060d	8b e5		 mov	 esp, ebp
  0060f	5d		 pop	 ebp
  00610	c3		 ret	 0
?StopPlay@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::StopPlay
_TEXT	ENDS
PUBLIC	?GotoFrame@CShockwaveFlash@@QAEXJ@Z		; CShockwaveFlash::GotoFrame
;	COMDAT ?parms@?1??GotoFrame@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GotoFrame@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::GotoFrame'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_FrameNum$ = 8						; size = 4
?GotoFrame@CShockwaveFlash@@QAEXJ@Z PROC NEAR		; CShockwaveFlash::GotoFrame
; _this$ = ecx

; 210  : {

  00620	55		 push	 ebp
  00621	8b ec		 mov	 ebp, esp
  00623	51		 push	 ecx
  00624	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 211  : 	static BYTE parms[] =
; 212  : 		VTS_I4;
; 213  : 	InvokeHelper(0x7f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 214  : 		 FrameNum);

  00627	8b 45 08	 mov	 eax, DWORD PTR _FrameNum$[ebp]
  0062a	50		 push	 eax
  0062b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??GotoFrame@CShockwaveFlash@@QAEXJ@Z@4PAEA
  00630	6a 00		 push	 0
  00632	6a 00		 push	 0
  00634	6a 01		 push	 1
  00636	6a 7f		 push	 127			; 0000007fH
  00638	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0063b	51		 push	 ecx
  0063c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00641	83 c4 1c	 add	 esp, 28			; 0000001cH

; 215  : }

  00644	8b e5		 mov	 esp, ebp
  00646	5d		 pop	 ebp
  00647	c2 04 00	 ret	 4
?GotoFrame@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::GotoFrame
_TEXT	ENDS
PUBLIC	?CurrentFrame@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::CurrentFrame
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?CurrentFrame@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::CurrentFrame
; _this$ = ecx

; 218  : {

  00650	55		 push	 ebp
  00651	8b ec		 mov	 ebp, esp
  00653	83 ec 08	 sub	 esp, 8
  00656	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 219  : 	long result;
; 220  : 	InvokeHelper(0x80, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);

  00659	6a 00		 push	 0
  0065b	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0065e	50		 push	 eax
  0065f	6a 03		 push	 3
  00661	6a 01		 push	 1
  00663	68 80 00 00 00	 push	 128			; 00000080H
  00668	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0066b	51		 push	 ecx
  0066c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00671	83 c4 18	 add	 esp, 24			; 00000018H

; 221  : 	return result;

  00674	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 222  : }

  00677	8b e5		 mov	 esp, ebp
  00679	5d		 pop	 ebp
  0067a	c3		 ret	 0
?CurrentFrame@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::CurrentFrame
_TEXT	ENDS
PUBLIC	?IsPlaying@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::IsPlaying
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?IsPlaying@CShockwaveFlash@@QAEHXZ PROC NEAR		; CShockwaveFlash::IsPlaying
; _this$ = ecx

; 225  : {

  00680	55		 push	 ebp
  00681	8b ec		 mov	 ebp, esp
  00683	83 ec 08	 sub	 esp, 8
  00686	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 226  : 	BOOL result;
; 227  : 	InvokeHelper(0x81, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);

  00689	6a 00		 push	 0
  0068b	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0068e	50		 push	 eax
  0068f	6a 0b		 push	 11			; 0000000bH
  00691	6a 01		 push	 1
  00693	68 81 00 00 00	 push	 129			; 00000081H
  00698	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0069b	51		 push	 ecx
  0069c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  006a1	83 c4 18	 add	 esp, 24			; 00000018H

; 228  : 	return result;

  006a4	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 229  : }

  006a7	8b e5		 mov	 esp, ebp
  006a9	5d		 pop	 ebp
  006aa	c3		 ret	 0
?IsPlaying@CShockwaveFlash@@QAEHXZ ENDP			; CShockwaveFlash::IsPlaying
_TEXT	ENDS
PUBLIC	?PercentLoaded@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::PercentLoaded
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?PercentLoaded@CShockwaveFlash@@QAEJXZ PROC NEAR	; CShockwaveFlash::PercentLoaded
; _this$ = ecx

; 232  : {

  006b0	55		 push	 ebp
  006b1	8b ec		 mov	 ebp, esp
  006b3	83 ec 08	 sub	 esp, 8
  006b6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	long result;
; 234  : 	InvokeHelper(0x82, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);

  006b9	6a 00		 push	 0
  006bb	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  006be	50		 push	 eax
  006bf	6a 03		 push	 3
  006c1	6a 01		 push	 1
  006c3	68 82 00 00 00	 push	 130			; 00000082H
  006c8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006cb	51		 push	 ecx
  006cc	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  006d1	83 c4 18	 add	 esp, 24			; 00000018H

; 235  : 	return result;

  006d4	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 236  : }

  006d7	8b e5		 mov	 esp, ebp
  006d9	5d		 pop	 ebp
  006da	c3		 ret	 0
?PercentLoaded@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::PercentLoaded
_TEXT	ENDS
PUBLIC	?FrameLoaded@CShockwaveFlash@@QAEHJ@Z		; CShockwaveFlash::FrameLoaded
;	COMDAT ?parms@?1??FrameLoaded@CShockwaveFlash@@QAEHJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??FrameLoaded@CShockwaveFlash@@QAEHJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::FrameLoaded'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
_FrameNum$ = 8						; size = 4
?FrameLoaded@CShockwaveFlash@@QAEHJ@Z PROC NEAR		; CShockwaveFlash::FrameLoaded
; _this$ = ecx

; 239  : {

  006e0	55		 push	 ebp
  006e1	8b ec		 mov	 ebp, esp
  006e3	83 ec 08	 sub	 esp, 8
  006e6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 240  : 	BOOL result;
; 241  : 	static BYTE parms[] =
; 242  : 		VTS_I4;
; 243  : 	InvokeHelper(0x83, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
; 244  : 		FrameNum);

  006e9	8b 45 08	 mov	 eax, DWORD PTR _FrameNum$[ebp]
  006ec	50		 push	 eax
  006ed	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??FrameLoaded@CShockwaveFlash@@QAEHJ@Z@4PAEA
  006f2	8d 4d fc	 lea	 ecx, DWORD PTR _result$[ebp]
  006f5	51		 push	 ecx
  006f6	6a 0b		 push	 11			; 0000000bH
  006f8	6a 01		 push	 1
  006fa	68 83 00 00 00	 push	 131			; 00000083H
  006ff	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00702	52		 push	 edx
  00703	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00708	83 c4 1c	 add	 esp, 28			; 0000001cH

; 245  : 	return result;

  0070b	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 246  : }

  0070e	8b e5		 mov	 esp, ebp
  00710	5d		 pop	 ebp
  00711	c2 04 00	 ret	 4
?FrameLoaded@CShockwaveFlash@@QAEHJ@Z ENDP		; CShockwaveFlash::FrameLoaded
_TEXT	ENDS
PUBLIC	?FlashVersion@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::FlashVersion
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?FlashVersion@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::FlashVersion
; _this$ = ecx

; 249  : {

  00720	55		 push	 ebp
  00721	8b ec		 mov	 ebp, esp
  00723	83 ec 08	 sub	 esp, 8
  00726	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 250  : 	long result;
; 251  : 	InvokeHelper(0x84, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);

  00729	6a 00		 push	 0
  0072b	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0072e	50		 push	 eax
  0072f	6a 03		 push	 3
  00731	6a 01		 push	 1
  00733	68 84 00 00 00	 push	 132			; 00000084H
  00738	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	51		 push	 ecx
  0073c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00741	83 c4 18	 add	 esp, 24			; 00000018H

; 252  : 	return result;

  00744	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 253  : }

  00747	8b e5		 mov	 esp, ebp
  00749	5d		 pop	 ebp
  0074a	c3		 ret	 0
?FlashVersion@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::FlashVersion
_TEXT	ENDS
PUBLIC	?GetWMode@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetWMode
xdata$x	SEGMENT
$T198689 DD	0ffffffffH
	DD	FLAT:$L198682
$T198687 DD	019930520H
	DD	01H
	DD	FLAT:$T198689
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198684 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetWMode@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetWMode
; _this$ = ecx

; 256  : {

  00750	55		 push	 ebp
  00751	8b ec		 mov	 ebp, esp
  00753	6a ff		 push	 -1
  00755	68 00 00 00 00	 push	 __ehhandler$?GetWMode@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0075a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00760	50		 push	 eax
  00761	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00768	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0076b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0076e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198684[ebp], 0

; 257  : 	CString result;

  00775	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00778	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0077e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 258  : 	InvokeHelper(0x85, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  00785	6a 00		 push	 0
  00787	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  0078a	50		 push	 eax
  0078b	6a 08		 push	 8
  0078d	6a 02		 push	 2
  0078f	68 85 00 00 00	 push	 133			; 00000085H
  00794	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00797	51		 push	 ecx
  00798	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0079d	83 c4 18	 add	 esp, 24			; 00000018H

; 259  : 	return result;

  007a0	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  007a3	52		 push	 edx
  007a4	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  007a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  007ad	8b 45 ec	 mov	 eax, DWORD PTR $T198684[ebp]
  007b0	83 c8 01	 or	 eax, 1
  007b3	89 45 ec	 mov	 DWORD PTR $T198684[ebp], eax
  007b6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  007bd	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  007c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  007c6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 260  : }

  007c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  007cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  007d3	8b e5		 mov	 esp, ebp
  007d5	5d		 pop	 ebp
  007d6	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198682:
  00027	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  0002a	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetWMode@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00030	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198687
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetWMode@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetWMode
PUBLIC	?SetWMode@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetWMode
;	COMDAT ?parms@?1??SetWMode@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetWMode@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetWMode'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetWMode@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::SetWMode
; _this$ = ecx

; 263  : {

  007e0	55		 push	 ebp
  007e1	8b ec		 mov	 ebp, esp
  007e3	51		 push	 ecx
  007e4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 264  : 	static BYTE parms[] =
; 265  : 		VTS_BSTR;
; 266  : 	InvokeHelper(0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 267  : 		 lpszNewValue);

  007e7	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  007ea	50		 push	 eax
  007eb	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetWMode@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  007f0	6a 00		 push	 0
  007f2	6a 00		 push	 0
  007f4	6a 04		 push	 4
  007f6	68 85 00 00 00	 push	 133			; 00000085H
  007fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007fe	51		 push	 ecx
  007ff	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00804	83 c4 1c	 add	 esp, 28			; 0000001cH

; 268  : }

  00807	8b e5		 mov	 esp, ebp
  00809	5d		 pop	 ebp
  0080a	c2 04 00	 ret	 4
?SetWMode@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetWMode
_TEXT	ENDS
PUBLIC	?GetSAlign@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetSAlign
xdata$x	SEGMENT
$T198699 DD	0ffffffffH
	DD	FLAT:$L198692
$T198697 DD	019930520H
	DD	01H
	DD	FLAT:$T198699
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198694 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetSAlign@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetSAlign
; _this$ = ecx

; 271  : {

  00810	55		 push	 ebp
  00811	8b ec		 mov	 ebp, esp
  00813	6a ff		 push	 -1
  00815	68 00 00 00 00	 push	 __ehhandler$?GetSAlign@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0081a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00820	50		 push	 eax
  00821	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00828	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0082b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0082e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198694[ebp], 0

; 272  : 	CString result;

  00835	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00838	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0083e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 273  : 	InvokeHelper(0x86, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  00845	6a 00		 push	 0
  00847	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  0084a	50		 push	 eax
  0084b	6a 08		 push	 8
  0084d	6a 02		 push	 2
  0084f	68 86 00 00 00	 push	 134			; 00000086H
  00854	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00857	51		 push	 ecx
  00858	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0085d	83 c4 18	 add	 esp, 24			; 00000018H

; 274  : 	return result;

  00860	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  00863	52		 push	 edx
  00864	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00867	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0086d	8b 45 ec	 mov	 eax, DWORD PTR $T198694[ebp]
  00870	83 c8 01	 or	 eax, 1
  00873	89 45 ec	 mov	 DWORD PTR $T198694[ebp], eax
  00876	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0087d	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00880	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00886	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 275  : }

  00889	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0088c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00893	8b e5		 mov	 esp, ebp
  00895	5d		 pop	 ebp
  00896	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198692:
  0003a	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  0003d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetSAlign@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00043	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198697
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetSAlign@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetSAlign
PUBLIC	?SetSAlign@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetSAlign
;	COMDAT ?parms@?1??SetSAlign@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetSAlign@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetSAlign'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetSAlign@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::SetSAlign
; _this$ = ecx

; 278  : {

  008a0	55		 push	 ebp
  008a1	8b ec		 mov	 ebp, esp
  008a3	51		 push	 ecx
  008a4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 279  : 	static BYTE parms[] =
; 280  : 		VTS_BSTR;
; 281  : 	InvokeHelper(0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 282  : 		 lpszNewValue);

  008a7	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  008aa	50		 push	 eax
  008ab	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetSAlign@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  008b0	6a 00		 push	 0
  008b2	6a 00		 push	 0
  008b4	6a 04		 push	 4
  008b6	68 86 00 00 00	 push	 134			; 00000086H
  008bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008be	51		 push	 ecx
  008bf	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  008c4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 283  : }

  008c7	8b e5		 mov	 esp, ebp
  008c9	5d		 pop	 ebp
  008ca	c2 04 00	 ret	 4
?SetSAlign@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetSAlign
_TEXT	ENDS
PUBLIC	?GetMenu@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetMenu
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetMenu@CShockwaveFlash@@QAEHXZ PROC NEAR		; CShockwaveFlash::GetMenu
; _this$ = ecx

; 286  : {

  008d0	55		 push	 ebp
  008d1	8b ec		 mov	 ebp, esp
  008d3	83 ec 08	 sub	 esp, 8
  008d6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 287  : 	BOOL result;
; 288  : 	InvokeHelper(0x87, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  008d9	6a 00		 push	 0
  008db	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  008de	50		 push	 eax
  008df	6a 0b		 push	 11			; 0000000bH
  008e1	6a 02		 push	 2
  008e3	68 87 00 00 00	 push	 135			; 00000087H
  008e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008eb	51		 push	 ecx
  008ec	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  008f1	83 c4 18	 add	 esp, 24			; 00000018H

; 289  : 	return result;

  008f4	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 290  : }

  008f7	8b e5		 mov	 esp, ebp
  008f9	5d		 pop	 ebp
  008fa	c3		 ret	 0
?GetMenu@CShockwaveFlash@@QAEHXZ ENDP			; CShockwaveFlash::GetMenu
_TEXT	ENDS
PUBLIC	?SetMenu@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetMenu
;	COMDAT ?parms@?1??SetMenu@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetMenu@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetMenu'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetMenu@CShockwaveFlash@@QAEXH@Z PROC NEAR		; CShockwaveFlash::SetMenu
; _this$ = ecx

; 293  : {

  00900	55		 push	 ebp
  00901	8b ec		 mov	 ebp, esp
  00903	51		 push	 ecx
  00904	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 294  : 	static BYTE parms[] =
; 295  : 		VTS_BOOL;
; 296  : 	InvokeHelper(0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 297  : 		 bNewValue);

  00907	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  0090a	50		 push	 eax
  0090b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetMenu@CShockwaveFlash@@QAEXH@Z@4PAEA
  00910	6a 00		 push	 0
  00912	6a 00		 push	 0
  00914	6a 04		 push	 4
  00916	68 87 00 00 00	 push	 135			; 00000087H
  0091b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0091e	51		 push	 ecx
  0091f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00924	83 c4 1c	 add	 esp, 28			; 0000001cH

; 298  : }

  00927	8b e5		 mov	 esp, ebp
  00929	5d		 pop	 ebp
  0092a	c2 04 00	 ret	 4
?SetMenu@CShockwaveFlash@@QAEXH@Z ENDP			; CShockwaveFlash::SetMenu
_TEXT	ENDS
PUBLIC	?GetBase@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetBase
xdata$x	SEGMENT
$T198711 DD	0ffffffffH
	DD	FLAT:$L198704
$T198709 DD	019930520H
	DD	01H
	DD	FLAT:$T198711
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198706 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetBase@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetBase
; _this$ = ecx

; 301  : {

  00930	55		 push	 ebp
  00931	8b ec		 mov	 ebp, esp
  00933	6a ff		 push	 -1
  00935	68 00 00 00 00	 push	 __ehhandler$?GetBase@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0093a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00940	50		 push	 eax
  00941	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00948	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0094b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0094e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198706[ebp], 0

; 302  : 	CString result;

  00955	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00958	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0095e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 303  : 	InvokeHelper(0x88, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  00965	6a 00		 push	 0
  00967	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  0096a	50		 push	 eax
  0096b	6a 08		 push	 8
  0096d	6a 02		 push	 2
  0096f	68 88 00 00 00	 push	 136			; 00000088H
  00974	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00977	51		 push	 ecx
  00978	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0097d	83 c4 18	 add	 esp, 24			; 00000018H

; 304  : 	return result;

  00980	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  00983	52		 push	 edx
  00984	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00987	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0098d	8b 45 ec	 mov	 eax, DWORD PTR $T198706[ebp]
  00990	83 c8 01	 or	 eax, 1
  00993	89 45 ec	 mov	 DWORD PTR $T198706[ebp], eax
  00996	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0099d	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  009a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  009a6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 305  : }

  009a9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  009ac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  009b3	8b e5		 mov	 esp, ebp
  009b5	5d		 pop	 ebp
  009b6	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198704:
  0004d	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00050	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetBase@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00056	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198709
  0005b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetBase@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetBase
PUBLIC	?SetBase@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetBase
;	COMDAT ?parms@?1??SetBase@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetBase@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetBase'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetBase@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::SetBase
; _this$ = ecx

; 308  : {

  009c0	55		 push	 ebp
  009c1	8b ec		 mov	 ebp, esp
  009c3	51		 push	 ecx
  009c4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 309  : 	static BYTE parms[] =
; 310  : 		VTS_BSTR;
; 311  : 	InvokeHelper(0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 312  : 		 lpszNewValue);

  009c7	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  009ca	50		 push	 eax
  009cb	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetBase@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  009d0	6a 00		 push	 0
  009d2	6a 00		 push	 0
  009d4	6a 04		 push	 4
  009d6	68 88 00 00 00	 push	 136			; 00000088H
  009db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009de	51		 push	 ecx
  009df	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  009e4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 313  : }

  009e7	8b e5		 mov	 esp, ebp
  009e9	5d		 pop	 ebp
  009ea	c2 04 00	 ret	 4
?SetBase@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetBase
_TEXT	ENDS
PUBLIC	?GetScale@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetScale
xdata$x	SEGMENT
$T198721 DD	0ffffffffH
	DD	FLAT:$L198714
$T198719 DD	019930520H
	DD	01H
	DD	FLAT:$T198721
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198716 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetScale@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetScale
; _this$ = ecx

; 316  : {

  009f0	55		 push	 ebp
  009f1	8b ec		 mov	 ebp, esp
  009f3	6a ff		 push	 -1
  009f5	68 00 00 00 00	 push	 __ehhandler$?GetScale@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  009fa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00a00	50		 push	 eax
  00a01	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00a08	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00a0b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00a0e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198716[ebp], 0

; 317  : 	CString result;

  00a15	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00a18	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00a1e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 318  : 	InvokeHelper(0x89, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  00a25	6a 00		 push	 0
  00a27	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  00a2a	50		 push	 eax
  00a2b	6a 08		 push	 8
  00a2d	6a 02		 push	 2
  00a2f	68 89 00 00 00	 push	 137			; 00000089H
  00a34	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a37	51		 push	 ecx
  00a38	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00a3d	83 c4 18	 add	 esp, 24			; 00000018H

; 319  : 	return result;

  00a40	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  00a43	52		 push	 edx
  00a44	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00a47	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00a4d	8b 45 ec	 mov	 eax, DWORD PTR $T198716[ebp]
  00a50	83 c8 01	 or	 eax, 1
  00a53	89 45 ec	 mov	 DWORD PTR $T198716[ebp], eax
  00a56	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a5d	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00a60	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00a66	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 320  : }

  00a69	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00a6c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00a73	8b e5		 mov	 esp, ebp
  00a75	5d		 pop	 ebp
  00a76	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198714:
  00060	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00063	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetScale@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00069	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198719
  0006e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetScale@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetScale
PUBLIC	?SetScale@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetScale
;	COMDAT ?parms@?1??SetScale@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetScale@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetScale'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetScale@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::SetScale
; _this$ = ecx

; 323  : {

  00a80	55		 push	 ebp
  00a81	8b ec		 mov	 ebp, esp
  00a83	51		 push	 ecx
  00a84	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 324  : 	static BYTE parms[] =
; 325  : 		VTS_BSTR;
; 326  : 	InvokeHelper(0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 327  : 		 lpszNewValue);

  00a87	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  00a8a	50		 push	 eax
  00a8b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetScale@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  00a90	6a 00		 push	 0
  00a92	6a 00		 push	 0
  00a94	6a 04		 push	 4
  00a96	68 89 00 00 00	 push	 137			; 00000089H
  00a9b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a9e	51		 push	 ecx
  00a9f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00aa4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 328  : }

  00aa7	8b e5		 mov	 esp, ebp
  00aa9	5d		 pop	 ebp
  00aaa	c2 04 00	 ret	 4
?SetScale@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetScale
_TEXT	ENDS
PUBLIC	?GetDeviceFont@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetDeviceFont
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetDeviceFont@CShockwaveFlash@@QAEHXZ PROC NEAR	; CShockwaveFlash::GetDeviceFont
; _this$ = ecx

; 331  : {

  00ab0	55		 push	 ebp
  00ab1	8b ec		 mov	 ebp, esp
  00ab3	83 ec 08	 sub	 esp, 8
  00ab6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 332  : 	BOOL result;
; 333  : 	InvokeHelper(0x8a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  00ab9	6a 00		 push	 0
  00abb	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00abe	50		 push	 eax
  00abf	6a 0b		 push	 11			; 0000000bH
  00ac1	6a 02		 push	 2
  00ac3	68 8a 00 00 00	 push	 138			; 0000008aH
  00ac8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00acb	51		 push	 ecx
  00acc	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00ad1	83 c4 18	 add	 esp, 24			; 00000018H

; 334  : 	return result;

  00ad4	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 335  : }

  00ad7	8b e5		 mov	 esp, ebp
  00ad9	5d		 pop	 ebp
  00ada	c3		 ret	 0
?GetDeviceFont@CShockwaveFlash@@QAEHXZ ENDP		; CShockwaveFlash::GetDeviceFont
_TEXT	ENDS
PUBLIC	?SetDeviceFont@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetDeviceFont
;	COMDAT ?parms@?1??SetDeviceFont@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetDeviceFont@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetDeviceFont'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetDeviceFont@CShockwaveFlash@@QAEXH@Z PROC NEAR	; CShockwaveFlash::SetDeviceFont
; _this$ = ecx

; 338  : {

  00ae0	55		 push	 ebp
  00ae1	8b ec		 mov	 ebp, esp
  00ae3	51		 push	 ecx
  00ae4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 339  : 	static BYTE parms[] =
; 340  : 		VTS_BOOL;
; 341  : 	InvokeHelper(0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 342  : 		 bNewValue);

  00ae7	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  00aea	50		 push	 eax
  00aeb	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetDeviceFont@CShockwaveFlash@@QAEXH@Z@4PAEA
  00af0	6a 00		 push	 0
  00af2	6a 00		 push	 0
  00af4	6a 04		 push	 4
  00af6	68 8a 00 00 00	 push	 138			; 0000008aH
  00afb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00afe	51		 push	 ecx
  00aff	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00b04	83 c4 1c	 add	 esp, 28			; 0000001cH

; 343  : }

  00b07	8b e5		 mov	 esp, ebp
  00b09	5d		 pop	 ebp
  00b0a	c2 04 00	 ret	 4
?SetDeviceFont@CShockwaveFlash@@QAEXH@Z ENDP		; CShockwaveFlash::SetDeviceFont
_TEXT	ENDS
PUBLIC	?GetEmbedMovie@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetEmbedMovie
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetEmbedMovie@CShockwaveFlash@@QAEHXZ PROC NEAR	; CShockwaveFlash::GetEmbedMovie
; _this$ = ecx

; 346  : {

  00b10	55		 push	 ebp
  00b11	8b ec		 mov	 ebp, esp
  00b13	83 ec 08	 sub	 esp, 8
  00b16	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 347  : 	BOOL result;
; 348  : 	InvokeHelper(0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  00b19	6a 00		 push	 0
  00b1b	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00b1e	50		 push	 eax
  00b1f	6a 0b		 push	 11			; 0000000bH
  00b21	6a 02		 push	 2
  00b23	68 8b 00 00 00	 push	 139			; 0000008bH
  00b28	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b2b	51		 push	 ecx
  00b2c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00b31	83 c4 18	 add	 esp, 24			; 00000018H

; 349  : 	return result;

  00b34	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 350  : }

  00b37	8b e5		 mov	 esp, ebp
  00b39	5d		 pop	 ebp
  00b3a	c3		 ret	 0
?GetEmbedMovie@CShockwaveFlash@@QAEHXZ ENDP		; CShockwaveFlash::GetEmbedMovie
_TEXT	ENDS
PUBLIC	?SetEmbedMovie@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetEmbedMovie
;	COMDAT ?parms@?1??SetEmbedMovie@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetEmbedMovie@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetEmbedMovie'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetEmbedMovie@CShockwaveFlash@@QAEXH@Z PROC NEAR	; CShockwaveFlash::SetEmbedMovie
; _this$ = ecx

; 353  : {

  00b40	55		 push	 ebp
  00b41	8b ec		 mov	 ebp, esp
  00b43	51		 push	 ecx
  00b44	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 354  : 	static BYTE parms[] =
; 355  : 		VTS_BOOL;
; 356  : 	InvokeHelper(0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 357  : 		 bNewValue);

  00b47	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  00b4a	50		 push	 eax
  00b4b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetEmbedMovie@CShockwaveFlash@@QAEXH@Z@4PAEA
  00b50	6a 00		 push	 0
  00b52	6a 00		 push	 0
  00b54	6a 04		 push	 4
  00b56	68 8b 00 00 00	 push	 139			; 0000008bH
  00b5b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b5e	51		 push	 ecx
  00b5f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00b64	83 c4 1c	 add	 esp, 28			; 0000001cH

; 358  : }

  00b67	8b e5		 mov	 esp, ebp
  00b69	5d		 pop	 ebp
  00b6a	c2 04 00	 ret	 4
?SetEmbedMovie@CShockwaveFlash@@QAEXH@Z ENDP		; CShockwaveFlash::SetEmbedMovie
_TEXT	ENDS
PUBLIC	?GetBGColor@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetBGColor
xdata$x	SEGMENT
$T198735 DD	0ffffffffH
	DD	FLAT:$L198728
$T198733 DD	019930520H
	DD	01H
	DD	FLAT:$T198735
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198730 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetBGColor@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetBGColor
; _this$ = ecx

; 361  : {

  00b70	55		 push	 ebp
  00b71	8b ec		 mov	 ebp, esp
  00b73	6a ff		 push	 -1
  00b75	68 00 00 00 00	 push	 __ehhandler$?GetBGColor@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00b7a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00b80	50		 push	 eax
  00b81	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00b88	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00b8b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00b8e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198730[ebp], 0

; 362  : 	CString result;

  00b95	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00b98	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00b9e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 363  : 	InvokeHelper(0x8c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  00ba5	6a 00		 push	 0
  00ba7	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  00baa	50		 push	 eax
  00bab	6a 08		 push	 8
  00bad	6a 02		 push	 2
  00baf	68 8c 00 00 00	 push	 140			; 0000008cH
  00bb4	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00bb7	51		 push	 ecx
  00bb8	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00bbd	83 c4 18	 add	 esp, 24			; 00000018H

; 364  : 	return result;

  00bc0	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  00bc3	52		 push	 edx
  00bc4	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00bc7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00bcd	8b 45 ec	 mov	 eax, DWORD PTR $T198730[ebp]
  00bd0	83 c8 01	 or	 eax, 1
  00bd3	89 45 ec	 mov	 DWORD PTR $T198730[ebp], eax
  00bd6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00bdd	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00be0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00be6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 365  : }

  00be9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00bec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00bf3	8b e5		 mov	 esp, ebp
  00bf5	5d		 pop	 ebp
  00bf6	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198728:
  00073	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00076	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetBGColor@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0007c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198733
  00081	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetBGColor@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetBGColor
PUBLIC	?SetBGColor@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetBGColor
;	COMDAT ?parms@?1??SetBGColor@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetBGColor@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetBGColor'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetBGColor@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetBGColor
; _this$ = ecx

; 368  : {

  00c00	55		 push	 ebp
  00c01	8b ec		 mov	 ebp, esp
  00c03	51		 push	 ecx
  00c04	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 369  : 	static BYTE parms[] =
; 370  : 		VTS_BSTR;
; 371  : 	InvokeHelper(0x8c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 372  : 		 lpszNewValue);

  00c07	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  00c0a	50		 push	 eax
  00c0b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetBGColor@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  00c10	6a 00		 push	 0
  00c12	6a 00		 push	 0
  00c14	6a 04		 push	 4
  00c16	68 8c 00 00 00	 push	 140			; 0000008cH
  00c1b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c1e	51		 push	 ecx
  00c1f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00c24	83 c4 1c	 add	 esp, 28			; 0000001cH

; 373  : }

  00c27	8b e5		 mov	 esp, ebp
  00c29	5d		 pop	 ebp
  00c2a	c2 04 00	 ret	 4
?SetBGColor@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetBGColor
_TEXT	ENDS
PUBLIC	?GetQuality2@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetQuality2
xdata$x	SEGMENT
$T198745 DD	0ffffffffH
	DD	FLAT:$L198738
$T198743 DD	019930520H
	DD	01H
	DD	FLAT:$T198745
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198740 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetQuality2@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetQuality2
; _this$ = ecx

; 376  : {

  00c30	55		 push	 ebp
  00c31	8b ec		 mov	 ebp, esp
  00c33	6a ff		 push	 -1
  00c35	68 00 00 00 00	 push	 __ehhandler$?GetQuality2@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00c3a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00c40	50		 push	 eax
  00c41	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00c48	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00c4b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00c4e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198740[ebp], 0

; 377  : 	CString result;

  00c55	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00c58	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00c5e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 378  : 	InvokeHelper(0x8d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  00c65	6a 00		 push	 0
  00c67	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  00c6a	50		 push	 eax
  00c6b	6a 08		 push	 8
  00c6d	6a 02		 push	 2
  00c6f	68 8d 00 00 00	 push	 141			; 0000008dH
  00c74	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c77	51		 push	 ecx
  00c78	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00c7d	83 c4 18	 add	 esp, 24			; 00000018H

; 379  : 	return result;

  00c80	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  00c83	52		 push	 edx
  00c84	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00c87	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00c8d	8b 45 ec	 mov	 eax, DWORD PTR $T198740[ebp]
  00c90	83 c8 01	 or	 eax, 1
  00c93	89 45 ec	 mov	 DWORD PTR $T198740[ebp], eax
  00c96	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c9d	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00ca0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00ca6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 380  : }

  00ca9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00cac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00cb3	8b e5		 mov	 esp, ebp
  00cb5	5d		 pop	 ebp
  00cb6	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198738:
  00086	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00089	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetQuality2@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0008f	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198743
  00094	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetQuality2@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetQuality2
PUBLIC	?SetQuality2@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetQuality2
;	COMDAT ?parms@?1??SetQuality2@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetQuality2@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetQuality2'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetQuality2@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetQuality2
; _this$ = ecx

; 383  : {

  00cc0	55		 push	 ebp
  00cc1	8b ec		 mov	 ebp, esp
  00cc3	51		 push	 ecx
  00cc4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 384  : 	static BYTE parms[] =
; 385  : 		VTS_BSTR;
; 386  : 	InvokeHelper(0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 387  : 		 lpszNewValue);

  00cc7	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  00cca	50		 push	 eax
  00ccb	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetQuality2@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  00cd0	6a 00		 push	 0
  00cd2	6a 00		 push	 0
  00cd4	6a 04		 push	 4
  00cd6	68 8d 00 00 00	 push	 141			; 0000008dH
  00cdb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cde	51		 push	 ecx
  00cdf	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00ce4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 388  : }

  00ce7	8b e5		 mov	 esp, ebp
  00ce9	5d		 pop	 ebp
  00cea	c2 04 00	 ret	 4
?SetQuality2@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetQuality2
_TEXT	ENDS
PUBLIC	?LoadMovie@CShockwaveFlash@@QAEXJPBD@Z		; CShockwaveFlash::LoadMovie
;	COMDAT ?parms@?1??LoadMovie@CShockwaveFlash@@QAEXJPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??LoadMovie@CShockwaveFlash@@QAEXJPBD@Z@4PAEA DB 03H, 0eH, 00H ; `CShockwaveFlash::LoadMovie'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_layer$ = 8						; size = 4
_url$ = 12						; size = 4
?LoadMovie@CShockwaveFlash@@QAEXJPBD@Z PROC NEAR	; CShockwaveFlash::LoadMovie
; _this$ = ecx

; 391  : {

  00cf0	55		 push	 ebp
  00cf1	8b ec		 mov	 ebp, esp
  00cf3	51		 push	 ecx
  00cf4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 392  : 	static BYTE parms[] =
; 393  : 		VTS_I4 VTS_BSTR;
; 394  : 	InvokeHelper(0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 395  : 		 layer, url);

  00cf7	8b 45 0c	 mov	 eax, DWORD PTR _url$[ebp]
  00cfa	50		 push	 eax
  00cfb	8b 4d 08	 mov	 ecx, DWORD PTR _layer$[ebp]
  00cfe	51		 push	 ecx
  00cff	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??LoadMovie@CShockwaveFlash@@QAEXJPBD@Z@4PAEA
  00d04	6a 00		 push	 0
  00d06	6a 00		 push	 0
  00d08	6a 01		 push	 1
  00d0a	68 8e 00 00 00	 push	 142			; 0000008eH
  00d0f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00d12	52		 push	 edx
  00d13	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00d18	83 c4 20	 add	 esp, 32			; 00000020H

; 396  : }

  00d1b	8b e5		 mov	 esp, ebp
  00d1d	5d		 pop	 ebp
  00d1e	c2 08 00	 ret	 8
?LoadMovie@CShockwaveFlash@@QAEXJPBD@Z ENDP		; CShockwaveFlash::LoadMovie
_TEXT	ENDS
PUBLIC	?TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z		; CShockwaveFlash::TGotoFrame
;	COMDAT ?parms@?1??TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA DB 0eH, 03H, 00H ; `CShockwaveFlash::TGotoFrame'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_FrameNum$ = 12						; size = 4
?TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z PROC NEAR	; CShockwaveFlash::TGotoFrame
; _this$ = ecx

; 399  : {

  00d30	55		 push	 ebp
  00d31	8b ec		 mov	 ebp, esp
  00d33	51		 push	 ecx
  00d34	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 400  : 	static BYTE parms[] =
; 401  : 		VTS_BSTR VTS_I4;
; 402  : 	InvokeHelper(0x8f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 403  : 		 target, FrameNum);

  00d37	8b 45 0c	 mov	 eax, DWORD PTR _FrameNum$[ebp]
  00d3a	50		 push	 eax
  00d3b	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  00d3e	51		 push	 ecx
  00d3f	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
  00d44	6a 00		 push	 0
  00d46	6a 00		 push	 0
  00d48	6a 01		 push	 1
  00d4a	68 8f 00 00 00	 push	 143			; 0000008fH
  00d4f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00d52	52		 push	 edx
  00d53	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00d58	83 c4 20	 add	 esp, 32			; 00000020H

; 404  : }

  00d5b	8b e5		 mov	 esp, ebp
  00d5d	5d		 pop	 ebp
  00d5e	c2 08 00	 ret	 8
?TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z ENDP		; CShockwaveFlash::TGotoFrame
_TEXT	ENDS
PUBLIC	?TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z		; CShockwaveFlash::TGotoLabel
;	COMDAT ?parms@?1??TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA DB 0eH, 0eH, 00H ; `CShockwaveFlash::TGotoLabel'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_label$ = 12						; size = 4
?TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z PROC NEAR	; CShockwaveFlash::TGotoLabel
; _this$ = ecx

; 407  : {

  00d70	55		 push	 ebp
  00d71	8b ec		 mov	 ebp, esp
  00d73	51		 push	 ecx
  00d74	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 	static BYTE parms[] =
; 409  : 		VTS_BSTR VTS_BSTR;
; 410  : 	InvokeHelper(0x90, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 411  : 		 target, label);

  00d77	8b 45 0c	 mov	 eax, DWORD PTR _label$[ebp]
  00d7a	50		 push	 eax
  00d7b	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  00d7e	51		 push	 ecx
  00d7f	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
  00d84	6a 00		 push	 0
  00d86	6a 00		 push	 0
  00d88	6a 01		 push	 1
  00d8a	68 90 00 00 00	 push	 144			; 00000090H
  00d8f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00d92	52		 push	 edx
  00d93	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00d98	83 c4 20	 add	 esp, 32			; 00000020H

; 412  : }

  00d9b	8b e5		 mov	 esp, ebp
  00d9d	5d		 pop	 ebp
  00d9e	c2 08 00	 ret	 8
?TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z ENDP		; CShockwaveFlash::TGotoLabel
_TEXT	ENDS
PUBLIC	?TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z	; CShockwaveFlash::TCurrentFrame
;	COMDAT ?parms@?1??TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::TCurrentFrame'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
_target$ = 8						; size = 4
?TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z PROC NEAR	; CShockwaveFlash::TCurrentFrame
; _this$ = ecx

; 415  : {

  00db0	55		 push	 ebp
  00db1	8b ec		 mov	 ebp, esp
  00db3	83 ec 08	 sub	 esp, 8
  00db6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 416  : 	long result;
; 417  : 	static BYTE parms[] =
; 418  : 		VTS_BSTR;
; 419  : 	InvokeHelper(0x91, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
; 420  : 		target);

  00db9	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00dbc	50		 push	 eax
  00dbd	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z@4PAEA
  00dc2	8d 4d fc	 lea	 ecx, DWORD PTR _result$[ebp]
  00dc5	51		 push	 ecx
  00dc6	6a 03		 push	 3
  00dc8	6a 01		 push	 1
  00dca	68 91 00 00 00	 push	 145			; 00000091H
  00dcf	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00dd2	52		 push	 edx
  00dd3	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00dd8	83 c4 1c	 add	 esp, 28			; 0000001cH

; 421  : 	return result;

  00ddb	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 422  : }

  00dde	8b e5		 mov	 esp, ebp
  00de0	5d		 pop	 ebp
  00de1	c2 04 00	 ret	 4
?TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z ENDP		; CShockwaveFlash::TCurrentFrame
_TEXT	ENDS
PUBLIC	?TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CShockwaveFlash::TCurrentLabel
xdata$x	SEGMENT
$T198759 DD	0ffffffffH
	DD	FLAT:$L198752
$T198757 DD	019930520H
	DD	01H
	DD	FLAT:$T198759
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?parms@?1??TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA DB 0eH
	DB	00H						; `CShockwaveFlash::TCurrentLabel'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198754 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_target$ = 12						; size = 4
?TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z PROC NEAR ; CShockwaveFlash::TCurrentLabel
; _this$ = ecx

; 425  : {

  00df0	55		 push	 ebp
  00df1	8b ec		 mov	 ebp, esp
  00df3	6a ff		 push	 -1
  00df5	68 00 00 00 00	 push	 __ehhandler$?TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
  00dfa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00e00	50		 push	 eax
  00e01	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00e08	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00e0b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00e0e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198754[ebp], 0

; 426  : 	CString result;

  00e15	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00e18	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00e1e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 427  : 	static BYTE parms[] =
; 428  : 		VTS_BSTR;
; 429  : 	InvokeHelper(0x92, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 430  : 		target);

  00e25	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  00e28	50		 push	 eax
  00e29	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
  00e2e	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00e31	51		 push	 ecx
  00e32	6a 08		 push	 8
  00e34	6a 01		 push	 1
  00e36	68 92 00 00 00	 push	 146			; 00000092H
  00e3b	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00e3e	52		 push	 edx
  00e3f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00e44	83 c4 1c	 add	 esp, 28			; 0000001cH

; 431  : 	return result;

  00e47	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  00e4a	50		 push	 eax
  00e4b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00e4e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00e54	8b 4d ec	 mov	 ecx, DWORD PTR $T198754[ebp]
  00e57	83 c9 01	 or	 ecx, 1
  00e5a	89 4d ec	 mov	 DWORD PTR $T198754[ebp], ecx
  00e5d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00e64	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00e67	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00e6d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 432  : }

  00e70	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00e73	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00e7a	8b e5		 mov	 esp, ebp
  00e7c	5d		 pop	 ebp
  00e7d	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L198752:
  00099	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  0009c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z:
  000a2	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198757
  000a7	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ENDP ; CShockwaveFlash::TCurrentLabel
PUBLIC	?TPlay@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::TPlay
;	COMDAT ?parms@?1??TPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::TPlay'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
?TPlay@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::TPlay
; _this$ = ecx

; 435  : {

  00e80	55		 push	 ebp
  00e81	8b ec		 mov	 ebp, esp
  00e83	51		 push	 ecx
  00e84	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 436  : 	static BYTE parms[] =
; 437  : 		VTS_BSTR;
; 438  : 	InvokeHelper(0x93, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 439  : 		 target);

  00e87	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00e8a	50		 push	 eax
  00e8b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  00e90	6a 00		 push	 0
  00e92	6a 00		 push	 0
  00e94	6a 01		 push	 1
  00e96	68 93 00 00 00	 push	 147			; 00000093H
  00e9b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e9e	51		 push	 ecx
  00e9f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00ea4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 440  : }

  00ea7	8b e5		 mov	 esp, ebp
  00ea9	5d		 pop	 ebp
  00eaa	c2 04 00	 ret	 4
?TPlay@CShockwaveFlash@@QAEXPBD@Z ENDP			; CShockwaveFlash::TPlay
_TEXT	ENDS
PUBLIC	?TStopPlay@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::TStopPlay
;	COMDAT ?parms@?1??TStopPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TStopPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::TStopPlay'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
?TStopPlay@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::TStopPlay
; _this$ = ecx

; 443  : {

  00eb0	55		 push	 ebp
  00eb1	8b ec		 mov	 ebp, esp
  00eb3	51		 push	 ecx
  00eb4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 444  : 	static BYTE parms[] =
; 445  : 		VTS_BSTR;
; 446  : 	InvokeHelper(0x94, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 447  : 		 target);

  00eb7	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00eba	50		 push	 eax
  00ebb	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TStopPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  00ec0	6a 00		 push	 0
  00ec2	6a 00		 push	 0
  00ec4	6a 01		 push	 1
  00ec6	68 94 00 00 00	 push	 148			; 00000094H
  00ecb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ece	51		 push	 ecx
  00ecf	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00ed4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 448  : }

  00ed7	8b e5		 mov	 esp, ebp
  00ed9	5d		 pop	 ebp
  00eda	c2 04 00	 ret	 4
?TStopPlay@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::TStopPlay
_TEXT	ENDS
PUBLIC	?SetVariable@CShockwaveFlash@@QAEXPBD0@Z	; CShockwaveFlash::SetVariable
;	COMDAT ?parms@?1??SetVariable@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetVariable@CShockwaveFlash@@QAEXPBD0@Z@4PAEA DB 0eH, 0eH, 00H ; `CShockwaveFlash::SetVariable'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?SetVariable@CShockwaveFlash@@QAEXPBD0@Z PROC NEAR	; CShockwaveFlash::SetVariable
; _this$ = ecx

; 451  : {

  00ee0	55		 push	 ebp
  00ee1	8b ec		 mov	 ebp, esp
  00ee3	51		 push	 ecx
  00ee4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 452  : 	static BYTE parms[] =
; 453  : 		VTS_BSTR VTS_BSTR;
; 454  : 	InvokeHelper(0x97, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 455  : 		 name, value);

  00ee7	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  00eea	50		 push	 eax
  00eeb	8b 4d 08	 mov	 ecx, DWORD PTR _name$[ebp]
  00eee	51		 push	 ecx
  00eef	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetVariable@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
  00ef4	6a 00		 push	 0
  00ef6	6a 00		 push	 0
  00ef8	6a 01		 push	 1
  00efa	68 97 00 00 00	 push	 151			; 00000097H
  00eff	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00f02	52		 push	 edx
  00f03	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00f08	83 c4 20	 add	 esp, 32			; 00000020H

; 456  : }

  00f0b	8b e5		 mov	 esp, ebp
  00f0d	5d		 pop	 ebp
  00f0e	c2 08 00	 ret	 8
?SetVariable@CShockwaveFlash@@QAEXPBD0@Z ENDP		; CShockwaveFlash::SetVariable
_TEXT	ENDS
PUBLIC	?GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CShockwaveFlash::GetVariable
xdata$x	SEGMENT
$T198771 DD	0ffffffffH
	DD	FLAT:$L198764
$T198769 DD	019930520H
	DD	01H
	DD	FLAT:$T198771
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?parms@?1??GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA DB 0eH
	DB	00H						; `CShockwaveFlash::GetVariable'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198766 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_name$ = 12						; size = 4
?GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z PROC NEAR ; CShockwaveFlash::GetVariable
; _this$ = ecx

; 459  : {

  00f20	55		 push	 ebp
  00f21	8b ec		 mov	 ebp, esp
  00f23	6a ff		 push	 -1
  00f25	68 00 00 00 00	 push	 __ehhandler$?GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
  00f2a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00f30	50		 push	 eax
  00f31	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00f38	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00f3b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00f3e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198766[ebp], 0

; 460  : 	CString result;

  00f45	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00f48	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00f4e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 461  : 	static BYTE parms[] =
; 462  : 		VTS_BSTR;
; 463  : 	InvokeHelper(0x98, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 464  : 		name);

  00f55	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00f58	50		 push	 eax
  00f59	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
  00f5e	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00f61	51		 push	 ecx
  00f62	6a 08		 push	 8
  00f64	6a 01		 push	 1
  00f66	68 98 00 00 00	 push	 152			; 00000098H
  00f6b	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00f6e	52		 push	 edx
  00f6f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00f74	83 c4 1c	 add	 esp, 28			; 0000001cH

; 465  : 	return result;

  00f77	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  00f7a	50		 push	 eax
  00f7b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00f7e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00f84	8b 4d ec	 mov	 ecx, DWORD PTR $T198766[ebp]
  00f87	83 c9 01	 or	 ecx, 1
  00f8a	89 4d ec	 mov	 DWORD PTR $T198766[ebp], ecx
  00f8d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00f94	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00f97	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00f9d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 466  : }

  00fa0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00fa3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00faa	8b e5		 mov	 esp, ebp
  00fac	5d		 pop	 ebp
  00fad	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L198764:
  000ac	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  000af	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z:
  000b5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198769
  000ba	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ENDP ; CShockwaveFlash::GetVariable
PUBLIC	?TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z	; CShockwaveFlash::TSetProperty
;	COMDAT ?parms@?1??TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z@4PAEA DB 0eH, 03H, 0eH
	DB	00H						; `CShockwaveFlash::TSetProperty'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_property$ = 12						; size = 4
_value$ = 16						; size = 4
?TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z PROC NEAR	; CShockwaveFlash::TSetProperty
; _this$ = ecx

; 469  : {

  00fb0	55		 push	 ebp
  00fb1	8b ec		 mov	 ebp, esp
  00fb3	51		 push	 ecx
  00fb4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 470  : 	static BYTE parms[] =
; 471  : 		VTS_BSTR VTS_I4 VTS_BSTR;
; 472  : 	InvokeHelper(0x99, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 473  : 		 target, property, value);

  00fb7	8b 45 10	 mov	 eax, DWORD PTR _value$[ebp]
  00fba	50		 push	 eax
  00fbb	8b 4d 0c	 mov	 ecx, DWORD PTR _property$[ebp]
  00fbe	51		 push	 ecx
  00fbf	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00fc2	52		 push	 edx
  00fc3	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z@4PAEA
  00fc8	6a 00		 push	 0
  00fca	6a 00		 push	 0
  00fcc	6a 01		 push	 1
  00fce	68 99 00 00 00	 push	 153			; 00000099H
  00fd3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00fd6	50		 push	 eax
  00fd7	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00fdc	83 c4 24	 add	 esp, 36			; 00000024H

; 474  : }

  00fdf	8b e5		 mov	 esp, ebp
  00fe1	5d		 pop	 ebp
  00fe2	c2 0c 00	 ret	 12			; 0000000cH
?TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z ENDP		; CShockwaveFlash::TSetProperty
_TEXT	ENDS
PUBLIC	?TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z ; CShockwaveFlash::TGetProperty
xdata$x	SEGMENT
$T198781 DD	0ffffffffH
	DD	FLAT:$L198774
$T198779 DD	019930520H
	DD	01H
	DD	FLAT:$T198781
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?parms@?1??TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z@4PAEA DB 0eH
	DB	03H, 00H					; `CShockwaveFlash::TGetProperty'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198776 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_target$ = 12						; size = 4
_property$ = 16						; size = 4
?TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z PROC NEAR ; CShockwaveFlash::TGetProperty
; _this$ = ecx

; 477  : {

  00ff0	55		 push	 ebp
  00ff1	8b ec		 mov	 ebp, esp
  00ff3	6a ff		 push	 -1
  00ff5	68 00 00 00 00	 push	 __ehhandler$?TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z
  00ffa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01000	50		 push	 eax
  01001	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01008	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0100b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0100e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198776[ebp], 0

; 478  : 	CString result;

  01015	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  01018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0101e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 479  : 	static BYTE parms[] =
; 480  : 		VTS_BSTR VTS_I4;
; 481  : 	InvokeHelper(0x9a, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 482  : 		target, property);

  01025	8b 45 10	 mov	 eax, DWORD PTR _property$[ebp]
  01028	50		 push	 eax
  01029	8b 4d 0c	 mov	 ecx, DWORD PTR _target$[ebp]
  0102c	51		 push	 ecx
  0102d	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z@4PAEA
  01032	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  01035	52		 push	 edx
  01036	6a 08		 push	 8
  01038	6a 01		 push	 1
  0103a	68 9a 00 00 00	 push	 154			; 0000009aH
  0103f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01042	50		 push	 eax
  01043	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01048	83 c4 20	 add	 esp, 32			; 00000020H

; 483  : 	return result;

  0104b	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  0104e	51		 push	 ecx
  0104f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01058	8b 55 ec	 mov	 edx, DWORD PTR $T198776[ebp]
  0105b	83 ca 01	 or	 edx, 1
  0105e	89 55 ec	 mov	 DWORD PTR $T198776[ebp], edx
  01061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01068	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  0106b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01071	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 484  : }

  01074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0107e	8b e5		 mov	 esp, ebp
  01080	5d		 pop	 ebp
  01081	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L198774:
  000bf	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  000c2	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z:
  000c8	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198779
  000cd	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z ENDP ; CShockwaveFlash::TGetProperty
PUBLIC	?TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z		; CShockwaveFlash::TCallFrame
;	COMDAT ?parms@?1??TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA DB 0eH, 03H, 00H ; `CShockwaveFlash::TCallFrame'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_FrameNum$ = 12						; size = 4
?TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z PROC NEAR	; CShockwaveFlash::TCallFrame
; _this$ = ecx

; 487  : {

  01090	55		 push	 ebp
  01091	8b ec		 mov	 ebp, esp
  01093	51		 push	 ecx
  01094	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 488  : 	static BYTE parms[] =
; 489  : 		VTS_BSTR VTS_I4;
; 490  : 	InvokeHelper(0x9b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 491  : 		 target, FrameNum);

  01097	8b 45 0c	 mov	 eax, DWORD PTR _FrameNum$[ebp]
  0109a	50		 push	 eax
  0109b	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  0109e	51		 push	 ecx
  0109f	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
  010a4	6a 00		 push	 0
  010a6	6a 00		 push	 0
  010a8	6a 01		 push	 1
  010aa	68 9b 00 00 00	 push	 155			; 0000009bH
  010af	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  010b2	52		 push	 edx
  010b3	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  010b8	83 c4 20	 add	 esp, 32			; 00000020H

; 492  : }

  010bb	8b e5		 mov	 esp, ebp
  010bd	5d		 pop	 ebp
  010be	c2 08 00	 ret	 8
?TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z ENDP		; CShockwaveFlash::TCallFrame
_TEXT	ENDS
PUBLIC	?TCallLabel@CShockwaveFlash@@QAEXPBD0@Z		; CShockwaveFlash::TCallLabel
;	COMDAT ?parms@?1??TCallLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TCallLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA DB 0eH, 0eH, 00H ; `CShockwaveFlash::TCallLabel'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_label$ = 12						; size = 4
?TCallLabel@CShockwaveFlash@@QAEXPBD0@Z PROC NEAR	; CShockwaveFlash::TCallLabel
; _this$ = ecx

; 495  : {

  010d0	55		 push	 ebp
  010d1	8b ec		 mov	 ebp, esp
  010d3	51		 push	 ecx
  010d4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	static BYTE parms[] =
; 497  : 		VTS_BSTR VTS_BSTR;
; 498  : 	InvokeHelper(0x9c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 499  : 		 target, label);

  010d7	8b 45 0c	 mov	 eax, DWORD PTR _label$[ebp]
  010da	50		 push	 eax
  010db	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  010de	51		 push	 ecx
  010df	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TCallLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
  010e4	6a 00		 push	 0
  010e6	6a 00		 push	 0
  010e8	6a 01		 push	 1
  010ea	68 9c 00 00 00	 push	 156			; 0000009cH
  010ef	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  010f2	52		 push	 edx
  010f3	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  010f8	83 c4 20	 add	 esp, 32			; 00000020H

; 500  : }

  010fb	8b e5		 mov	 esp, ebp
  010fd	5d		 pop	 ebp
  010fe	c2 08 00	 ret	 8
?TCallLabel@CShockwaveFlash@@QAEXPBD0@Z ENDP		; CShockwaveFlash::TCallLabel
_TEXT	ENDS
PUBLIC	?TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z	; CShockwaveFlash::TSetPropertyNum
EXTRN	__fltused:NEAR
;	COMDAT ?parms@?1??TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z@4PAEA DB 0eH, 03H
	DB	05H, 00H					; `CShockwaveFlash::TSetPropertyNum'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_property$ = 12						; size = 4
_value$ = 16						; size = 8
?TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z PROC NEAR	; CShockwaveFlash::TSetPropertyNum
; _this$ = ecx

; 503  : {

  01110	55		 push	 ebp
  01111	8b ec		 mov	 ebp, esp
  01113	51		 push	 ecx
  01114	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 504  : 	static BYTE parms[] =
; 505  : 		VTS_BSTR VTS_I4 VTS_R8;
; 506  : 	InvokeHelper(0x9d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 507  : 		 target, property, value);

  01117	dd 45 10	 fld	 QWORD PTR _value$[ebp]
  0111a	83 ec 08	 sub	 esp, 8
  0111d	dd 1c 24	 fstp	 QWORD PTR [esp]
  01120	8b 45 0c	 mov	 eax, DWORD PTR _property$[ebp]
  01123	50		 push	 eax
  01124	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  01127	51		 push	 ecx
  01128	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z@4PAEA
  0112d	6a 00		 push	 0
  0112f	6a 00		 push	 0
  01131	6a 01		 push	 1
  01133	68 9d 00 00 00	 push	 157			; 0000009dH
  01138	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0113b	52		 push	 edx
  0113c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01141	83 c4 28	 add	 esp, 40			; 00000028H

; 508  : }

  01144	8b e5		 mov	 esp, ebp
  01146	5d		 pop	 ebp
  01147	c2 10 00	 ret	 16			; 00000010H
?TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z ENDP	; CShockwaveFlash::TSetPropertyNum
_TEXT	ENDS
PUBLIC	?TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z	; CShockwaveFlash::TGetPropertyNum
;	COMDAT ?parms@?1??TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z@4PAEA DB 0eH, 03H, 00H ; `CShockwaveFlash::TGetPropertyNum'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -12						; size = 4
_result$ = -8						; size = 8
_target$ = 8						; size = 4
_property$ = 12						; size = 4
?TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z PROC NEAR	; CShockwaveFlash::TGetPropertyNum
; _this$ = ecx

; 511  : {

  01150	55		 push	 ebp
  01151	8b ec		 mov	 ebp, esp
  01153	83 ec 0c	 sub	 esp, 12			; 0000000cH
  01156	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 512  : 	double result;
; 513  : 	static BYTE parms[] =
; 514  : 		VTS_BSTR VTS_I4;
; 515  : 	InvokeHelper(0x9e, DISPATCH_METHOD, VT_R8, (void*)&result, parms,
; 516  : 		target, property);

  01159	8b 45 0c	 mov	 eax, DWORD PTR _property$[ebp]
  0115c	50		 push	 eax
  0115d	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  01160	51		 push	 ecx
  01161	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
  01166	8d 55 f8	 lea	 edx, DWORD PTR _result$[ebp]
  01169	52		 push	 edx
  0116a	6a 05		 push	 5
  0116c	6a 01		 push	 1
  0116e	68 9e 00 00 00	 push	 158			; 0000009eH
  01173	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  01176	50		 push	 eax
  01177	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0117c	83 c4 20	 add	 esp, 32			; 00000020H

; 517  : 	return result;

  0117f	dd 45 f8	 fld	 QWORD PTR _result$[ebp]

; 518  : }

  01182	8b e5		 mov	 esp, ebp
  01184	5d		 pop	 ebp
  01185	c2 08 00	 ret	 8
?TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z ENDP	; CShockwaveFlash::TGetPropertyNum
_TEXT	ENDS
PUBLIC	?TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z ; CShockwaveFlash::TGetPropertyAsNumber
;	COMDAT ?parms@?1??TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z@4PAEA DB 0eH, 03H
	DB	00H						; `CShockwaveFlash::TGetPropertyAsNumber'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -12						; size = 4
_result$ = -8						; size = 8
_target$ = 8						; size = 4
_property$ = 12						; size = 4
?TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z PROC NEAR ; CShockwaveFlash::TGetPropertyAsNumber
; _this$ = ecx

; 521  : {

  01190	55		 push	 ebp
  01191	8b ec		 mov	 ebp, esp
  01193	83 ec 0c	 sub	 esp, 12			; 0000000cH
  01196	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 522  : 	double result;
; 523  : 	static BYTE parms[] =
; 524  : 		VTS_BSTR VTS_I4;
; 525  : 	InvokeHelper(0xac, DISPATCH_METHOD, VT_R8, (void*)&result, parms,
; 526  : 		target, property);

  01199	8b 45 0c	 mov	 eax, DWORD PTR _property$[ebp]
  0119c	50		 push	 eax
  0119d	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  011a0	51		 push	 ecx
  011a1	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
  011a6	8d 55 f8	 lea	 edx, DWORD PTR _result$[ebp]
  011a9	52		 push	 edx
  011aa	6a 05		 push	 5
  011ac	6a 01		 push	 1
  011ae	68 ac 00 00 00	 push	 172			; 000000acH
  011b3	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  011b6	50		 push	 eax
  011b7	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  011bc	83 c4 20	 add	 esp, 32			; 00000020H

; 527  : 	return result;

  011bf	dd 45 f8	 fld	 QWORD PTR _result$[ebp]

; 528  : }

  011c2	8b e5		 mov	 esp, ebp
  011c4	5d		 pop	 ebp
  011c5	c2 08 00	 ret	 8
?TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z ENDP	; CShockwaveFlash::TGetPropertyAsNumber
_TEXT	ENDS
PUBLIC	?GetSWRemote@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetSWRemote
xdata$x	SEGMENT
$T198796 DD	0ffffffffH
	DD	FLAT:$L198789
$T198794 DD	019930520H
	DD	01H
	DD	FLAT:$T198796
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198791 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetSWRemote@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetSWRemote
; _this$ = ecx

; 531  : {

  011d0	55		 push	 ebp
  011d1	8b ec		 mov	 ebp, esp
  011d3	6a ff		 push	 -1
  011d5	68 00 00 00 00	 push	 __ehhandler$?GetSWRemote@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  011da	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  011e0	50		 push	 eax
  011e1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  011e8	83 ec 0c	 sub	 esp, 12			; 0000000cH
  011eb	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  011ee	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198791[ebp], 0

; 532  : 	CString result;

  011f5	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  011f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  011fe	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 533  : 	InvokeHelper(0x9f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  01205	6a 00		 push	 0
  01207	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  0120a	50		 push	 eax
  0120b	6a 08		 push	 8
  0120d	6a 02		 push	 2
  0120f	68 9f 00 00 00	 push	 159			; 0000009fH
  01214	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01217	51		 push	 ecx
  01218	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0121d	83 c4 18	 add	 esp, 24			; 00000018H

; 534  : 	return result;

  01220	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  01223	52		 push	 edx
  01224	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01227	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0122d	8b 45 ec	 mov	 eax, DWORD PTR $T198791[ebp]
  01230	83 c8 01	 or	 eax, 1
  01233	89 45 ec	 mov	 DWORD PTR $T198791[ebp], eax
  01236	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0123d	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  01240	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01246	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 535  : }

  01249	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0124c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01253	8b e5		 mov	 esp, ebp
  01255	5d		 pop	 ebp
  01256	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198789:
  000d2	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  000d5	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetSWRemote@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  000db	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198794
  000e0	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetSWRemote@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetSWRemote
PUBLIC	?SetSWRemote@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetSWRemote
;	COMDAT ?parms@?1??SetSWRemote@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetSWRemote@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetSWRemote'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetSWRemote@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetSWRemote
; _this$ = ecx

; 538  : {

  01260	55		 push	 ebp
  01261	8b ec		 mov	 ebp, esp
  01263	51		 push	 ecx
  01264	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 539  : 	static BYTE parms[] =
; 540  : 		VTS_BSTR;
; 541  : 	InvokeHelper(0x9f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 542  : 		 lpszNewValue);

  01267	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  0126a	50		 push	 eax
  0126b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetSWRemote@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  01270	6a 00		 push	 0
  01272	6a 00		 push	 0
  01274	6a 04		 push	 4
  01276	68 9f 00 00 00	 push	 159			; 0000009fH
  0127b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0127e	51		 push	 ecx
  0127f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01284	83 c4 1c	 add	 esp, 28			; 0000001cH

; 543  : }

  01287	8b e5		 mov	 esp, ebp
  01289	5d		 pop	 ebp
  0128a	c2 04 00	 ret	 4
?SetSWRemote@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetSWRemote
_TEXT	ENDS
PUBLIC	?GetFlashVars@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetFlashVars
xdata$x	SEGMENT
$T198806 DD	0ffffffffH
	DD	FLAT:$L198799
$T198804 DD	019930520H
	DD	01H
	DD	FLAT:$T198806
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198801 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetFlashVars@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetFlashVars
; _this$ = ecx

; 546  : {

  01290	55		 push	 ebp
  01291	8b ec		 mov	 ebp, esp
  01293	6a ff		 push	 -1
  01295	68 00 00 00 00	 push	 __ehhandler$?GetFlashVars@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0129a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  012a0	50		 push	 eax
  012a1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  012a8	83 ec 0c	 sub	 esp, 12			; 0000000cH
  012ab	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  012ae	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198801[ebp], 0

; 547  : 	CString result;

  012b5	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  012b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  012be	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 548  : 	InvokeHelper(0xaa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  012c5	6a 00		 push	 0
  012c7	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  012ca	50		 push	 eax
  012cb	6a 08		 push	 8
  012cd	6a 02		 push	 2
  012cf	68 aa 00 00 00	 push	 170			; 000000aaH
  012d4	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  012d7	51		 push	 ecx
  012d8	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  012dd	83 c4 18	 add	 esp, 24			; 00000018H

; 549  : 	return result;

  012e0	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  012e3	52		 push	 edx
  012e4	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  012e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  012ed	8b 45 ec	 mov	 eax, DWORD PTR $T198801[ebp]
  012f0	83 c8 01	 or	 eax, 1
  012f3	89 45 ec	 mov	 DWORD PTR $T198801[ebp], eax
  012f6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  012fd	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  01300	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01306	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 550  : }

  01309	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0130c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01313	8b e5		 mov	 esp, ebp
  01315	5d		 pop	 ebp
  01316	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198799:
  000e5	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  000e8	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetFlashVars@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  000ee	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198804
  000f3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetFlashVars@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetFlashVars
PUBLIC	?SetFlashVars@CShockwaveFlash@@QAEXPBD@Z	; CShockwaveFlash::SetFlashVars
;	COMDAT ?parms@?1??SetFlashVars@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetFlashVars@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetFlashVars'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetFlashVars@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetFlashVars
; _this$ = ecx

; 553  : {

  01320	55		 push	 ebp
  01321	8b ec		 mov	 ebp, esp
  01323	51		 push	 ecx
  01324	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 554  : 	static BYTE parms[] =
; 555  : 		VTS_BSTR;
; 556  : 	InvokeHelper(0xaa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 557  : 		 lpszNewValue);

  01327	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  0132a	50		 push	 eax
  0132b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetFlashVars@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  01330	6a 00		 push	 0
  01332	6a 00		 push	 0
  01334	6a 04		 push	 4
  01336	68 aa 00 00 00	 push	 170			; 000000aaH
  0133b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0133e	51		 push	 ecx
  0133f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01344	83 c4 1c	 add	 esp, 28			; 0000001cH

; 558  : }

  01347	8b e5		 mov	 esp, ebp
  01349	5d		 pop	 ebp
  0134a	c2 04 00	 ret	 4
?SetFlashVars@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetFlashVars
_TEXT	ENDS
PUBLIC	?GetAllowScriptAccess@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetAllowScriptAccess
xdata$x	SEGMENT
$T198816 DD	0ffffffffH
	DD	FLAT:$L198809
$T198814 DD	019930520H
	DD	01H
	DD	FLAT:$T198816
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198811 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAllowScriptAccess@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetAllowScriptAccess
; _this$ = ecx

; 561  : {

  01350	55		 push	 ebp
  01351	8b ec		 mov	 ebp, esp
  01353	6a ff		 push	 -1
  01355	68 00 00 00 00	 push	 __ehhandler$?GetAllowScriptAccess@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0135a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01360	50		 push	 eax
  01361	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01368	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0136b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0136e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198811[ebp], 0

; 562  : 	CString result;

  01375	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  01378	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0137e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 563  : 	InvokeHelper(0xab, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  01385	6a 00		 push	 0
  01387	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  0138a	50		 push	 eax
  0138b	6a 08		 push	 8
  0138d	6a 02		 push	 2
  0138f	68 ab 00 00 00	 push	 171			; 000000abH
  01394	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01397	51		 push	 ecx
  01398	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0139d	83 c4 18	 add	 esp, 24			; 00000018H

; 564  : 	return result;

  013a0	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  013a3	52		 push	 edx
  013a4	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  013a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  013ad	8b 45 ec	 mov	 eax, DWORD PTR $T198811[ebp]
  013b0	83 c8 01	 or	 eax, 1
  013b3	89 45 ec	 mov	 DWORD PTR $T198811[ebp], eax
  013b6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  013bd	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  013c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  013c6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 565  : }

  013c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  013cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  013d3	8b e5		 mov	 esp, ebp
  013d5	5d		 pop	 ebp
  013d6	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198809:
  000f8	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  000fb	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetAllowScriptAccess@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00101	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198814
  00106	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetAllowScriptAccess@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetAllowScriptAccess
PUBLIC	?SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z ; CShockwaveFlash::SetAllowScriptAccess
;	COMDAT ?parms@?1??SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetAllowScriptAccess'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z PROC NEAR ; CShockwaveFlash::SetAllowScriptAccess
; _this$ = ecx

; 568  : {

  013e0	55		 push	 ebp
  013e1	8b ec		 mov	 ebp, esp
  013e3	51		 push	 ecx
  013e4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 569  : 	static BYTE parms[] =
; 570  : 		VTS_BSTR;
; 571  : 	InvokeHelper(0xab, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 572  : 		 lpszNewValue);

  013e7	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  013ea	50		 push	 eax
  013eb	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  013f0	6a 00		 push	 0
  013f2	6a 00		 push	 0
  013f4	6a 04		 push	 4
  013f6	68 ab 00 00 00	 push	 171			; 000000abH
  013fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  013fe	51		 push	 ecx
  013ff	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01404	83 c4 1c	 add	 esp, 28			; 0000001cH

; 573  : }

  01407	8b e5		 mov	 esp, ebp
  01409	5d		 pop	 ebp
  0140a	c2 04 00	 ret	 4
?SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z ENDP	; CShockwaveFlash::SetAllowScriptAccess
_TEXT	ENDS
PUBLIC	?GetMovieData@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetMovieData
xdata$x	SEGMENT
$T198826 DD	0ffffffffH
	DD	FLAT:$L198819
$T198824 DD	019930520H
	DD	01H
	DD	FLAT:$T198826
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198821 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetMovieData@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetMovieData
; _this$ = ecx

; 576  : {

  01410	55		 push	 ebp
  01411	8b ec		 mov	 ebp, esp
  01413	6a ff		 push	 -1
  01415	68 00 00 00 00	 push	 __ehhandler$?GetMovieData@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0141a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01420	50		 push	 eax
  01421	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01428	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0142b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0142e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198821[ebp], 0

; 577  : 	CString result;

  01435	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  01438	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0143e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 578  : 	InvokeHelper(0xbe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  01445	6a 00		 push	 0
  01447	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  0144a	50		 push	 eax
  0144b	6a 08		 push	 8
  0144d	6a 02		 push	 2
  0144f	68 be 00 00 00	 push	 190			; 000000beH
  01454	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01457	51		 push	 ecx
  01458	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0145d	83 c4 18	 add	 esp, 24			; 00000018H

; 579  : 	return result;

  01460	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  01463	52		 push	 edx
  01464	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01467	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0146d	8b 45 ec	 mov	 eax, DWORD PTR $T198821[ebp]
  01470	83 c8 01	 or	 eax, 1
  01473	89 45 ec	 mov	 DWORD PTR $T198821[ebp], eax
  01476	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0147d	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  01480	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01486	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 580  : }

  01489	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0148c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01493	8b e5		 mov	 esp, ebp
  01495	5d		 pop	 ebp
  01496	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198819:
  0010b	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  0010e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetMovieData@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00114	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198824
  00119	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetMovieData@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetMovieData
PUBLIC	?SetMovieData@CShockwaveFlash@@QAEXPBD@Z	; CShockwaveFlash::SetMovieData
;	COMDAT ?parms@?1??SetMovieData@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetMovieData@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetMovieData'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetMovieData@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetMovieData
; _this$ = ecx

; 583  : {

  014a0	55		 push	 ebp
  014a1	8b ec		 mov	 ebp, esp
  014a3	51		 push	 ecx
  014a4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 584  : 	static BYTE parms[] =
; 585  : 		VTS_BSTR;
; 586  : 	InvokeHelper(0xbe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 587  : 		 lpszNewValue);

  014a7	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  014aa	50		 push	 eax
  014ab	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetMovieData@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  014b0	6a 00		 push	 0
  014b2	6a 00		 push	 0
  014b4	6a 04		 push	 4
  014b6	68 be 00 00 00	 push	 190			; 000000beH
  014bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  014be	51		 push	 ecx
  014bf	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  014c4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 588  : }

  014c7	8b e5		 mov	 esp, ebp
  014c9	5d		 pop	 ebp
  014ca	c2 04 00	 ret	 4
?SetMovieData@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetMovieData
_TEXT	ENDS
PUBLIC	?GetInlineData@CShockwaveFlash@@QAEPAUIUnknown@@XZ ; CShockwaveFlash::GetInlineData
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetInlineData@CShockwaveFlash@@QAEPAUIUnknown@@XZ PROC NEAR ; CShockwaveFlash::GetInlineData
; _this$ = ecx

; 591  : {

  014d0	55		 push	 ebp
  014d1	8b ec		 mov	 ebp, esp
  014d3	83 ec 08	 sub	 esp, 8
  014d6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 592  : 	LPUNKNOWN result;
; 593  : 	InvokeHelper(0xbf, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&result, NULL);

  014d9	6a 00		 push	 0
  014db	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  014de	50		 push	 eax
  014df	6a 0d		 push	 13			; 0000000dH
  014e1	6a 02		 push	 2
  014e3	68 bf 00 00 00	 push	 191			; 000000bfH
  014e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  014eb	51		 push	 ecx
  014ec	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  014f1	83 c4 18	 add	 esp, 24			; 00000018H

; 594  : 	return result;

  014f4	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 595  : }

  014f7	8b e5		 mov	 esp, ebp
  014f9	5d		 pop	 ebp
  014fa	c3		 ret	 0
?GetInlineData@CShockwaveFlash@@QAEPAUIUnknown@@XZ ENDP	; CShockwaveFlash::GetInlineData
_TEXT	ENDS
PUBLIC	?SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z ; CShockwaveFlash::SetInlineData
;	COMDAT ?parms@?1??SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z@4PAEA DB 0dH
	DB	00H						; `CShockwaveFlash::SetInlineData'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newValue$ = 8						; size = 4
?SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z PROC NEAR ; CShockwaveFlash::SetInlineData
; _this$ = ecx

; 598  : {

  01500	55		 push	 ebp
  01501	8b ec		 mov	 ebp, esp
  01503	51		 push	 ecx
  01504	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 599  : 	static BYTE parms[] =
; 600  : 		VTS_UNKNOWN;
; 601  : 	InvokeHelper(0xbf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 602  : 		 newValue);

  01507	8b 45 08	 mov	 eax, DWORD PTR _newValue$[ebp]
  0150a	50		 push	 eax
  0150b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z@4PAEA
  01510	6a 00		 push	 0
  01512	6a 00		 push	 0
  01514	6a 04		 push	 4
  01516	68 bf 00 00 00	 push	 191			; 000000bfH
  0151b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0151e	51		 push	 ecx
  0151f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01524	83 c4 1c	 add	 esp, 28			; 0000001cH

; 603  : }

  01527	8b e5		 mov	 esp, ebp
  01529	5d		 pop	 ebp
  0152a	c2 04 00	 ret	 4
?SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z ENDP ; CShockwaveFlash::SetInlineData
_TEXT	ENDS
PUBLIC	?GetSeamlessTabbing@CShockwaveFlash@@QAEHXZ	; CShockwaveFlash::GetSeamlessTabbing
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetSeamlessTabbing@CShockwaveFlash@@QAEHXZ PROC NEAR	; CShockwaveFlash::GetSeamlessTabbing
; _this$ = ecx

; 606  : {

  01530	55		 push	 ebp
  01531	8b ec		 mov	 ebp, esp
  01533	83 ec 08	 sub	 esp, 8
  01536	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 607  : 	BOOL result;
; 608  : 	InvokeHelper(0xc0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  01539	6a 00		 push	 0
  0153b	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0153e	50		 push	 eax
  0153f	6a 0b		 push	 11			; 0000000bH
  01541	6a 02		 push	 2
  01543	68 c0 00 00 00	 push	 192			; 000000c0H
  01548	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0154b	51		 push	 ecx
  0154c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01551	83 c4 18	 add	 esp, 24			; 00000018H

; 609  : 	return result;

  01554	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 610  : }

  01557	8b e5		 mov	 esp, ebp
  01559	5d		 pop	 ebp
  0155a	c3		 ret	 0
?GetSeamlessTabbing@CShockwaveFlash@@QAEHXZ ENDP	; CShockwaveFlash::GetSeamlessTabbing
_TEXT	ENDS
PUBLIC	?SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z	; CShockwaveFlash::SetSeamlessTabbing
;	COMDAT ?parms@?1??SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetSeamlessTabbing'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z PROC NEAR	; CShockwaveFlash::SetSeamlessTabbing
; _this$ = ecx

; 613  : {

  01560	55		 push	 ebp
  01561	8b ec		 mov	 ebp, esp
  01563	51		 push	 ecx
  01564	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 614  : 	static BYTE parms[] =
; 615  : 		VTS_BOOL;
; 616  : 	InvokeHelper(0xc0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 617  : 		 bNewValue);

  01567	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  0156a	50		 push	 eax
  0156b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z@4PAEA
  01570	6a 00		 push	 0
  01572	6a 00		 push	 0
  01574	6a 04		 push	 4
  01576	68 c0 00 00 00	 push	 192			; 000000c0H
  0157b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0157e	51		 push	 ecx
  0157f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01584	83 c4 1c	 add	 esp, 28			; 0000001cH

; 618  : }

  01587	8b e5		 mov	 esp, ebp
  01589	5d		 pop	 ebp
  0158a	c2 04 00	 ret	 4
?SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z ENDP	; CShockwaveFlash::SetSeamlessTabbing
_TEXT	ENDS
PUBLIC	?EnforceLocalSecurity@CShockwaveFlash@@QAEXXZ	; CShockwaveFlash::EnforceLocalSecurity
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EnforceLocalSecurity@CShockwaveFlash@@QAEXXZ PROC NEAR	; CShockwaveFlash::EnforceLocalSecurity
; _this$ = ecx

; 621  : {

  01590	55		 push	 ebp
  01591	8b ec		 mov	 ebp, esp
  01593	51		 push	 ecx
  01594	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 622  : 	InvokeHelper(0xc1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  01597	6a 00		 push	 0
  01599	6a 00		 push	 0
  0159b	6a 00		 push	 0
  0159d	6a 01		 push	 1
  0159f	68 c1 00 00 00	 push	 193			; 000000c1H
  015a4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  015a7	50		 push	 eax
  015a8	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  015ad	83 c4 18	 add	 esp, 24			; 00000018H

; 623  : }

  015b0	8b e5		 mov	 esp, ebp
  015b2	5d		 pop	 ebp
  015b3	c3		 ret	 0
?EnforceLocalSecurity@CShockwaveFlash@@QAEXXZ ENDP	; CShockwaveFlash::EnforceLocalSecurity
_TEXT	ENDS
PUBLIC	?GetProfile@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetProfile
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetProfile@CShockwaveFlash@@QAEHXZ PROC NEAR		; CShockwaveFlash::GetProfile
; _this$ = ecx

; 626  : {

  015c0	55		 push	 ebp
  015c1	8b ec		 mov	 ebp, esp
  015c3	83 ec 08	 sub	 esp, 8
  015c6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 627  : 	BOOL result;
; 628  : 	InvokeHelper(0xc2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  015c9	6a 00		 push	 0
  015cb	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  015ce	50		 push	 eax
  015cf	6a 0b		 push	 11			; 0000000bH
  015d1	6a 02		 push	 2
  015d3	68 c2 00 00 00	 push	 194			; 000000c2H
  015d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  015db	51		 push	 ecx
  015dc	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  015e1	83 c4 18	 add	 esp, 24			; 00000018H

; 629  : 	return result;

  015e4	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 630  : }

  015e7	8b e5		 mov	 esp, ebp
  015e9	5d		 pop	 ebp
  015ea	c3		 ret	 0
?GetProfile@CShockwaveFlash@@QAEHXZ ENDP		; CShockwaveFlash::GetProfile
_TEXT	ENDS
PUBLIC	?SetProfile@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetProfile
;	COMDAT ?parms@?1??SetProfile@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetProfile@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetProfile'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetProfile@CShockwaveFlash@@QAEXH@Z PROC NEAR		; CShockwaveFlash::SetProfile
; _this$ = ecx

; 633  : {

  015f0	55		 push	 ebp
  015f1	8b ec		 mov	 ebp, esp
  015f3	51		 push	 ecx
  015f4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 634  : 	static BYTE parms[] =
; 635  : 		VTS_BOOL;
; 636  : 	InvokeHelper(0xc2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 637  : 		 bNewValue);

  015f7	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  015fa	50		 push	 eax
  015fb	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetProfile@CShockwaveFlash@@QAEXH@Z@4PAEA
  01600	6a 00		 push	 0
  01602	6a 00		 push	 0
  01604	6a 04		 push	 4
  01606	68 c2 00 00 00	 push	 194			; 000000c2H
  0160b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0160e	51		 push	 ecx
  0160f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01614	83 c4 1c	 add	 esp, 28			; 0000001cH

; 638  : }

  01617	8b e5		 mov	 esp, ebp
  01619	5d		 pop	 ebp
  0161a	c2 04 00	 ret	 4
?SetProfile@CShockwaveFlash@@QAEXH@Z ENDP		; CShockwaveFlash::SetProfile
_TEXT	ENDS
PUBLIC	?GetProfileAddress@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetProfileAddress
xdata$x	SEGMENT
$T198843 DD	0ffffffffH
	DD	FLAT:$L198836
$T198841 DD	019930520H
	DD	01H
	DD	FLAT:$T198843
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198838 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetProfileAddress@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetProfileAddress
; _this$ = ecx

; 641  : {

  01620	55		 push	 ebp
  01621	8b ec		 mov	 ebp, esp
  01623	6a ff		 push	 -1
  01625	68 00 00 00 00	 push	 __ehhandler$?GetProfileAddress@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0162a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01630	50		 push	 eax
  01631	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01638	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0163b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0163e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198838[ebp], 0

; 642  : 	CString result;

  01645	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  01648	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0164e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 643  : 	InvokeHelper(0xc3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  01655	6a 00		 push	 0
  01657	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  0165a	50		 push	 eax
  0165b	6a 08		 push	 8
  0165d	6a 02		 push	 2
  0165f	68 c3 00 00 00	 push	 195			; 000000c3H
  01664	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01667	51		 push	 ecx
  01668	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0166d	83 c4 18	 add	 esp, 24			; 00000018H

; 644  : 	return result;

  01670	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  01673	52		 push	 edx
  01674	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01677	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0167d	8b 45 ec	 mov	 eax, DWORD PTR $T198838[ebp]
  01680	83 c8 01	 or	 eax, 1
  01683	89 45 ec	 mov	 DWORD PTR $T198838[ebp], eax
  01686	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0168d	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  01690	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01696	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 645  : }

  01699	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0169c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  016a3	8b e5		 mov	 esp, ebp
  016a5	5d		 pop	 ebp
  016a6	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198836:
  0011e	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00121	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetProfileAddress@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00127	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198841
  0012c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetProfileAddress@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetProfileAddress
PUBLIC	?SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z	; CShockwaveFlash::SetProfileAddress
;	COMDAT ?parms@?1??SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetProfileAddress'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetProfileAddress
; _this$ = ecx

; 648  : {

  016b0	55		 push	 ebp
  016b1	8b ec		 mov	 ebp, esp
  016b3	51		 push	 ecx
  016b4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 649  : 	static BYTE parms[] =
; 650  : 		VTS_BSTR;
; 651  : 	InvokeHelper(0xc3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 652  : 		 lpszNewValue);

  016b7	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  016ba	50		 push	 eax
  016bb	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  016c0	6a 00		 push	 0
  016c2	6a 00		 push	 0
  016c4	6a 04		 push	 4
  016c6	68 c3 00 00 00	 push	 195			; 000000c3H
  016cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  016ce	51		 push	 ecx
  016cf	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  016d4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 653  : }

  016d7	8b e5		 mov	 esp, ebp
  016d9	5d		 pop	 ebp
  016da	c2 04 00	 ret	 4
?SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z ENDP	; CShockwaveFlash::SetProfileAddress
_TEXT	ENDS
PUBLIC	?GetProfilePort@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetProfilePort
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = -4						; size = 4
?GetProfilePort@CShockwaveFlash@@QAEJXZ PROC NEAR	; CShockwaveFlash::GetProfilePort
; _this$ = ecx

; 656  : {

  016e0	55		 push	 ebp
  016e1	8b ec		 mov	 ebp, esp
  016e3	83 ec 08	 sub	 esp, 8
  016e6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 657  : 	long result;
; 658  : 	InvokeHelper(0xc4, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  016e9	6a 00		 push	 0
  016eb	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  016ee	50		 push	 eax
  016ef	6a 03		 push	 3
  016f1	6a 02		 push	 2
  016f3	68 c4 00 00 00	 push	 196			; 000000c4H
  016f8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  016fb	51		 push	 ecx
  016fc	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01701	83 c4 18	 add	 esp, 24			; 00000018H

; 659  : 	return result;

  01704	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 660  : }

  01707	8b e5		 mov	 esp, ebp
  01709	5d		 pop	 ebp
  0170a	c3		 ret	 0
?GetProfilePort@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetProfilePort
_TEXT	ENDS
PUBLIC	?SetProfilePort@CShockwaveFlash@@QAEXJ@Z	; CShockwaveFlash::SetProfilePort
;	COMDAT ?parms@?1??SetProfilePort@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetProfilePort@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetProfilePort'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetProfilePort@CShockwaveFlash@@QAEXJ@Z PROC NEAR	; CShockwaveFlash::SetProfilePort
; _this$ = ecx

; 663  : {

  01710	55		 push	 ebp
  01711	8b ec		 mov	 ebp, esp
  01713	51		 push	 ecx
  01714	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 664  : 	static BYTE parms[] =
; 665  : 		VTS_I4;
; 666  : 	InvokeHelper(0xc4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 667  : 		 nNewValue);

  01717	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  0171a	50		 push	 eax
  0171b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetProfilePort@CShockwaveFlash@@QAEXJ@Z@4PAEA
  01720	6a 00		 push	 0
  01722	6a 00		 push	 0
  01724	6a 04		 push	 4
  01726	68 c4 00 00 00	 push	 196			; 000000c4H
  0172b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0172e	51		 push	 ecx
  0172f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01734	83 c4 1c	 add	 esp, 28			; 0000001cH

; 668  : }

  01737	8b e5		 mov	 esp, ebp
  01739	5d		 pop	 ebp
  0173a	c2 04 00	 ret	 4
?SetProfilePort@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::SetProfilePort
_TEXT	ENDS
PUBLIC	?CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CShockwaveFlash::CallFunction
xdata$x	SEGMENT
$T198855 DD	0ffffffffH
	DD	FLAT:$L198848
$T198853 DD	019930520H
	DD	01H
	DD	FLAT:$T198855
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?parms@?1??CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA DB 0eH
	DB	00H						; `CShockwaveFlash::CallFunction'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198850 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_request$ = 12						; size = 4
?CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z PROC NEAR ; CShockwaveFlash::CallFunction
; _this$ = ecx

; 671  : {

  01740	55		 push	 ebp
  01741	8b ec		 mov	 ebp, esp
  01743	6a ff		 push	 -1
  01745	68 00 00 00 00	 push	 __ehhandler$?CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
  0174a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01750	50		 push	 eax
  01751	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01758	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0175b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0175e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198850[ebp], 0

; 672  : 	CString result;

  01765	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  01768	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0176e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 673  : 	static BYTE parms[] =
; 674  : 		VTS_BSTR;
; 675  : 	InvokeHelper(0xc6, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 676  : 		request);

  01775	8b 45 0c	 mov	 eax, DWORD PTR _request$[ebp]
  01778	50		 push	 eax
  01779	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
  0177e	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  01781	51		 push	 ecx
  01782	6a 08		 push	 8
  01784	6a 01		 push	 1
  01786	68 c6 00 00 00	 push	 198			; 000000c6H
  0178b	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0178e	52		 push	 edx
  0178f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01794	83 c4 1c	 add	 esp, 28			; 0000001cH

; 677  : 	return result;

  01797	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  0179a	50		 push	 eax
  0179b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0179e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  017a4	8b 4d ec	 mov	 ecx, DWORD PTR $T198850[ebp]
  017a7	83 c9 01	 or	 ecx, 1
  017aa	89 4d ec	 mov	 DWORD PTR $T198850[ebp], ecx
  017ad	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  017b4	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  017b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  017bd	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 678  : }

  017c0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  017c3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  017ca	8b e5		 mov	 esp, ebp
  017cc	5d		 pop	 ebp
  017cd	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L198848:
  00131	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00134	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z:
  0013a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198853
  0013f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ENDP ; CShockwaveFlash::CallFunction
PUBLIC	?SetReturnValue@CShockwaveFlash@@QAEXPBD@Z	; CShockwaveFlash::SetReturnValue
;	COMDAT ?parms@?1??SetReturnValue@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetReturnValue@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetReturnValue'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_returnValue$ = 8					; size = 4
?SetReturnValue@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetReturnValue
; _this$ = ecx

; 681  : {

  017d0	55		 push	 ebp
  017d1	8b ec		 mov	 ebp, esp
  017d3	51		 push	 ecx
  017d4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 682  : 	static BYTE parms[] =
; 683  : 		VTS_BSTR;
; 684  : 	InvokeHelper(0xc7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 685  : 		 returnValue);

  017d7	8b 45 08	 mov	 eax, DWORD PTR _returnValue$[ebp]
  017da	50		 push	 eax
  017db	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetReturnValue@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  017e0	6a 00		 push	 0
  017e2	6a 00		 push	 0
  017e4	6a 01		 push	 1
  017e6	68 c7 00 00 00	 push	 199			; 000000c7H
  017eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  017ee	51		 push	 ecx
  017ef	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  017f4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 686  : }

  017f7	8b e5		 mov	 esp, ebp
  017f9	5d		 pop	 ebp
  017fa	c2 04 00	 ret	 4
?SetReturnValue@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetReturnValue
_TEXT	ENDS
PUBLIC	?DisableLocalSecurity@CShockwaveFlash@@QAEXXZ	; CShockwaveFlash::DisableLocalSecurity
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DisableLocalSecurity@CShockwaveFlash@@QAEXXZ PROC NEAR	; CShockwaveFlash::DisableLocalSecurity
; _this$ = ecx

; 689  : {

  01800	55		 push	 ebp
  01801	8b ec		 mov	 ebp, esp
  01803	51		 push	 ecx
  01804	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 690  : 	InvokeHelper(0xc8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  01807	6a 00		 push	 0
  01809	6a 00		 push	 0
  0180b	6a 00		 push	 0
  0180d	6a 01		 push	 1
  0180f	68 c8 00 00 00	 push	 200			; 000000c8H
  01814	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01817	50		 push	 eax
  01818	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0181d	83 c4 18	 add	 esp, 24			; 00000018H

; 691  : }

  01820	8b e5		 mov	 esp, ebp
  01822	5d		 pop	 ebp
  01823	c3		 ret	 0
?DisableLocalSecurity@CShockwaveFlash@@QAEXXZ ENDP	; CShockwaveFlash::DisableLocalSecurity
_TEXT	ENDS
PUBLIC	?GetAllowNetworking@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetAllowNetworking
xdata$x	SEGMENT
$T198866 DD	0ffffffffH
	DD	FLAT:$L198859
$T198864 DD	019930520H
	DD	01H
	DD	FLAT:$T198866
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T198861 = -20						; size = 4
_result$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAllowNetworking@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetAllowNetworking
; _this$ = ecx

; 694  : {

  01830	55		 push	 ebp
  01831	8b ec		 mov	 ebp, esp
  01833	6a ff		 push	 -1
  01835	68 00 00 00 00	 push	 __ehhandler$?GetAllowNetworking@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0183a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01840	50		 push	 eax
  01841	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01848	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0184b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0184e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T198861[ebp], 0

; 695  : 	CString result;

  01855	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  01858	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0185e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 696  : 	InvokeHelper(0xc9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  01865	6a 00		 push	 0
  01867	8d 45 f0	 lea	 eax, DWORD PTR _result$[ebp]
  0186a	50		 push	 eax
  0186b	6a 08		 push	 8
  0186d	6a 02		 push	 2
  0186f	68 c9 00 00 00	 push	 201			; 000000c9H
  01874	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01877	51		 push	 ecx
  01878	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0187d	83 c4 18	 add	 esp, 24			; 00000018H

; 697  : 	return result;

  01880	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  01883	52		 push	 edx
  01884	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01887	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0188d	8b 45 ec	 mov	 eax, DWORD PTR $T198861[ebp]
  01890	83 c8 01	 or	 eax, 1
  01893	89 45 ec	 mov	 DWORD PTR $T198861[ebp], eax
  01896	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0189d	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  018a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  018a6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 698  : }

  018a9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  018ac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  018b3	8b e5		 mov	 esp, ebp
  018b5	5d		 pop	 ebp
  018b6	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L198859:
  00144	8d 4d f0	 lea	 ecx, DWORD PTR _result$[ebp]
  00147	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?GetAllowNetworking@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0014d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198864
  00152	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetAllowNetworking@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetAllowNetworking
PUBLIC	?SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z	; CShockwaveFlash::SetAllowNetworking
;	COMDAT ?parms@?1??SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetAllowNetworking'::`2'::parms
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z PROC NEAR ; CShockwaveFlash::SetAllowNetworking
; _this$ = ecx

; 701  : {

  018c0	55		 push	 ebp
  018c1	8b ec		 mov	 ebp, esp
  018c3	51		 push	 ecx
  018c4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 702  : 	static BYTE parms[] =
; 703  : 		VTS_BSTR;
; 704  : 	InvokeHelper(0xc9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 705  : 		 lpszNewValue);

  018c7	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  018ca	50		 push	 eax
  018cb	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  018d0	6a 00		 push	 0
  018d2	6a 00		 push	 0
  018d4	6a 04		 push	 4
  018d6	68 c9 00 00 00	 push	 201			; 000000c9H
  018db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  018de	51		 push	 ecx
  018df	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  018e4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 706  : }

  018e7	8b e5		 mov	 esp, ebp
  018e9	5d		 pop	 ebp
  018ea	c2 04 00	 ret	 4
?SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z ENDP	; CShockwaveFlash::SetAllowNetworking
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afx.inl
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT
; _this$ = ecx

; 25   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Odt
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 31   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Odt
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8						; size = 4
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 37   : 	{ return ::operator new(nSize); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 41   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT
; _this$ = ecx

; 43   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 545  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 549  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 551  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
END
