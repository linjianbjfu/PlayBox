; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\AppConfig\config\Dlg\BaseDlg.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_messageEntries@BaseDialog@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@BaseDialog@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B	; BaseDialog::classBaseDialog
PUBLIC	?_messageEntries@BaseDialog@@0QBUAFX_MSGMAP_ENTRY@@B ; BaseDialog::_messageEntries
PUBLIC	?messageMap@BaseDialog@@1UAFX_MSGMAP@@B		; BaseDialog::messageMap
EXTRN	?GetThisClass@CDialog@@SGPAUCRuntimeClass@@XZ:NEAR ; CDialog::GetThisClass
EXTRN	?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ:NEAR ; CDialog::GetThisMessageMap
CONST	SEGMENT
$SG197401 DB	'BaseDialog', 00H
CONST	ENDS
;	COMDAT ?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B
CONST	SEGMENT
?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B DD FLAT:$SG197401 ; BaseDialog::classBaseDialog
	DD	090H
	DD	0ffffH
	DD	00H
	DD	FLAT:?GetThisClass@CDialog@@SGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?_messageEntries@BaseDialog@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@BaseDialog@@0QBUAFX_MSGMAP_ENTRY@@B DD 00H ; BaseDialog::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@BaseDialog@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@BaseDialog@@1UAFX_MSGMAP@@B DD FLAT:?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ ; BaseDialog::messageMap
	DD	FLAT:?_messageEntries@BaseDialog@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
PUBLIC	?GetThisClass@BaseDialog@@SGPAUCRuntimeClass@@XZ ; BaseDialog::GetThisClass
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\appconfig\config\dlg\basedlg.cpp
_TEXT	SEGMENT
?GetThisClass@BaseDialog@@SGPAUCRuntimeClass@@XZ PROC NEAR ; BaseDialog::GetThisClass

; 4    : IMPLEMENT_DYNAMIC(BaseDialog, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B ; BaseDialog::classBaseDialog
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetThisClass@BaseDialog@@SGPAUCRuntimeClass@@XZ ENDP	; BaseDialog::GetThisClass
_TEXT	ENDS
PUBLIC	?GetRuntimeClass@BaseDialog@@UBEPAUCRuntimeClass@@XZ ; BaseDialog::GetRuntimeClass
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRuntimeClass@BaseDialog@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; BaseDialog::GetRuntimeClass
; _this$ = ecx

; 4    : IMPLEMENT_DYNAMIC(BaseDialog, CDialog)

  00010	55		 push	 ebp
  00011	8b ec		 mov	 ebp, esp
  00013	51		 push	 ecx
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B ; BaseDialog::classBaseDialog
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetRuntimeClass@BaseDialog@@UBEPAUCRuntimeClass@@XZ ENDP ; BaseDialog::GetRuntimeClass
_TEXT	ENDS
PUBLIC	?GetThisMessageMap@BaseDialog@@KGPBUAFX_MSGMAP@@XZ ; BaseDialog::GetThisMessageMap
; Function compile flags: /Odt
_TEXT	SEGMENT
?GetThisMessageMap@BaseDialog@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; BaseDialog::GetThisMessageMap

; 6    : BEGIN_MESSAGE_MAP(BaseDialog, CDialog)

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@BaseDialog@@1UAFX_MSGMAP@@B ; BaseDialog::messageMap
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?GetThisMessageMap@BaseDialog@@KGPBUAFX_MSGMAP@@XZ ENDP	; BaseDialog::GetThisMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@BaseDialog@@MBEPBUAFX_MSGMAP@@XZ	; BaseDialog::GetMessageMap
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@BaseDialog@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; BaseDialog::GetMessageMap
; _this$ = ecx

; 6    : BEGIN_MESSAGE_MAP(BaseDialog, CDialog)

  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
  00033	51		 push	 ecx
  00034	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00037	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@BaseDialog@@1UAFX_MSGMAP@@B ; BaseDialog::messageMap
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?GetMessageMap@BaseDialog@@MBEPBUAFX_MSGMAP@@XZ ENDP	; BaseDialog::GetMessageMap
_TEXT	ENDS
PUBLIC	?OnInitDialog@BaseDialog@@MAEHXZ		; BaseDialog::OnInitDialog
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:NEAR		; CDialog::OnInitDialog
EXTRN	?UpdateData@CWnd@@QAEHH@Z:NEAR			; CWnd::UpdateData
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInitDialog@BaseDialog@@MAEHXZ PROC NEAR		; BaseDialog::OnInitDialog
; _this$ = ecx

; 11   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	51		 push	 ecx
  00044	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 12   : 	CDialog::OnInitDialog();

  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 13   : 	LoadConf();

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b 10		 mov	 edx, DWORD PTR [eax]
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	ff 92 68 01 00
	00		 call	 DWORD PTR [edx+360]

; 14   : 	UpdateData( FALSE );

  0005d	6a 00		 push	 0
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?UpdateData@CWnd@@QAEHH@Z ; CWnd::UpdateData

; 15   : 	return TRUE;

  00067	b8 01 00 00 00	 mov	 eax, 1

; 16   : }

  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
?OnInitDialog@BaseDialog@@MAEHXZ ENDP			; BaseDialog::OnInitDialog
_TEXT	ENDS
PUBLIC	?GetParent@CWnd@@QBEPAV1@XZ			; CWnd::GetParent
PUBLIC	?OnCancel@BaseDialog@@MAEXXZ			; BaseDialog::OnCancel
PUBLIC	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ		; CWnd::GetSafeHwnd
EXTRN	__imp__PostMessageA@16:NEAR
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pWnd$ = -4						; size = 4
?OnCancel@BaseDialog@@MAEXXZ PROC NEAR			; BaseDialog::OnCancel
; _this$ = ecx

; 19   : {

  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	83 ec 08	 sub	 esp, 8
  00076	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 20   : 	CWnd* pWnd = GetParent();

  00079	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  00081	89 45 fc	 mov	 DWORD PTR _pWnd$[ebp], eax

; 21   : 	if( pWnd != NULL )

  00084	83 7d fc 00	 cmp	 DWORD PTR _pWnd$[ebp], 0
  00088	74 18		 je	 SHORT $L197421

; 22   : 	{
; 23   : 		::PostMessage( pWnd->GetSafeHwnd(), WM_COMMAND, MAKELPARAM(IDCANCEL,BN_CLICKED), 0 );

  0008a	6a 00		 push	 0
  0008c	6a 02		 push	 2
  0008e	68 11 01 00 00	 push	 273			; 00000111H
  00093	8b 4d fc	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00096	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  0009b	50		 push	 eax
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
$L197421:

; 24   : 	}	
; 25   : }

  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
?OnCancel@BaseDialog@@MAEXXZ ENDP			; BaseDialog::OnCancel
_TEXT	ENDS
PUBLIC	?OnOK@BaseDialog@@MAEXXZ			; BaseDialog::OnOK
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnOK@BaseDialog@@MAEXXZ PROC NEAR			; BaseDialog::OnOK
; _this$ = ecx

; 28   : {

  000b0	55		 push	 ebp
  000b1	8b ec		 mov	 ebp, esp
  000b3	51		 push	 ecx
  000b4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 29   : }

  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c3		 ret	 0
?OnOK@BaseDialog@@MAEXXZ ENDP				; BaseDialog::OnOK
_TEXT	ENDS
PUBLIC	?OnCtlColor@BaseDialog@@IAEPAUHBRUSH__@@PAVCDC@@PAVCWnd@@I@Z ; BaseDialog::OnCtlColor
EXTRN	__imp__CreateSolidBrush@4:NEAR
EXTRN	?OnCtlColor@CWnd@@IAEPAUHBRUSH__@@PAVCDC@@PAV1@I@Z:NEAR ; CWnd::OnCtlColor
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_hbr$ = -4						; size = 4
_pDC$ = 8						; size = 4
_pWnd$ = 12						; size = 4
_nCtlColor$ = 16					; size = 4
?OnCtlColor@BaseDialog@@IAEPAUHBRUSH__@@PAVCDC@@PAVCWnd@@I@Z PROC NEAR ; BaseDialog::OnCtlColor
; _this$ = ecx

; 32   : {

  000c0	55		 push	 ebp
  000c1	8b ec		 mov	 ebp, esp
  000c3	83 ec 08	 sub	 esp, 8
  000c6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 33   : 	HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor);

  000c9	8b 45 10	 mov	 eax, DWORD PTR _nCtlColor$[ebp]
  000cc	50		 push	 eax
  000cd	8b 4d 0c	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  000d0	51		 push	 ecx
  000d1	8b 55 08	 mov	 edx, DWORD PTR _pDC$[ebp]
  000d4	52		 push	 edx
  000d5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	e8 00 00 00 00	 call	 ?OnCtlColor@CWnd@@IAEPAUHBRUSH__@@PAVCDC@@PAV1@I@Z ; CWnd::OnCtlColor
  000dd	89 45 fc	 mov	 DWORD PTR _hbr$[ebp], eax

; 34   : 	hbr = ::CreateSolidBrush( RGB(255,255,255) );

  000e0	68 ff ff ff 00	 push	 16777215		; 00ffffffH
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateSolidBrush@4
  000eb	89 45 fc	 mov	 DWORD PTR _hbr$[ebp], eax

; 35   : 	return hbr;

  000ee	8b 45 fc	 mov	 eax, DWORD PTR _hbr$[ebp]

; 36   : }

  000f1	8b e5		 mov	 esp, ebp
  000f3	5d		 pop	 ebp
  000f4	c2 0c 00	 ret	 12			; 0000000cH
?OnCtlColor@BaseDialog@@IAEPAUHBRUSH__@@PAVCDC@@PAVCWnd@@I@Z ENDP ; BaseDialog::OnCtlColor
_TEXT	ENDS
PUBLIC	?SthChanged@BaseDialog@@UAEXXZ			; BaseDialog::SthChanged
EXTRN	__imp__GetDlgItem@8:NEAR
EXTRN	__imp__EnableWindow@8:NEAR
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pWnd$ = -4						; size = 4
?SthChanged@BaseDialog@@UAEXXZ PROC NEAR		; BaseDialog::SthChanged
; _this$ = ecx

; 39   : {

  00100	55		 push	 ebp
  00101	8b ec		 mov	 ebp, esp
  00103	83 ec 08	 sub	 esp, 8
  00106	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 40   : 	CWnd* pWnd = GetParent();

  00109	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  00111	89 45 fc	 mov	 DWORD PTR _pWnd$[ebp], eax

; 41   : 	if( pWnd != NULL )

  00114	83 7d fc 00	 cmp	 DWORD PTR _pWnd$[ebp], 0
  00118	74 1d		 je	 SHORT $L197450

; 42   : 	{
; 43   : 		::EnableWindow(::GetDlgItem(pWnd->GetSafeHwnd(), IDC_BUTTON_APPLY), TRUE);

  0011a	6a 01		 push	 1
  0011c	68 bd 00 00 00	 push	 189			; 000000bdH
  00121	8b 4d fc	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00124	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00129	50		 push	 eax
  0012a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  00130	50		 push	 eax
  00131	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
$L197450:

; 44   : 	}
; 45   : }

  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c3		 ret	 0
?SthChanged@BaseDialog@@UAEXXZ ENDP			; BaseDialog::SthChanged
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ PROC NEAR		; CWnd::GetSafeHwnd, COMDAT
; _this$ = ecx

; 27   : 	{ return this == NULL ? NULL : m_hWnd; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	75 09		 jne	 SHORT $L197856
  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  00016	eb 09		 jmp	 SHORT $L197857
$L197856:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0001e	89 4d f8	 mov	 DWORD PTR tv66[ebp], ecx
$L197857:
  00021	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ENDP		; CWnd::GetSafeHwnd
_TEXT	ENDS
EXTRN	__imp__GetParent@4:NEAR
EXTRN	?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z:NEAR	; CWnd::FromHandle
; Function compile flags: /Odt
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetParent@CWnd@@QBEPAV1@XZ PROC NEAR			; CWnd::GetParent, COMDAT
; _this$ = ecx

; 282  : 	{ ASSERT(::IsWindow(m_hWnd)); return CWnd::FromHandle(::GetParent(m_hWnd)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z ; CWnd::FromHandle
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?GetParent@CWnd@@QBEPAV1@XZ ENDP			; CWnd::GetParent
_TEXT	ENDS
END
