; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\module\HTTPControl\HTTPControl.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG197411 DB	'%s\LhUpdate.dll', 00H
$SG197416 DB	'SetHTTPControl', 00H
	ORG $+1
$SG197438 DB	'TodayRecommand', 00H
	ORG $+1
$SG197439 DB	'HTTP-Finish', 00H
$SG197440 DB	'log_httpr.txt', 00H
	ORG $+2
$SG197445 DB	'BangDan', 00H
$SG197446 DB	'HTTP-Finish', 00H
$SG197447 DB	'log_httpr.txt', 00H
	ORG $+2
$SG197452 DB	'RegID', 00H
	ORG $+2
$SG197453 DB	'HTTP-Finish', 00H
$SG197454 DB	'log_httpr.txt', 00H
	ORG $+2
$SG197459 DB	'ConfigFile', 00H
	ORG $+1
$SG197460 DB	'HTTP-Finish', 00H
$SG197461 DB	'log_httpr.txt', 00H
	ORG $+2
$SG197466 DB	'UpClientLog', 00H
$SG197467 DB	'HTTP-Finish', 00H
$SG197468 DB	'log_httpr.txt', 00H
	ORG $+2
$SG197473 DB	'DownloadAD', 00H
	ORG $+1
$SG197474 DB	'HTTP-Finish', 00H
$SG197475 DB	'log_httpr.txt', 00H
CONST	ENDS
PUBLIC	?Init@CHTTPControl@@SAXXZ			; CHTTPControl::Init
EXTRN	__imp__CreateEventA@16:NEAR
_BSS	SEGMENT
_s_EventInit DD	01H DUP (?)
_s_EventTodayRecommend DD 01H DUP (?)
_s_EventRegID DD 01H DUP (?)
_s_EventConfigFile DD 01H DUP (?)
_s_EventBangDan DD 01H DUP (?)
_s_EventUpClientLog DD 01H DUP (?)
_s_EventDownAD DD 01H DUP (?)
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\httpcontrol\httpcontrol.cpp
_BSS	ENDS
_TEXT	SEGMENT
?Init@CHTTPControl@@SAXXZ PROC NEAR			; CHTTPControl::Init

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 15   : 	s_EventInit				= CreateEvent(NULL,TRUE,TRUE,NULL);

  00003	6a 00		 push	 0
  00005	6a 01		 push	 1
  00007	6a 01		 push	 1
  00009	6a 00		 push	 0
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  00011	a3 00 00 00 00	 mov	 DWORD PTR _s_EventInit, eax

; 16   : 	s_EventTodayRecommend	= CreateEvent(NULL,TRUE,FALSE,NULL);

  00016	6a 00		 push	 0
  00018	6a 00		 push	 0
  0001a	6a 01		 push	 1
  0001c	6a 00		 push	 0
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  00024	a3 00 00 00 00	 mov	 DWORD PTR _s_EventTodayRecommend, eax

; 17   : 	s_EventRegID			= CreateEvent(NULL,TRUE,FALSE,NULL);

  00029	6a 00		 push	 0
  0002b	6a 00		 push	 0
  0002d	6a 01		 push	 1
  0002f	6a 00		 push	 0
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  00037	a3 00 00 00 00	 mov	 DWORD PTR _s_EventRegID, eax

; 18   : 	s_EventBangDan			= CreateEvent(NULL,TRUE,FALSE,NULL);

  0003c	6a 00		 push	 0
  0003e	6a 00		 push	 0
  00040	6a 01		 push	 1
  00042	6a 00		 push	 0
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _s_EventBangDan, eax

; 19   : 	s_EventConfigFile		= CreateEvent(NULL,TRUE,FALSE,NULL);

  0004f	6a 00		 push	 0
  00051	6a 00		 push	 0
  00053	6a 01		 push	 1
  00055	6a 00		 push	 0
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  0005d	a3 00 00 00 00	 mov	 DWORD PTR _s_EventConfigFile, eax

; 20   : 	s_EventDownAD			= CreateEvent(NULL,TRUE,FALSE,NULL);

  00062	6a 00		 push	 0
  00064	6a 00		 push	 0
  00066	6a 01		 push	 1
  00068	6a 00		 push	 0
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  00070	a3 00 00 00 00	 mov	 DWORD PTR _s_EventDownAD, eax

; 21   : 	s_EventUpClientLog		= CreateEvent(NULL,TRUE,FALSE,NULL);

  00075	6a 00		 push	 0
  00077	6a 00		 push	 0
  00079	6a 01		 push	 1
  0007b	6a 00		 push	 0
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  00083	a3 00 00 00 00	 mov	 DWORD PTR _s_EventUpClientLog, eax

; 22   : }

  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
?Init@CHTTPControl@@SAXXZ ENDP				; CHTTPControl::Init
_TEXT	ENDS
PUBLIC	?Close@CHTTPControl@@SAXXZ			; CHTTPControl::Close
EXTRN	__imp__CloseHandle@4:NEAR
; Function compile flags: /Odt
_TEXT	SEGMENT
?Close@CHTTPControl@@SAXXZ PROC NEAR			; CHTTPControl::Close

; 25   : {

  00090	55		 push	 ebp
  00091	8b ec		 mov	 ebp, esp

; 26   : 	CloseHandle( s_EventInit );

  00093	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventInit
  00098	50		 push	 eax
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 27   : 	CloseHandle( s_EventTodayRecommend );

  0009f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventTodayRecommend
  000a5	51		 push	 ecx
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 28   : 	CloseHandle( s_EventRegID );

  000ac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventRegID
  000b2	52		 push	 edx
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 29   : 	CloseHandle( s_EventBangDan );

  000b9	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventBangDan
  000be	50		 push	 eax
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 30   : 	CloseHandle( s_EventConfigFile );

  000c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventConfigFile
  000cb	51		 push	 ecx
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 31   : 	CloseHandle( s_EventDownAD );

  000d2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventDownAD
  000d8	52		 push	 edx
  000d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 32   : 	CloseHandle( s_EventUpClientLog );

  000df	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventUpClientLog
  000e4	50		 push	 eax
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 33   : }

  000eb	5d		 pop	 ebp
  000ec	c3		 ret	 0
?Close@CHTTPControl@@SAXXZ ENDP				; CHTTPControl::Close
_TEXT	ENDS
PUBLIC	?HTTPWait_TodayRecommend@CHTTPControl@@SAXXZ	; CHTTPControl::HTTPWait_TodayRecommend
EXTRN	__imp__WaitForSingleObject@8:NEAR
; Function compile flags: /Odt
_TEXT	SEGMENT
?HTTPWait_TodayRecommend@CHTTPControl@@SAXXZ PROC NEAR	; CHTTPControl::HTTPWait_TodayRecommend

; 36   : {

  000f0	55		 push	 ebp
  000f1	8b ec		 mov	 ebp, esp

; 37   : 	WaitForSingleObject( s_EventInit,30*1000 );

  000f3	68 30 75 00 00	 push	 30000			; 00007530H
  000f8	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventInit
  000fd	50		 push	 eax
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 38   : }

  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
?HTTPWait_TodayRecommend@CHTTPControl@@SAXXZ ENDP	; CHTTPControl::HTTPWait_TodayRecommend
_TEXT	ENDS
PUBLIC	?HTTPWait_BangDan@CHTTPControl@@SAXXZ		; CHTTPControl::HTTPWait_BangDan
EXTRN	__imp__WaitForMultipleObjects@16:NEAR
EXTRN	__imp__Sleep@4:NEAR
; Function compile flags: /Odt
_TEXT	SEGMENT
_handles$ = -12						; size = 12
?HTTPWait_BangDan@CHTTPControl@@SAXXZ PROC NEAR		; CHTTPControl::HTTPWait_BangDan

; 41   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 42   : 	HANDLE handles[3];
; 43   : 	handles[0]			= s_EventTodayRecommend;

  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventTodayRecommend
  0011b	89 45 f4	 mov	 DWORD PTR _handles$[ebp], eax

; 44   : 	handles[1]			= s_EventConfigFile;	

  0011e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventConfigFile
  00124	89 4d f8	 mov	 DWORD PTR _handles$[ebp+4], ecx

; 45   : 	handles[2]			= s_EventRegID;

  00127	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventRegID
  0012d	89 55 fc	 mov	 DWORD PTR _handles$[ebp+8], edx

; 46   : 
; 47   : 	WaitForMultipleObjects( 3,handles,TRUE,60*1000 );

  00130	68 60 ea 00 00	 push	 60000			; 0000ea60H
  00135	6a 01		 push	 1
  00137	8d 45 f4	 lea	 eax, DWORD PTR _handles$[ebp]
  0013a	50		 push	 eax
  0013b	6a 03		 push	 3
  0013d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForMultipleObjects@16

; 48   : 	Sleep(5000);

  00143	68 88 13 00 00	 push	 5000			; 00001388H
  00148	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4

; 49   : }

  0014e	8b e5		 mov	 esp, ebp
  00150	5d		 pop	 ebp
  00151	c3		 ret	 0
?HTTPWait_BangDan@CHTTPControl@@SAXXZ ENDP		; CHTTPControl::HTTPWait_BangDan
_TEXT	ENDS
PUBLIC	?HTTPWait_AD@CHTTPControl@@SAXXZ		; CHTTPControl::HTTPWait_AD
; Function compile flags: /Odt
_TEXT	SEGMENT
_handles$ = -16						; size = 16
?HTTPWait_AD@CHTTPControl@@SAXXZ PROC NEAR		; CHTTPControl::HTTPWait_AD

; 52   : {

  00160	55		 push	 ebp
  00161	8b ec		 mov	 ebp, esp
  00163	83 ec 10	 sub	 esp, 16			; 00000010H

; 53   : 	HANDLE handles[4];
; 54   : 	handles[0]			= s_EventTodayRecommend;

  00166	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventTodayRecommend
  0016b	89 45 f0	 mov	 DWORD PTR _handles$[ebp], eax

; 55   : 	handles[1]			= s_EventConfigFile;	

  0016e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventConfigFile
  00174	89 4d f4	 mov	 DWORD PTR _handles$[ebp+4], ecx

; 56   : 	handles[2]			= s_EventRegID;

  00177	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventRegID
  0017d	89 55 f8	 mov	 DWORD PTR _handles$[ebp+8], edx

; 57   : 	handles[3]			= s_EventBangDan;

  00180	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventBangDan
  00185	89 45 fc	 mov	 DWORD PTR _handles$[ebp+12], eax

; 58   : 
; 59   : 	WaitForMultipleObjects( 4,handles,TRUE,60*1000 );

  00188	68 60 ea 00 00	 push	 60000			; 0000ea60H
  0018d	6a 01		 push	 1
  0018f	8d 4d f0	 lea	 ecx, DWORD PTR _handles$[ebp]
  00192	51		 push	 ecx
  00193	6a 04		 push	 4
  00195	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForMultipleObjects@16

; 60   : 	Sleep(5000);

  0019b	68 88 13 00 00	 push	 5000			; 00001388H
  001a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4

; 61   : }

  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c3		 ret	 0
?HTTPWait_AD@CHTTPControl@@SAXXZ ENDP			; CHTTPControl::HTTPWait_AD
_TEXT	ENDS
PUBLIC	?HTTPFinish_TodayRecommend@CHTTPControl@@SAXXZ	; CHTTPControl::HTTPFinish_TodayRecommend
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ:NEAR
EXTRN	__imp__SetEvent@4:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
xdata$x	SEGMENT
$T197886 DD	0ffffffffH
	DD	FLAT:$L197878
	DD	00H
	DD	FLAT:$L197879
$T197883 DD	019930520H
	DD	02H
	DD	FLAT:$T197886
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
$T197877 = -68						; size = 28
$T197876 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_TodayRecommend@CHTTPControl@@SAXXZ PROC NEAR ; CHTTPControl::HTTPFinish_TodayRecommend

; 132  : {

  001b0	55		 push	 ebp
  001b1	8b ec		 mov	 ebp, esp
  001b3	6a ff		 push	 -1
  001b5	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_TodayRecommend@CHTTPControl@@SAXXZ
  001ba	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  001c0	50		 push	 eax
  001c1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  001c8	83 ec 38	 sub	 esp, 56			; 00000038H

; 133  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","TodayRecommand");

  001cb	68 00 00 00 00	 push	 OFFSET FLAT:$SG197439
  001d0	8d 4d d8	 lea	 ecx, DWORD PTR $T197876[ebp]
  001d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  001d9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  001e0	68 00 00 00 00	 push	 OFFSET FLAT:$SG197440
  001e5	8d 4d bc	 lea	 ecx, DWORD PTR $T197877[ebp]
  001e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  001ee	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001f2	68 00 00 00 00	 push	 OFFSET FLAT:$SG197438
  001f7	8d 45 d8	 lea	 eax, DWORD PTR $T197876[ebp]
  001fa	50		 push	 eax
  001fb	6a 00		 push	 0
  001fd	8d 4d bc	 lea	 ecx, DWORD PTR $T197877[ebp]
  00200	51		 push	 ecx
  00201	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  00207	83 c4 10	 add	 esp, 16			; 00000010H
  0020a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0020e	8d 4d bc	 lea	 ecx, DWORD PTR $T197877[ebp]
  00211	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00217	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0021e	8d 4d d8	 lea	 ecx, DWORD PTR $T197876[ebp]
  00221	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 134  : 	SetEvent( s_EventTodayRecommend );

  00227	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventTodayRecommend
  0022d	52		 push	 edx
  0022e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 135  : 	NotifyUpdate(1);

  00234	6a 01		 push	 1
  00236	e8 00 00 00 00	 call	 ?NotifyUpdate@@YAXH@Z	; NotifyUpdate
  0023b	83 c4 04	 add	 esp, 4

; 136  : }

  0023e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00241	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00248	8b e5		 mov	 esp, ebp
  0024a	5d		 pop	 ebp
  0024b	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L197878:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T197876[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$L197879:
  00009	8d 4d bc	 lea	 ecx, DWORD PTR $T197877[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?HTTPFinish_TodayRecommend@CHTTPControl@@SAXXZ:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197883
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_TodayRecommend@CHTTPControl@@SAXXZ ENDP	; CHTTPControl::HTTPFinish_TodayRecommend
EXTRN	__imp__FreeLibrary@4:NEAR
EXTRN	__imp__GetProcAddress@8:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__LoadLibraryA@4:NEAR
EXTRN	__imp___snprintf:NEAR
EXTRN	?GetHomePath@CLhcImg@@SA_NQADH@Z:NEAR		; CLhcImg::GetHomePath
; Function compile flags: /Odt
_TEXT	SEGMENT
_lpfn$197414 = -540					; size = 4
_szsysdir$ = -536					; size = 261
_szUpDate$ = -272					; size = 261
__$ArrayPad$ = -8					; size = 4
_hLib$ = -4						; size = 4
__$ReturnAddr$ = 4					; size = 4
_i$ = 8							; size = 4
?NotifyUpdate@@YAXH@Z PROC NEAR				; NotifyUpdate

; 66   : {

  00250	55		 push	 ebp
  00251	8b ec		 mov	 ebp, esp
  00253	81 ec 1c 02 00
	00		 sub	 esp, 540		; 0000021cH
  00259	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0025e	89 45 f8	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 67   : 	char szsysdir[MAX_PATH+1];
; 68   : 	if(!CLhcImg::GetHomePath(szsysdir, MAX_PATH))

  00261	68 04 01 00 00	 push	 260			; 00000104H
  00266	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _szsysdir$[ebp]
  0026c	50		 push	 eax
  0026d	e8 00 00 00 00	 call	 ?GetHomePath@CLhcImg@@SA_NQADH@Z ; CLhcImg::GetHomePath
  00272	83 c4 08	 add	 esp, 8
  00275	0f b6 c8	 movzx	 ecx, al
  00278	85 c9		 test	 ecx, ecx
  0027a	75 2b		 jne	 SHORT $L197409

; 69   : 	{
; 70   : 		SetEvent( s_EventConfigFile );

  0027c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventConfigFile
  00282	52		 push	 edx
  00283	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 71   : 		SetEvent( s_EventUpClientLog );

  00289	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventUpClientLog
  0028e	50		 push	 eax
  0028f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 72   : 		SetEvent( s_EventRegID );

  00295	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventRegID
  0029b	51		 push	 ecx
  0029c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 73   : 		return;

  002a2	e9 53 01 00 00	 jmp	 $L197407
$L197409:

; 74   : 	}
; 75   : 
; 76   : 	char szUpDate[MAX_PATH+1];
; 77   : 	_snprintf(szUpDate, MAX_PATH-1, "%s\\LhUpdate.dll", szsysdir);

  002a7	8d 95 e8 fd ff
	ff		 lea	 edx, DWORD PTR _szsysdir$[ebp]
  002ad	52		 push	 edx
  002ae	68 00 00 00 00	 push	 OFFSET FLAT:$SG197411
  002b3	68 03 01 00 00	 push	 259			; 00000103H
  002b8	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szUpDate$[ebp]
  002be	50		 push	 eax
  002bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___snprintf
  002c5	83 c4 10	 add	 esp, 16			; 00000010H

; 78   : 
; 79   : 	HMODULE hLib = LoadLibrary(szUpDate);

  002c8	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _szUpDate$[ebp]
  002ce	51		 push	 ecx
  002cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
  002d5	89 45 fc	 mov	 DWORD PTR _hLib$[ebp], eax

; 80   : 	if(hLib != NULL)

  002d8	83 7d fc 00	 cmp	 DWORD PTR _hLib$[ebp], 0
  002dc	0f 84 18 01 00
	00		 je	 $L197407

; 81   : 	{
; 82   : 		LPCREATERECOGNISE lpfn = (LPCREATERECOGNISE)GetProcAddress(hLib, "SetHTTPControl");	

  002e2	68 00 00 00 00	 push	 OFFSET FLAT:$SG197416
  002e7	8b 55 fc	 mov	 edx, DWORD PTR _hLib$[ebp]
  002ea	52		 push	 edx
  002eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  002f1	89 85 e4 fd ff
	ff		 mov	 DWORD PTR _lpfn$197414[ebp], eax

; 83   : 		if(lpfn != NULL)

  002f7	83 bd e4 fd ff
	ff 00		 cmp	 DWORD PTR _lpfn$197414[ebp], 0
  002fe	0f 84 c6 00 00
	00		 je	 $L197417

; 84   : 		{
; 85   : 			if( i == 1 )

  00304	83 7d 08 01	 cmp	 DWORD PTR _i$[ebp], 1
  00308	75 3d		 jne	 SHORT $L197418

; 86   : 			{
; 87   : 				lpfn(1);

  0030a	6a 01		 push	 1
  0030c	ff 95 e4 fd ff
	ff		 call	 DWORD PTR _lpfn$197414[ebp]

; 88   : 				if( WaitForSingleObject( s_EventRegID,100) == WAIT_OBJECT_0 )

  00312	6a 64		 push	 100			; 00000064H
  00314	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventRegID
  00319	50		 push	 eax
  0031a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00320	85 c0		 test	 eax, eax
  00322	75 23		 jne	 SHORT $L197418

; 89   : 				{
; 90   : 					lpfn(2);

  00324	6a 02		 push	 2
  00326	ff 95 e4 fd ff
	ff		 call	 DWORD PTR _lpfn$197414[ebp]

; 91   : 					if( WaitForSingleObject( s_EventBangDan,100) == WAIT_OBJECT_0 )

  0032c	6a 64		 push	 100			; 00000064H
  0032e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventBangDan
  00334	51		 push	 ecx
  00335	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  0033b	85 c0		 test	 eax, eax
  0033d	75 08		 jne	 SHORT $L197418

; 92   : 					{
; 93   : 						lpfn(3);

  0033f	6a 03		 push	 3
  00341	ff 95 e4 fd ff
	ff		 call	 DWORD PTR _lpfn$197414[ebp]
$L197418:

; 94   : 					}
; 95   : 				}
; 96   : 			}
; 97   : 
; 98   : 			if( i == 2 )

  00347	83 7d 08 02	 cmp	 DWORD PTR _i$[ebp], 2
  0034b	75 35		 jne	 SHORT $L197423

; 99   : 			{
; 100  : 				if( WaitForSingleObject(s_EventTodayRecommend,100) == WAIT_OBJECT_0 )

  0034d	6a 64		 push	 100			; 00000064H
  0034f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventTodayRecommend
  00355	52		 push	 edx
  00356	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  0035c	85 c0		 test	 eax, eax
  0035e	75 22		 jne	 SHORT $L197423

; 101  : 				{
; 102  : 					lpfn(2);

  00360	6a 02		 push	 2
  00362	ff 95 e4 fd ff
	ff		 call	 DWORD PTR _lpfn$197414[ebp]

; 103  : 					if( WaitForSingleObject( s_EventBangDan,100) == WAIT_OBJECT_0 )

  00368	6a 64		 push	 100			; 00000064H
  0036a	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventBangDan
  0036f	50		 push	 eax
  00370	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00376	85 c0		 test	 eax, eax
  00378	75 08		 jne	 SHORT $L197423

; 104  : 					{
; 105  : 						lpfn(3);

  0037a	6a 03		 push	 3
  0037c	ff 95 e4 fd ff
	ff		 call	 DWORD PTR _lpfn$197414[ebp]
$L197423:

; 106  : 					}					
; 107  : 				}				
; 108  : 			}
; 109  : 
; 110  : 			if( i == 3 )

  00382	83 7d 08 03	 cmp	 DWORD PTR _i$[ebp], 3
  00386	75 40		 jne	 SHORT $L197428

; 111  : 			{
; 112  : 				if( WaitForSingleObject(s_EventTodayRecommend,100) == WAIT_OBJECT_0 
; 113  : 					&& WaitForSingleObject( s_EventRegID,100) == WAIT_OBJECT_0 
; 114  : 					&& WaitForSingleObject( s_EventBangDan,100) == WAIT_OBJECT_0 )

  00388	6a 64		 push	 100			; 00000064H
  0038a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventTodayRecommend
  00390	51		 push	 ecx
  00391	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00397	85 c0		 test	 eax, eax
  00399	75 2d		 jne	 SHORT $L197428
  0039b	6a 64		 push	 100			; 00000064H
  0039d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventRegID
  003a3	52		 push	 edx
  003a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  003aa	85 c0		 test	 eax, eax
  003ac	75 1a		 jne	 SHORT $L197428
  003ae	6a 64		 push	 100			; 00000064H
  003b0	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventBangDan
  003b5	50		 push	 eax
  003b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  003bc	85 c0		 test	 eax, eax
  003be	75 08		 jne	 SHORT $L197428

; 115  : 				{					
; 116  : 					lpfn(3);				

  003c0	6a 03		 push	 3
  003c2	ff 95 e4 fd ff
	ff		 call	 DWORD PTR _lpfn$197414[ebp]
$L197428:

; 117  : 				}
; 118  : 			}
; 119  : 			
; 120  : 		}	
; 121  : 		else

  003c8	eb 26		 jmp	 SHORT $L197433
$L197417:

; 122  : 		{
; 123  : 			SetEvent( s_EventConfigFile );

  003ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventConfigFile
  003d0	51		 push	 ecx
  003d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 124  : 			SetEvent( s_EventUpClientLog );

  003d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventUpClientLog
  003dd	52		 push	 edx
  003de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 125  : 			SetEvent( s_EventRegID );

  003e4	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventRegID
  003e9	50		 push	 eax
  003ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
$L197433:

; 126  : 		}
; 127  : 		FreeLibrary(hLib);

  003f0	8b 4d fc	 mov	 ecx, DWORD PTR _hLib$[ebp]
  003f3	51		 push	 ecx
  003f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
$L197407:

; 128  : 	}
; 129  : }

  003fa	8b 4d f8	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00402	8b e5		 mov	 esp, ebp
  00404	5d		 pop	 ebp
  00405	c3		 ret	 0
?NotifyUpdate@@YAXH@Z ENDP				; NotifyUpdate
_TEXT	ENDS
PUBLIC	?HTTPFinish_BangDan@CHTTPControl@@SAXXZ		; CHTTPControl::HTTPFinish_BangDan
xdata$x	SEGMENT
$T197901 DD	0ffffffffH
	DD	FLAT:$L197896
	DD	00H
	DD	FLAT:$L197897
$T197899 DD	019930520H
	DD	02H
	DD	FLAT:$T197901
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
$T197895 = -68						; size = 28
$T197894 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_BangDan@CHTTPControl@@SAXXZ PROC NEAR	; CHTTPControl::HTTPFinish_BangDan

; 139  : {

  00410	55		 push	 ebp
  00411	8b ec		 mov	 ebp, esp
  00413	6a ff		 push	 -1
  00415	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_BangDan@CHTTPControl@@SAXXZ
  0041a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00420	50		 push	 eax
  00421	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00428	83 ec 38	 sub	 esp, 56			; 00000038H

; 140  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","BangDan");

  0042b	68 00 00 00 00	 push	 OFFSET FLAT:$SG197446
  00430	8d 4d d8	 lea	 ecx, DWORD PTR $T197894[ebp]
  00433	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00439	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00440	68 00 00 00 00	 push	 OFFSET FLAT:$SG197447
  00445	8d 4d bc	 lea	 ecx, DWORD PTR $T197895[ebp]
  00448	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0044e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00452	68 00 00 00 00	 push	 OFFSET FLAT:$SG197445
  00457	8d 45 d8	 lea	 eax, DWORD PTR $T197894[ebp]
  0045a	50		 push	 eax
  0045b	6a 00		 push	 0
  0045d	8d 4d bc	 lea	 ecx, DWORD PTR $T197895[ebp]
  00460	51		 push	 ecx
  00461	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  00467	83 c4 10	 add	 esp, 16			; 00000010H
  0046a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0046e	8d 4d bc	 lea	 ecx, DWORD PTR $T197895[ebp]
  00471	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00477	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0047e	8d 4d d8	 lea	 ecx, DWORD PTR $T197894[ebp]
  00481	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 141  : 	SetEvent( s_EventBangDan );

  00487	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventBangDan
  0048d	52		 push	 edx
  0048e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 142  : 	NotifyUpdate(3);

  00494	6a 03		 push	 3
  00496	e8 00 00 00 00	 call	 ?NotifyUpdate@@YAXH@Z	; NotifyUpdate
  0049b	83 c4 04	 add	 esp, 4

; 143  : }

  0049e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004a8	8b e5		 mov	 esp, ebp
  004aa	5d		 pop	 ebp
  004ab	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L197896:
  0001c	8d 4d d8	 lea	 ecx, DWORD PTR $T197894[ebp]
  0001f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$L197897:
  00025	8d 4d bc	 lea	 ecx, DWORD PTR $T197895[ebp]
  00028	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?HTTPFinish_BangDan@CHTTPControl@@SAXXZ:
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197899
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_BangDan@CHTTPControl@@SAXXZ ENDP		; CHTTPControl::HTTPFinish_BangDan
PUBLIC	?HTTPFinish_RegID@CHTTPControl@@SAXXZ		; CHTTPControl::HTTPFinish_RegID
xdata$x	SEGMENT
$T197910 DD	0ffffffffH
	DD	FLAT:$L197905
	DD	00H
	DD	FLAT:$L197906
$T197908 DD	019930520H
	DD	02H
	DD	FLAT:$T197910
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
$T197904 = -68						; size = 28
$T197903 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_RegID@CHTTPControl@@SAXXZ PROC NEAR		; CHTTPControl::HTTPFinish_RegID

; 146  : {

  004b0	55		 push	 ebp
  004b1	8b ec		 mov	 ebp, esp
  004b3	6a ff		 push	 -1
  004b5	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_RegID@CHTTPControl@@SAXXZ
  004ba	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  004c0	50		 push	 eax
  004c1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  004c8	83 ec 38	 sub	 esp, 56			; 00000038H

; 147  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","RegID");

  004cb	68 00 00 00 00	 push	 OFFSET FLAT:$SG197453
  004d0	8d 4d d8	 lea	 ecx, DWORD PTR $T197903[ebp]
  004d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  004d9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  004e0	68 00 00 00 00	 push	 OFFSET FLAT:$SG197454
  004e5	8d 4d bc	 lea	 ecx, DWORD PTR $T197904[ebp]
  004e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  004ee	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  004f2	68 00 00 00 00	 push	 OFFSET FLAT:$SG197452
  004f7	8d 45 d8	 lea	 eax, DWORD PTR $T197903[ebp]
  004fa	50		 push	 eax
  004fb	6a 00		 push	 0
  004fd	8d 4d bc	 lea	 ecx, DWORD PTR $T197904[ebp]
  00500	51		 push	 ecx
  00501	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  00507	83 c4 10	 add	 esp, 16			; 00000010H
  0050a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0050e	8d 4d bc	 lea	 ecx, DWORD PTR $T197904[ebp]
  00511	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00517	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0051e	8d 4d d8	 lea	 ecx, DWORD PTR $T197903[ebp]
  00521	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 148  : 	SetEvent( s_EventRegID );	

  00527	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventRegID
  0052d	52		 push	 edx
  0052e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 149  : 	NotifyUpdate(2);

  00534	6a 02		 push	 2
  00536	e8 00 00 00 00	 call	 ?NotifyUpdate@@YAXH@Z	; NotifyUpdate
  0053b	83 c4 04	 add	 esp, 4

; 150  : }

  0053e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00541	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00548	8b e5		 mov	 esp, ebp
  0054a	5d		 pop	 ebp
  0054b	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L197905:
  00038	8d 4d d8	 lea	 ecx, DWORD PTR $T197903[ebp]
  0003b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$L197906:
  00041	8d 4d bc	 lea	 ecx, DWORD PTR $T197904[ebp]
  00044	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?HTTPFinish_RegID@CHTTPControl@@SAXXZ:
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197908
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_RegID@CHTTPControl@@SAXXZ ENDP		; CHTTPControl::HTTPFinish_RegID
PUBLIC	?HTTPFinish_ConfigFile@CHTTPControl@@SAXXZ	; CHTTPControl::HTTPFinish_ConfigFile
xdata$x	SEGMENT
$T197919 DD	0ffffffffH
	DD	FLAT:$L197914
	DD	00H
	DD	FLAT:$L197915
$T197917 DD	019930520H
	DD	02H
	DD	FLAT:$T197919
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
$T197913 = -68						; size = 28
$T197912 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_ConfigFile@CHTTPControl@@SAXXZ PROC NEAR	; CHTTPControl::HTTPFinish_ConfigFile

; 153  : {

  00550	55		 push	 ebp
  00551	8b ec		 mov	 ebp, esp
  00553	6a ff		 push	 -1
  00555	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_ConfigFile@CHTTPControl@@SAXXZ
  0055a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00560	50		 push	 eax
  00561	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00568	83 ec 38	 sub	 esp, 56			; 00000038H

; 154  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","ConfigFile");

  0056b	68 00 00 00 00	 push	 OFFSET FLAT:$SG197460
  00570	8d 4d d8	 lea	 ecx, DWORD PTR $T197912[ebp]
  00573	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00579	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00580	68 00 00 00 00	 push	 OFFSET FLAT:$SG197461
  00585	8d 4d bc	 lea	 ecx, DWORD PTR $T197913[ebp]
  00588	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0058e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00592	68 00 00 00 00	 push	 OFFSET FLAT:$SG197459
  00597	8d 45 d8	 lea	 eax, DWORD PTR $T197912[ebp]
  0059a	50		 push	 eax
  0059b	6a 00		 push	 0
  0059d	8d 4d bc	 lea	 ecx, DWORD PTR $T197913[ebp]
  005a0	51		 push	 ecx
  005a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  005a7	83 c4 10	 add	 esp, 16			; 00000010H
  005aa	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  005ae	8d 4d bc	 lea	 ecx, DWORD PTR $T197913[ebp]
  005b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  005b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005be	8d 4d d8	 lea	 ecx, DWORD PTR $T197912[ebp]
  005c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 155  : 	SetEvent( s_EventConfigFile );

  005c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventConfigFile
  005cd	52		 push	 edx
  005ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 156  : }

  005d4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  005d7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  005de	8b e5		 mov	 esp, ebp
  005e0	5d		 pop	 ebp
  005e1	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L197914:
  00054	8d 4d d8	 lea	 ecx, DWORD PTR $T197912[ebp]
  00057	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$L197915:
  0005d	8d 4d bc	 lea	 ecx, DWORD PTR $T197913[ebp]
  00060	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?HTTPFinish_ConfigFile@CHTTPControl@@SAXXZ:
  00066	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197917
  0006b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_ConfigFile@CHTTPControl@@SAXXZ ENDP		; CHTTPControl::HTTPFinish_ConfigFile
PUBLIC	?HTTPFinish_UpClientLog@CHTTPControl@@SAXXZ	; CHTTPControl::HTTPFinish_UpClientLog
xdata$x	SEGMENT
$T197928 DD	0ffffffffH
	DD	FLAT:$L197923
	DD	00H
	DD	FLAT:$L197924
$T197926 DD	019930520H
	DD	02H
	DD	FLAT:$T197928
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
$T197922 = -68						; size = 28
$T197921 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_UpClientLog@CHTTPControl@@SAXXZ PROC NEAR	; CHTTPControl::HTTPFinish_UpClientLog

; 159  : {

  005f0	55		 push	 ebp
  005f1	8b ec		 mov	 ebp, esp
  005f3	6a ff		 push	 -1
  005f5	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_UpClientLog@CHTTPControl@@SAXXZ
  005fa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00600	50		 push	 eax
  00601	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00608	83 ec 38	 sub	 esp, 56			; 00000038H

; 160  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","UpClientLog");

  0060b	68 00 00 00 00	 push	 OFFSET FLAT:$SG197467
  00610	8d 4d d8	 lea	 ecx, DWORD PTR $T197921[ebp]
  00613	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00619	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00620	68 00 00 00 00	 push	 OFFSET FLAT:$SG197468
  00625	8d 4d bc	 lea	 ecx, DWORD PTR $T197922[ebp]
  00628	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0062e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00632	68 00 00 00 00	 push	 OFFSET FLAT:$SG197466
  00637	8d 45 d8	 lea	 eax, DWORD PTR $T197921[ebp]
  0063a	50		 push	 eax
  0063b	6a 00		 push	 0
  0063d	8d 4d bc	 lea	 ecx, DWORD PTR $T197922[ebp]
  00640	51		 push	 ecx
  00641	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  00647	83 c4 10	 add	 esp, 16			; 00000010H
  0064a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0064e	8d 4d bc	 lea	 ecx, DWORD PTR $T197922[ebp]
  00651	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00657	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0065e	8d 4d d8	 lea	 ecx, DWORD PTR $T197921[ebp]
  00661	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 161  : 	SetEvent(s_EventUpClientLog );

  00667	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventUpClientLog
  0066d	52		 push	 edx
  0066e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 162  : }

  00674	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00677	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0067e	8b e5		 mov	 esp, ebp
  00680	5d		 pop	 ebp
  00681	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L197923:
  00070	8d 4d d8	 lea	 ecx, DWORD PTR $T197921[ebp]
  00073	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$L197924:
  00079	8d 4d bc	 lea	 ecx, DWORD PTR $T197922[ebp]
  0007c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?HTTPFinish_UpClientLog@CHTTPControl@@SAXXZ:
  00082	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197926
  00087	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_UpClientLog@CHTTPControl@@SAXXZ ENDP	; CHTTPControl::HTTPFinish_UpClientLog
PUBLIC	?HTTPFinish_DownAD@CHTTPControl@@SAXXZ		; CHTTPControl::HTTPFinish_DownAD
xdata$x	SEGMENT
$T197937 DD	0ffffffffH
	DD	FLAT:$L197932
	DD	00H
	DD	FLAT:$L197933
$T197935 DD	019930520H
	DD	02H
	DD	FLAT:$T197937
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
$T197931 = -68						; size = 28
$T197930 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_DownAD@CHTTPControl@@SAXXZ PROC NEAR	; CHTTPControl::HTTPFinish_DownAD

; 165  : {

  00690	55		 push	 ebp
  00691	8b ec		 mov	 ebp, esp
  00693	6a ff		 push	 -1
  00695	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_DownAD@CHTTPControl@@SAXXZ
  0069a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  006a0	50		 push	 eax
  006a1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  006a8	83 ec 38	 sub	 esp, 56			; 00000038H

; 166  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","DownloadAD");

  006ab	68 00 00 00 00	 push	 OFFSET FLAT:$SG197474
  006b0	8d 4d d8	 lea	 ecx, DWORD PTR $T197930[ebp]
  006b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  006b9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  006c0	68 00 00 00 00	 push	 OFFSET FLAT:$SG197475
  006c5	8d 4d bc	 lea	 ecx, DWORD PTR $T197931[ebp]
  006c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  006ce	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  006d2	68 00 00 00 00	 push	 OFFSET FLAT:$SG197473
  006d7	8d 45 d8	 lea	 eax, DWORD PTR $T197930[ebp]
  006da	50		 push	 eax
  006db	6a 00		 push	 0
  006dd	8d 4d bc	 lea	 ecx, DWORD PTR $T197931[ebp]
  006e0	51		 push	 ecx
  006e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  006e7	83 c4 10	 add	 esp, 16			; 00000010H
  006ea	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  006ee	8d 4d bc	 lea	 ecx, DWORD PTR $T197931[ebp]
  006f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  006f7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  006fe	8d 4d d8	 lea	 ecx, DWORD PTR $T197930[ebp]
  00701	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 167  : 	SetEvent(s_EventDownAD );

  00707	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventDownAD
  0070d	52		 push	 edx
  0070e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 168  : }

  00714	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00717	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0071e	8b e5		 mov	 esp, ebp
  00720	5d		 pop	 ebp
  00721	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L197932:
  0008c	8d 4d d8	 lea	 ecx, DWORD PTR $T197930[ebp]
  0008f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$L197933:
  00095	8d 4d bc	 lea	 ecx, DWORD PTR $T197931[ebp]
  00098	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?HTTPFinish_DownAD@CHTTPControl@@SAXXZ:
  0009e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197935
  000a3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_DownAD@CHTTPControl@@SAXXZ ENDP		; CHTTPControl::HTTPFinish_DownAD
END
