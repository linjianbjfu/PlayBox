; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\LayoutMgr\ChangeColor\DownloadPercentWnd.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??1HTTPObserver@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownStart@HTTPObserver@@UAEXPBD0I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownFinish@HTTPObserver@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownFailed@HTTPObserver@@UAEXPBDW4HTTP_DOWN_FAILED_REASON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownProgress@HTTPObserver@@UAEXPBDII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownloadPause@HTTPObserver@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GHTTPObserver@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiPlusBitmap@CSkinButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@CGdiPlusBitmap@CSkinButton@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Load@CGdiPlusBitmap@CSkinButton@@QAE_NPB_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiPlusBitmap@CSkinButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1DIBINFO@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GDIBINFO@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0BaseColor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BaseColor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBaseColor@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDownloadPercentWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3CGdiPlusBitmap@CSkinButton@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CDownloadPercentWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3HTTPObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3DIBINFO@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CGdiPlusBitmap@CSkinButton@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CDownloadPercentWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2HTTPObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2DIBINFO@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CGdiPlusBitmap@CSkinButton@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CDownloadPercentWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@HTTPObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@DIBINFO@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCGdiPlusBitmap@CSkinButton@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCDownloadPercentWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVHTTPObserver@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVDIBINFO@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4CGdiPlusBitmap@CSkinButton@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4CDownloadPercentWnd@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4HTTPObserver@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4DIBINFO@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?KillTimer@CWnd@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_messageEntries@CDownloadPercentWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CDownloadPercentWnd@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CDownloadPercentWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?classCDownloadPercentWnd@CDownloadPercentWnd@@2UCRuntimeClass@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7DIBINFO@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLastStatus@Image@Gdiplus@@QBE?AW4Status@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromFile@Bitmap@Gdiplus@@SAPAV12@PB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2GdiplusBase@Gdiplus@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3GdiplusBase@Gdiplus@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@Gdiplus@@QAE@PB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Image@Gdiplus@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7Image@Gdiplus@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4Image@Gdiplus@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVImage@Gdiplus@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3Image@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2Image@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@Image@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R13?0A@A@GdiplusBase@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVGdiplusBase@Gdiplus@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_GImage@Gdiplus@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clone@Image@Gdiplus@@UAEPAV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Image@Gdiplus@@IAE@PAVGpImage@1@W4Status@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Image@Gdiplus@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7Bitmap@Gdiplus@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4Bitmap@Gdiplus@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVBitmap@Gdiplus@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3Bitmap@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2Bitmap@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@Bitmap@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_GBitmap@Gdiplus@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Bitmap@Gdiplus@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetNativeImage@Image@Gdiplus@@IAEXPAVGpImage@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CGdiPlusBitmap@CSkinButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7HTTPObserver@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?classCDownloadPercentWnd@CDownloadPercentWnd@@2UCRuntimeClass@@B ; CDownloadPercentWnd::classCDownloadPercentWnd
PUBLIC	?_messageEntries@CDownloadPercentWnd@@0QBUAFX_MSGMAP_ENTRY@@B ; CDownloadPercentWnd::_messageEntries
PUBLIC	?messageMap@CDownloadPercentWnd@@1UAFX_MSGMAP@@B ; CDownloadPercentWnd::messageMap
PUBLIC	?OnCreate@CDownloadPercentWnd@@QAEHPAUtagCREATESTRUCTA@@@Z ; CDownloadPercentWnd::OnCreate
PUBLIC	?OnDownSubStart@CDownloadPercentWnd@@QAEJIJ@Z	; CDownloadPercentWnd::OnDownSubStart
PUBLIC	?OnDownSubClose@CDownloadPercentWnd@@QAEJIJ@Z	; CDownloadPercentWnd::OnDownSubClose
PUBLIC	?OnTimer@CDownloadPercentWnd@@QAEXI@Z		; CDownloadPercentWnd::OnTimer
PUBLIC	?OnPaint@CDownloadPercentWnd@@QAEXXZ		; CDownloadPercentWnd::OnPaint
PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
EXTRN	?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ:NEAR ; CWnd::GetThisMessageMap
EXTRN	?GetThisClass@CWnd@@SGPAUCRuntimeClass@@XZ:NEAR	; CWnd::GetThisClass
CONST	SEGMENT
$SG199032 DB	'CDownloadPercentWnd', 00H
CONST	ENDS
;	COMDAT ?classCDownloadPercentWnd@CDownloadPercentWnd@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCDownloadPercentWnd@CDownloadPercentWnd@@2UCRuntimeClass@@B DD FLAT:$SG199032 ; CDownloadPercentWnd::classCDownloadPercentWnd
	DD	0230H
	DD	0ffffH
	DD	00H
	DD	FLAT:?GetThisClass@CWnd@@SGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?_messageEntries@CDownloadPercentWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CDownloadPercentWnd@@0QBUAFX_MSGMAP_ENTRY@@B DD 01H ; CDownloadPercentWnd::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	0dH
	DD	FLAT:?OnCreate@CDownloadPercentWnd@@QAEHPAUtagCREATESTRUCTA@@@Z
	DD	0fH
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnPaint@CDownloadPercentWnd@@QAEXXZ
	DD	0113H
	DD	00H
	DD	00H
	DD	00H
	DD	011H
	DD	FLAT:?OnTimer@CDownloadPercentWnd@@QAEXI@Z
	DD	0464H
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnDownSubStart@CDownloadPercentWnd@@QAEJIJ@Z
	DD	0465H
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnDownSubClose@CDownloadPercentWnd@@QAEJIJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CDownloadPercentWnd@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CDownloadPercentWnd@@1UAFX_MSGMAP@@B DD FLAT:?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ ; CDownloadPercentWnd::messageMap
	DD	FLAT:?_messageEntries@CDownloadPercentWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
CONST	SEGMENT
$SG199117 DB	'%d', 00H
	ORG $+1
$SG199118 DB	'%', 00H
CONST	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	?GetThisClass@CDownloadPercentWnd@@SGPAUCRuntimeClass@@XZ ; CDownloadPercentWnd::GetThisClass
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\changecolor\downloadpercentwnd.cpp
_TEXT	SEGMENT
?GetThisClass@CDownloadPercentWnd@@SGPAUCRuntimeClass@@XZ PROC NEAR ; CDownloadPercentWnd::GetThisClass

; 13   : IMPLEMENT_DYNAMIC(CDownloadPercentWnd, CWnd)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCDownloadPercentWnd@CDownloadPercentWnd@@2UCRuntimeClass@@B ; CDownloadPercentWnd::classCDownloadPercentWnd
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetThisClass@CDownloadPercentWnd@@SGPAUCRuntimeClass@@XZ ENDP ; CDownloadPercentWnd::GetThisClass
_TEXT	ENDS
PUBLIC	?GetRuntimeClass@CDownloadPercentWnd@@UBEPAUCRuntimeClass@@XZ ; CDownloadPercentWnd::GetRuntimeClass
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRuntimeClass@CDownloadPercentWnd@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; CDownloadPercentWnd::GetRuntimeClass
; _this$ = ecx

; 13   : IMPLEMENT_DYNAMIC(CDownloadPercentWnd, CWnd)

  00010	55		 push	 ebp
  00011	8b ec		 mov	 ebp, esp
  00013	51		 push	 ecx
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCDownloadPercentWnd@CDownloadPercentWnd@@2UCRuntimeClass@@B ; CDownloadPercentWnd::classCDownloadPercentWnd
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?GetRuntimeClass@CDownloadPercentWnd@@UBEPAUCRuntimeClass@@XZ ENDP ; CDownloadPercentWnd::GetRuntimeClass
_TEXT	ENDS
PUBLIC	??0CDownloadPercentWnd@@QAE@XZ			; CDownloadPercentWnd::CDownloadPercentWnd
PUBLIC	?GetMessageMap@CDownloadPercentWnd@@MBEPBUAFX_MSGMAP@@XZ ; CDownloadPercentWnd::GetMessageMap
PUBLIC	??_7CDownloadPercentWnd@@6B@			; CDownloadPercentWnd::`vftable'
PUBLIC	??_GCDownloadPercentWnd@@UAEPAXI@Z		; CDownloadPercentWnd::`scalar deleting destructor'
PUBLIC	??_R1A@?0A@A@CObject@@8				; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??_R4CDownloadPercentWnd@@6B@			; CDownloadPercentWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDownloadPercentWnd@@@8			; CDownloadPercentWnd `RTTI Type Descriptor'
PUBLIC	??_R3CDownloadPercentWnd@@8			; CDownloadPercentWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDownloadPercentWnd@@8			; CDownloadPercentWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CDownloadPercentWnd@@8		; CDownloadPercentWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	??_ECDownloadPercentWnd@@UAEPAXI@Z:NEAR		; CDownloadPercentWnd::`vector deleting destructor'
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDescription
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??0CColorSlide@@QAE@XZ:NEAR			; CColorSlide::CColorSlide
EXTRN	??1CColorSlide@@UAE@XZ:NEAR			; CColorSlide::~CColorSlide
EXTRN	??0CWnd@@QAE@XZ:NEAR				; CWnd::CWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	??0CStaticText@@QAE@XZ:NEAR			; CStaticText::CStaticText
EXTRN	??1CStaticText@@UAE@XZ:NEAR			; CStaticText::~CStaticText
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	??1CWnd@@UAE@XZ:NEAR				; CWnd::~CWnd
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
xdata$x	SEGMENT
$T199756 DD	0ffffffffH
	DD	FLAT:$L199746
	DD	00H
	DD	FLAT:$L199747
	DD	01H
	DD	FLAT:$L199748
$T199753 DD	019930520H
	DD	03H
	DD	FLAT:$T199756
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CDownloadPercentWnd@@6B@
CONST	SEGMENT
??_7CDownloadPercentWnd@@6B@ DD FLAT:??_R4CDownloadPercentWnd@@6B@ ; CDownloadPercentWnd::`vftable'
	DD	FLAT:?GetRuntimeClass@CDownloadPercentWnd@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDownloadPercentWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDownloadPercentWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
CONST	ENDS
;	COMDAT ??_R4CDownloadPercentWnd@@6B@
rdata$r	SEGMENT
??_R4CDownloadPercentWnd@@6B@ DD 00H			; CDownloadPercentWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDownloadPercentWnd@@@8
	DD	FLAT:??_R3CDownloadPercentWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDownloadPercentWnd@@@8
_DATA	SEGMENT
??_R0?AVCDownloadPercentWnd@@@8 DD FLAT:??_7type_info@@6B@ ; CDownloadPercentWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDownloadPercentWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CDownloadPercentWnd@@8
rdata$r	SEGMENT
??_R3CDownloadPercentWnd@@8 DD 00H			; CDownloadPercentWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDownloadPercentWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CDownloadPercentWnd@@8
rdata$r	SEGMENT
??_R2CDownloadPercentWnd@@8 DD FLAT:??_R1A@?0A@A@CDownloadPercentWnd@@8 ; CDownloadPercentWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@CWnd@@8
	DD	FLAT:??_R1A@?0A@A@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@A@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CDownloadPercentWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CDownloadPercentWnd@@8 DD FLAT:??_R0?AVCDownloadPercentWnd@@@8 ; CDownloadPercentWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
; Function compile flags: /Odt
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDownloadPercentWnd@@QAE@XZ PROC NEAR		; CDownloadPercentWnd::CDownloadPercentWnd
; _this$ = ecx

; 15   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	6a ff		 push	 -1
  00025	68 00 00 00 00	 push	 __ehhandler$??0CDownloadPercentWnd@@QAE@XZ
  0002a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00030	50		 push	 eax
  00031	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00038	51		 push	 ecx
  00039	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDownloadPercentWnd@@6B@
  00054	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	83 c1 54	 add	 ecx, 84			; 00000054H
  0005a	e8 00 00 00 00	 call	 ??0CColorSlide@@QAE@XZ	; CColorSlide::CColorSlide
  0005f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00063	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  0006c	e8 00 00 00 00	 call	 ??0CStaticText@@QAE@XZ	; CStaticText::CStaticText
  00071	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00075	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	81 c1 80 01 00
	00		 add	 ecx, 384		; 00000180H
  0007e	e8 00 00 00 00	 call	 ??0CStaticText@@QAE@XZ	; CStaticText::CStaticText

; 16   : 	m_pEvnet	= NULL;

  00083	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	c7 81 20 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+544], 0

; 17   : 	m_pDown		= NULL;

  00090	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00093	c7 82 24 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+548], 0

; 18   : }

  0009d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000aa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L199746:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
$L199747:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 54	 add	 ecx, 84			; 00000054H
  0000e	e9 00 00 00 00	 jmp	 ??1CColorSlide@@UAE@XZ	; CColorSlide::~CColorSlide
$L199748:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  0001c	e9 00 00 00 00	 jmp	 ??1CStaticText@@UAE@XZ	; CStaticText::~CStaticText
__ehhandler$??0CDownloadPercentWnd@@QAE@XZ:
  00021	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199753
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CDownloadPercentWnd@@QAE@XZ ENDP			; CDownloadPercentWnd::CDownloadPercentWnd
PUBLIC	??1CDownloadPercentWnd@@UAE@XZ			; CDownloadPercentWnd::~CDownloadPercentWnd
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
; Function compile flags: /Odt
;	COMDAT ??_GCDownloadPercentWnd@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDownloadPercentWnd@@UAEPAXI@Z PROC NEAR		; CDownloadPercentWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDownloadPercentWnd@@UAE@XZ ; CDownloadPercentWnd::~CDownloadPercentWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 09		 je	 SHORT $L199047
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L199047:
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??_GCDownloadPercentWnd@@UAEPAXI@Z ENDP			; CDownloadPercentWnd::`scalar deleting destructor'
_TEXT	ENDS
xdata$x	SEGMENT
$T199768 DD	0ffffffffH
	DD	FLAT:$L199761
	DD	00H
	DD	FLAT:$L199762
	DD	01H
	DD	FLAT:$L199763
$T199766 DD	019930520H
	DD	03H
	DD	FLAT:$T199768
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDownloadPercentWnd@@UAE@XZ PROC NEAR		; CDownloadPercentWnd::~CDownloadPercentWnd
; _this$ = ecx

; 21   : {

  000c0	55		 push	 ebp
  000c1	8b ec		 mov	 ebp, esp
  000c3	6a ff		 push	 -1
  000c5	68 00 00 00 00	 push	 __ehhandler$??1CDownloadPercentWnd@@UAE@XZ
  000ca	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  000d0	50		 push	 eax
  000d1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  000d8	51		 push	 ecx
  000d9	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  000dc	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000df	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDownloadPercentWnd@@6B@
  000e5	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2

; 22   : }

  000ec	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	81 c1 80 01 00
	00		 add	 ecx, 384		; 00000180H
  000f5	e8 00 00 00 00	 call	 ??1CStaticText@@UAE@XZ	; CStaticText::~CStaticText
  000fa	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000fe	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00101	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00107	e8 00 00 00 00	 call	 ??1CStaticText@@UAE@XZ	; CStaticText::~CStaticText
  0010c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00110	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	83 c1 54	 add	 ecx, 84			; 00000054H
  00116	e8 00 00 00 00	 call	 ??1CColorSlide@@UAE@XZ	; CColorSlide::~CColorSlide
  0011b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00122	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  0012a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0012d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L199761:
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e9 00 00 00 00	 jmp	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
$L199762:
  00033	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	83 c1 54	 add	 ecx, 84			; 00000054H
  00039	e9 00 00 00 00	 jmp	 ??1CColorSlide@@UAE@XZ	; CColorSlide::~CColorSlide
$L199763:
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00047	e9 00 00 00 00	 jmp	 ??1CStaticText@@UAE@XZ	; CStaticText::~CStaticText
__ehhandler$??1CDownloadPercentWnd@@UAE@XZ:
  0004c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199766
  00051	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CDownloadPercentWnd@@UAE@XZ ENDP			; CDownloadPercentWnd::~CDownloadPercentWnd
PUBLIC	?GetThisMessageMap@CDownloadPercentWnd@@KGPBUAFX_MSGMAP@@XZ ; CDownloadPercentWnd::GetThisMessageMap
; Function compile flags: /Odt
_TEXT	SEGMENT
?GetThisMessageMap@CDownloadPercentWnd@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CDownloadPercentWnd::GetThisMessageMap

; 24   : BEGIN_MESSAGE_MAP(CDownloadPercentWnd, CWnd)

  00140	55		 push	 ebp
  00141	8b ec		 mov	 ebp, esp
  00143	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CDownloadPercentWnd@@1UAFX_MSGMAP@@B ; CDownloadPercentWnd::messageMap
  00148	5d		 pop	 ebp
  00149	c3		 ret	 0
?GetThisMessageMap@CDownloadPercentWnd@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDownloadPercentWnd::GetThisMessageMap
; Function compile flags: /Odt
_this$ = -4						; size = 4
?GetMessageMap@CDownloadPercentWnd@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CDownloadPercentWnd::GetMessageMap
; _this$ = ecx

; 24   : BEGIN_MESSAGE_MAP(CDownloadPercentWnd, CWnd)

  00150	55		 push	 ebp
  00151	8b ec		 mov	 ebp, esp
  00153	51		 push	 ecx
  00154	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00157	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CDownloadPercentWnd@@1UAFX_MSGMAP@@B ; CDownloadPercentWnd::messageMap
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c3		 ret	 0
?GetMessageMap@CDownloadPercentWnd@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDownloadPercentWnd::GetMessageMap
_TEXT	ENDS
PUBLIC	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetClientRect
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z	; CWnd::OnCreate
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
EXTRN	?SetSliderCtrlType@CColorSlide@@QAEXW4ColorSlideType@@@Z:NEAR ; CColorSlide::SetSliderCtrlType
EXTRN	?SetRange@CColorSlide@@QAEXHH@Z:NEAR		; CColorSlide::SetRange
EXTRN	?SetBKColor@CColorSlide@@QAEXKKI@Z:NEAR		; CColorSlide::SetBKColor
EXTRN	?AfxGetUIManager@@YAPAVIUIManager@@XZ:NEAR	; AfxGetUIManager
; Function compile flags: /Odt
_TEXT	SEGMENT
tv187 = -92						; size = 4
tv182 = -88						; size = 4
tv155 = -84						; size = 4
tv150 = -80						; size = 4
tv79 = -76						; size = 4
tv74 = -72						; size = 4
_this$ = -68						; size = 4
_clientlRect$ = -64					; size = 16
_percentRect$ = -48					; size = 16
_hintRect$ = -32					; size = 16
_slideRect$ = -16					; size = 16
_lpCreateStruct$ = 8					; size = 4
?OnCreate@CDownloadPercentWnd@@QAEHPAUtagCREATESTRUCTA@@@Z PROC NEAR ; CDownloadPercentWnd::OnCreate
; _this$ = ecx

; 33   : {

  00160	55		 push	 ebp
  00161	8b ec		 mov	 ebp, esp
  00163	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00166	89 4d bc	 mov	 DWORD PTR _this$[ebp], ecx

; 34   : 	if (CWnd::OnCreate(lpCreateStruct) == -1)

  00169	8b 45 08	 mov	 eax, DWORD PTR _lpCreateStruct$[ebp]
  0016c	50		 push	 eax
  0016d	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00170	e8 00 00 00 00	 call	 ?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z ; CWnd::OnCreate
  00175	83 f8 ff	 cmp	 eax, -1
  00178	75 08		 jne	 SHORT $L199083

; 35   : 		return -1;

  0017a	83 c8 ff	 or	 eax, -1
  0017d	e9 36 02 00 00	 jmp	 $L199082
$L199083:

; 36   : 
; 37   : 	CRect clientlRect;

  00182	8d 4d c0	 lea	 ecx, DWORD PTR _clientlRect$[ebp]
  00185	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 38   : 	GetClientRect( &clientlRect );

  0018a	8d 4d c0	 lea	 ecx, DWORD PTR _clientlRect$[ebp]
  0018d	51		 push	 ecx
  0018e	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00191	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 39   : 
; 40   : 	CRect slideRect;

  00196	8d 4d f0	 lea	 ecx, DWORD PTR _slideRect$[ebp]
  00199	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 41   : 	slideRect = clientlRect;

  0019e	8b 55 c0	 mov	 edx, DWORD PTR _clientlRect$[ebp]
  001a1	89 55 f0	 mov	 DWORD PTR _slideRect$[ebp], edx
  001a4	8b 45 c4	 mov	 eax, DWORD PTR _clientlRect$[ebp+4]
  001a7	89 45 f4	 mov	 DWORD PTR _slideRect$[ebp+4], eax
  001aa	8b 4d c8	 mov	 ecx, DWORD PTR _clientlRect$[ebp+8]
  001ad	89 4d f8	 mov	 DWORD PTR _slideRect$[ebp+8], ecx
  001b0	8b 55 cc	 mov	 edx, DWORD PTR _clientlRect$[ebp+12]
  001b3	89 55 fc	 mov	 DWORD PTR _slideRect$[ebp+12], edx

; 42   : 
; 43   : 	if( AfxGetUIManager()->UIGetLayoutMgr()->GetDisplayMode() == DISPLAY_SEPERATE_MODE )

  001b6	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  001bb	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
  001be	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]
  001c1	8b 10		 mov	 edx, DWORD PTR [eax]
  001c3	8b 4d b8	 mov	 ecx, DWORD PTR tv74[ebp]
  001c6	ff 52 24	 call	 DWORD PTR [edx+36]
  001c9	89 45 b4	 mov	 DWORD PTR tv79[ebp], eax
  001cc	8b 45 b4	 mov	 eax, DWORD PTR tv79[ebp]
  001cf	8b 10		 mov	 edx, DWORD PTR [eax]
  001d1	8b 4d b4	 mov	 ecx, DWORD PTR tv79[ebp]
  001d4	ff 52 7c	 call	 DWORD PTR [edx+124]
  001d7	85 c0		 test	 eax, eax
  001d9	75 0b		 jne	 SHORT $L199086

; 44   : 	{
; 45   : 		slideRect.top += 5;

  001db	8b 45 f4	 mov	 eax, DWORD PTR _slideRect$[ebp+4]
  001de	83 c0 05	 add	 eax, 5
  001e1	89 45 f4	 mov	 DWORD PTR _slideRect$[ebp+4], eax

; 46   : 	}
; 47   : 	else

  001e4	eb 09		 jmp	 SHORT $L199087
$L199086:

; 48   : 	{
; 49   : 		slideRect.top += 15;

  001e6	8b 4d f4	 mov	 ecx, DWORD PTR _slideRect$[ebp+4]
  001e9	83 c1 0f	 add	 ecx, 15			; 0000000fH
  001ec	89 4d f4	 mov	 DWORD PTR _slideRect$[ebp+4], ecx
$L199087:

; 50   : 	}
; 51   : 	slideRect.left += 15;

  001ef	8b 55 f0	 mov	 edx, DWORD PTR _slideRect$[ebp]
  001f2	83 c2 0f	 add	 edx, 15			; 0000000fH
  001f5	89 55 f0	 mov	 DWORD PTR _slideRect$[ebp], edx

; 52   : 	slideRect.bottom = slideRect.top + 10;

  001f8	8b 45 f4	 mov	 eax, DWORD PTR _slideRect$[ebp+4]
  001fb	83 c0 0a	 add	 eax, 10			; 0000000aH
  001fe	89 45 fc	 mov	 DWORD PTR _slideRect$[ebp+12], eax

; 53   : 	slideRect.right -= 25;

  00201	8b 4d f8	 mov	 ecx, DWORD PTR _slideRect$[ebp+8]
  00204	83 e9 19	 sub	 ecx, 25			; 00000019H
  00207	89 4d f8	 mov	 DWORD PTR _slideRect$[ebp+8], ecx

; 54   : 
; 55   : 	m_downLoadSlide.Create( WS_VISIBLE|WS_CHILD, slideRect, this, 10000-6 );

  0020a	68 0a 27 00 00	 push	 9994			; 0000270aH
  0020f	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  00212	52		 push	 edx
  00213	8d 45 f0	 lea	 eax, DWORD PTR _slideRect$[ebp]
  00216	50		 push	 eax
  00217	68 00 00 00 50	 push	 1342177280		; 50000000H
  0021c	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021f	83 c1 54	 add	 ecx, 84			; 00000054H
  00222	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  00225	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  00228	ff 90 38 01 00
	00		 call	 DWORD PTR [eax+312]

; 56   : 	m_downLoadSlide.SetSliderCtrlType( PERCENT_SLIDE );

  0022e	6a 00		 push	 0
  00230	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00233	83 c1 54	 add	 ecx, 84			; 00000054H
  00236	e8 00 00 00 00	 call	 ?SetSliderCtrlType@CColorSlide@@QAEXW4ColorSlideType@@@Z ; CColorSlide::SetSliderCtrlType

; 57   : 	m_downLoadSlide.SetBKColor( RGB(31,233,29),RGB(243,243,243),0 );

  0023b	6a 00		 push	 0
  0023d	68 f3 f3 f3 00	 push	 15987699		; 00f3f3f3H
  00242	68 1f e9 1d 00	 push	 1960223			; 001de91fH
  00247	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0024a	83 c1 54	 add	 ecx, 84			; 00000054H
  0024d	e8 00 00 00 00	 call	 ?SetBKColor@CColorSlide@@QAEXKKI@Z ; CColorSlide::SetBKColor

; 58   : 	m_downLoadSlide.SetRange( 0, 100 );

  00252	6a 64		 push	 100			; 00000064H
  00254	6a 00		 push	 0
  00256	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00259	83 c1 54	 add	 ecx, 84			; 00000054H
  0025c	e8 00 00 00 00	 call	 ?SetRange@CColorSlide@@QAEXHH@Z ; CColorSlide::SetRange

; 59   : 	m_downLoadSlide.ShowWindow( SW_SHOW );

  00261	6a 05		 push	 5
  00263	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00266	83 c1 54	 add	 ecx, 84			; 00000054H
  00269	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 60   : 
; 61   : 	CRect hintRect;

  0026e	8d 4d e0	 lea	 ecx, DWORD PTR _hintRect$[ebp]
  00271	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 62   : 	hintRect = clientlRect;

  00276	8b 4d c0	 mov	 ecx, DWORD PTR _clientlRect$[ebp]
  00279	89 4d e0	 mov	 DWORD PTR _hintRect$[ebp], ecx
  0027c	8b 55 c4	 mov	 edx, DWORD PTR _clientlRect$[ebp+4]
  0027f	89 55 e4	 mov	 DWORD PTR _hintRect$[ebp+4], edx
  00282	8b 45 c8	 mov	 eax, DWORD PTR _clientlRect$[ebp+8]
  00285	89 45 e8	 mov	 DWORD PTR _hintRect$[ebp+8], eax
  00288	8b 4d cc	 mov	 ecx, DWORD PTR _clientlRect$[ebp+12]
  0028b	89 4d ec	 mov	 DWORD PTR _hintRect$[ebp+12], ecx

; 63   : 	if( AfxGetUIManager()->UIGetLayoutMgr()->GetDisplayMode() == DISPLAY_SEPERATE_MODE )

  0028e	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  00293	89 45 b0	 mov	 DWORD PTR tv150[ebp], eax
  00296	8b 55 b0	 mov	 edx, DWORD PTR tv150[ebp]
  00299	8b 02		 mov	 eax, DWORD PTR [edx]
  0029b	8b 4d b0	 mov	 ecx, DWORD PTR tv150[ebp]
  0029e	ff 50 24	 call	 DWORD PTR [eax+36]
  002a1	89 45 ac	 mov	 DWORD PTR tv155[ebp], eax
  002a4	8b 4d ac	 mov	 ecx, DWORD PTR tv155[ebp]
  002a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  002a9	8b 4d ac	 mov	 ecx, DWORD PTR tv155[ebp]
  002ac	ff 52 7c	 call	 DWORD PTR [edx+124]
  002af	85 c0		 test	 eax, eax
  002b1	75 0b		 jne	 SHORT $L199101

; 64   : 	{
; 65   : 		hintRect.top += 18;

  002b3	8b 45 e4	 mov	 eax, DWORD PTR _hintRect$[ebp+4]
  002b6	83 c0 12	 add	 eax, 18			; 00000012H
  002b9	89 45 e4	 mov	 DWORD PTR _hintRect$[ebp+4], eax

; 66   : 	}
; 67   : 	else

  002bc	eb 09		 jmp	 SHORT $L199102
$L199101:

; 68   : 	{
; 69   : 		hintRect.top += 33;

  002be	8b 4d e4	 mov	 ecx, DWORD PTR _hintRect$[ebp+4]
  002c1	83 c1 21	 add	 ecx, 33			; 00000021H
  002c4	89 4d e4	 mov	 DWORD PTR _hintRect$[ebp+4], ecx
$L199102:

; 70   : 	}
; 71   : 	hintRect.left += 18;

  002c7	8b 55 e0	 mov	 edx, DWORD PTR _hintRect$[ebp]
  002ca	83 c2 12	 add	 edx, 18			; 00000012H
  002cd	89 55 e0	 mov	 DWORD PTR _hintRect$[ebp], edx

; 72   : 	hintRect.bottom = hintRect.top + 13;

  002d0	8b 45 e4	 mov	 eax, DWORD PTR _hintRect$[ebp+4]
  002d3	83 c0 0d	 add	 eax, 13			; 0000000dH
  002d6	89 45 ec	 mov	 DWORD PTR _hintRect$[ebp+12], eax

; 73   : 
; 74   : 	m_textHit.Create( NULL, 5, hintRect, this, 10000-7 );

  002d9	68 09 27 00 00	 push	 9993			; 00002709H
  002de	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e1	51		 push	 ecx
  002e2	8d 55 e0	 lea	 edx, DWORD PTR _hintRect$[ebp]
  002e5	52		 push	 edx
  002e6	6a 05		 push	 5
  002e8	6a 00		 push	 0
  002ea	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ed	81 c1 80 01 00
	00		 add	 ecx, 384		; 00000180H
  002f3	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  002f6	8b 90 80 01 00
	00		 mov	 edx, DWORD PTR [eax+384]
  002fc	ff 92 38 01 00
	00		 call	 DWORD PTR [edx+312]

; 75   : 	m_textHit.ShowWindow(SW_SHOW);

  00302	6a 05		 push	 5
  00304	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00307	81 c1 80 01 00
	00		 add	 ecx, 384		; 00000180H
  0030d	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 76   : 
; 77   : 	CRect percentRect;

  00312	8d 4d d0	 lea	 ecx, DWORD PTR _percentRect$[ebp]
  00315	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 78   : 	percentRect = clientlRect;

  0031a	8b 45 c0	 mov	 eax, DWORD PTR _clientlRect$[ebp]
  0031d	89 45 d0	 mov	 DWORD PTR _percentRect$[ebp], eax
  00320	8b 4d c4	 mov	 ecx, DWORD PTR _clientlRect$[ebp+4]
  00323	89 4d d4	 mov	 DWORD PTR _percentRect$[ebp+4], ecx
  00326	8b 55 c8	 mov	 edx, DWORD PTR _clientlRect$[ebp+8]
  00329	89 55 d8	 mov	 DWORD PTR _percentRect$[ebp+8], edx
  0032c	8b 45 cc	 mov	 eax, DWORD PTR _clientlRect$[ebp+12]
  0032f	89 45 dc	 mov	 DWORD PTR _percentRect$[ebp+12], eax

; 79   : 	if( AfxGetUIManager()->UIGetLayoutMgr()->GetDisplayMode() == DISPLAY_SEPERATE_MODE )

  00332	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  00337	89 45 a8	 mov	 DWORD PTR tv182[ebp], eax
  0033a	8b 4d a8	 mov	 ecx, DWORD PTR tv182[ebp]
  0033d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0033f	8b 4d a8	 mov	 ecx, DWORD PTR tv182[ebp]
  00342	ff 52 24	 call	 DWORD PTR [edx+36]
  00345	89 45 a4	 mov	 DWORD PTR tv187[ebp], eax
  00348	8b 45 a4	 mov	 eax, DWORD PTR tv187[ebp]
  0034b	8b 10		 mov	 edx, DWORD PTR [eax]
  0034d	8b 4d a4	 mov	 ecx, DWORD PTR tv187[ebp]
  00350	ff 52 7c	 call	 DWORD PTR [edx+124]
  00353	85 c0		 test	 eax, eax
  00355	75 0b		 jne	 SHORT $L199104

; 80   : 	{
; 81   : 		percentRect.top += 5;

  00357	8b 45 d4	 mov	 eax, DWORD PTR _percentRect$[ebp+4]
  0035a	83 c0 05	 add	 eax, 5
  0035d	89 45 d4	 mov	 DWORD PTR _percentRect$[ebp+4], eax

; 82   : 	}
; 83   : 	else

  00360	eb 09		 jmp	 SHORT $L199105
$L199104:

; 84   : 	{
; 85   : 		percentRect.top += 15;

  00362	8b 4d d4	 mov	 ecx, DWORD PTR _percentRect$[ebp+4]
  00365	83 c1 0f	 add	 ecx, 15			; 0000000fH
  00368	89 4d d4	 mov	 DWORD PTR _percentRect$[ebp+4], ecx
$L199105:

; 86   : 	}
; 87   : 
; 88   : 	percentRect.bottom = percentRect.top + 13;

  0036b	8b 55 d4	 mov	 edx, DWORD PTR _percentRect$[ebp+4]
  0036e	83 c2 0d	 add	 edx, 13			; 0000000dH
  00371	89 55 dc	 mov	 DWORD PTR _percentRect$[ebp+12], edx

; 89   : 	percentRect.left = percentRect.right - 25;

  00374	8b 45 d8	 mov	 eax, DWORD PTR _percentRect$[ebp+8]
  00377	83 e8 19	 sub	 eax, 25			; 00000019H
  0037a	89 45 d0	 mov	 DWORD PTR _percentRect$[ebp], eax

; 90   : 		
; 91   : 	m_textPercent.Create( NULL, 5, percentRect, this, 10000-8 );

  0037d	68 08 27 00 00	 push	 9992			; 00002708H
  00382	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00385	51		 push	 ecx
  00386	8d 55 d0	 lea	 edx, DWORD PTR _percentRect$[ebp]
  00389	52		 push	 edx
  0038a	6a 05		 push	 5
  0038c	6a 00		 push	 0
  0038e	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00391	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00397	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  0039a	8b 90 e0 00 00
	00		 mov	 edx, DWORD PTR [eax+224]
  003a0	ff 92 38 01 00
	00		 call	 DWORD PTR [edx+312]

; 92   : 	m_textPercent.ShowWindow(SW_SHOW);

  003a6	6a 05		 push	 5
  003a8	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ab	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  003b1	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 93   : 	return 0;

  003b6	33 c0		 xor	 eax, eax
$L199082:

; 94   : }

  003b8	8b e5		 mov	 esp, ebp
  003ba	5d		 pop	 ebp
  003bb	c2 04 00	 ret	 4
?OnCreate@CDownloadPercentWnd@@QAEHPAUtagCREATESTRUCTA@@@Z ENDP ; CDownloadPercentWnd::OnCreate
_TEXT	ENDS
PUBLIC	?SetDownloadHit@CDownloadPercentWnd@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CDownloadPercentWnd::SetDownloadHit
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:NEAR
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	?SetWindowTextA@CWnd@@QAEXPBD@Z:NEAR		; CWnd::SetWindowTextA
xdata$x	SEGMENT
$T199777 DD	0ffffffffH
	DD	FLAT:$L199773
$T199775 DD	019930520H
	DD	01H
	DD	FLAT:$T199777
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
?SetDownloadHit@CDownloadPercentWnd@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC NEAR ; CDownloadPercentWnd::SetDownloadHit
; _this$ = ecx

; 96   : {

  003c0	55		 push	 ebp
  003c1	8b ec		 mov	 ebp, esp
  003c3	6a ff		 push	 -1
  003c5	68 00 00 00 00	 push	 __ehhandler$?SetDownloadHit@CDownloadPercentWnd@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
  003ca	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  003d0	50		 push	 eax
  003d1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  003d8	51		 push	 ecx
  003d9	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  003dc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 97   : 	m_textHit.SetWindowText( str );

  003e3	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  003e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  003ec	50		 push	 eax
  003ed	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003f0	81 c1 80 01 00
	00		 add	 ecx, 384		; 00000180H
  003f6	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 98   : }

  003fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00402	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  00405	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0040b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0040e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00415	8b e5		 mov	 esp, ebp
  00417	5d		 pop	 ebp
  00418	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L199773:
  00056	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  00059	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?SetDownloadHit@CDownloadPercentWnd@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:
  0005f	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199775
  00064	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetDownloadHit@CDownloadPercentWnd@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CDownloadPercentWnd::SetDownloadHit
PUBLIC	?SetDownloadPercent@CDownloadPercentWnd@@QAEXH@Z ; CDownloadPercentWnd::SetDownloadPercent
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	__imp_??Y?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:NEAR
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:NEAR
EXTRN	?SetButtonPos@CColorSlide@@QAEXH@Z:NEAR		; CColorSlide::SetButtonPos
xdata$x	SEGMENT
$T199783 DD	0ffffffffH
	DD	FLAT:$L199779
$T199781 DD	019930520H
	DD	01H
	DD	FLAT:$T199783
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -20						; size = 4
_str$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_percentage$ = 8					; size = 4
?SetDownloadPercent@CDownloadPercentWnd@@QAEXH@Z PROC NEAR ; CDownloadPercentWnd::SetDownloadPercent
; _this$ = ecx

; 101  : {

  00420	55		 push	 ebp
  00421	8b ec		 mov	 ebp, esp
  00423	6a ff		 push	 -1
  00425	68 00 00 00 00	 push	 __ehhandler$?SetDownloadPercent@CDownloadPercentWnd@@QAEXH@Z
  0042a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00430	50		 push	 eax
  00431	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00438	83 ec 08	 sub	 esp, 8
  0043b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 102  : 	if( ( percentage<0)||(percentage>100) ) 

  0043e	83 7d 08 00	 cmp	 DWORD PTR _percentage$[ebp], 0
  00442	7c 06		 jl	 SHORT $L199115
  00444	83 7d 08 64	 cmp	 DWORD PTR _percentage$[ebp], 100 ; 00000064H
  00448	7e 02		 jle	 SHORT $L199114
$L199115:

; 103  : 		return;

  0044a	eb 6b		 jmp	 SHORT $L199113
$L199114:

; 104  : 	CString str;

  0044c	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  0044f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00455	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  : 	str.Format( "%d", percentage );

  0045c	8b 45 08	 mov	 eax, DWORD PTR _percentage$[ebp]
  0045f	50		 push	 eax
  00460	68 00 00 00 00	 push	 OFFSET FLAT:$SG199117
  00465	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  00468	51		 push	 ecx
  00469	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  0046f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	str += "%";

  00472	68 00 00 00 00	 push	 OFFSET FLAT:$SG199118
  00477	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  0047a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Y?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z

; 107  : 	m_textPercent.SetWindowText( str );

  00480	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  00483	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00489	50		 push	 eax
  0048a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0048d	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00493	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 108  : 	m_downLoadSlide.SetButtonPos( percentage );

  00498	8b 55 08	 mov	 edx, DWORD PTR _percentage$[ebp]
  0049b	52		 push	 edx
  0049c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0049f	83 c1 54	 add	 ecx, 84			; 00000054H
  004a2	e8 00 00 00 00	 call	 ?SetButtonPos@CColorSlide@@QAEXH@Z ; CColorSlide::SetButtonPos

; 109  : }

  004a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ae	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  004b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$L199113:
  004b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004c1	8b e5		 mov	 esp, ebp
  004c3	5d		 pop	 ebp
  004c4	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L199779:
  00069	8d 4d f0	 lea	 ecx, DWORD PTR _str$[ebp]
  0006c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?SetDownloadPercent@CDownloadPercentWnd@@QAEXH@Z:
  00072	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199781
  00077	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetDownloadPercent@CDownloadPercentWnd@@QAEXH@Z ENDP	; CDownloadPercentWnd::SetDownloadPercent
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	?FillRectangle@CBitMapOperate@@UAEXPAUHDC__@@UtagRECT@@KH@Z:NEAR ; CBitMapOperate::FillRectangle
EXTRN	?getColor@CWndColorMgr@@QAEPAUCtrColBase@@I@Z:NEAR ; CWndColorMgr::getColor
EXTRN	?gBitMapOperate@@3VCBitMapOperate@@A:BYTE	; gBitMapOperate
EXTRN	?gWndColor@@3VCWndColorMgr@@A:DWORD		; gWndColor
EXTRN	??0CPaintDC@@QAE@PAVCWnd@@@Z:NEAR		; CPaintDC::CPaintDC
EXTRN	??1CPaintDC@@UAE@XZ:NEAR			; CPaintDC::~CPaintDC
xdata$x	SEGMENT
$T199794 DD	0ffffffffH
	DD	FLAT:$L199787
$T199789 DD	019930520H
	DD	01H
	DD	FLAT:$T199794
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -144						; size = 4
$T199786 = -140						; size = 16
_dc$ = -124						; size = 84
__$ArrayPad$ = -32					; size = 4
_rect$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnPaint@CDownloadPercentWnd@@QAEXXZ PROC NEAR		; CDownloadPercentWnd::OnPaint
; _this$ = ecx

; 112  : {

  004d0	55		 push	 ebp
  004d1	8b ec		 mov	 ebp, esp
  004d3	6a ff		 push	 -1
  004d5	68 00 00 00 00	 push	 __ehhandler$?OnPaint@CDownloadPercentWnd@@QAEXXZ
  004da	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  004e0	50		 push	 eax
  004e1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  004e8	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  004ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  004f3	89 45 e0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  004f6	89 8d 70 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 113  : 	CPaintDC dc(this);

  004fc	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00502	50		 push	 eax
  00503	8d 4d 84	 lea	 ecx, DWORD PTR _dc$[ebp]
  00506	e8 00 00 00 00	 call	 ??0CPaintDC@@QAE@PAVCWnd@@@Z ; CPaintDC::CPaintDC
  0050b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 114  : 	CRect rect;

  00512	8d 4d e4	 lea	 ecx, DWORD PTR _rect$[ebp]
  00515	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 115  : 	GetClientRect( &rect );

  0051a	8d 4d e4	 lea	 ecx, DWORD PTR _rect$[ebp]
  0051d	51		 push	 ecx
  0051e	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00524	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 116  : 	gBitMapOperate.FillRectangle( dc.m_hDC, rect, 
; 117  : 		gWndColor.getColor(TABLE_CTROL)->structColBase->colBK, true );

  00529	8b 55 e4	 mov	 edx, DWORD PTR _rect$[ebp]
  0052c	89 95 74 ff ff
	ff		 mov	 DWORD PTR $T199786[ebp], edx
  00532	8b 45 e8	 mov	 eax, DWORD PTR _rect$[ebp+4]
  00535	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T199786[ebp+4], eax
  0053b	8b 4d ec	 mov	 ecx, DWORD PTR _rect$[ebp+8]
  0053e	89 8d 7c ff ff
	ff		 mov	 DWORD PTR $T199786[ebp+8], ecx
  00544	8b 55 f0	 mov	 edx, DWORD PTR _rect$[ebp+12]
  00547	89 55 80	 mov	 DWORD PTR $T199786[ebp+12], edx
  0054a	6a 01		 push	 1
  0054c	6a 02		 push	 2
  0054e	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?gWndColor@@3VCWndColorMgr@@A ; gWndColor
  00553	e8 00 00 00 00	 call	 ?getColor@CWndColorMgr@@QAEPAUCtrColBase@@I@Z ; CWndColorMgr::getColor
  00558	8b 00		 mov	 eax, DWORD PTR [eax]
  0055a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0055d	51		 push	 ecx
  0055e	83 ec 10	 sub	 esp, 16			; 00000010H
  00561	8b d4		 mov	 edx, esp
  00563	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR $T199786[ebp]
  00569	89 02		 mov	 DWORD PTR [edx], eax
  0056b	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR $T199786[ebp+4]
  00571	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00574	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR $T199786[ebp+8]
  0057a	89 42 08	 mov	 DWORD PTR [edx+8], eax
  0057d	8b 4d 80	 mov	 ecx, DWORD PTR $T199786[ebp+12]
  00580	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  00583	8b 55 88	 mov	 edx, DWORD PTR _dc$[ebp+4]
  00586	52		 push	 edx
  00587	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?gBitMapOperate@@3VCBitMapOperate@@A
  0058c	e8 00 00 00 00	 call	 ?FillRectangle@CBitMapOperate@@UAEXPAUHDC__@@UtagRECT@@KH@Z ; CBitMapOperate::FillRectangle

; 118  : }

  00591	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00598	8d 4d 84	 lea	 ecx, DWORD PTR _dc$[ebp]
  0059b	e8 00 00 00 00	 call	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
  005a0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  005a3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  005aa	8b 4d e0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  005ad	e8 00 00 00 00	 call	 @__security_check_cookie@4
  005b2	8b e5		 mov	 esp, ebp
  005b4	5d		 pop	 ebp
  005b5	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L199787:
  0007c	8d 4d 84	 lea	 ecx, DWORD PTR _dc$[ebp]
  0007f	e9 00 00 00 00	 jmp	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
__ehhandler$?OnPaint@CDownloadPercentWnd@@QAEXXZ:
  00084	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199789
  00089	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnPaint@CDownloadPercentWnd@@QAEXXZ ENDP		; CDownloadPercentWnd::OnPaint
PUBLIC	?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z	; CWnd::SetTimer
EXTRN	__imp__GetTickCount@0:NEAR
; Function compile flags: /Odt
_TEXT	SEGMENT
_this$ = -4						; size = 4
_w$ = 8							; size = 4
___formal$ = 12						; size = 4
?OnDownSubStart@CDownloadPercentWnd@@QAEJIJ@Z PROC NEAR	; CDownloadPercentWnd::OnDownSubStart
; _this$ = ecx

; 121  : {

  005c0	55		 push	 ebp
  005c1	8b ec		 mov	 ebp, esp
  005c3	51		 push	 ecx
  005c4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 122  : 	SetTimer(TIMER_CHECK_DOWN,500,NULL );

  005c7	6a 00		 push	 0
  005c9	68 f4 01 00 00	 push	 500			; 000001f4H
  005ce	6a 64		 push	 100			; 00000064H
  005d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005d3	e8 00 00 00 00	 call	 ?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z ; CWnd::SetTimer

; 123  : 	if(false)

  005d8	33 c0		 xor	 eax, eax
  005da	74 3c		 je	 SHORT $L199130

; 124  : 	{
; 125  : 		m_iDownPercent = GetTickCount() % 20 + 10;

  005dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  005e2	33 d2		 xor	 edx, edx
  005e4	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  005e9	f7 f1		 div	 ecx
  005eb	83 c2 0a	 add	 edx, 10			; 0000000aH
  005ee	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005f1	89 90 28 02 00
	00		 mov	 DWORD PTR [eax+552], edx

; 126  : 		SetDownloadPercent( m_iDownPercent );

  005f7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005fa	8b 91 28 02 00
	00		 mov	 edx, DWORD PTR [ecx+552]
  00600	52		 push	 edx
  00601	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00604	e8 00 00 00 00	 call	 ?SetDownloadPercent@CDownloadPercentWnd@@QAEXH@Z ; CDownloadPercentWnd::SetDownloadPercent

; 127  : 		m_bNetConnect = TRUE;

  00609	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0060c	c7 80 2c 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+556], 1

; 128  : 	}
; 129  : 	else 

  00616	eb 2c		 jmp	 SHORT $L199131
$L199130:

; 130  : 	{
; 131  : 		m_iDownPercent = 0;

  00618	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0061b	c7 81 28 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+552], 0

; 132  : 		SetDownloadPercent( m_iDownPercent );

  00625	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00628	8b 82 28 02 00
	00		 mov	 eax, DWORD PTR [edx+552]
  0062e	50		 push	 eax
  0062f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00632	e8 00 00 00 00	 call	 ?SetDownloadPercent@CDownloadPercentWnd@@QAEXH@Z ; CDownloadPercentWnd::SetDownloadPercent

; 133  : 		m_bNetConnect = FALSE;

  00637	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0063a	c7 81 2c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+556], 0
$L199131:

; 134  : 	}
; 135  : 
; 136  : 	m_pDown = (YL_CHTTPDownFile*)w;

  00644	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00647	8b 45 08	 mov	 eax, DWORD PTR _w$[ebp]
  0064a	89 82 24 02 00
	00		 mov	 DWORD PTR [edx+548], eax

; 137  : 	return 0;

  00650	33 c0		 xor	 eax, eax

; 138  : }

  00652	8b e5		 mov	 esp, ebp
  00654	5d		 pop	 ebp
  00655	c2 08 00	 ret	 8
?OnDownSubStart@CDownloadPercentWnd@@QAEJIJ@Z ENDP	; CDownloadPercentWnd::OnDownSubStart
_TEXT	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -164				; size = 4
_ver$ = -160						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

  00011	c7 85 60 ff ff
	ff 94 00 00 00	 mov	 DWORD PTR _ver$[ebp], 148 ; 00000094H

; 139  : 	::GetVersionEx( &ver );

  0001b	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _ver$[ebp]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00028	83 bd 70 ff ff
	ff 02		 cmp	 DWORD PTR _ver$[ebp+16], 2
  0002f	75 15		 jne	 SHORT $L24173
  00031	83 bd 64 ff ff
	ff 05		 cmp	 DWORD PTR _ver$[ebp+4], 5
  00038	72 0c		 jb	 SHORT $L24173

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  0003a	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

  00044	eb 0a		 jmp	 SHORT $L24174
$L24173:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00046	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L24174:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  00050	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _pfnGetThreadACP$[ebp]
  00056	51		 push	 ecx
  00057	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  0005c	e8 00 00 00 00	 call	 ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  00061	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 152  : }

  00067	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00003	8b 45 0c	 mov	 eax, DWORD PTR _pNew$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8

; 93   : }

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$24161 = -24					; size = 4
_lcidThread$ = -20					; size = 4
_szACP$ = -16						; size = 7
__$ArrayPad$ = -8					; size = 4
_nACP$ = -4						; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	89 45 f8	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

  0000e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0
  0001b	89 45 ec	 mov	 DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  0001e	6a 07		 push	 7
  00020	8d 45 f0	 lea	 eax, DWORD PTR _szACP$[ebp]
  00023	50		 push	 eax
  00024	68 04 10 00 00	 push	 4100			; 00001004H
  00029	8b 4d ec	 mov	 ecx, DWORD PTR _lcidThread$[ebp]
  0002c	51		 push	 ecx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  00033	85 c0		 test	 eax, eax
  00035	74 34		 je	 SHORT $L24160

; 111  : 	{
; 112  : 		char* pch = szACP;

  00037	8d 55 f0	 lea	 edx, DWORD PTR _szACP$[ebp]
  0003a	89 55 e8	 mov	 DWORD PTR _pch$24161[ebp], edx
$L24163:

; 113  : 		while (*pch != '\0')

  0003d	8b 45 e8	 mov	 eax, DWORD PTR _pch$24161[ebp]
  00040	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00043	85 c9		 test	 ecx, ecx
  00045	74 24		 je	 SHORT $L24160

; 114  : 		{
; 115  : 			nACP *= 10;

  00047	8b 55 fc	 mov	 edx, DWORD PTR _nACP$[ebp]
  0004a	6b d2 0a	 imul	 edx, 10			; 0000000aH
  0004d	89 55 fc	 mov	 DWORD PTR _nACP$[ebp], edx

; 116  : 			nACP += *pch++ - '0';

  00050	8b 45 e8	 mov	 eax, DWORD PTR _pch$24161[ebp]
  00053	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00056	8b 55 fc	 mov	 edx, DWORD PTR _nACP$[ebp]
  00059	8d 44 0a d0	 lea	 eax, DWORD PTR [edx+ecx-48]
  0005d	89 45 fc	 mov	 DWORD PTR _nACP$[ebp], eax
  00060	8b 4d e8	 mov	 ecx, DWORD PTR _pch$24161[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	89 4d e8	 mov	 DWORD PTR _pch$24161[ebp], ecx

; 117  : 		}

  00069	eb d2		 jmp	 SHORT $L24163
$L24160:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  0006b	83 7d fc 00	 cmp	 DWORD PTR _nACP$[ebp], 0
  0006f	75 09		 jne	 SHORT $L24165

; 121  : 		nACP = ::GetACP();

  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  00077	89 45 fc	 mov	 DWORD PTR _nACP$[ebp], eax
$L24165:

; 122  : 
; 123  : 	return nACP;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _nACP$[ebp]

; 124  : }

  0007d	8b 4d f8	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00080	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  : 	return( CP_THREAD_ACP );

  00003	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	?KillTimer@CWnd@@QAEHI@Z			; CWnd::KillTimer
; Function compile flags: /Odt
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\changecolor\downloadpercentwnd.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_w$ = 8							; size = 4
___formal$ = 12						; size = 4
?OnDownSubClose@CDownloadPercentWnd@@QAEJIJ@Z PROC NEAR	; CDownloadPercentWnd::OnDownSubClose
; _this$ = ecx

; 141  : {

  00660	55		 push	 ebp
  00661	8b ec		 mov	 ebp, esp
  00663	51		 push	 ecx
  00664	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 142  : 	KillTimer( TIMER_CHECK_DOWN );

  00667	6a 64		 push	 100			; 00000064H
  00669	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0066c	e8 00 00 00 00	 call	 ?KillTimer@CWnd@@QAEHI@Z ; CWnd::KillTimer

; 143  : 	if( m_pEvnet != NULL )

  00671	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00674	83 b8 20 02 00
	00 00		 cmp	 DWORD PTR [eax+544], 0
  0067b	74 1b		 je	 SHORT $L199138

; 144  : 	{
; 145  : 		m_pEvnet->OnFinishDownSubject(w);

  0067d	8b 4d 08	 mov	 ecx, DWORD PTR _w$[ebp]
  00680	51		 push	 ecx
  00681	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00684	8b 82 20 02 00
	00		 mov	 eax, DWORD PTR [edx+544]
  0068a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0068d	8b 89 20 02 00
	00		 mov	 ecx, DWORD PTR [ecx+544]
  00693	8b 10		 mov	 edx, DWORD PTR [eax]
  00695	ff 52 1c	 call	 DWORD PTR [edx+28]
$L199138:

; 146  : 	}
; 147  : 	return 0;

  00698	33 c0		 xor	 eax, eax

; 148  : }

  0069a	8b e5		 mov	 esp, ebp
  0069c	5d		 pop	 ebp
  0069d	c2 08 00	 ret	 8
?OnDownSubClose@CDownloadPercentWnd@@QAEJIJ@Z ENDP	; CDownloadPercentWnd::OnDownSubClose
_TEXT	ENDS
xdata$x	SEGMENT
$T199815 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T199817 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L199811
$T199816 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T199817
$T199813 DD	019930520H
	DD	02H
	DD	FLAT:$T199815
	DD	01H
	DD	FLAT:$T199816
	DD	2 DUP(00H)
; Function compile flags: /Odt
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_nIDEvent$ = 8						; size = 4
?OnTimer@CDownloadPercentWnd@@QAEXI@Z PROC NEAR		; CDownloadPercentWnd::OnTimer
; _this$ = ecx

; 151  : {

  006a0	55		 push	 ebp
  006a1	8b ec		 mov	 ebp, esp
  006a3	6a ff		 push	 -1
  006a5	68 00 00 00 00	 push	 __ehhandler$?OnTimer@CDownloadPercentWnd@@QAEXI@Z
  006aa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  006b0	50		 push	 eax
  006b1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  006b8	51		 push	 ecx
  006b9	51		 push	 ecx
  006ba	53		 push	 ebx
  006bb	56		 push	 esi
  006bc	57		 push	 edi
  006bd	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  006c0	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 152  : 	if( nIDEvent == TIMER_CHECK_DOWN )

  006c3	83 7d 08 64	 cmp	 DWORD PTR _nIDEvent$[ebp], 100 ; 00000064H
  006c7	75 0f		 jne	 SHORT $L199810

; 153  : 	{
; 154  : 		try
; 155  : 		{

  006c9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  006d0	eb 06		 jmp	 SHORT $L199810
$L199811:

; 156  : 			//m_bNetConnect = CCheckNetConnect::GetInstance()->IsNetConnect();
; 157  : 			//if(m_bNetConnect)
; 158  : 			//{
; 159  : 			//	m_iDownPercent += 10;
; 160  : 			//	if(m_iDownPercent < 99)
; 161  : 			//		SetDownloadPercent(m_iDownPercent);
; 162  : 			//}
; 163  : 		}	
; 164  : 		catch (...)
; 165  : 		{			
; 166  : 		}		

  006d2	b8 00 00 00 00	 mov	 eax, $L199810
  006d7	c3		 ret	 0
$L199810:
  006d8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 167  : 	}
; 168  : 	return ;
; 169  : }

  006df	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  006e2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  006e9	5f		 pop	 edi
  006ea	5e		 pop	 esi
  006eb	5b		 pop	 ebx
  006ec	8b e5		 mov	 esp, ebp
  006ee	5d		 pop	 ebp
  006ef	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?OnTimer@CDownloadPercentWnd@@QAEXI@Z:
  0008e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199813
  00093	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnTimer@CDownloadPercentWnd@@QAEXI@Z ENDP		; CDownloadPercentWnd::OnTimer
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atltypes.inl
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRect@@QAE@XZ PROC NEAR				; CRect::CRect, COMDAT
; _this$ = ecx

; 110  : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afx.inl
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT
; _this$ = ecx

; 25   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Odt
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 31   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT
; _this$ = ecx

; 41   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT
; _this$ = ecx

; 43   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
EXTRN	__imp__GetClientRect@8:NEAR
; Function compile flags: /Odt
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpRect$ = 8						; size = 4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetClientRect, COMDAT
; _this$ = ecx

; 107  : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetClientRect
_TEXT	ENDS
EXTRN	__imp__SetTimer@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIDEvent$ = 8						; size = 4
_nElapse$ = 12						; size = 4
_lpfnTimer$ = 16					; size = 4
?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z PROC NEAR	; CWnd::SetTimer, COMDAT
; _this$ = ecx

; 182  : 	{ ASSERT(::IsWindow(m_hWnd)); return ::SetTimer(m_hWnd, nIDEvent, nElapse,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 183  : 		lpfnTimer); }

  00007	8b 45 10	 mov	 eax, DWORD PTR _lpfnTimer$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _nElapse$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nIDEvent$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTimer@16
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z ENDP	; CWnd::SetTimer
_TEXT	ENDS
EXTRN	__imp__KillTimer@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?KillTimer@CWnd@@QAEHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIDEvent$ = 8						; size = 4
?KillTimer@CWnd@@QAEHI@Z PROC NEAR			; CWnd::KillTimer, COMDAT
; _this$ = ecx

; 185  : 	{ ASSERT(::IsWindow(m_hWnd)); return ::KillTimer(m_hWnd, nIDEvent); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _nIDEvent$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KillTimer@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?KillTimer@CWnd@@QAEHI@Z ENDP				; CWnd::KillTimer
_TEXT	ENDS
EXTRN	?Default@CWnd@@IAEJXZ:NEAR			; CWnd::Default
; Function compile flags: /Odt
;	COMDAT ?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z PROC NEAR	; CWnd::OnCreate, COMDAT
; _this$ = ecx

; 360  : 	{ return (int)Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z ENDP	; CWnd::OnCreate
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 545  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 549  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 551  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
END
