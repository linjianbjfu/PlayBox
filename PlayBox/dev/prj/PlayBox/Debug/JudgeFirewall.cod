; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\module\HTTPControl\JudgeFirewall.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0EN@IBFBLEEG@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_C@_0EN@CBMLGOH@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FG@LDNDNCJM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?s_bTestKwMusic@?1??Test_Ping@@YAXXZ@4HA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_s_iHTTPRes DD	0ffffffffH
_DATA	ENDS
CONST	SEGMENT
$SG187099 DB	'\system32\ping.exe www.baidu.com', 00H
	ORG $+3
$SG187117 DB	'%d,%d', 00H
	ORG $+2
$SG187120 DB	'Firewall', 00H
CONST	ENDS
PUBLIC	?Ping_Thread@@YGKPAX@Z				; Ping_Thread
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	__except_list:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__imp__GetExitCodeProcess@8:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__imp__GetLastError@0:NEAR
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:NEAR
EXTRN	__imp__CreateProcessA@40:NEAR
EXTRN	__imp__WaitForSingleObject@8:NEAR
EXTRN	?GetWindowsDir@YL_DirInfo@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:NEAR ; YL_DirInfo::GetWindowsDir
EXTRN	_memset:NEAR
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:NEAR
EXTRN	__imp__CloseHandle@4:NEAR
;	COMDAT rtc$IMZ
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\httpcontrol\judgefirewall.cpp
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
xdata$x	SEGMENT
$T187564 DD	0ffffffffH
	DD	FLAT:$L187545
$T187549 DD	019930520H
	DD	01H
	DD	FLAT:$T187564
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T187538 = -700						; size = 4
$T187537 = -696						; size = 4
_bExit$ = -692						; size = 4
_dw$ = -684						; size = 4
_strDir$ = -672						; size = 28
_nRet$ = -640						; size = 4
_cmd$ = -632						; size = 512
_pi$ = -112						; size = 16
_si$ = -88						; size = 68
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pArg$ = 8						; size = 4
?Ping_Thread@@YGKPAX@Z PROC NEAR			; Ping_Thread

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Ping_Thread@@YGKPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	81 ec b0 02 00
	00		 sub	 esp, 688		; 000002b0H
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	8d bd 44 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-700]
  00026	b9 ac 00 00 00	 mov	 ecx, 172		; 000000acH
  0002b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00030	f3 ab		 rep stosd
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00037	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 10   : 	STARTUPINFO    		 si;
; 11   : 	PROCESS_INFORMATION  pi;
; 12   : 	char cmd[512];
; 13   : 	int nRet;
; 14   : 
; 15   : 	memset(&si, 0, sizeof (STARTUPINFO)) ;

  0003a	6a 44		 push	 68			; 00000044H
  0003c	6a 00		 push	 0
  0003e	8d 45 a8	 lea	 eax, DWORD PTR _si$[ebp]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 _memset
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH

; 16   : 	si.cb = sizeof (STARTUPINFO) ;

  0004a	c7 45 a8 44 00
	00 00		 mov	 DWORD PTR _si$[ebp], 68	; 00000044H

; 17   : 	si.dwFlags = STARTF_USESHOWWINDOW;

  00051	c7 45 d4 01 00
	00 00		 mov	 DWORD PTR _si$[ebp+44], 1

; 18   : 	si.wShowWindow = SW_HIDE;

  00058	66 c7 45 d8 00
	00		 mov	 WORD PTR _si$[ebp+48], 0

; 19   : 	memset(&pi, 0, sizeof (PROCESS_INFORMATION));

  0005e	6a 10		 push	 16			; 00000010H
  00060	6a 00		 push	 0
  00062	8d 4d 90	 lea	 ecx, DWORD PTR _pi$[ebp]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 _memset
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 20   : 	memset(cmd, 0, 512);

  0006e	68 00 02 00 00	 push	 512			; 00000200H
  00073	6a 00		 push	 0
  00075	8d 95 88 fd ff
	ff		 lea	 edx, DWORD PTR _cmd$[ebp]
  0007b	52		 push	 edx
  0007c	e8 00 00 00 00	 call	 _memset
  00081	83 c4 0c	 add	 esp, 12			; 0000000cH

; 21   : 
; 22   : 	string strDir;

  00084	8b f4		 mov	 esi, esp
  00086	8d 8d 60 fd ff
	ff		 lea	 ecx, DWORD PTR _strDir$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00092	3b f4		 cmp	 esi, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 23   : 	YL_DirInfo::GetWindowsDir(strDir);

  000a0	8d 85 60 fd ff
	ff		 lea	 eax, DWORD PTR _strDir$[ebp]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?GetWindowsDir@YL_DirInfo@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; YL_DirInfo::GetWindowsDir
  000ac	83 c4 04	 add	 esp, 4

; 24   : 	strDir += "\\system32\\ping.exe www.baidu.com";

  000af	8b f4		 mov	 esi, esp
  000b1	68 00 00 00 00	 push	 OFFSET FLAT:$SG187099
  000b6	8d 8d 60 fd ff
	ff		 lea	 ecx, DWORD PTR _strDir$[ebp]
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
  000c2	3b f4		 cmp	 esi, esp
  000c4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 25   : 
; 26   : 	nRet = CreateProcess (NULL,(LPSTR)(strDir.c_str()), NULL, NULL,
; 27   : 		FALSE, (DWORD) NORMAL_PRIORITY_CLASS, NULL,NULL, &si, &pi);

  000c9	8b f4		 mov	 esi, esp
  000cb	8d 4d 90	 lea	 ecx, DWORD PTR _pi$[ebp]
  000ce	51		 push	 ecx
  000cf	8d 55 a8	 lea	 edx, DWORD PTR _si$[ebp]
  000d2	52		 push	 edx
  000d3	6a 00		 push	 0
  000d5	6a 00		 push	 0
  000d7	6a 20		 push	 32			; 00000020H
  000d9	6a 00		 push	 0
  000db	6a 00		 push	 0
  000dd	6a 00		 push	 0
  000df	8b fc		 mov	 edi, esp
  000e1	8d 8d 60 fd ff
	ff		 lea	 ecx, DWORD PTR _strDir$[ebp]
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  000ed	3b fc		 cmp	 edi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	50		 push	 eax
  000f5	6a 00		 push	 0
  000f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateProcessA@40
  000fd	3b f4		 cmp	 esi, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	89 85 80 fd ff
	ff		 mov	 DWORD PTR _nRet$[ebp], eax

; 28   : 
; 29   : 	DWORD dw = GetLastError();

  0010a	8b f4		 mov	 esi, esp
  0010c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00112	3b f4		 cmp	 esi, esp
  00114	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00119	89 85 54 fd ff
	ff		 mov	 DWORD PTR _dw$[ebp], eax

; 30   : 
; 31   : 	if(nRet==0)

  0011f	83 bd 80 fd ff
	ff 00		 cmp	 DWORD PTR _nRet$[ebp], 0
  00126	75 2e		 jne	 SHORT $L187103

; 32   : 	{
; 33   : 		return 0;

  00128	c7 85 48 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR $T187537[ebp], 0
  00132	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00139	8b f4		 mov	 esi, esp
  0013b	8d 8d 60 fd ff
	ff		 lea	 ecx, DWORD PTR _strDir$[ebp]
  00141	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00147	3b f4		 cmp	 esi, esp
  00149	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014e	8b 85 48 fd ff
	ff		 mov	 eax, DWORD PTR $T187537[ebp]
  00154	eb 74		 jmp	 SHORT $L187090
$L187103:

; 34   : 	}
; 35   : 
; 36   : 	WaitForSingleObject(pi.hProcess, INFINITE);

  00156	8b f4		 mov	 esi, esp
  00158	6a ff		 push	 -1
  0015a	8b 45 90	 mov	 eax, DWORD PTR _pi$[ebp]
  0015d	50		 push	 eax
  0015e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00164	3b f4		 cmp	 esi, esp
  00166	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 37   : 	BOOL bExit = GetExitCodeProcess( pi.hProcess,&dw );

  0016b	8b f4		 mov	 esi, esp
  0016d	8d 8d 54 fd ff
	ff		 lea	 ecx, DWORD PTR _dw$[ebp]
  00173	51		 push	 ecx
  00174	8b 55 90	 mov	 edx, DWORD PTR _pi$[ebp]
  00177	52		 push	 edx
  00178	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetExitCodeProcess@8
  0017e	3b f4		 cmp	 esi, esp
  00180	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00185	89 85 4c fd ff
	ff		 mov	 DWORD PTR _bExit$[ebp], eax

; 38   : 	CloseHandle(pi.hProcess);		

  0018b	8b f4		 mov	 esi, esp
  0018d	8b 45 90	 mov	 eax, DWORD PTR _pi$[ebp]
  00190	50		 push	 eax
  00191	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  00197	3b f4		 cmp	 esi, esp
  00199	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 39   : 	return 0;

  0019e	c7 85 44 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR $T187538[ebp], 0
  001a8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001af	8b f4		 mov	 esi, esp
  001b1	8d 8d 60 fd ff
	ff		 lea	 ecx, DWORD PTR _strDir$[ebp]
  001b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  001bd	3b f4		 cmp	 esi, esp
  001bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c4	8b 85 44 fd ff
	ff		 mov	 eax, DWORD PTR $T187538[ebp]
$L187090:

; 40   : }

  001ca	52		 push	 edx
  001cb	8b cd		 mov	 ecx, ebp
  001cd	50		 push	 eax
  001ce	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L187561
  001d4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001d9	58		 pop	 eax
  001da	5a		 pop	 edx
  001db	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001de	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001e5	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ed	5f		 pop	 edi
  001ee	5e		 pop	 esi
  001ef	81 c4 bc 02 00
	00		 add	 esp, 700		; 000002bcH
  001f5	3b ec		 cmp	 ebp, esp
  001f7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001fc	8b e5		 mov	 esp, ebp
  001fe	5d		 pop	 ebp
  001ff	c2 04 00	 ret	 4
$L187561:
  00202	05 00 00 00	 DD	 5
  00206	00 00 00 00	 DD	 $L187560
$L187560:
  0020a	a8 ff ff ff	 DD	 -88			; ffffffa8H
  0020e	44 00 00 00	 DD	 68			; 00000044H
  00212	00 00 00 00	 DD	 $L187551
  00216	90 ff ff ff	 DD	 -112			; ffffff90H
  0021a	10 00 00 00	 DD	 16			; 00000010H
  0021e	00 00 00 00	 DD	 $L187552
  00222	88 fd ff ff	 DD	 -632			; fffffd88H
  00226	00 02 00 00	 DD	 512			; 00000200H
  0022a	00 00 00 00	 DD	 $L187553
  0022e	60 fd ff ff	 DD	 -672			; fffffd60H
  00232	1c 00 00 00	 DD	 28			; 0000001cH
  00236	00 00 00 00	 DD	 $L187554
  0023a	54 fd ff ff	 DD	 -684			; fffffd54H
  0023e	04 00 00 00	 DD	 4
  00242	00 00 00 00	 DD	 $L187555
$L187555:
  00246	64		 DB	 100			; 00000064H
  00247	77		 DB	 119			; 00000077H
  00248	00		 DB	 0
$L187554:
  00249	73		 DB	 115			; 00000073H
  0024a	74		 DB	 116			; 00000074H
  0024b	72		 DB	 114			; 00000072H
  0024c	44		 DB	 68			; 00000044H
  0024d	69		 DB	 105			; 00000069H
  0024e	72		 DB	 114			; 00000072H
  0024f	00		 DB	 0
$L187553:
  00250	63		 DB	 99			; 00000063H
  00251	6d		 DB	 109			; 0000006dH
  00252	64		 DB	 100			; 00000064H
  00253	00		 DB	 0
$L187552:
  00254	70		 DB	 112			; 00000070H
  00255	69		 DB	 105			; 00000069H
  00256	00		 DB	 0
$L187551:
  00257	73		 DB	 115			; 00000073H
  00258	69		 DB	 105			; 00000069H
  00259	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L187545:
  00000	8b f4		 mov	 esi, esp
  00002	8d 8d 60 fd ff
	ff		 lea	 ecx, DWORD PTR _strDir$[ebp]
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0000e	3b f4		 cmp	 esi, esp
  00010	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?Ping_Thread@@YGKPAX@Z:
  00015	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187549
  0001a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Ping_Thread@@YGKPAX@Z ENDP				; Ping_Thread
PUBLIC	?SetHTTPRes@CJudgeFirewall@@SAXW4HTTP_REQUEST_TYPE@@H@Z ; CJudgeFirewall::SetHTTPRes
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:NEAR
EXTRN	__imp__sprintf:NEAR
EXTRN	__imp_?LogRealMsg@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0_NPAPAEPAI@Z:NEAR
xdata$x	SEGMENT
$T187579 DD	0ffffffffH
	DD	FLAT:$L187570
	DD	00H
	DD	FLAT:$L187571
$T187573 DD	019930520H
	DD	02H
	DD	FLAT:$T187579
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T187569 = -592						; size = 28
$T187568 = -564						; size = 28
_szBuf$187116 = -532					; size = 512
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_hrt$ = 8						; size = 4
_iRes$ = 12						; size = 4
?SetHTTPRes@CJudgeFirewall@@SAXW4HTTP_REQUEST_TYPE@@H@Z PROC NEAR ; CJudgeFirewall::SetHTTPRes

; 50   : {

  00260	55		 push	 ebp
  00261	8b ec		 mov	 ebp, esp
  00263	6a ff		 push	 -1
  00265	68 00 00 00 00	 push	 __ehhandler$?SetHTTPRes@CJudgeFirewall@@SAXW4HTTP_REQUEST_TYPE@@H@Z
  0026a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00270	50		 push	 eax
  00271	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00278	81 ec 44 02 00
	00		 sub	 esp, 580		; 00000244H
  0027e	56		 push	 esi
  0027f	57		 push	 edi
  00280	8d bd b0 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-592]
  00286	b9 91 00 00 00	 mov	 ecx, 145		; 00000091H
  0028b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00290	f3 ab		 rep stosd
  00292	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00297	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 51   : 	if( hrt == HTTP_SEARCH )

  0029a	83 7d 08 01	 cmp	 DWORD PTR _hrt$[ebp], 1
  0029e	0f 85 d6 00 00
	00		 jne	 $L187115

; 52   : 	{
; 53   : 		char szBuf[512];
; 54   : 		sprintf(szBuf,"%d,%d",hrt,iRes);

  002a4	8b f4		 mov	 esi, esp
  002a6	8b 45 0c	 mov	 eax, DWORD PTR _iRes$[ebp]
  002a9	50		 push	 eax
  002aa	8b 4d 08	 mov	 ecx, DWORD PTR _hrt$[ebp]
  002ad	51		 push	 ecx
  002ae	68 00 00 00 00	 push	 OFFSET FLAT:$SG187117
  002b3	8d 95 ec fd ff
	ff		 lea	 edx, DWORD PTR _szBuf$187116[ebp]
  002b9	52		 push	 edx
  002ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  002c0	83 c4 10	 add	 esp, 16			; 00000010H
  002c3	3b f4		 cmp	 esi, esp
  002c5	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 55   : 
; 56   : 		LogRealMsg("Firewall",szBuf);

  002ca	8b f4		 mov	 esi, esp
  002cc	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szBuf$187116[ebp]
  002d2	50		 push	 eax
  002d3	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR $T187568[ebp]
  002d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  002df	3b f4		 cmp	 esi, esp
  002e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002e6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  002ed	8b f4		 mov	 esi, esp
  002ef	68 00 00 00 00	 push	 OFFSET FLAT:$SG187120
  002f4	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR $T187569[ebp]
  002fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00300	3b f4		 cmp	 esi, esp
  00302	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00307	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0030b	8b f4		 mov	 esi, esp
  0030d	6a 00		 push	 0
  0030f	6a 00		 push	 0
  00311	6a 00		 push	 0
  00313	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR $T187568[ebp]
  00319	51		 push	 ecx
  0031a	8d 95 b0 fd ff
	ff		 lea	 edx, DWORD PTR $T187569[ebp]
  00320	52		 push	 edx
  00321	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LogRealMsg@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0_NPAPAEPAI@Z
  00327	83 c4 14	 add	 esp, 20			; 00000014H
  0032a	3b f4		 cmp	 esi, esp
  0032c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00331	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00335	8b f4		 mov	 esi, esp
  00337	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR $T187569[ebp]
  0033d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00343	3b f4		 cmp	 esi, esp
  00345	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0034a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00351	8b f4		 mov	 esi, esp
  00353	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR $T187568[ebp]
  00359	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0035f	3b f4		 cmp	 esi, esp
  00361	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 57   : 		
; 58   : 		if( s_iHTTPRes == 0 && iRes == 0 )

  00366	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _s_iHTTPRes, 0
  0036d	75 0b		 jne	 SHORT $L187115
  0036f	83 7d 0c 00	 cmp	 DWORD PTR _iRes$[ebp], 0
  00373	75 05		 jne	 SHORT $L187115

; 59   : 		{
; 60   : 			Test_Ping();

  00375	e8 00 00 00 00	 call	 ?Test_Ping@@YAXXZ	; Test_Ping
$L187115:

; 61   : 		}
; 62   : 	}	
; 63   : 
; 64   : 	if( hrt == HTTP_WEB_COMMAND )

  0037a	83 7d 08 00	 cmp	 DWORD PTR _hrt$[ebp], 0
  0037e	75 08		 jne	 SHORT $L187114

; 65   : 	{
; 66   : 		s_iHTTPRes = iRes;

  00380	8b 45 0c	 mov	 eax, DWORD PTR _iRes$[ebp]
  00383	a3 00 00 00 00	 mov	 DWORD PTR _s_iHTTPRes, eax
$L187114:

; 67   : 	}
; 68   : }

  00388	52		 push	 edx
  00389	8b cd		 mov	 ecx, ebp
  0038b	50		 push	 eax
  0038c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L187578
  00392	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00397	58		 pop	 eax
  00398	5a		 pop	 edx
  00399	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0039c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  003a3	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003a6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003ab	5f		 pop	 edi
  003ac	5e		 pop	 esi
  003ad	81 c4 50 02 00
	00		 add	 esp, 592		; 00000250H
  003b3	3b ec		 cmp	 ebp, esp
  003b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ba	8b e5		 mov	 esp, ebp
  003bc	5d		 pop	 ebp
  003bd	c3		 ret	 0
$L187578:
  003be	01 00 00 00	 DD	 1
  003c2	00 00 00 00	 DD	 $L187577
$L187577:
  003c6	ec fd ff ff	 DD	 -532			; fffffdecH
  003ca	00 02 00 00	 DD	 512			; 00000200H
  003ce	00 00 00 00	 DD	 $L187574
$L187574:
  003d2	73		 DB	 115			; 00000073H
  003d3	7a		 DB	 122			; 0000007aH
  003d4	42		 DB	 66			; 00000042H
  003d5	75		 DB	 117			; 00000075H
  003d6	66		 DB	 102			; 00000066H
  003d7	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L187570:
  0001f	8b f4		 mov	 esi, esp
  00021	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR $T187568[ebp]
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0002d	3b f4		 cmp	 esi, esp
  0002f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L187571:
  00034	8b f4		 mov	 esi, esp
  00036	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR $T187569[ebp]
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00042	3b f4		 cmp	 esi, esp
  00044	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?SetHTTPRes@CJudgeFirewall@@SAXW4HTTP_REQUEST_TYPE@@H@Z:
  00049	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187573
  0004e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetHTTPRes@CJudgeFirewall@@SAXW4HTTP_REQUEST_TYPE@@H@Z ENDP ; CJudgeFirewall::SetHTTPRes
EXTRN	__imp__CreateThread@24:NEAR
;	COMDAT ?s_bTestKwMusic@?1??Test_Ping@@YAXXZ@4HA
_BSS	SEGMENT
?s_bTestKwMusic@?1??Test_Ping@@YAXXZ@4HA DD 01H DUP (?)	; `Test_Ping'::`2'::s_bTestKwMusic
; Function compile flags: /Odt /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
?Test_Ping@@YAXXZ PROC NEAR				; Test_Ping

; 43   : {

  003e0	55		 push	 ebp
  003e1	8b ec		 mov	 ebp, esp
  003e3	56		 push	 esi

; 44   : 	static BOOL		s_bTestKwMusic	= FALSE;
; 45   : 	CloseHandle( CreateThread(0,0,Ping_Thread,NULL,0,0) );

  003e4	8b f4		 mov	 esi, esp
  003e6	6a 00		 push	 0
  003e8	6a 00		 push	 0
  003ea	6a 00		 push	 0
  003ec	68 00 00 00 00	 push	 OFFSET FLAT:?Ping_Thread@@YGKPAX@Z ; Ping_Thread
  003f1	6a 00		 push	 0
  003f3	6a 00		 push	 0
  003f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateThread@24
  003fb	3b f4		 cmp	 esi, esp
  003fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00402	8b f4		 mov	 esi, esp
  00404	50		 push	 eax
  00405	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  0040b	3b f4		 cmp	 esi, esp
  0040d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 46   : 	s_bTestKwMusic = TRUE;

  00412	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?s_bTestKwMusic@?1??Test_Ping@@YAXXZ@4HA, 1

; 47   : }

  0041c	5e		 pop	 esi
  0041d	3b ec		 cmp	 ebp, esp
  0041f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00424	5d		 pop	 ebp
  00425	c3		 ret	 0
?Test_Ping@@YAXXZ ENDP					; Test_Ping
_TEXT	ENDS
END
