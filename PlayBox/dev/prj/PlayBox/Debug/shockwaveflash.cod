; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\Gui\CommonControl\shockwaveflash.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0EN@IBFBLEEG@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CShockwaveFlash@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCShockwaveFlash@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CShockwaveFlash@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3CShockwaveFlash@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CShockwaveFlash@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CShockwaveFlash@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCShockwaveFlash@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4CShockwaveFlash@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_C@_0EN@CBMLGOH@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FG@LDNDNCJM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?parms@?1??SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetReturnValue@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetProfilePort@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetProfile@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetMovieData@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetFlashVars@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetSWRemote@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TCallLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetVariable@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TStopPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??LoadMovie@CShockwaveFlash@@QAEXJPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetQuality2@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetBGColor@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetEmbedMovie@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetDeviceFont@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetScale@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetBase@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetMenu@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetSAlign@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetWMode@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??FrameLoaded@CShockwaveFlash@@QAEHJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??GotoFrame@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??Pan@CShockwaveFlash@@QAEXJJJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??Zoom@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetFrameNum@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetMovie@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FJ@DMHPDOJC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?parms@?1??SetLoop@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetAlignMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetScaleMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetQuality@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?parms@?1??SetPlaying@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CShockwaveFlash@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B ; CShockwaveFlash::classCShockwaveFlash
PUBLIC	?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ	; CShockwaveFlash::CreateObject
EXTRN	?GetThisClass@CWnd@@SGPAUCRuntimeClass@@XZ:NEAR	; CWnd::GetThisClass
CONST	SEGMENT
$SG187227 DB	'CShockwaveFlash', 00H
CONST	ENDS
;	COMDAT ?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B DD FLAT:$SG187227 ; CShockwaveFlash::classCShockwaveFlash
	DD	054H
	DD	0ffffH
	DD	FLAT:?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ
	DD	FLAT:?GetThisClass@CWnd@@SGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	??0CShockwaveFlash@@QAE@XZ			; CShockwaveFlash::CShockwaveFlash
EXTRN	??2CObject@@SGPAXI@Z:NEAR			; CObject::operator new
EXTRN	??3CObject@@SGXPAX@Z:NEAR			; CObject::operator delete
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__except_list:DWORD
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT rtc$IMZ
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\gui\commoncontrol\shockwaveflash.cpp
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
xdata$x	SEGMENT
$T188297 DD	0ffffffffH
	DD	FLAT:$L188289
$T188293 DD	019930520H
	DD	01H
	DD	FLAT:$T188297
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv71 = -24						; size = 4
$T188280 = -20						; size = 4
$T188279 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ PROC NEAR ; CShockwaveFlash::CreateObject

; 13   : IMPLEMENT_DYNCREATE(CShockwaveFlash, CWnd)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  00022	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  00029	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00030	6a 54		 push	 84			; 00000054H
  00032	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00037	89 45 ec	 mov	 DWORD PTR $T188280[ebp], eax
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00041	83 7d ec 00	 cmp	 DWORD PTR $T188280[ebp], 0
  00045	74 0d		 je	 SHORT $L188281
  00047	8b 4d ec	 mov	 ecx, DWORD PTR $T188280[ebp]
  0004a	e8 00 00 00 00	 call	 ??0CShockwaveFlash@@QAE@XZ
  0004f	89 45 e8	 mov	 DWORD PTR tv71[ebp], eax
  00052	eb 07		 jmp	 SHORT $L188282
$L188281:
  00054	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$L188282:
  0005b	8b 45 e8	 mov	 eax, DWORD PTR tv71[ebp]
  0005e	89 45 f0	 mov	 DWORD PTR $T188279[ebp], eax
  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b 45 f0	 mov	 eax, DWORD PTR $T188279[ebp]
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00075	83 c4 18	 add	 esp, 24			; 00000018H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L188289:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T188280[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00009	c3		 ret	 0
__ehhandler$?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188293
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateObject@CShockwaveFlash@@SGPAVCObject@@XZ ENDP	; CShockwaveFlash::CreateObject
PUBLIC	??_R1A@?0A@A@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CObject@@8				; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R4CShockwaveFlash@@6B@			; CShockwaveFlash::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCShockwaveFlash@@@8			; CShockwaveFlash `RTTI Type Descriptor'
PUBLIC	??_R3CShockwaveFlash@@8				; CShockwaveFlash::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CShockwaveFlash@@8				; CShockwaveFlash::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CShockwaveFlash@@8			; CShockwaveFlash::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	?GetRuntimeClass@CShockwaveFlash@@UBEPAUCRuntimeClass@@XZ ; CShockwaveFlash::GetRuntimeClass
PUBLIC	?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ; CShockwaveFlash::Create
PUBLIC	??_7CShockwaveFlash@@6B@			; CShockwaveFlash::`vftable'
PUBLIC	??_GCShockwaveFlash@@UAEPAXI@Z			; CShockwaveFlash::`scalar deleting destructor'
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accValue
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDescription
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??0CWnd@@QAE@XZ:NEAR				; CWnd::CWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:NEAR	; CObject::Serialize
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:NEAR ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:NEAR		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:NEAR		; CWnd::EndModalState
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?AssertValid@CWnd@@UBEXXZ:NEAR			; CWnd::AssertValid
EXTRN	?Dump@CWnd@@UBEXAAVCDumpContext@@@Z:NEAR	; CWnd::Dump
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR	; CWnd::GetMessageMap
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	??_ECShockwaveFlash@@UAEPAXI@Z:NEAR		; CShockwaveFlash::`vector deleting destructor'
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
;	COMDAT ??_7CShockwaveFlash@@6B@
CONST	SEGMENT
??_7CShockwaveFlash@@6B@ DD FLAT:??_R4CShockwaveFlash@@6B@ ; CShockwaveFlash::`vftable'
	DD	FLAT:?GetRuntimeClass@CShockwaveFlash@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECShockwaveFlash@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CWnd@@UBEXXZ
	DD	FLAT:?Dump@CWnd@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
CONST	ENDS
;	COMDAT ??_R4CShockwaveFlash@@6B@
rdata$r	SEGMENT
??_R4CShockwaveFlash@@6B@ DD 00H			; CShockwaveFlash::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCShockwaveFlash@@@8
	DD	FLAT:??_R3CShockwaveFlash@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCShockwaveFlash@@@8
_DATA	SEGMENT
??_R0?AVCShockwaveFlash@@@8 DD FLAT:??_7type_info@@6B@	; CShockwaveFlash `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCShockwaveFlash@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CShockwaveFlash@@8
rdata$r	SEGMENT
??_R3CShockwaveFlash@@8 DD 00H				; CShockwaveFlash::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CShockwaveFlash@@8
rdata$r	ENDS
;	COMDAT ??_R2CShockwaveFlash@@8
rdata$r	SEGMENT
??_R2CShockwaveFlash@@8 DD FLAT:??_R1A@?0A@A@CShockwaveFlash@@8 ; CShockwaveFlash::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@CWnd@@8
	DD	FLAT:??_R1A@?0A@A@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@A@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CShockwaveFlash@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CShockwaveFlash@@8 DD FLAT:??_R0?AVCShockwaveFlash@@@8 ; CShockwaveFlash::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
;	COMDAT ??0CShockwaveFlash@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CShockwaveFlash@@QAE@XZ PROC NEAR			; CShockwaveFlash::CShockwaveFlash, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CShockwaveFlash@@6B@
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??0CShockwaveFlash@@QAE@XZ ENDP				; CShockwaveFlash::CShockwaveFlash
_TEXT	ENDS
PUBLIC	?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ	; CShockwaveFlash::GetClsid
EXTRN	?CreateControl@CWnd@@QAEHABU_GUID@@PBDKABUtagRECT@@PAV1@IPAVCFile@@HPA_W@Z:NEAR ; CWnd::CreateControl
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\gui\commoncontrol\shockwaveflash.h
;	COMDAT ?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszClassName$ = 8					; size = 4
_lpszWindowName$ = 12					; size = 4
_dwStyle$ = 16						; size = 4
_rect$ = 20						; size = 4
_pParentWnd$ = 24					; size = 4
_nID$ = 28						; size = 4
_pContext$ = 32						; size = 4
?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z PROC NEAR ; CShockwaveFlash::Create, COMDAT
; _this$ = ecx

; 33   : 	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	6a 00		 push	 0
  00014	8b 45 1c	 mov	 eax, DWORD PTR _nID$[ebp]
  00017	50		 push	 eax
  00018	8b 4d 18	 mov	 ecx, DWORD PTR _pParentWnd$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 55 14	 mov	 edx, DWORD PTR _rect$[ebp]
  0001f	52		 push	 edx
  00020	8b 45 10	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszWindowName$[ebp]
  00027	51		 push	 ecx
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ ; CShockwaveFlash::GetClsid
  00030	50		 push	 eax
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?CreateControl@CWnd@@QAEHABU_GUID@@PBDKABUtagRECT@@PAV1@IPAVCFile@@HPA_W@Z ; CWnd::CreateControl
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 1c 00	 ret	 28			; 0000001cH
?Create@CShockwaveFlash@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z ENDP ; CShockwaveFlash::Create
_TEXT	ENDS
PUBLIC	?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B ; `CShockwaveFlash::GetClsid'::`2'::clsid
;	COMDAT ?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT
?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B DD 0d27cdb6eH ; `CShockwaveFlash::GetClsid'::`2'::clsid
	DW	0ae6dH
	DW	011cfH
	DB	096H
	DB	0b8H
	DB	044H
	DB	045H
	DB	053H
	DB	054H
	DB	00H
	DB	00H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ PROC NEAR	; CShockwaveFlash::GetClsid, COMDAT
; _this$ = ecx

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 24   : 		static CLSID const clsid
; 25   : 			= { 0xd27cdb6e, 0xae6d, 0x11cf, { 0x96, 0xb8, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0 } };
; 26   : 		return clsid;

  0000e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B ; `CShockwaveFlash::GetClsid'::`2'::clsid

; 27   : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ ENDP		; CShockwaveFlash::GetClsid
_TEXT	ENDS
PUBLIC	??1CShockwaveFlash@@UAE@XZ			; CShockwaveFlash::~CShockwaveFlash
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_GCShockwaveFlash@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCShockwaveFlash@@UAEPAXI@Z PROC NEAR		; CShockwaveFlash::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CShockwaveFlash@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 09		 je	 SHORT $L187224
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L187224:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??_GCShockwaveFlash@@UAEPAXI@Z ENDP			; CShockwaveFlash::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CWnd@@UAE@XZ:NEAR				; CWnd::~CWnd
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1CShockwaveFlash@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CShockwaveFlash@@UAE@XZ PROC NEAR			; CShockwaveFlash::~CShockwaveFlash, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CShockwaveFlash@@UAE@XZ ENDP				; CShockwaveFlash::~CShockwaveFlash
_TEXT	ENDS
PUBLIC	?GetThisClass@CShockwaveFlash@@SGPAUCRuntimeClass@@XZ ; CShockwaveFlash::GetThisClass
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\gui\commoncontrol\shockwaveflash.cpp
_TEXT	SEGMENT
?GetThisClass@CShockwaveFlash@@SGPAUCRuntimeClass@@XZ PROC NEAR ; CShockwaveFlash::GetThisClass

; 13   : IMPLEMENT_DYNCREATE(CShockwaveFlash, CWnd)

  00090	55		 push	 ebp
  00091	8b ec		 mov	 ebp, esp
  00093	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B ; CShockwaveFlash::classCShockwaveFlash
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
?GetThisClass@CShockwaveFlash@@SGPAUCRuntimeClass@@XZ ENDP ; CShockwaveFlash::GetThisClass
; Function compile flags: /Odt /RTCsu
_this$ = -4						; size = 4
?GetRuntimeClass@CShockwaveFlash@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; CShockwaveFlash::GetRuntimeClass
; _this$ = ecx

; 13   : IMPLEMENT_DYNCREATE(CShockwaveFlash, CWnd)

  000a0	55		 push	 ebp
  000a1	8b ec		 mov	 ebp, esp
  000a3	51		 push	 ecx
  000a4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  000ab	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  000ae	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCShockwaveFlash@CShockwaveFlash@@2UCRuntimeClass@@B ; CShockwaveFlash::classCShockwaveFlash
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c3		 ret	 0
?GetRuntimeClass@CShockwaveFlash@@UBEPAUCRuntimeClass@@XZ ENDP ; CShockwaveFlash::GetRuntimeClass
_TEXT	ENDS
PUBLIC	?GetReadyState@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetReadyState
EXTRN	?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ:NEAR	; CWnd::InvokeHelper
EXTRN	@_RTC_CheckStackVars@8:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetReadyState@CShockwaveFlash@@QAEJXZ PROC NEAR	; CShockwaveFlash::GetReadyState
; _this$ = ecx

; 22   : {

  000c0	55		 push	 ebp
  000c1	8b ec		 mov	 ebp, esp
  000c3	83 ec 10	 sub	 esp, 16			; 00000010H
  000c6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  000cb	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  000ce	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  000d1	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  000d4	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  000d7	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 	long result;
; 24   : 	InvokeHelper(DISPID_READYSTATE, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  000da	6a 00		 push	 0
  000dc	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  000df	50		 push	 eax
  000e0	6a 03		 push	 3
  000e2	6a 02		 push	 2
  000e4	68 f3 fd ff ff	 push	 -525			; fffffdf3H
  000e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	51		 push	 ecx
  000ed	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  000f2	83 c4 18	 add	 esp, 24			; 00000018H

; 25   : 	return result;

  000f5	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 26   : }

  000f8	52		 push	 edx
  000f9	8b cd		 mov	 ecx, ebp
  000fb	50		 push	 eax
  000fc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188311
  00102	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00107	58		 pop	 eax
  00108	5a		 pop	 edx
  00109	83 c4 10	 add	 esp, 16			; 00000010H
  0010c	3b ec		 cmp	 ebp, esp
  0010e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c3		 ret	 0
$L188311:
  00117	01 00 00 00	 DD	 1
  0011b	00 00 00 00	 DD	 $L188310
$L188310:
  0011f	f4 ff ff ff	 DD	 -12			; fffffff4H
  00123	04 00 00 00	 DD	 4
  00127	00 00 00 00	 DD	 $L188309
$L188309:
  0012b	72		 DB	 114			; 00000072H
  0012c	65		 DB	 101			; 00000065H
  0012d	73		 DB	 115			; 00000073H
  0012e	75		 DB	 117			; 00000075H
  0012f	6c		 DB	 108			; 0000006cH
  00130	74		 DB	 116			; 00000074H
  00131	00		 DB	 0
?GetReadyState@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetReadyState
_TEXT	ENDS
PUBLIC	?GetTotalFrames@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetTotalFrames
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetTotalFrames@CShockwaveFlash@@QAEJXZ PROC NEAR	; CShockwaveFlash::GetTotalFrames
; _this$ = ecx

; 29   : {

  00140	55		 push	 ebp
  00141	8b ec		 mov	 ebp, esp
  00143	83 ec 10	 sub	 esp, 16			; 00000010H
  00146	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0014b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0014e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00151	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00154	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00157	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 30   : 	long result;
; 31   : 	InvokeHelper(0x7c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  0015a	6a 00		 push	 0
  0015c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  0015f	50		 push	 eax
  00160	6a 03		 push	 3
  00162	6a 02		 push	 2
  00164	6a 7c		 push	 124			; 0000007cH
  00166	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00169	51		 push	 ecx
  0016a	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0016f	83 c4 18	 add	 esp, 24			; 00000018H

; 32   : 	return result;

  00172	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 33   : }

  00175	52		 push	 edx
  00176	8b cd		 mov	 ecx, ebp
  00178	50		 push	 eax
  00179	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188316
  0017f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00184	58		 pop	 eax
  00185	5a		 pop	 edx
  00186	83 c4 10	 add	 esp, 16			; 00000010H
  00189	3b ec		 cmp	 ebp, esp
  0018b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00190	8b e5		 mov	 esp, ebp
  00192	5d		 pop	 ebp
  00193	c3		 ret	 0
$L188316:
  00194	01 00 00 00	 DD	 1
  00198	00 00 00 00	 DD	 $L188315
$L188315:
  0019c	f4 ff ff ff	 DD	 -12			; fffffff4H
  001a0	04 00 00 00	 DD	 4
  001a4	00 00 00 00	 DD	 $L188314
$L188314:
  001a8	72		 DB	 114			; 00000072H
  001a9	65		 DB	 101			; 00000065H
  001aa	73		 DB	 115			; 00000073H
  001ab	75		 DB	 117			; 00000075H
  001ac	6c		 DB	 108			; 0000006cH
  001ad	74		 DB	 116			; 00000074H
  001ae	00		 DB	 0
?GetTotalFrames@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetTotalFrames
_TEXT	ENDS
PUBLIC	?GetPlaying@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetPlaying
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetPlaying@CShockwaveFlash@@QAEHXZ PROC NEAR		; CShockwaveFlash::GetPlaying
; _this$ = ecx

; 36   : {

  001b0	55		 push	 ebp
  001b1	8b ec		 mov	 ebp, esp
  001b3	83 ec 10	 sub	 esp, 16			; 00000010H
  001b6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  001bb	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  001be	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  001c1	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  001c4	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  001c7	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 37   : 	BOOL result;
; 38   : 	InvokeHelper(0x7d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  001ca	6a 00		 push	 0
  001cc	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  001cf	50		 push	 eax
  001d0	6a 0b		 push	 11			; 0000000bH
  001d2	6a 02		 push	 2
  001d4	6a 7d		 push	 125			; 0000007dH
  001d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d9	51		 push	 ecx
  001da	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  001df	83 c4 18	 add	 esp, 24			; 00000018H

; 39   : 	return result;

  001e2	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 40   : }

  001e5	52		 push	 edx
  001e6	8b cd		 mov	 ecx, ebp
  001e8	50		 push	 eax
  001e9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188320
  001ef	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001f4	58		 pop	 eax
  001f5	5a		 pop	 edx
  001f6	83 c4 10	 add	 esp, 16			; 00000010H
  001f9	3b ec		 cmp	 ebp, esp
  001fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00200	8b e5		 mov	 esp, ebp
  00202	5d		 pop	 ebp
  00203	c3		 ret	 0
$L188320:
  00204	01 00 00 00	 DD	 1
  00208	00 00 00 00	 DD	 $L188319
$L188319:
  0020c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00210	04 00 00 00	 DD	 4
  00214	00 00 00 00	 DD	 $L188318
$L188318:
  00218	72		 DB	 114			; 00000072H
  00219	65		 DB	 101			; 00000065H
  0021a	73		 DB	 115			; 00000073H
  0021b	75		 DB	 117			; 00000075H
  0021c	6c		 DB	 108			; 0000006cH
  0021d	74		 DB	 116			; 00000074H
  0021e	00		 DB	 0
?GetPlaying@CShockwaveFlash@@QAEHXZ ENDP		; CShockwaveFlash::GetPlaying
_TEXT	ENDS
PUBLIC	?SetPlaying@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetPlaying
;	COMDAT ?parms@?1??SetPlaying@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetPlaying@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetPlaying'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetPlaying@CShockwaveFlash@@QAEXH@Z PROC NEAR		; CShockwaveFlash::SetPlaying
; _this$ = ecx

; 43   : {

  00220	55		 push	 ebp
  00221	8b ec		 mov	 ebp, esp
  00223	51		 push	 ecx
  00224	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0022b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 44   : 	static BYTE parms[] =
; 45   : 		VTS_BOOL;
; 46   : 	InvokeHelper(0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 47   : 		 bNewValue);

  0022e	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  00231	50		 push	 eax
  00232	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetPlaying@CShockwaveFlash@@QAEXH@Z@4PAEA
  00237	6a 00		 push	 0
  00239	6a 00		 push	 0
  0023b	6a 04		 push	 4
  0023d	6a 7d		 push	 125			; 0000007dH
  0023f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00242	51		 push	 ecx
  00243	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00248	83 c4 1c	 add	 esp, 28			; 0000001cH

; 48   : }

  0024b	83 c4 04	 add	 esp, 4
  0024e	3b ec		 cmp	 ebp, esp
  00250	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00255	8b e5		 mov	 esp, ebp
  00257	5d		 pop	 ebp
  00258	c2 04 00	 ret	 4
?SetPlaying@CShockwaveFlash@@QAEXH@Z ENDP		; CShockwaveFlash::SetPlaying
_TEXT	ENDS
PUBLIC	?GetQuality@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetQuality
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetQuality@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::GetQuality
; _this$ = ecx

; 51   : {

  00260	55		 push	 ebp
  00261	8b ec		 mov	 ebp, esp
  00263	83 ec 10	 sub	 esp, 16			; 00000010H
  00266	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0026b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0026e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00271	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00274	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00277	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 52   : 	long result;
; 53   : 	InvokeHelper(0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  0027a	6a 00		 push	 0
  0027c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  0027f	50		 push	 eax
  00280	6a 03		 push	 3
  00282	6a 02		 push	 2
  00284	6a 69		 push	 105			; 00000069H
  00286	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00289	51		 push	 ecx
  0028a	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0028f	83 c4 18	 add	 esp, 24			; 00000018H

; 54   : 	return result;

  00292	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 55   : }

  00295	52		 push	 edx
  00296	8b cd		 mov	 ecx, ebp
  00298	50		 push	 eax
  00299	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188325
  0029f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002a4	58		 pop	 eax
  002a5	5a		 pop	 edx
  002a6	83 c4 10	 add	 esp, 16			; 00000010H
  002a9	3b ec		 cmp	 ebp, esp
  002ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b0	8b e5		 mov	 esp, ebp
  002b2	5d		 pop	 ebp
  002b3	c3		 ret	 0
$L188325:
  002b4	01 00 00 00	 DD	 1
  002b8	00 00 00 00	 DD	 $L188324
$L188324:
  002bc	f4 ff ff ff	 DD	 -12			; fffffff4H
  002c0	04 00 00 00	 DD	 4
  002c4	00 00 00 00	 DD	 $L188323
$L188323:
  002c8	72		 DB	 114			; 00000072H
  002c9	65		 DB	 101			; 00000065H
  002ca	73		 DB	 115			; 00000073H
  002cb	75		 DB	 117			; 00000075H
  002cc	6c		 DB	 108			; 0000006cH
  002cd	74		 DB	 116			; 00000074H
  002ce	00		 DB	 0
?GetQuality@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetQuality
_TEXT	ENDS
PUBLIC	?SetQuality@CShockwaveFlash@@QAEXJ@Z		; CShockwaveFlash::SetQuality
;	COMDAT ?parms@?1??SetQuality@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetQuality@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetQuality'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetQuality@CShockwaveFlash@@QAEXJ@Z PROC NEAR		; CShockwaveFlash::SetQuality
; _this$ = ecx

; 58   : {

  002d0	55		 push	 ebp
  002d1	8b ec		 mov	 ebp, esp
  002d3	51		 push	 ecx
  002d4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  002db	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 59   : 	static BYTE parms[] =
; 60   : 		VTS_I4;
; 61   : 	InvokeHelper(0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 62   : 		 nNewValue);

  002de	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  002e1	50		 push	 eax
  002e2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetQuality@CShockwaveFlash@@QAEXJ@Z@4PAEA
  002e7	6a 00		 push	 0
  002e9	6a 00		 push	 0
  002eb	6a 04		 push	 4
  002ed	6a 69		 push	 105			; 00000069H
  002ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f2	51		 push	 ecx
  002f3	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  002f8	83 c4 1c	 add	 esp, 28			; 0000001cH

; 63   : }

  002fb	83 c4 04	 add	 esp, 4
  002fe	3b ec		 cmp	 ebp, esp
  00300	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00305	8b e5		 mov	 esp, ebp
  00307	5d		 pop	 ebp
  00308	c2 04 00	 ret	 4
?SetQuality@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::SetQuality
_TEXT	ENDS
PUBLIC	?GetScaleMode@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetScaleMode
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetScaleMode@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::GetScaleMode
; _this$ = ecx

; 66   : {

  00310	55		 push	 ebp
  00311	8b ec		 mov	 ebp, esp
  00313	83 ec 10	 sub	 esp, 16			; 00000010H
  00316	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0031b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0031e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00321	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00324	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00327	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 67   : 	long result;
; 68   : 	InvokeHelper(0x78, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  0032a	6a 00		 push	 0
  0032c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  0032f	50		 push	 eax
  00330	6a 03		 push	 3
  00332	6a 02		 push	 2
  00334	6a 78		 push	 120			; 00000078H
  00336	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00339	51		 push	 ecx
  0033a	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0033f	83 c4 18	 add	 esp, 24			; 00000018H

; 69   : 	return result;

  00342	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 70   : }

  00345	52		 push	 edx
  00346	8b cd		 mov	 ecx, ebp
  00348	50		 push	 eax
  00349	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188330
  0034f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00354	58		 pop	 eax
  00355	5a		 pop	 edx
  00356	83 c4 10	 add	 esp, 16			; 00000010H
  00359	3b ec		 cmp	 ebp, esp
  0035b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00360	8b e5		 mov	 esp, ebp
  00362	5d		 pop	 ebp
  00363	c3		 ret	 0
$L188330:
  00364	01 00 00 00	 DD	 1
  00368	00 00 00 00	 DD	 $L188329
$L188329:
  0036c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00370	04 00 00 00	 DD	 4
  00374	00 00 00 00	 DD	 $L188328
$L188328:
  00378	72		 DB	 114			; 00000072H
  00379	65		 DB	 101			; 00000065H
  0037a	73		 DB	 115			; 00000073H
  0037b	75		 DB	 117			; 00000075H
  0037c	6c		 DB	 108			; 0000006cH
  0037d	74		 DB	 116			; 00000074H
  0037e	00		 DB	 0
?GetScaleMode@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetScaleMode
_TEXT	ENDS
PUBLIC	?SetScaleMode@CShockwaveFlash@@QAEXJ@Z		; CShockwaveFlash::SetScaleMode
;	COMDAT ?parms@?1??SetScaleMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetScaleMode@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetScaleMode'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetScaleMode@CShockwaveFlash@@QAEXJ@Z PROC NEAR	; CShockwaveFlash::SetScaleMode
; _this$ = ecx

; 73   : {

  00380	55		 push	 ebp
  00381	8b ec		 mov	 ebp, esp
  00383	51		 push	 ecx
  00384	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0038b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 74   : 	static BYTE parms[] =
; 75   : 		VTS_I4;
; 76   : 	InvokeHelper(0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 77   : 		 nNewValue);

  0038e	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  00391	50		 push	 eax
  00392	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetScaleMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
  00397	6a 00		 push	 0
  00399	6a 00		 push	 0
  0039b	6a 04		 push	 4
  0039d	6a 78		 push	 120			; 00000078H
  0039f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a2	51		 push	 ecx
  003a3	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  003a8	83 c4 1c	 add	 esp, 28			; 0000001cH

; 78   : }

  003ab	83 c4 04	 add	 esp, 4
  003ae	3b ec		 cmp	 ebp, esp
  003b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b5	8b e5		 mov	 esp, ebp
  003b7	5d		 pop	 ebp
  003b8	c2 04 00	 ret	 4
?SetScaleMode@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::SetScaleMode
_TEXT	ENDS
PUBLIC	?GetAlignMode@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetAlignMode
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetAlignMode@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::GetAlignMode
; _this$ = ecx

; 81   : {

  003c0	55		 push	 ebp
  003c1	8b ec		 mov	 ebp, esp
  003c3	83 ec 10	 sub	 esp, 16			; 00000010H
  003c6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  003cb	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  003ce	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  003d1	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  003d4	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  003d7	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	long result;
; 83   : 	InvokeHelper(0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  003da	6a 00		 push	 0
  003dc	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  003df	50		 push	 eax
  003e0	6a 03		 push	 3
  003e2	6a 02		 push	 2
  003e4	6a 79		 push	 121			; 00000079H
  003e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003e9	51		 push	 ecx
  003ea	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  003ef	83 c4 18	 add	 esp, 24			; 00000018H

; 84   : 	return result;

  003f2	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 85   : }

  003f5	52		 push	 edx
  003f6	8b cd		 mov	 ecx, ebp
  003f8	50		 push	 eax
  003f9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188335
  003ff	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00404	58		 pop	 eax
  00405	5a		 pop	 edx
  00406	83 c4 10	 add	 esp, 16			; 00000010H
  00409	3b ec		 cmp	 ebp, esp
  0040b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00410	8b e5		 mov	 esp, ebp
  00412	5d		 pop	 ebp
  00413	c3		 ret	 0
$L188335:
  00414	01 00 00 00	 DD	 1
  00418	00 00 00 00	 DD	 $L188334
$L188334:
  0041c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00420	04 00 00 00	 DD	 4
  00424	00 00 00 00	 DD	 $L188333
$L188333:
  00428	72		 DB	 114			; 00000072H
  00429	65		 DB	 101			; 00000065H
  0042a	73		 DB	 115			; 00000073H
  0042b	75		 DB	 117			; 00000075H
  0042c	6c		 DB	 108			; 0000006cH
  0042d	74		 DB	 116			; 00000074H
  0042e	00		 DB	 0
?GetAlignMode@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetAlignMode
_TEXT	ENDS
PUBLIC	?SetAlignMode@CShockwaveFlash@@QAEXJ@Z		; CShockwaveFlash::SetAlignMode
;	COMDAT ?parms@?1??SetAlignMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetAlignMode@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetAlignMode'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetAlignMode@CShockwaveFlash@@QAEXJ@Z PROC NEAR	; CShockwaveFlash::SetAlignMode
; _this$ = ecx

; 88   : {

  00430	55		 push	 ebp
  00431	8b ec		 mov	 ebp, esp
  00433	51		 push	 ecx
  00434	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0043b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   : 	static BYTE parms[] =
; 90   : 		VTS_I4;
; 91   : 	InvokeHelper(0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 92   : 		 nNewValue);

  0043e	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  00441	50		 push	 eax
  00442	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetAlignMode@CShockwaveFlash@@QAEXJ@Z@4PAEA
  00447	6a 00		 push	 0
  00449	6a 00		 push	 0
  0044b	6a 04		 push	 4
  0044d	6a 79		 push	 121			; 00000079H
  0044f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00452	51		 push	 ecx
  00453	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00458	83 c4 1c	 add	 esp, 28			; 0000001cH

; 93   : }

  0045b	83 c4 04	 add	 esp, 4
  0045e	3b ec		 cmp	 ebp, esp
  00460	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00465	8b e5		 mov	 esp, ebp
  00467	5d		 pop	 ebp
  00468	c2 04 00	 ret	 4
?SetAlignMode@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::SetAlignMode
_TEXT	ENDS
PUBLIC	?GetBackgroundColor@CShockwaveFlash@@QAEJXZ	; CShockwaveFlash::GetBackgroundColor
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetBackgroundColor@CShockwaveFlash@@QAEJXZ PROC NEAR	; CShockwaveFlash::GetBackgroundColor
; _this$ = ecx

; 96   : {

  00470	55		 push	 ebp
  00471	8b ec		 mov	 ebp, esp
  00473	83 ec 10	 sub	 esp, 16			; 00000010H
  00476	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0047b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0047e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00481	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00484	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00487	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 97   : 	long result;
; 98   : 	InvokeHelper(0x7b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  0048a	6a 00		 push	 0
  0048c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  0048f	50		 push	 eax
  00490	6a 03		 push	 3
  00492	6a 02		 push	 2
  00494	6a 7b		 push	 123			; 0000007bH
  00496	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00499	51		 push	 ecx
  0049a	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0049f	83 c4 18	 add	 esp, 24			; 00000018H

; 99   : 	return result;

  004a2	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 100  : }

  004a5	52		 push	 edx
  004a6	8b cd		 mov	 ecx, ebp
  004a8	50		 push	 eax
  004a9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188340
  004af	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  004b4	58		 pop	 eax
  004b5	5a		 pop	 edx
  004b6	83 c4 10	 add	 esp, 16			; 00000010H
  004b9	3b ec		 cmp	 ebp, esp
  004bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004c0	8b e5		 mov	 esp, ebp
  004c2	5d		 pop	 ebp
  004c3	c3		 ret	 0
$L188340:
  004c4	01 00 00 00	 DD	 1
  004c8	00 00 00 00	 DD	 $L188339
$L188339:
  004cc	f4 ff ff ff	 DD	 -12			; fffffff4H
  004d0	04 00 00 00	 DD	 4
  004d4	00 00 00 00	 DD	 $L188338
$L188338:
  004d8	72		 DB	 114			; 00000072H
  004d9	65		 DB	 101			; 00000065H
  004da	73		 DB	 115			; 00000073H
  004db	75		 DB	 117			; 00000075H
  004dc	6c		 DB	 108			; 0000006cH
  004dd	74		 DB	 116			; 00000074H
  004de	00		 DB	 0
?GetBackgroundColor@CShockwaveFlash@@QAEJXZ ENDP	; CShockwaveFlash::GetBackgroundColor
_TEXT	ENDS
PUBLIC	?SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z	; CShockwaveFlash::SetBackgroundColor
;	COMDAT ?parms@?1??SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetBackgroundColor'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z PROC NEAR	; CShockwaveFlash::SetBackgroundColor
; _this$ = ecx

; 103  : {

  004e0	55		 push	 ebp
  004e1	8b ec		 mov	 ebp, esp
  004e3	51		 push	 ecx
  004e4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  004eb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 104  : 	static BYTE parms[] =
; 105  : 		VTS_I4;
; 106  : 	InvokeHelper(0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 107  : 		 nNewValue);

  004ee	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  004f1	50		 push	 eax
  004f2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z@4PAEA
  004f7	6a 00		 push	 0
  004f9	6a 00		 push	 0
  004fb	6a 04		 push	 4
  004fd	6a 7b		 push	 123			; 0000007bH
  004ff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00502	51		 push	 ecx
  00503	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00508	83 c4 1c	 add	 esp, 28			; 0000001cH

; 108  : }

  0050b	83 c4 04	 add	 esp, 4
  0050e	3b ec		 cmp	 ebp, esp
  00510	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00515	8b e5		 mov	 esp, ebp
  00517	5d		 pop	 ebp
  00518	c2 04 00	 ret	 4
?SetBackgroundColor@CShockwaveFlash@@QAEXJ@Z ENDP	; CShockwaveFlash::SetBackgroundColor
_TEXT	ENDS
PUBLIC	?GetLoop@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetLoop
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetLoop@CShockwaveFlash@@QAEHXZ PROC NEAR		; CShockwaveFlash::GetLoop
; _this$ = ecx

; 111  : {

  00520	55		 push	 ebp
  00521	8b ec		 mov	 ebp, esp
  00523	83 ec 10	 sub	 esp, 16			; 00000010H
  00526	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0052b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0052e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00531	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00534	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00537	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 112  : 	BOOL result;
; 113  : 	InvokeHelper(0x6a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  0053a	6a 00		 push	 0
  0053c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  0053f	50		 push	 eax
  00540	6a 0b		 push	 11			; 0000000bH
  00542	6a 02		 push	 2
  00544	6a 6a		 push	 106			; 0000006aH
  00546	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00549	51		 push	 ecx
  0054a	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0054f	83 c4 18	 add	 esp, 24			; 00000018H

; 114  : 	return result;

  00552	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 115  : }

  00555	52		 push	 edx
  00556	8b cd		 mov	 ecx, ebp
  00558	50		 push	 eax
  00559	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188345
  0055f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00564	58		 pop	 eax
  00565	5a		 pop	 edx
  00566	83 c4 10	 add	 esp, 16			; 00000010H
  00569	3b ec		 cmp	 ebp, esp
  0056b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00570	8b e5		 mov	 esp, ebp
  00572	5d		 pop	 ebp
  00573	c3		 ret	 0
$L188345:
  00574	01 00 00 00	 DD	 1
  00578	00 00 00 00	 DD	 $L188344
$L188344:
  0057c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00580	04 00 00 00	 DD	 4
  00584	00 00 00 00	 DD	 $L188343
$L188343:
  00588	72		 DB	 114			; 00000072H
  00589	65		 DB	 101			; 00000065H
  0058a	73		 DB	 115			; 00000073H
  0058b	75		 DB	 117			; 00000075H
  0058c	6c		 DB	 108			; 0000006cH
  0058d	74		 DB	 116			; 00000074H
  0058e	00		 DB	 0
?GetLoop@CShockwaveFlash@@QAEHXZ ENDP			; CShockwaveFlash::GetLoop
_TEXT	ENDS
PUBLIC	?SetLoop@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetLoop
;	COMDAT ?parms@?1??SetLoop@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetLoop@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetLoop'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetLoop@CShockwaveFlash@@QAEXH@Z PROC NEAR		; CShockwaveFlash::SetLoop
; _this$ = ecx

; 118  : {

  00590	55		 push	 ebp
  00591	8b ec		 mov	 ebp, esp
  00593	51		 push	 ecx
  00594	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0059b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 119  : 	static BYTE parms[] =
; 120  : 		VTS_BOOL;
; 121  : 	InvokeHelper(0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 122  : 		 bNewValue);

  0059e	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  005a1	50		 push	 eax
  005a2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetLoop@CShockwaveFlash@@QAEXH@Z@4PAEA
  005a7	6a 00		 push	 0
  005a9	6a 00		 push	 0
  005ab	6a 04		 push	 4
  005ad	6a 6a		 push	 106			; 0000006aH
  005af	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005b2	51		 push	 ecx
  005b3	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  005b8	83 c4 1c	 add	 esp, 28			; 0000001cH

; 123  : }

  005bb	83 c4 04	 add	 esp, 4
  005be	3b ec		 cmp	 ebp, esp
  005c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005c5	8b e5		 mov	 esp, ebp
  005c7	5d		 pop	 ebp
  005c8	c2 04 00	 ret	 4
?SetLoop@CShockwaveFlash@@QAEXH@Z ENDP			; CShockwaveFlash::SetLoop
_TEXT	ENDS
PUBLIC	?GetMovie@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetMovie
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:NEAR
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
xdata$x	SEGMENT
$T188358 DD	0ffffffffH
	DD	FLAT:$L188348
$T188353 DD	019930520H
	DD	01H
	DD	FLAT:$T188358
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188350 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetMovie@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetMovie
; _this$ = ecx

; 126  : {

  005d0	55		 push	 ebp
  005d1	8b ec		 mov	 ebp, esp
  005d3	6a ff		 push	 -1
  005d5	68 00 00 00 00	 push	 __ehhandler$?GetMovie@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  005da	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  005e0	50		 push	 eax
  005e1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  005e8	83 ec 14	 sub	 esp, 20			; 00000014H
  005eb	56		 push	 esi
  005ec	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  005f1	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  005f4	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  005f7	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  005fa	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  005fd	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00600	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00603	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188350[ebp], 0

; 127  : 	CString result;

  0060a	8b f4		 mov	 esi, esp
  0060c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0060f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00615	3b f4		 cmp	 esi, esp
  00617	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0061c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 128  : 	InvokeHelper(0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  00623	6a 00		 push	 0
  00625	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  00628	50		 push	 eax
  00629	6a 08		 push	 8
  0062b	6a 02		 push	 2
  0062d	6a 66		 push	 102			; 00000066H
  0062f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00632	51		 push	 ecx
  00633	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00638	83 c4 18	 add	 esp, 24			; 00000018H

; 129  : 	return result;

  0063b	8b f4		 mov	 esi, esp
  0063d	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  00640	52		 push	 edx
  00641	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00644	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0064a	3b f4		 cmp	 esi, esp
  0064c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00651	8b 45 e0	 mov	 eax, DWORD PTR $T188350[ebp]
  00654	83 c8 01	 or	 eax, 1
  00657	89 45 e0	 mov	 DWORD PTR $T188350[ebp], eax
  0065a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00661	8b f4		 mov	 esi, esp
  00663	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00666	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0066c	3b f4		 cmp	 esi, esp
  0066e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00673	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 130  : }

  00676	52		 push	 edx
  00677	8b cd		 mov	 ecx, ebp
  00679	50		 push	 eax
  0067a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188357
  00680	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00685	58		 pop	 eax
  00686	5a		 pop	 edx
  00687	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0068a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00691	5e		 pop	 esi
  00692	83 c4 20	 add	 esp, 32			; 00000020H
  00695	3b ec		 cmp	 ebp, esp
  00697	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0069c	8b e5		 mov	 esp, ebp
  0069e	5d		 pop	 ebp
  0069f	c2 04 00	 ret	 4
$L188357:
  006a2	01 00 00 00	 DD	 1
  006a6	00 00 00 00	 DD	 $L188356
$L188356:
  006aa	e8 ff ff ff	 DD	 -24			; ffffffe8H
  006ae	04 00 00 00	 DD	 4
  006b2	00 00 00 00	 DD	 $L188354
$L188354:
  006b6	72		 DB	 114			; 00000072H
  006b7	65		 DB	 101			; 00000065H
  006b8	73		 DB	 115			; 00000073H
  006b9	75		 DB	 117			; 00000075H
  006ba	6c		 DB	 108			; 0000006cH
  006bb	74		 DB	 116			; 00000074H
  006bc	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188348:
  00014	8b f4		 mov	 esi, esp
  00016	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0001f	3b f4		 cmp	 esi, esp
  00021	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetMovie@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00026	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188353
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetMovie@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetMovie
PUBLIC	?SetMovie@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetMovie
;	COMDAT ?parms@?1??SetMovie@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetMovie@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetMovie'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetMovie@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::SetMovie
; _this$ = ecx

; 133  : {

  006c0	55		 push	 ebp
  006c1	8b ec		 mov	 ebp, esp
  006c3	51		 push	 ecx
  006c4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  006cb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 134  : 	static BYTE parms[] =
; 135  : 		VTS_BSTR;
; 136  : 	InvokeHelper(0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 137  : 		 lpszNewValue);

  006ce	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  006d1	50		 push	 eax
  006d2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetMovie@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  006d7	6a 00		 push	 0
  006d9	6a 00		 push	 0
  006db	6a 04		 push	 4
  006dd	6a 66		 push	 102			; 00000066H
  006df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006e2	51		 push	 ecx
  006e3	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  006e8	83 c4 1c	 add	 esp, 28			; 0000001cH

; 138  : }

  006eb	83 c4 04	 add	 esp, 4
  006ee	3b ec		 cmp	 ebp, esp
  006f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006f5	8b e5		 mov	 esp, ebp
  006f7	5d		 pop	 ebp
  006f8	c2 04 00	 ret	 4
?SetMovie@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetMovie
_TEXT	ENDS
PUBLIC	?GetFrameNum@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetFrameNum
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetFrameNum@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::GetFrameNum
; _this$ = ecx

; 141  : {

  00700	55		 push	 ebp
  00701	8b ec		 mov	 ebp, esp
  00703	83 ec 10	 sub	 esp, 16			; 00000010H
  00706	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0070b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0070e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00711	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00714	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00717	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 142  : 	long result;
; 143  : 	InvokeHelper(0x6b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  0071a	6a 00		 push	 0
  0071c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  0071f	50		 push	 eax
  00720	6a 03		 push	 3
  00722	6a 02		 push	 2
  00724	6a 6b		 push	 107			; 0000006bH
  00726	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00729	51		 push	 ecx
  0072a	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0072f	83 c4 18	 add	 esp, 24			; 00000018H

; 144  : 	return result;

  00732	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 145  : }

  00735	52		 push	 edx
  00736	8b cd		 mov	 ecx, ebp
  00738	50		 push	 eax
  00739	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188363
  0073f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00744	58		 pop	 eax
  00745	5a		 pop	 edx
  00746	83 c4 10	 add	 esp, 16			; 00000010H
  00749	3b ec		 cmp	 ebp, esp
  0074b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00750	8b e5		 mov	 esp, ebp
  00752	5d		 pop	 ebp
  00753	c3		 ret	 0
$L188363:
  00754	01 00 00 00	 DD	 1
  00758	00 00 00 00	 DD	 $L188362
$L188362:
  0075c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00760	04 00 00 00	 DD	 4
  00764	00 00 00 00	 DD	 $L188361
$L188361:
  00768	72		 DB	 114			; 00000072H
  00769	65		 DB	 101			; 00000065H
  0076a	73		 DB	 115			; 00000073H
  0076b	75		 DB	 117			; 00000075H
  0076c	6c		 DB	 108			; 0000006cH
  0076d	74		 DB	 116			; 00000074H
  0076e	00		 DB	 0
?GetFrameNum@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetFrameNum
_TEXT	ENDS
PUBLIC	?SetFrameNum@CShockwaveFlash@@QAEXJ@Z		; CShockwaveFlash::SetFrameNum
;	COMDAT ?parms@?1??SetFrameNum@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetFrameNum@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetFrameNum'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetFrameNum@CShockwaveFlash@@QAEXJ@Z PROC NEAR		; CShockwaveFlash::SetFrameNum
; _this$ = ecx

; 148  : {

  00770	55		 push	 ebp
  00771	8b ec		 mov	 ebp, esp
  00773	51		 push	 ecx
  00774	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0077b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 149  : 	static BYTE parms[] =
; 150  : 		VTS_I4;
; 151  : 	InvokeHelper(0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 152  : 		 nNewValue);

  0077e	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  00781	50		 push	 eax
  00782	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetFrameNum@CShockwaveFlash@@QAEXJ@Z@4PAEA
  00787	6a 00		 push	 0
  00789	6a 00		 push	 0
  0078b	6a 04		 push	 4
  0078d	6a 6b		 push	 107			; 0000006bH
  0078f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00792	51		 push	 ecx
  00793	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00798	83 c4 1c	 add	 esp, 28			; 0000001cH

; 153  : }

  0079b	83 c4 04	 add	 esp, 4
  0079e	3b ec		 cmp	 ebp, esp
  007a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007a5	8b e5		 mov	 esp, ebp
  007a7	5d		 pop	 ebp
  007a8	c2 04 00	 ret	 4
?SetFrameNum@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::SetFrameNum
_TEXT	ENDS
PUBLIC	?SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z	; CShockwaveFlash::SetZoomRect
;	COMDAT ?parms@?1??SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z@4PAEA DB 03H, 03H, 03H
	DB	03H, 00H					; `CShockwaveFlash::SetZoomRect'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_left$ = 8						; size = 4
_top$ = 12						; size = 4
_right$ = 16						; size = 4
_bottom$ = 20						; size = 4
?SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z PROC NEAR	; CShockwaveFlash::SetZoomRect
; _this$ = ecx

; 156  : {

  007b0	55		 push	 ebp
  007b1	8b ec		 mov	 ebp, esp
  007b3	51		 push	 ecx
  007b4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  007bb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 157  : 	static BYTE parms[] =
; 158  : 		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
; 159  : 	InvokeHelper(0x6d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 160  : 		 left, top, right, bottom);

  007be	8b 45 14	 mov	 eax, DWORD PTR _bottom$[ebp]
  007c1	50		 push	 eax
  007c2	8b 4d 10	 mov	 ecx, DWORD PTR _right$[ebp]
  007c5	51		 push	 ecx
  007c6	8b 55 0c	 mov	 edx, DWORD PTR _top$[ebp]
  007c9	52		 push	 edx
  007ca	8b 45 08	 mov	 eax, DWORD PTR _left$[ebp]
  007cd	50		 push	 eax
  007ce	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z@4PAEA
  007d3	6a 00		 push	 0
  007d5	6a 00		 push	 0
  007d7	6a 01		 push	 1
  007d9	6a 6d		 push	 109			; 0000006dH
  007db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007de	51		 push	 ecx
  007df	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  007e4	83 c4 28	 add	 esp, 40			; 00000028H

; 161  : }

  007e7	83 c4 04	 add	 esp, 4
  007ea	3b ec		 cmp	 ebp, esp
  007ec	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007f1	8b e5		 mov	 esp, ebp
  007f3	5d		 pop	 ebp
  007f4	c2 10 00	 ret	 16			; 00000010H
?SetZoomRect@CShockwaveFlash@@QAEXJJJJ@Z ENDP		; CShockwaveFlash::SetZoomRect
_TEXT	ENDS
PUBLIC	?Zoom@CShockwaveFlash@@QAEXJ@Z			; CShockwaveFlash::Zoom
;	COMDAT ?parms@?1??Zoom@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??Zoom@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::Zoom'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_factor$ = 8						; size = 4
?Zoom@CShockwaveFlash@@QAEXJ@Z PROC NEAR		; CShockwaveFlash::Zoom
; _this$ = ecx

; 164  : {

  00800	55		 push	 ebp
  00801	8b ec		 mov	 ebp, esp
  00803	51		 push	 ecx
  00804	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0080b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 165  : 	static BYTE parms[] =
; 166  : 		VTS_I4;
; 167  : 	InvokeHelper(0x76, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 168  : 		 factor);

  0080e	8b 45 08	 mov	 eax, DWORD PTR _factor$[ebp]
  00811	50		 push	 eax
  00812	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??Zoom@CShockwaveFlash@@QAEXJ@Z@4PAEA
  00817	6a 00		 push	 0
  00819	6a 00		 push	 0
  0081b	6a 01		 push	 1
  0081d	6a 76		 push	 118			; 00000076H
  0081f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00822	51		 push	 ecx
  00823	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00828	83 c4 1c	 add	 esp, 28			; 0000001cH

; 169  : }

  0082b	83 c4 04	 add	 esp, 4
  0082e	3b ec		 cmp	 ebp, esp
  00830	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00835	8b e5		 mov	 esp, ebp
  00837	5d		 pop	 ebp
  00838	c2 04 00	 ret	 4
?Zoom@CShockwaveFlash@@QAEXJ@Z ENDP			; CShockwaveFlash::Zoom
_TEXT	ENDS
PUBLIC	?Pan@CShockwaveFlash@@QAEXJJJ@Z			; CShockwaveFlash::Pan
;	COMDAT ?parms@?1??Pan@CShockwaveFlash@@QAEXJJJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??Pan@CShockwaveFlash@@QAEXJJJ@Z@4PAEA DB 03H, 03H, 03H, 00H ; `CShockwaveFlash::Pan'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_mode$ = 16						; size = 4
?Pan@CShockwaveFlash@@QAEXJJJ@Z PROC NEAR		; CShockwaveFlash::Pan
; _this$ = ecx

; 172  : {

  00840	55		 push	 ebp
  00841	8b ec		 mov	 ebp, esp
  00843	51		 push	 ecx
  00844	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0084b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 173  : 	static BYTE parms[] =
; 174  : 		VTS_I4 VTS_I4 VTS_I4;
; 175  : 	InvokeHelper(0x77, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 176  : 		 x, y, mode);

  0084e	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00851	50		 push	 eax
  00852	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  00855	51		 push	 ecx
  00856	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  00859	52		 push	 edx
  0085a	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??Pan@CShockwaveFlash@@QAEXJJJ@Z@4PAEA
  0085f	6a 00		 push	 0
  00861	6a 00		 push	 0
  00863	6a 01		 push	 1
  00865	6a 77		 push	 119			; 00000077H
  00867	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0086a	50		 push	 eax
  0086b	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00870	83 c4 24	 add	 esp, 36			; 00000024H

; 177  : }

  00873	83 c4 04	 add	 esp, 4
  00876	3b ec		 cmp	 ebp, esp
  00878	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0087d	8b e5		 mov	 esp, ebp
  0087f	5d		 pop	 ebp
  00880	c2 0c 00	 ret	 12			; 0000000cH
?Pan@CShockwaveFlash@@QAEXJJJ@Z ENDP			; CShockwaveFlash::Pan
_TEXT	ENDS
PUBLIC	?Play@CShockwaveFlash@@QAEXXZ			; CShockwaveFlash::Play
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Play@CShockwaveFlash@@QAEXXZ PROC NEAR			; CShockwaveFlash::Play
; _this$ = ecx

; 180  : {

  00890	55		 push	 ebp
  00891	8b ec		 mov	 ebp, esp
  00893	51		 push	 ecx
  00894	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0089b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 181  : 	InvokeHelper(0x70, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  0089e	6a 00		 push	 0
  008a0	6a 00		 push	 0
  008a2	6a 00		 push	 0
  008a4	6a 01		 push	 1
  008a6	6a 70		 push	 112			; 00000070H
  008a8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008ab	50		 push	 eax
  008ac	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  008b1	83 c4 18	 add	 esp, 24			; 00000018H

; 182  : }

  008b4	83 c4 04	 add	 esp, 4
  008b7	3b ec		 cmp	 ebp, esp
  008b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008be	8b e5		 mov	 esp, ebp
  008c0	5d		 pop	 ebp
  008c1	c3		 ret	 0
?Play@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::Play
_TEXT	ENDS
PUBLIC	?Stop@CShockwaveFlash@@QAEXXZ			; CShockwaveFlash::Stop
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Stop@CShockwaveFlash@@QAEXXZ PROC NEAR			; CShockwaveFlash::Stop
; _this$ = ecx

; 185  : {

  008d0	55		 push	 ebp
  008d1	8b ec		 mov	 ebp, esp
  008d3	51		 push	 ecx
  008d4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  008db	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 186  : 	InvokeHelper(0x71, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  008de	6a 00		 push	 0
  008e0	6a 00		 push	 0
  008e2	6a 00		 push	 0
  008e4	6a 01		 push	 1
  008e6	6a 71		 push	 113			; 00000071H
  008e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008eb	50		 push	 eax
  008ec	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  008f1	83 c4 18	 add	 esp, 24			; 00000018H

; 187  : }

  008f4	83 c4 04	 add	 esp, 4
  008f7	3b ec		 cmp	 ebp, esp
  008f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008fe	8b e5		 mov	 esp, ebp
  00900	5d		 pop	 ebp
  00901	c3		 ret	 0
?Stop@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::Stop
_TEXT	ENDS
PUBLIC	?Back@CShockwaveFlash@@QAEXXZ			; CShockwaveFlash::Back
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Back@CShockwaveFlash@@QAEXXZ PROC NEAR			; CShockwaveFlash::Back
; _this$ = ecx

; 190  : {

  00910	55		 push	 ebp
  00911	8b ec		 mov	 ebp, esp
  00913	51		 push	 ecx
  00914	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0091b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 191  : 	InvokeHelper(0x72, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  0091e	6a 00		 push	 0
  00920	6a 00		 push	 0
  00922	6a 00		 push	 0
  00924	6a 01		 push	 1
  00926	6a 72		 push	 114			; 00000072H
  00928	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0092b	50		 push	 eax
  0092c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00931	83 c4 18	 add	 esp, 24			; 00000018H

; 192  : }

  00934	83 c4 04	 add	 esp, 4
  00937	3b ec		 cmp	 ebp, esp
  00939	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0093e	8b e5		 mov	 esp, ebp
  00940	5d		 pop	 ebp
  00941	c3		 ret	 0
?Back@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::Back
_TEXT	ENDS
PUBLIC	?Forward@CShockwaveFlash@@QAEXXZ		; CShockwaveFlash::Forward
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Forward@CShockwaveFlash@@QAEXXZ PROC NEAR		; CShockwaveFlash::Forward
; _this$ = ecx

; 195  : {

  00950	55		 push	 ebp
  00951	8b ec		 mov	 ebp, esp
  00953	51		 push	 ecx
  00954	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0095b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 196  : 	InvokeHelper(0x73, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  0095e	6a 00		 push	 0
  00960	6a 00		 push	 0
  00962	6a 00		 push	 0
  00964	6a 01		 push	 1
  00966	6a 73		 push	 115			; 00000073H
  00968	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0096b	50		 push	 eax
  0096c	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00971	83 c4 18	 add	 esp, 24			; 00000018H

; 197  : }

  00974	83 c4 04	 add	 esp, 4
  00977	3b ec		 cmp	 ebp, esp
  00979	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0097e	8b e5		 mov	 esp, ebp
  00980	5d		 pop	 ebp
  00981	c3		 ret	 0
?Forward@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::Forward
_TEXT	ENDS
PUBLIC	?Rewind@CShockwaveFlash@@QAEXXZ			; CShockwaveFlash::Rewind
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Rewind@CShockwaveFlash@@QAEXXZ PROC NEAR		; CShockwaveFlash::Rewind
; _this$ = ecx

; 200  : {

  00990	55		 push	 ebp
  00991	8b ec		 mov	 ebp, esp
  00993	51		 push	 ecx
  00994	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0099b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 201  : 	InvokeHelper(0x74, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  0099e	6a 00		 push	 0
  009a0	6a 00		 push	 0
  009a2	6a 00		 push	 0
  009a4	6a 01		 push	 1
  009a6	6a 74		 push	 116			; 00000074H
  009a8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009ab	50		 push	 eax
  009ac	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  009b1	83 c4 18	 add	 esp, 24			; 00000018H

; 202  : }

  009b4	83 c4 04	 add	 esp, 4
  009b7	3b ec		 cmp	 ebp, esp
  009b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009be	8b e5		 mov	 esp, ebp
  009c0	5d		 pop	 ebp
  009c1	c3		 ret	 0
?Rewind@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::Rewind
_TEXT	ENDS
PUBLIC	?StopPlay@CShockwaveFlash@@QAEXXZ		; CShockwaveFlash::StopPlay
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StopPlay@CShockwaveFlash@@QAEXXZ PROC NEAR		; CShockwaveFlash::StopPlay
; _this$ = ecx

; 205  : {

  009d0	55		 push	 ebp
  009d1	8b ec		 mov	 ebp, esp
  009d3	51		 push	 ecx
  009d4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  009db	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 206  : 	InvokeHelper(0x7e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  009de	6a 00		 push	 0
  009e0	6a 00		 push	 0
  009e2	6a 00		 push	 0
  009e4	6a 01		 push	 1
  009e6	6a 7e		 push	 126			; 0000007eH
  009e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009eb	50		 push	 eax
  009ec	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  009f1	83 c4 18	 add	 esp, 24			; 00000018H

; 207  : }

  009f4	83 c4 04	 add	 esp, 4
  009f7	3b ec		 cmp	 ebp, esp
  009f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009fe	8b e5		 mov	 esp, ebp
  00a00	5d		 pop	 ebp
  00a01	c3		 ret	 0
?StopPlay@CShockwaveFlash@@QAEXXZ ENDP			; CShockwaveFlash::StopPlay
_TEXT	ENDS
PUBLIC	?GotoFrame@CShockwaveFlash@@QAEXJ@Z		; CShockwaveFlash::GotoFrame
;	COMDAT ?parms@?1??GotoFrame@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GotoFrame@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::GotoFrame'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_FrameNum$ = 8						; size = 4
?GotoFrame@CShockwaveFlash@@QAEXJ@Z PROC NEAR		; CShockwaveFlash::GotoFrame
; _this$ = ecx

; 210  : {

  00a10	55		 push	 ebp
  00a11	8b ec		 mov	 ebp, esp
  00a13	51		 push	 ecx
  00a14	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00a1b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 211  : 	static BYTE parms[] =
; 212  : 		VTS_I4;
; 213  : 	InvokeHelper(0x7f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 214  : 		 FrameNum);

  00a1e	8b 45 08	 mov	 eax, DWORD PTR _FrameNum$[ebp]
  00a21	50		 push	 eax
  00a22	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??GotoFrame@CShockwaveFlash@@QAEXJ@Z@4PAEA
  00a27	6a 00		 push	 0
  00a29	6a 00		 push	 0
  00a2b	6a 01		 push	 1
  00a2d	6a 7f		 push	 127			; 0000007fH
  00a2f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a32	51		 push	 ecx
  00a33	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00a38	83 c4 1c	 add	 esp, 28			; 0000001cH

; 215  : }

  00a3b	83 c4 04	 add	 esp, 4
  00a3e	3b ec		 cmp	 ebp, esp
  00a40	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a45	8b e5		 mov	 esp, ebp
  00a47	5d		 pop	 ebp
  00a48	c2 04 00	 ret	 4
?GotoFrame@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::GotoFrame
_TEXT	ENDS
PUBLIC	?CurrentFrame@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::CurrentFrame
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?CurrentFrame@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::CurrentFrame
; _this$ = ecx

; 218  : {

  00a50	55		 push	 ebp
  00a51	8b ec		 mov	 ebp, esp
  00a53	83 ec 10	 sub	 esp, 16			; 00000010H
  00a56	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00a5b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00a5e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00a61	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00a64	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00a67	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 219  : 	long result;
; 220  : 	InvokeHelper(0x80, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);

  00a6a	6a 00		 push	 0
  00a6c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  00a6f	50		 push	 eax
  00a70	6a 03		 push	 3
  00a72	6a 01		 push	 1
  00a74	68 80 00 00 00	 push	 128			; 00000080H
  00a79	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a7c	51		 push	 ecx
  00a7d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00a82	83 c4 18	 add	 esp, 24			; 00000018H

; 221  : 	return result;

  00a85	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 222  : }

  00a88	52		 push	 edx
  00a89	8b cd		 mov	 ecx, ebp
  00a8b	50		 push	 eax
  00a8c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188378
  00a92	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00a97	58		 pop	 eax
  00a98	5a		 pop	 edx
  00a99	83 c4 10	 add	 esp, 16			; 00000010H
  00a9c	3b ec		 cmp	 ebp, esp
  00a9e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00aa3	8b e5		 mov	 esp, ebp
  00aa5	5d		 pop	 ebp
  00aa6	c3		 ret	 0
$L188378:
  00aa7	01 00 00 00	 DD	 1
  00aab	00 00 00 00	 DD	 $L188377
$L188377:
  00aaf	f4 ff ff ff	 DD	 -12			; fffffff4H
  00ab3	04 00 00 00	 DD	 4
  00ab7	00 00 00 00	 DD	 $L188376
$L188376:
  00abb	72		 DB	 114			; 00000072H
  00abc	65		 DB	 101			; 00000065H
  00abd	73		 DB	 115			; 00000073H
  00abe	75		 DB	 117			; 00000075H
  00abf	6c		 DB	 108			; 0000006cH
  00ac0	74		 DB	 116			; 00000074H
  00ac1	00		 DB	 0
?CurrentFrame@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::CurrentFrame
_TEXT	ENDS
PUBLIC	?IsPlaying@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::IsPlaying
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?IsPlaying@CShockwaveFlash@@QAEHXZ PROC NEAR		; CShockwaveFlash::IsPlaying
; _this$ = ecx

; 225  : {

  00ad0	55		 push	 ebp
  00ad1	8b ec		 mov	 ebp, esp
  00ad3	83 ec 10	 sub	 esp, 16			; 00000010H
  00ad6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00adb	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00ade	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00ae1	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00ae4	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00ae7	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 226  : 	BOOL result;
; 227  : 	InvokeHelper(0x81, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);

  00aea	6a 00		 push	 0
  00aec	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  00aef	50		 push	 eax
  00af0	6a 0b		 push	 11			; 0000000bH
  00af2	6a 01		 push	 1
  00af4	68 81 00 00 00	 push	 129			; 00000081H
  00af9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00afc	51		 push	 ecx
  00afd	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00b02	83 c4 18	 add	 esp, 24			; 00000018H

; 228  : 	return result;

  00b05	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 229  : }

  00b08	52		 push	 edx
  00b09	8b cd		 mov	 ecx, ebp
  00b0b	50		 push	 eax
  00b0c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188382
  00b12	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00b17	58		 pop	 eax
  00b18	5a		 pop	 edx
  00b19	83 c4 10	 add	 esp, 16			; 00000010H
  00b1c	3b ec		 cmp	 ebp, esp
  00b1e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b23	8b e5		 mov	 esp, ebp
  00b25	5d		 pop	 ebp
  00b26	c3		 ret	 0
$L188382:
  00b27	01 00 00 00	 DD	 1
  00b2b	00 00 00 00	 DD	 $L188381
$L188381:
  00b2f	f4 ff ff ff	 DD	 -12			; fffffff4H
  00b33	04 00 00 00	 DD	 4
  00b37	00 00 00 00	 DD	 $L188380
$L188380:
  00b3b	72		 DB	 114			; 00000072H
  00b3c	65		 DB	 101			; 00000065H
  00b3d	73		 DB	 115			; 00000073H
  00b3e	75		 DB	 117			; 00000075H
  00b3f	6c		 DB	 108			; 0000006cH
  00b40	74		 DB	 116			; 00000074H
  00b41	00		 DB	 0
?IsPlaying@CShockwaveFlash@@QAEHXZ ENDP			; CShockwaveFlash::IsPlaying
_TEXT	ENDS
PUBLIC	?PercentLoaded@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::PercentLoaded
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?PercentLoaded@CShockwaveFlash@@QAEJXZ PROC NEAR	; CShockwaveFlash::PercentLoaded
; _this$ = ecx

; 232  : {

  00b50	55		 push	 ebp
  00b51	8b ec		 mov	 ebp, esp
  00b53	83 ec 10	 sub	 esp, 16			; 00000010H
  00b56	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00b5b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00b5e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00b61	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00b64	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00b67	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	long result;
; 234  : 	InvokeHelper(0x82, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);

  00b6a	6a 00		 push	 0
  00b6c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  00b6f	50		 push	 eax
  00b70	6a 03		 push	 3
  00b72	6a 01		 push	 1
  00b74	68 82 00 00 00	 push	 130			; 00000082H
  00b79	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b7c	51		 push	 ecx
  00b7d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00b82	83 c4 18	 add	 esp, 24			; 00000018H

; 235  : 	return result;

  00b85	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 236  : }

  00b88	52		 push	 edx
  00b89	8b cd		 mov	 ecx, ebp
  00b8b	50		 push	 eax
  00b8c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188386
  00b92	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00b97	58		 pop	 eax
  00b98	5a		 pop	 edx
  00b99	83 c4 10	 add	 esp, 16			; 00000010H
  00b9c	3b ec		 cmp	 ebp, esp
  00b9e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ba3	8b e5		 mov	 esp, ebp
  00ba5	5d		 pop	 ebp
  00ba6	c3		 ret	 0
$L188386:
  00ba7	01 00 00 00	 DD	 1
  00bab	00 00 00 00	 DD	 $L188385
$L188385:
  00baf	f4 ff ff ff	 DD	 -12			; fffffff4H
  00bb3	04 00 00 00	 DD	 4
  00bb7	00 00 00 00	 DD	 $L188384
$L188384:
  00bbb	72		 DB	 114			; 00000072H
  00bbc	65		 DB	 101			; 00000065H
  00bbd	73		 DB	 115			; 00000073H
  00bbe	75		 DB	 117			; 00000075H
  00bbf	6c		 DB	 108			; 0000006cH
  00bc0	74		 DB	 116			; 00000074H
  00bc1	00		 DB	 0
?PercentLoaded@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::PercentLoaded
_TEXT	ENDS
PUBLIC	?FrameLoaded@CShockwaveFlash@@QAEHJ@Z		; CShockwaveFlash::FrameLoaded
;	COMDAT ?parms@?1??FrameLoaded@CShockwaveFlash@@QAEHJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??FrameLoaded@CShockwaveFlash@@QAEHJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::FrameLoaded'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
_FrameNum$ = 8						; size = 4
?FrameLoaded@CShockwaveFlash@@QAEHJ@Z PROC NEAR		; CShockwaveFlash::FrameLoaded
; _this$ = ecx

; 239  : {

  00bd0	55		 push	 ebp
  00bd1	8b ec		 mov	 ebp, esp
  00bd3	83 ec 10	 sub	 esp, 16			; 00000010H
  00bd6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00bdb	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00bde	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00be1	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00be4	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00be7	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 240  : 	BOOL result;
; 241  : 	static BYTE parms[] =
; 242  : 		VTS_I4;
; 243  : 	InvokeHelper(0x83, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
; 244  : 		FrameNum);

  00bea	8b 45 08	 mov	 eax, DWORD PTR _FrameNum$[ebp]
  00bed	50		 push	 eax
  00bee	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??FrameLoaded@CShockwaveFlash@@QAEHJ@Z@4PAEA
  00bf3	8d 4d f4	 lea	 ecx, DWORD PTR _result$[ebp]
  00bf6	51		 push	 ecx
  00bf7	6a 0b		 push	 11			; 0000000bH
  00bf9	6a 01		 push	 1
  00bfb	68 83 00 00 00	 push	 131			; 00000083H
  00c00	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00c03	52		 push	 edx
  00c04	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00c09	83 c4 1c	 add	 esp, 28			; 0000001cH

; 245  : 	return result;

  00c0c	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 246  : }

  00c0f	52		 push	 edx
  00c10	8b cd		 mov	 ecx, ebp
  00c12	50		 push	 eax
  00c13	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188390
  00c19	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00c1e	58		 pop	 eax
  00c1f	5a		 pop	 edx
  00c20	83 c4 10	 add	 esp, 16			; 00000010H
  00c23	3b ec		 cmp	 ebp, esp
  00c25	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c2a	8b e5		 mov	 esp, ebp
  00c2c	5d		 pop	 ebp
  00c2d	c2 04 00	 ret	 4
$L188390:
  00c30	01 00 00 00	 DD	 1
  00c34	00 00 00 00	 DD	 $L188389
$L188389:
  00c38	f4 ff ff ff	 DD	 -12			; fffffff4H
  00c3c	04 00 00 00	 DD	 4
  00c40	00 00 00 00	 DD	 $L188388
$L188388:
  00c44	72		 DB	 114			; 00000072H
  00c45	65		 DB	 101			; 00000065H
  00c46	73		 DB	 115			; 00000073H
  00c47	75		 DB	 117			; 00000075H
  00c48	6c		 DB	 108			; 0000006cH
  00c49	74		 DB	 116			; 00000074H
  00c4a	00		 DB	 0
?FrameLoaded@CShockwaveFlash@@QAEHJ@Z ENDP		; CShockwaveFlash::FrameLoaded
_TEXT	ENDS
PUBLIC	?FlashVersion@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::FlashVersion
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?FlashVersion@CShockwaveFlash@@QAEJXZ PROC NEAR		; CShockwaveFlash::FlashVersion
; _this$ = ecx

; 249  : {

  00c50	55		 push	 ebp
  00c51	8b ec		 mov	 ebp, esp
  00c53	83 ec 10	 sub	 esp, 16			; 00000010H
  00c56	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00c5b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00c5e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00c61	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00c64	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00c67	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 250  : 	long result;
; 251  : 	InvokeHelper(0x84, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);

  00c6a	6a 00		 push	 0
  00c6c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  00c6f	50		 push	 eax
  00c70	6a 03		 push	 3
  00c72	6a 01		 push	 1
  00c74	68 84 00 00 00	 push	 132			; 00000084H
  00c79	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c7c	51		 push	 ecx
  00c7d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00c82	83 c4 18	 add	 esp, 24			; 00000018H

; 252  : 	return result;

  00c85	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 253  : }

  00c88	52		 push	 edx
  00c89	8b cd		 mov	 ecx, ebp
  00c8b	50		 push	 eax
  00c8c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188394
  00c92	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00c97	58		 pop	 eax
  00c98	5a		 pop	 edx
  00c99	83 c4 10	 add	 esp, 16			; 00000010H
  00c9c	3b ec		 cmp	 ebp, esp
  00c9e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ca3	8b e5		 mov	 esp, ebp
  00ca5	5d		 pop	 ebp
  00ca6	c3		 ret	 0
$L188394:
  00ca7	01 00 00 00	 DD	 1
  00cab	00 00 00 00	 DD	 $L188393
$L188393:
  00caf	f4 ff ff ff	 DD	 -12			; fffffff4H
  00cb3	04 00 00 00	 DD	 4
  00cb7	00 00 00 00	 DD	 $L188392
$L188392:
  00cbb	72		 DB	 114			; 00000072H
  00cbc	65		 DB	 101			; 00000065H
  00cbd	73		 DB	 115			; 00000073H
  00cbe	75		 DB	 117			; 00000075H
  00cbf	6c		 DB	 108			; 0000006cH
  00cc0	74		 DB	 116			; 00000074H
  00cc1	00		 DB	 0
?FlashVersion@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::FlashVersion
_TEXT	ENDS
PUBLIC	?GetWMode@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetWMode
xdata$x	SEGMENT
$T188406 DD	0ffffffffH
	DD	FLAT:$L188396
$T188401 DD	019930520H
	DD	01H
	DD	FLAT:$T188406
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188398 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetWMode@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetWMode
; _this$ = ecx

; 256  : {

  00cd0	55		 push	 ebp
  00cd1	8b ec		 mov	 ebp, esp
  00cd3	6a ff		 push	 -1
  00cd5	68 00 00 00 00	 push	 __ehhandler$?GetWMode@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00cda	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00ce0	50		 push	 eax
  00ce1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ce8	83 ec 14	 sub	 esp, 20			; 00000014H
  00ceb	56		 push	 esi
  00cec	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00cf1	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00cf4	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00cf7	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00cfa	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00cfd	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00d00	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00d03	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188398[ebp], 0

; 257  : 	CString result;

  00d0a	8b f4		 mov	 esi, esp
  00d0c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00d0f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00d15	3b f4		 cmp	 esi, esp
  00d17	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d1c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 258  : 	InvokeHelper(0x85, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  00d23	6a 00		 push	 0
  00d25	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  00d28	50		 push	 eax
  00d29	6a 08		 push	 8
  00d2b	6a 02		 push	 2
  00d2d	68 85 00 00 00	 push	 133			; 00000085H
  00d32	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00d35	51		 push	 ecx
  00d36	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00d3b	83 c4 18	 add	 esp, 24			; 00000018H

; 259  : 	return result;

  00d3e	8b f4		 mov	 esi, esp
  00d40	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  00d43	52		 push	 edx
  00d44	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00d47	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00d4d	3b f4		 cmp	 esi, esp
  00d4f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d54	8b 45 e0	 mov	 eax, DWORD PTR $T188398[ebp]
  00d57	83 c8 01	 or	 eax, 1
  00d5a	89 45 e0	 mov	 DWORD PTR $T188398[ebp], eax
  00d5d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00d64	8b f4		 mov	 esi, esp
  00d66	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00d69	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00d6f	3b f4		 cmp	 esi, esp
  00d71	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d76	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 260  : }

  00d79	52		 push	 edx
  00d7a	8b cd		 mov	 ecx, ebp
  00d7c	50		 push	 eax
  00d7d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188405
  00d83	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00d88	58		 pop	 eax
  00d89	5a		 pop	 edx
  00d8a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00d8d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00d94	5e		 pop	 esi
  00d95	83 c4 20	 add	 esp, 32			; 00000020H
  00d98	3b ec		 cmp	 ebp, esp
  00d9a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d9f	8b e5		 mov	 esp, ebp
  00da1	5d		 pop	 ebp
  00da2	c2 04 00	 ret	 4
$L188405:
  00da5	01 00 00 00	 DD	 1
  00da9	00 00 00 00	 DD	 $L188404
$L188404:
  00dad	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00db1	04 00 00 00	 DD	 4
  00db5	00 00 00 00	 DD	 $L188402
$L188402:
  00db9	72		 DB	 114			; 00000072H
  00dba	65		 DB	 101			; 00000065H
  00dbb	73		 DB	 115			; 00000073H
  00dbc	75		 DB	 117			; 00000075H
  00dbd	6c		 DB	 108			; 0000006cH
  00dbe	74		 DB	 116			; 00000074H
  00dbf	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188396:
  00030	8b f4		 mov	 esi, esp
  00032	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0003b	3b f4		 cmp	 esi, esp
  0003d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetWMode@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00042	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188401
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetWMode@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetWMode
PUBLIC	?SetWMode@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetWMode
;	COMDAT ?parms@?1??SetWMode@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetWMode@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetWMode'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetWMode@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::SetWMode
; _this$ = ecx

; 263  : {

  00dc0	55		 push	 ebp
  00dc1	8b ec		 mov	 ebp, esp
  00dc3	51		 push	 ecx
  00dc4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00dcb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 264  : 	static BYTE parms[] =
; 265  : 		VTS_BSTR;
; 266  : 	InvokeHelper(0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 267  : 		 lpszNewValue);

  00dce	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  00dd1	50		 push	 eax
  00dd2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetWMode@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  00dd7	6a 00		 push	 0
  00dd9	6a 00		 push	 0
  00ddb	6a 04		 push	 4
  00ddd	68 85 00 00 00	 push	 133			; 00000085H
  00de2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00de5	51		 push	 ecx
  00de6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00deb	83 c4 1c	 add	 esp, 28			; 0000001cH

; 268  : }

  00dee	83 c4 04	 add	 esp, 4
  00df1	3b ec		 cmp	 ebp, esp
  00df3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00df8	8b e5		 mov	 esp, ebp
  00dfa	5d		 pop	 ebp
  00dfb	c2 04 00	 ret	 4
?SetWMode@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetWMode
_TEXT	ENDS
PUBLIC	?GetSAlign@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetSAlign
xdata$x	SEGMENT
$T188419 DD	0ffffffffH
	DD	FLAT:$L188409
$T188414 DD	019930520H
	DD	01H
	DD	FLAT:$T188419
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188411 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetSAlign@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetSAlign
; _this$ = ecx

; 271  : {

  00e00	55		 push	 ebp
  00e01	8b ec		 mov	 ebp, esp
  00e03	6a ff		 push	 -1
  00e05	68 00 00 00 00	 push	 __ehhandler$?GetSAlign@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00e0a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00e10	50		 push	 eax
  00e11	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00e18	83 ec 14	 sub	 esp, 20			; 00000014H
  00e1b	56		 push	 esi
  00e1c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00e21	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00e24	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00e27	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00e2a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00e2d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00e30	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00e33	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188411[ebp], 0

; 272  : 	CString result;

  00e3a	8b f4		 mov	 esi, esp
  00e3c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00e3f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00e45	3b f4		 cmp	 esi, esp
  00e47	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e4c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 273  : 	InvokeHelper(0x86, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  00e53	6a 00		 push	 0
  00e55	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  00e58	50		 push	 eax
  00e59	6a 08		 push	 8
  00e5b	6a 02		 push	 2
  00e5d	68 86 00 00 00	 push	 134			; 00000086H
  00e62	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00e65	51		 push	 ecx
  00e66	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00e6b	83 c4 18	 add	 esp, 24			; 00000018H

; 274  : 	return result;

  00e6e	8b f4		 mov	 esi, esp
  00e70	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  00e73	52		 push	 edx
  00e74	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00e77	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00e7d	3b f4		 cmp	 esi, esp
  00e7f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e84	8b 45 e0	 mov	 eax, DWORD PTR $T188411[ebp]
  00e87	83 c8 01	 or	 eax, 1
  00e8a	89 45 e0	 mov	 DWORD PTR $T188411[ebp], eax
  00e8d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00e94	8b f4		 mov	 esi, esp
  00e96	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00e99	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00e9f	3b f4		 cmp	 esi, esp
  00ea1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ea6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 275  : }

  00ea9	52		 push	 edx
  00eaa	8b cd		 mov	 ecx, ebp
  00eac	50		 push	 eax
  00ead	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188418
  00eb3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00eb8	58		 pop	 eax
  00eb9	5a		 pop	 edx
  00eba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00ebd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00ec4	5e		 pop	 esi
  00ec5	83 c4 20	 add	 esp, 32			; 00000020H
  00ec8	3b ec		 cmp	 ebp, esp
  00eca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ecf	8b e5		 mov	 esp, ebp
  00ed1	5d		 pop	 ebp
  00ed2	c2 04 00	 ret	 4
$L188418:
  00ed5	01 00 00 00	 DD	 1
  00ed9	00 00 00 00	 DD	 $L188417
$L188417:
  00edd	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00ee1	04 00 00 00	 DD	 4
  00ee5	00 00 00 00	 DD	 $L188415
$L188415:
  00ee9	72		 DB	 114			; 00000072H
  00eea	65		 DB	 101			; 00000065H
  00eeb	73		 DB	 115			; 00000073H
  00eec	75		 DB	 117			; 00000075H
  00eed	6c		 DB	 108			; 0000006cH
  00eee	74		 DB	 116			; 00000074H
  00eef	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188409:
  0004c	8b f4		 mov	 esi, esp
  0004e	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00057	3b f4		 cmp	 esi, esp
  00059	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetSAlign@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0005e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188414
  00063	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetSAlign@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetSAlign
PUBLIC	?SetSAlign@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetSAlign
;	COMDAT ?parms@?1??SetSAlign@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetSAlign@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetSAlign'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetSAlign@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::SetSAlign
; _this$ = ecx

; 278  : {

  00ef0	55		 push	 ebp
  00ef1	8b ec		 mov	 ebp, esp
  00ef3	51		 push	 ecx
  00ef4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00efb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 279  : 	static BYTE parms[] =
; 280  : 		VTS_BSTR;
; 281  : 	InvokeHelper(0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 282  : 		 lpszNewValue);

  00efe	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  00f01	50		 push	 eax
  00f02	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetSAlign@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  00f07	6a 00		 push	 0
  00f09	6a 00		 push	 0
  00f0b	6a 04		 push	 4
  00f0d	68 86 00 00 00	 push	 134			; 00000086H
  00f12	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f15	51		 push	 ecx
  00f16	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00f1b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 283  : }

  00f1e	83 c4 04	 add	 esp, 4
  00f21	3b ec		 cmp	 ebp, esp
  00f23	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f28	8b e5		 mov	 esp, ebp
  00f2a	5d		 pop	 ebp
  00f2b	c2 04 00	 ret	 4
?SetSAlign@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetSAlign
_TEXT	ENDS
PUBLIC	?GetMenu@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetMenu
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetMenu@CShockwaveFlash@@QAEHXZ PROC NEAR		; CShockwaveFlash::GetMenu
; _this$ = ecx

; 286  : {

  00f30	55		 push	 ebp
  00f31	8b ec		 mov	 ebp, esp
  00f33	83 ec 10	 sub	 esp, 16			; 00000010H
  00f36	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00f3b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00f3e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00f41	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00f44	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00f47	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 287  : 	BOOL result;
; 288  : 	InvokeHelper(0x87, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  00f4a	6a 00		 push	 0
  00f4c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  00f4f	50		 push	 eax
  00f50	6a 0b		 push	 11			; 0000000bH
  00f52	6a 02		 push	 2
  00f54	68 87 00 00 00	 push	 135			; 00000087H
  00f59	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f5c	51		 push	 ecx
  00f5d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00f62	83 c4 18	 add	 esp, 24			; 00000018H

; 289  : 	return result;

  00f65	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 290  : }

  00f68	52		 push	 edx
  00f69	8b cd		 mov	 ecx, ebp
  00f6b	50		 push	 eax
  00f6c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188424
  00f72	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00f77	58		 pop	 eax
  00f78	5a		 pop	 edx
  00f79	83 c4 10	 add	 esp, 16			; 00000010H
  00f7c	3b ec		 cmp	 ebp, esp
  00f7e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f83	8b e5		 mov	 esp, ebp
  00f85	5d		 pop	 ebp
  00f86	c3		 ret	 0
$L188424:
  00f87	01 00 00 00	 DD	 1
  00f8b	00 00 00 00	 DD	 $L188423
$L188423:
  00f8f	f4 ff ff ff	 DD	 -12			; fffffff4H
  00f93	04 00 00 00	 DD	 4
  00f97	00 00 00 00	 DD	 $L188422
$L188422:
  00f9b	72		 DB	 114			; 00000072H
  00f9c	65		 DB	 101			; 00000065H
  00f9d	73		 DB	 115			; 00000073H
  00f9e	75		 DB	 117			; 00000075H
  00f9f	6c		 DB	 108			; 0000006cH
  00fa0	74		 DB	 116			; 00000074H
  00fa1	00		 DB	 0
?GetMenu@CShockwaveFlash@@QAEHXZ ENDP			; CShockwaveFlash::GetMenu
_TEXT	ENDS
PUBLIC	?SetMenu@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetMenu
;	COMDAT ?parms@?1??SetMenu@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetMenu@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetMenu'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetMenu@CShockwaveFlash@@QAEXH@Z PROC NEAR		; CShockwaveFlash::SetMenu
; _this$ = ecx

; 293  : {

  00fb0	55		 push	 ebp
  00fb1	8b ec		 mov	 ebp, esp
  00fb3	51		 push	 ecx
  00fb4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00fbb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 294  : 	static BYTE parms[] =
; 295  : 		VTS_BOOL;
; 296  : 	InvokeHelper(0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 297  : 		 bNewValue);

  00fbe	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  00fc1	50		 push	 eax
  00fc2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetMenu@CShockwaveFlash@@QAEXH@Z@4PAEA
  00fc7	6a 00		 push	 0
  00fc9	6a 00		 push	 0
  00fcb	6a 04		 push	 4
  00fcd	68 87 00 00 00	 push	 135			; 00000087H
  00fd2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00fd5	51		 push	 ecx
  00fd6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  00fdb	83 c4 1c	 add	 esp, 28			; 0000001cH

; 298  : }

  00fde	83 c4 04	 add	 esp, 4
  00fe1	3b ec		 cmp	 ebp, esp
  00fe3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00fe8	8b e5		 mov	 esp, ebp
  00fea	5d		 pop	 ebp
  00feb	c2 04 00	 ret	 4
?SetMenu@CShockwaveFlash@@QAEXH@Z ENDP			; CShockwaveFlash::SetMenu
_TEXT	ENDS
PUBLIC	?GetBase@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetBase
xdata$x	SEGMENT
$T188437 DD	0ffffffffH
	DD	FLAT:$L188427
$T188432 DD	019930520H
	DD	01H
	DD	FLAT:$T188437
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188429 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetBase@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetBase
; _this$ = ecx

; 301  : {

  00ff0	55		 push	 ebp
  00ff1	8b ec		 mov	 ebp, esp
  00ff3	6a ff		 push	 -1
  00ff5	68 00 00 00 00	 push	 __ehhandler$?GetBase@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  00ffa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01000	50		 push	 eax
  01001	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01008	83 ec 14	 sub	 esp, 20			; 00000014H
  0100b	56		 push	 esi
  0100c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  01011	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  01014	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  01017	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0101a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0101d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  01020	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  01023	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188429[ebp], 0

; 302  : 	CString result;

  0102a	8b f4		 mov	 esi, esp
  0102c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0102f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01035	3b f4		 cmp	 esi, esp
  01037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0103c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 303  : 	InvokeHelper(0x88, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  01043	6a 00		 push	 0
  01045	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  01048	50		 push	 eax
  01049	6a 08		 push	 8
  0104b	6a 02		 push	 2
  0104d	68 88 00 00 00	 push	 136			; 00000088H
  01052	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01055	51		 push	 ecx
  01056	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0105b	83 c4 18	 add	 esp, 24			; 00000018H

; 304  : 	return result;

  0105e	8b f4		 mov	 esi, esp
  01060	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  01063	52		 push	 edx
  01064	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0106d	3b f4		 cmp	 esi, esp
  0106f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01074	8b 45 e0	 mov	 eax, DWORD PTR $T188429[ebp]
  01077	83 c8 01	 or	 eax, 1
  0107a	89 45 e0	 mov	 DWORD PTR $T188429[ebp], eax
  0107d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01084	8b f4		 mov	 esi, esp
  01086	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0108f	3b f4		 cmp	 esi, esp
  01091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01096	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 305  : }

  01099	52		 push	 edx
  0109a	8b cd		 mov	 ecx, ebp
  0109c	50		 push	 eax
  0109d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188436
  010a3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  010a8	58		 pop	 eax
  010a9	5a		 pop	 edx
  010aa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  010ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  010b4	5e		 pop	 esi
  010b5	83 c4 20	 add	 esp, 32			; 00000020H
  010b8	3b ec		 cmp	 ebp, esp
  010ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  010bf	8b e5		 mov	 esp, ebp
  010c1	5d		 pop	 ebp
  010c2	c2 04 00	 ret	 4
$L188436:
  010c5	01 00 00 00	 DD	 1
  010c9	00 00 00 00	 DD	 $L188435
$L188435:
  010cd	e8 ff ff ff	 DD	 -24			; ffffffe8H
  010d1	04 00 00 00	 DD	 4
  010d5	00 00 00 00	 DD	 $L188433
$L188433:
  010d9	72		 DB	 114			; 00000072H
  010da	65		 DB	 101			; 00000065H
  010db	73		 DB	 115			; 00000073H
  010dc	75		 DB	 117			; 00000075H
  010dd	6c		 DB	 108			; 0000006cH
  010de	74		 DB	 116			; 00000074H
  010df	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188427:
  00068	8b f4		 mov	 esi, esp
  0006a	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00073	3b f4		 cmp	 esi, esp
  00075	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetBase@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0007a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188432
  0007f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetBase@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetBase
PUBLIC	?SetBase@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetBase
;	COMDAT ?parms@?1??SetBase@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetBase@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetBase'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetBase@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::SetBase
; _this$ = ecx

; 308  : {

  010e0	55		 push	 ebp
  010e1	8b ec		 mov	 ebp, esp
  010e3	51		 push	 ecx
  010e4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  010eb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 309  : 	static BYTE parms[] =
; 310  : 		VTS_BSTR;
; 311  : 	InvokeHelper(0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 312  : 		 lpszNewValue);

  010ee	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  010f1	50		 push	 eax
  010f2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetBase@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  010f7	6a 00		 push	 0
  010f9	6a 00		 push	 0
  010fb	6a 04		 push	 4
  010fd	68 88 00 00 00	 push	 136			; 00000088H
  01102	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01105	51		 push	 ecx
  01106	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0110b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 313  : }

  0110e	83 c4 04	 add	 esp, 4
  01111	3b ec		 cmp	 ebp, esp
  01113	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01118	8b e5		 mov	 esp, ebp
  0111a	5d		 pop	 ebp
  0111b	c2 04 00	 ret	 4
?SetBase@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetBase
_TEXT	ENDS
PUBLIC	?GetScale@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetScale
xdata$x	SEGMENT
$T188450 DD	0ffffffffH
	DD	FLAT:$L188440
$T188445 DD	019930520H
	DD	01H
	DD	FLAT:$T188450
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188442 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetScale@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetScale
; _this$ = ecx

; 316  : {

  01120	55		 push	 ebp
  01121	8b ec		 mov	 ebp, esp
  01123	6a ff		 push	 -1
  01125	68 00 00 00 00	 push	 __ehhandler$?GetScale@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0112a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01130	50		 push	 eax
  01131	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01138	83 ec 14	 sub	 esp, 20			; 00000014H
  0113b	56		 push	 esi
  0113c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  01141	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  01144	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  01147	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0114a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0114d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  01150	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  01153	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188442[ebp], 0

; 317  : 	CString result;

  0115a	8b f4		 mov	 esi, esp
  0115c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0115f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01165	3b f4		 cmp	 esi, esp
  01167	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0116c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 318  : 	InvokeHelper(0x89, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  01173	6a 00		 push	 0
  01175	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  01178	50		 push	 eax
  01179	6a 08		 push	 8
  0117b	6a 02		 push	 2
  0117d	68 89 00 00 00	 push	 137			; 00000089H
  01182	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01185	51		 push	 ecx
  01186	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0118b	83 c4 18	 add	 esp, 24			; 00000018H

; 319  : 	return result;

  0118e	8b f4		 mov	 esi, esp
  01190	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  01193	52		 push	 edx
  01194	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01197	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0119d	3b f4		 cmp	 esi, esp
  0119f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011a4	8b 45 e0	 mov	 eax, DWORD PTR $T188442[ebp]
  011a7	83 c8 01	 or	 eax, 1
  011aa	89 45 e0	 mov	 DWORD PTR $T188442[ebp], eax
  011ad	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  011b4	8b f4		 mov	 esi, esp
  011b6	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  011b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  011bf	3b f4		 cmp	 esi, esp
  011c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011c6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 320  : }

  011c9	52		 push	 edx
  011ca	8b cd		 mov	 ecx, ebp
  011cc	50		 push	 eax
  011cd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188449
  011d3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  011d8	58		 pop	 eax
  011d9	5a		 pop	 edx
  011da	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  011dd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  011e4	5e		 pop	 esi
  011e5	83 c4 20	 add	 esp, 32			; 00000020H
  011e8	3b ec		 cmp	 ebp, esp
  011ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011ef	8b e5		 mov	 esp, ebp
  011f1	5d		 pop	 ebp
  011f2	c2 04 00	 ret	 4
$L188449:
  011f5	01 00 00 00	 DD	 1
  011f9	00 00 00 00	 DD	 $L188448
$L188448:
  011fd	e8 ff ff ff	 DD	 -24			; ffffffe8H
  01201	04 00 00 00	 DD	 4
  01205	00 00 00 00	 DD	 $L188446
$L188446:
  01209	72		 DB	 114			; 00000072H
  0120a	65		 DB	 101			; 00000065H
  0120b	73		 DB	 115			; 00000073H
  0120c	75		 DB	 117			; 00000075H
  0120d	6c		 DB	 108			; 0000006cH
  0120e	74		 DB	 116			; 00000074H
  0120f	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188440:
  00084	8b f4		 mov	 esi, esp
  00086	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0008f	3b f4		 cmp	 esi, esp
  00091	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetScale@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00096	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188445
  0009b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetScale@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetScale
PUBLIC	?SetScale@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetScale
;	COMDAT ?parms@?1??SetScale@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetScale@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetScale'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetScale@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::SetScale
; _this$ = ecx

; 323  : {

  01210	55		 push	 ebp
  01211	8b ec		 mov	 ebp, esp
  01213	51		 push	 ecx
  01214	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0121b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 324  : 	static BYTE parms[] =
; 325  : 		VTS_BSTR;
; 326  : 	InvokeHelper(0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 327  : 		 lpszNewValue);

  0121e	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  01221	50		 push	 eax
  01222	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetScale@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  01227	6a 00		 push	 0
  01229	6a 00		 push	 0
  0122b	6a 04		 push	 4
  0122d	68 89 00 00 00	 push	 137			; 00000089H
  01232	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01235	51		 push	 ecx
  01236	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0123b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 328  : }

  0123e	83 c4 04	 add	 esp, 4
  01241	3b ec		 cmp	 ebp, esp
  01243	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01248	8b e5		 mov	 esp, ebp
  0124a	5d		 pop	 ebp
  0124b	c2 04 00	 ret	 4
?SetScale@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetScale
_TEXT	ENDS
PUBLIC	?GetDeviceFont@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetDeviceFont
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetDeviceFont@CShockwaveFlash@@QAEHXZ PROC NEAR	; CShockwaveFlash::GetDeviceFont
; _this$ = ecx

; 331  : {

  01250	55		 push	 ebp
  01251	8b ec		 mov	 ebp, esp
  01253	83 ec 10	 sub	 esp, 16			; 00000010H
  01256	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0125b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0125e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  01261	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  01264	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  01267	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 332  : 	BOOL result;
; 333  : 	InvokeHelper(0x8a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  0126a	6a 00		 push	 0
  0126c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  0126f	50		 push	 eax
  01270	6a 0b		 push	 11			; 0000000bH
  01272	6a 02		 push	 2
  01274	68 8a 00 00 00	 push	 138			; 0000008aH
  01279	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0127c	51		 push	 ecx
  0127d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01282	83 c4 18	 add	 esp, 24			; 00000018H

; 334  : 	return result;

  01285	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 335  : }

  01288	52		 push	 edx
  01289	8b cd		 mov	 ecx, ebp
  0128b	50		 push	 eax
  0128c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188455
  01292	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01297	58		 pop	 eax
  01298	5a		 pop	 edx
  01299	83 c4 10	 add	 esp, 16			; 00000010H
  0129c	3b ec		 cmp	 ebp, esp
  0129e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012a3	8b e5		 mov	 esp, ebp
  012a5	5d		 pop	 ebp
  012a6	c3		 ret	 0
$L188455:
  012a7	01 00 00 00	 DD	 1
  012ab	00 00 00 00	 DD	 $L188454
$L188454:
  012af	f4 ff ff ff	 DD	 -12			; fffffff4H
  012b3	04 00 00 00	 DD	 4
  012b7	00 00 00 00	 DD	 $L188453
$L188453:
  012bb	72		 DB	 114			; 00000072H
  012bc	65		 DB	 101			; 00000065H
  012bd	73		 DB	 115			; 00000073H
  012be	75		 DB	 117			; 00000075H
  012bf	6c		 DB	 108			; 0000006cH
  012c0	74		 DB	 116			; 00000074H
  012c1	00		 DB	 0
?GetDeviceFont@CShockwaveFlash@@QAEHXZ ENDP		; CShockwaveFlash::GetDeviceFont
_TEXT	ENDS
PUBLIC	?SetDeviceFont@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetDeviceFont
;	COMDAT ?parms@?1??SetDeviceFont@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetDeviceFont@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetDeviceFont'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetDeviceFont@CShockwaveFlash@@QAEXH@Z PROC NEAR	; CShockwaveFlash::SetDeviceFont
; _this$ = ecx

; 338  : {

  012d0	55		 push	 ebp
  012d1	8b ec		 mov	 ebp, esp
  012d3	51		 push	 ecx
  012d4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  012db	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 339  : 	static BYTE parms[] =
; 340  : 		VTS_BOOL;
; 341  : 	InvokeHelper(0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 342  : 		 bNewValue);

  012de	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  012e1	50		 push	 eax
  012e2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetDeviceFont@CShockwaveFlash@@QAEXH@Z@4PAEA
  012e7	6a 00		 push	 0
  012e9	6a 00		 push	 0
  012eb	6a 04		 push	 4
  012ed	68 8a 00 00 00	 push	 138			; 0000008aH
  012f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  012f5	51		 push	 ecx
  012f6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  012fb	83 c4 1c	 add	 esp, 28			; 0000001cH

; 343  : }

  012fe	83 c4 04	 add	 esp, 4
  01301	3b ec		 cmp	 ebp, esp
  01303	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01308	8b e5		 mov	 esp, ebp
  0130a	5d		 pop	 ebp
  0130b	c2 04 00	 ret	 4
?SetDeviceFont@CShockwaveFlash@@QAEXH@Z ENDP		; CShockwaveFlash::SetDeviceFont
_TEXT	ENDS
PUBLIC	?GetEmbedMovie@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetEmbedMovie
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetEmbedMovie@CShockwaveFlash@@QAEHXZ PROC NEAR	; CShockwaveFlash::GetEmbedMovie
; _this$ = ecx

; 346  : {

  01310	55		 push	 ebp
  01311	8b ec		 mov	 ebp, esp
  01313	83 ec 10	 sub	 esp, 16			; 00000010H
  01316	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0131b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0131e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  01321	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  01324	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  01327	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 347  : 	BOOL result;
; 348  : 	InvokeHelper(0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  0132a	6a 00		 push	 0
  0132c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  0132f	50		 push	 eax
  01330	6a 0b		 push	 11			; 0000000bH
  01332	6a 02		 push	 2
  01334	68 8b 00 00 00	 push	 139			; 0000008bH
  01339	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0133c	51		 push	 ecx
  0133d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01342	83 c4 18	 add	 esp, 24			; 00000018H

; 349  : 	return result;

  01345	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 350  : }

  01348	52		 push	 edx
  01349	8b cd		 mov	 ecx, ebp
  0134b	50		 push	 eax
  0134c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188460
  01352	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01357	58		 pop	 eax
  01358	5a		 pop	 edx
  01359	83 c4 10	 add	 esp, 16			; 00000010H
  0135c	3b ec		 cmp	 ebp, esp
  0135e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01363	8b e5		 mov	 esp, ebp
  01365	5d		 pop	 ebp
  01366	c3		 ret	 0
$L188460:
  01367	01 00 00 00	 DD	 1
  0136b	00 00 00 00	 DD	 $L188459
$L188459:
  0136f	f4 ff ff ff	 DD	 -12			; fffffff4H
  01373	04 00 00 00	 DD	 4
  01377	00 00 00 00	 DD	 $L188458
$L188458:
  0137b	72		 DB	 114			; 00000072H
  0137c	65		 DB	 101			; 00000065H
  0137d	73		 DB	 115			; 00000073H
  0137e	75		 DB	 117			; 00000075H
  0137f	6c		 DB	 108			; 0000006cH
  01380	74		 DB	 116			; 00000074H
  01381	00		 DB	 0
?GetEmbedMovie@CShockwaveFlash@@QAEHXZ ENDP		; CShockwaveFlash::GetEmbedMovie
_TEXT	ENDS
PUBLIC	?SetEmbedMovie@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetEmbedMovie
;	COMDAT ?parms@?1??SetEmbedMovie@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetEmbedMovie@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetEmbedMovie'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetEmbedMovie@CShockwaveFlash@@QAEXH@Z PROC NEAR	; CShockwaveFlash::SetEmbedMovie
; _this$ = ecx

; 353  : {

  01390	55		 push	 ebp
  01391	8b ec		 mov	 ebp, esp
  01393	51		 push	 ecx
  01394	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0139b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 354  : 	static BYTE parms[] =
; 355  : 		VTS_BOOL;
; 356  : 	InvokeHelper(0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 357  : 		 bNewValue);

  0139e	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  013a1	50		 push	 eax
  013a2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetEmbedMovie@CShockwaveFlash@@QAEXH@Z@4PAEA
  013a7	6a 00		 push	 0
  013a9	6a 00		 push	 0
  013ab	6a 04		 push	 4
  013ad	68 8b 00 00 00	 push	 139			; 0000008bH
  013b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  013b5	51		 push	 ecx
  013b6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  013bb	83 c4 1c	 add	 esp, 28			; 0000001cH

; 358  : }

  013be	83 c4 04	 add	 esp, 4
  013c1	3b ec		 cmp	 ebp, esp
  013c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013c8	8b e5		 mov	 esp, ebp
  013ca	5d		 pop	 ebp
  013cb	c2 04 00	 ret	 4
?SetEmbedMovie@CShockwaveFlash@@QAEXH@Z ENDP		; CShockwaveFlash::SetEmbedMovie
_TEXT	ENDS
PUBLIC	?GetBGColor@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetBGColor
xdata$x	SEGMENT
$T188473 DD	0ffffffffH
	DD	FLAT:$L188463
$T188468 DD	019930520H
	DD	01H
	DD	FLAT:$T188473
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188465 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetBGColor@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetBGColor
; _this$ = ecx

; 361  : {

  013d0	55		 push	 ebp
  013d1	8b ec		 mov	 ebp, esp
  013d3	6a ff		 push	 -1
  013d5	68 00 00 00 00	 push	 __ehhandler$?GetBGColor@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  013da	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  013e0	50		 push	 eax
  013e1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  013e8	83 ec 14	 sub	 esp, 20			; 00000014H
  013eb	56		 push	 esi
  013ec	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  013f1	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  013f4	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  013f7	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  013fa	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  013fd	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  01400	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  01403	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188465[ebp], 0

; 362  : 	CString result;

  0140a	8b f4		 mov	 esi, esp
  0140c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0140f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01415	3b f4		 cmp	 esi, esp
  01417	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0141c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 363  : 	InvokeHelper(0x8c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  01423	6a 00		 push	 0
  01425	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  01428	50		 push	 eax
  01429	6a 08		 push	 8
  0142b	6a 02		 push	 2
  0142d	68 8c 00 00 00	 push	 140			; 0000008cH
  01432	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01435	51		 push	 ecx
  01436	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0143b	83 c4 18	 add	 esp, 24			; 00000018H

; 364  : 	return result;

  0143e	8b f4		 mov	 esi, esp
  01440	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  01443	52		 push	 edx
  01444	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01447	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0144d	3b f4		 cmp	 esi, esp
  0144f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01454	8b 45 e0	 mov	 eax, DWORD PTR $T188465[ebp]
  01457	83 c8 01	 or	 eax, 1
  0145a	89 45 e0	 mov	 DWORD PTR $T188465[ebp], eax
  0145d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01464	8b f4		 mov	 esi, esp
  01466	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01469	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0146f	3b f4		 cmp	 esi, esp
  01471	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01476	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 365  : }

  01479	52		 push	 edx
  0147a	8b cd		 mov	 ecx, ebp
  0147c	50		 push	 eax
  0147d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188472
  01483	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01488	58		 pop	 eax
  01489	5a		 pop	 edx
  0148a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0148d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01494	5e		 pop	 esi
  01495	83 c4 20	 add	 esp, 32			; 00000020H
  01498	3b ec		 cmp	 ebp, esp
  0149a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0149f	8b e5		 mov	 esp, ebp
  014a1	5d		 pop	 ebp
  014a2	c2 04 00	 ret	 4
$L188472:
  014a5	01 00 00 00	 DD	 1
  014a9	00 00 00 00	 DD	 $L188471
$L188471:
  014ad	e8 ff ff ff	 DD	 -24			; ffffffe8H
  014b1	04 00 00 00	 DD	 4
  014b5	00 00 00 00	 DD	 $L188469
$L188469:
  014b9	72		 DB	 114			; 00000072H
  014ba	65		 DB	 101			; 00000065H
  014bb	73		 DB	 115			; 00000073H
  014bc	75		 DB	 117			; 00000075H
  014bd	6c		 DB	 108			; 0000006cH
  014be	74		 DB	 116			; 00000074H
  014bf	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188463:
  000a0	8b f4		 mov	 esi, esp
  000a2	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000ab	3b f4		 cmp	 esi, esp
  000ad	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetBGColor@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  000b2	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188468
  000b7	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetBGColor@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetBGColor
PUBLIC	?SetBGColor@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetBGColor
;	COMDAT ?parms@?1??SetBGColor@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetBGColor@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetBGColor'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetBGColor@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetBGColor
; _this$ = ecx

; 368  : {

  014c0	55		 push	 ebp
  014c1	8b ec		 mov	 ebp, esp
  014c3	51		 push	 ecx
  014c4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  014cb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 369  : 	static BYTE parms[] =
; 370  : 		VTS_BSTR;
; 371  : 	InvokeHelper(0x8c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 372  : 		 lpszNewValue);

  014ce	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  014d1	50		 push	 eax
  014d2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetBGColor@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  014d7	6a 00		 push	 0
  014d9	6a 00		 push	 0
  014db	6a 04		 push	 4
  014dd	68 8c 00 00 00	 push	 140			; 0000008cH
  014e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  014e5	51		 push	 ecx
  014e6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  014eb	83 c4 1c	 add	 esp, 28			; 0000001cH

; 373  : }

  014ee	83 c4 04	 add	 esp, 4
  014f1	3b ec		 cmp	 ebp, esp
  014f3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014f8	8b e5		 mov	 esp, ebp
  014fa	5d		 pop	 ebp
  014fb	c2 04 00	 ret	 4
?SetBGColor@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetBGColor
_TEXT	ENDS
PUBLIC	?GetQuality2@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetQuality2
xdata$x	SEGMENT
$T188486 DD	0ffffffffH
	DD	FLAT:$L188476
$T188481 DD	019930520H
	DD	01H
	DD	FLAT:$T188486
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188478 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetQuality2@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetQuality2
; _this$ = ecx

; 376  : {

  01500	55		 push	 ebp
  01501	8b ec		 mov	 ebp, esp
  01503	6a ff		 push	 -1
  01505	68 00 00 00 00	 push	 __ehhandler$?GetQuality2@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0150a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01510	50		 push	 eax
  01511	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01518	83 ec 14	 sub	 esp, 20			; 00000014H
  0151b	56		 push	 esi
  0151c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  01521	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  01524	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  01527	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0152a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0152d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  01530	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  01533	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188478[ebp], 0

; 377  : 	CString result;

  0153a	8b f4		 mov	 esi, esp
  0153c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0153f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01545	3b f4		 cmp	 esi, esp
  01547	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0154c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 378  : 	InvokeHelper(0x8d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  01553	6a 00		 push	 0
  01555	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  01558	50		 push	 eax
  01559	6a 08		 push	 8
  0155b	6a 02		 push	 2
  0155d	68 8d 00 00 00	 push	 141			; 0000008dH
  01562	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01565	51		 push	 ecx
  01566	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0156b	83 c4 18	 add	 esp, 24			; 00000018H

; 379  : 	return result;

  0156e	8b f4		 mov	 esi, esp
  01570	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  01573	52		 push	 edx
  01574	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01577	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0157d	3b f4		 cmp	 esi, esp
  0157f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01584	8b 45 e0	 mov	 eax, DWORD PTR $T188478[ebp]
  01587	83 c8 01	 or	 eax, 1
  0158a	89 45 e0	 mov	 DWORD PTR $T188478[ebp], eax
  0158d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01594	8b f4		 mov	 esi, esp
  01596	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01599	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0159f	3b f4		 cmp	 esi, esp
  015a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015a6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 380  : }

  015a9	52		 push	 edx
  015aa	8b cd		 mov	 ecx, ebp
  015ac	50		 push	 eax
  015ad	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188485
  015b3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  015b8	58		 pop	 eax
  015b9	5a		 pop	 edx
  015ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  015bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  015c4	5e		 pop	 esi
  015c5	83 c4 20	 add	 esp, 32			; 00000020H
  015c8	3b ec		 cmp	 ebp, esp
  015ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015cf	8b e5		 mov	 esp, ebp
  015d1	5d		 pop	 ebp
  015d2	c2 04 00	 ret	 4
$L188485:
  015d5	01 00 00 00	 DD	 1
  015d9	00 00 00 00	 DD	 $L188484
$L188484:
  015dd	e8 ff ff ff	 DD	 -24			; ffffffe8H
  015e1	04 00 00 00	 DD	 4
  015e5	00 00 00 00	 DD	 $L188482
$L188482:
  015e9	72		 DB	 114			; 00000072H
  015ea	65		 DB	 101			; 00000065H
  015eb	73		 DB	 115			; 00000073H
  015ec	75		 DB	 117			; 00000075H
  015ed	6c		 DB	 108			; 0000006cH
  015ee	74		 DB	 116			; 00000074H
  015ef	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188476:
  000bc	8b f4		 mov	 esi, esp
  000be	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000c7	3b f4		 cmp	 esi, esp
  000c9	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetQuality2@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  000ce	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188481
  000d3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetQuality2@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetQuality2
PUBLIC	?SetQuality2@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetQuality2
;	COMDAT ?parms@?1??SetQuality2@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetQuality2@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetQuality2'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetQuality2@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetQuality2
; _this$ = ecx

; 383  : {

  015f0	55		 push	 ebp
  015f1	8b ec		 mov	 ebp, esp
  015f3	51		 push	 ecx
  015f4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  015fb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 384  : 	static BYTE parms[] =
; 385  : 		VTS_BSTR;
; 386  : 	InvokeHelper(0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 387  : 		 lpszNewValue);

  015fe	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  01601	50		 push	 eax
  01602	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetQuality2@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  01607	6a 00		 push	 0
  01609	6a 00		 push	 0
  0160b	6a 04		 push	 4
  0160d	68 8d 00 00 00	 push	 141			; 0000008dH
  01612	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01615	51		 push	 ecx
  01616	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0161b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 388  : }

  0161e	83 c4 04	 add	 esp, 4
  01621	3b ec		 cmp	 ebp, esp
  01623	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01628	8b e5		 mov	 esp, ebp
  0162a	5d		 pop	 ebp
  0162b	c2 04 00	 ret	 4
?SetQuality2@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetQuality2
_TEXT	ENDS
PUBLIC	?LoadMovie@CShockwaveFlash@@QAEXJPBD@Z		; CShockwaveFlash::LoadMovie
;	COMDAT ?parms@?1??LoadMovie@CShockwaveFlash@@QAEXJPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??LoadMovie@CShockwaveFlash@@QAEXJPBD@Z@4PAEA DB 03H, 0eH, 00H ; `CShockwaveFlash::LoadMovie'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_layer$ = 8						; size = 4
_url$ = 12						; size = 4
?LoadMovie@CShockwaveFlash@@QAEXJPBD@Z PROC NEAR	; CShockwaveFlash::LoadMovie
; _this$ = ecx

; 391  : {

  01630	55		 push	 ebp
  01631	8b ec		 mov	 ebp, esp
  01633	51		 push	 ecx
  01634	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0163b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 392  : 	static BYTE parms[] =
; 393  : 		VTS_I4 VTS_BSTR;
; 394  : 	InvokeHelper(0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 395  : 		 layer, url);

  0163e	8b 45 0c	 mov	 eax, DWORD PTR _url$[ebp]
  01641	50		 push	 eax
  01642	8b 4d 08	 mov	 ecx, DWORD PTR _layer$[ebp]
  01645	51		 push	 ecx
  01646	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??LoadMovie@CShockwaveFlash@@QAEXJPBD@Z@4PAEA
  0164b	6a 00		 push	 0
  0164d	6a 00		 push	 0
  0164f	6a 01		 push	 1
  01651	68 8e 00 00 00	 push	 142			; 0000008eH
  01656	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01659	52		 push	 edx
  0165a	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0165f	83 c4 20	 add	 esp, 32			; 00000020H

; 396  : }

  01662	83 c4 04	 add	 esp, 4
  01665	3b ec		 cmp	 ebp, esp
  01667	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0166c	8b e5		 mov	 esp, ebp
  0166e	5d		 pop	 ebp
  0166f	c2 08 00	 ret	 8
?LoadMovie@CShockwaveFlash@@QAEXJPBD@Z ENDP		; CShockwaveFlash::LoadMovie
_TEXT	ENDS
PUBLIC	?TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z		; CShockwaveFlash::TGotoFrame
;	COMDAT ?parms@?1??TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA DB 0eH, 03H, 00H ; `CShockwaveFlash::TGotoFrame'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_FrameNum$ = 12						; size = 4
?TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z PROC NEAR	; CShockwaveFlash::TGotoFrame
; _this$ = ecx

; 399  : {

  01680	55		 push	 ebp
  01681	8b ec		 mov	 ebp, esp
  01683	51		 push	 ecx
  01684	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0168b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 400  : 	static BYTE parms[] =
; 401  : 		VTS_BSTR VTS_I4;
; 402  : 	InvokeHelper(0x8f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 403  : 		 target, FrameNum);

  0168e	8b 45 0c	 mov	 eax, DWORD PTR _FrameNum$[ebp]
  01691	50		 push	 eax
  01692	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  01695	51		 push	 ecx
  01696	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
  0169b	6a 00		 push	 0
  0169d	6a 00		 push	 0
  0169f	6a 01		 push	 1
  016a1	68 8f 00 00 00	 push	 143			; 0000008fH
  016a6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  016a9	52		 push	 edx
  016aa	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  016af	83 c4 20	 add	 esp, 32			; 00000020H

; 404  : }

  016b2	83 c4 04	 add	 esp, 4
  016b5	3b ec		 cmp	 ebp, esp
  016b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  016bc	8b e5		 mov	 esp, ebp
  016be	5d		 pop	 ebp
  016bf	c2 08 00	 ret	 8
?TGotoFrame@CShockwaveFlash@@QAEXPBDJ@Z ENDP		; CShockwaveFlash::TGotoFrame
_TEXT	ENDS
PUBLIC	?TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z		; CShockwaveFlash::TGotoLabel
;	COMDAT ?parms@?1??TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA DB 0eH, 0eH, 00H ; `CShockwaveFlash::TGotoLabel'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_label$ = 12						; size = 4
?TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z PROC NEAR	; CShockwaveFlash::TGotoLabel
; _this$ = ecx

; 407  : {

  016d0	55		 push	 ebp
  016d1	8b ec		 mov	 ebp, esp
  016d3	51		 push	 ecx
  016d4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  016db	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 	static BYTE parms[] =
; 409  : 		VTS_BSTR VTS_BSTR;
; 410  : 	InvokeHelper(0x90, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 411  : 		 target, label);

  016de	8b 45 0c	 mov	 eax, DWORD PTR _label$[ebp]
  016e1	50		 push	 eax
  016e2	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  016e5	51		 push	 ecx
  016e6	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
  016eb	6a 00		 push	 0
  016ed	6a 00		 push	 0
  016ef	6a 01		 push	 1
  016f1	68 90 00 00 00	 push	 144			; 00000090H
  016f6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  016f9	52		 push	 edx
  016fa	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  016ff	83 c4 20	 add	 esp, 32			; 00000020H

; 412  : }

  01702	83 c4 04	 add	 esp, 4
  01705	3b ec		 cmp	 ebp, esp
  01707	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0170c	8b e5		 mov	 esp, ebp
  0170e	5d		 pop	 ebp
  0170f	c2 08 00	 ret	 8
?TGotoLabel@CShockwaveFlash@@QAEXPBD0@Z ENDP		; CShockwaveFlash::TGotoLabel
_TEXT	ENDS
PUBLIC	?TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z	; CShockwaveFlash::TCurrentFrame
;	COMDAT ?parms@?1??TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::TCurrentFrame'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
_target$ = 8						; size = 4
?TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z PROC NEAR	; CShockwaveFlash::TCurrentFrame
; _this$ = ecx

; 415  : {

  01720	55		 push	 ebp
  01721	8b ec		 mov	 ebp, esp
  01723	83 ec 10	 sub	 esp, 16			; 00000010H
  01726	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0172b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0172e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  01731	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  01734	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  01737	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 416  : 	long result;
; 417  : 	static BYTE parms[] =
; 418  : 		VTS_BSTR;
; 419  : 	InvokeHelper(0x91, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
; 420  : 		target);

  0173a	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0173d	50		 push	 eax
  0173e	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z@4PAEA
  01743	8d 4d f4	 lea	 ecx, DWORD PTR _result$[ebp]
  01746	51		 push	 ecx
  01747	6a 03		 push	 3
  01749	6a 01		 push	 1
  0174b	68 91 00 00 00	 push	 145			; 00000091H
  01750	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01753	52		 push	 edx
  01754	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01759	83 c4 1c	 add	 esp, 28			; 0000001cH

; 421  : 	return result;

  0175c	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 422  : }

  0175f	52		 push	 edx
  01760	8b cd		 mov	 ecx, ebp
  01762	50		 push	 eax
  01763	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188494
  01769	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0176e	58		 pop	 eax
  0176f	5a		 pop	 edx
  01770	83 c4 10	 add	 esp, 16			; 00000010H
  01773	3b ec		 cmp	 ebp, esp
  01775	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0177a	8b e5		 mov	 esp, ebp
  0177c	5d		 pop	 ebp
  0177d	c2 04 00	 ret	 4
$L188494:
  01780	01 00 00 00	 DD	 1
  01784	00 00 00 00	 DD	 $L188493
$L188493:
  01788	f4 ff ff ff	 DD	 -12			; fffffff4H
  0178c	04 00 00 00	 DD	 4
  01790	00 00 00 00	 DD	 $L188492
$L188492:
  01794	72		 DB	 114			; 00000072H
  01795	65		 DB	 101			; 00000065H
  01796	73		 DB	 115			; 00000073H
  01797	75		 DB	 117			; 00000075H
  01798	6c		 DB	 108			; 0000006cH
  01799	74		 DB	 116			; 00000074H
  0179a	00		 DB	 0
?TCurrentFrame@CShockwaveFlash@@QAEJPBD@Z ENDP		; CShockwaveFlash::TCurrentFrame
_TEXT	ENDS
PUBLIC	?TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CShockwaveFlash::TCurrentLabel
xdata$x	SEGMENT
$T188506 DD	0ffffffffH
	DD	FLAT:$L188496
$T188501 DD	019930520H
	DD	01H
	DD	FLAT:$T188506
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?parms@?1??TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA DB 0eH
	DB	00H						; `CShockwaveFlash::TCurrentLabel'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
$T188498 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_target$ = 12						; size = 4
?TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z PROC NEAR ; CShockwaveFlash::TCurrentLabel
; _this$ = ecx

; 425  : {

  017a0	55		 push	 ebp
  017a1	8b ec		 mov	 ebp, esp
  017a3	6a ff		 push	 -1
  017a5	68 00 00 00 00	 push	 __ehhandler$?TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
  017aa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  017b0	50		 push	 eax
  017b1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  017b8	83 ec 14	 sub	 esp, 20			; 00000014H
  017bb	56		 push	 esi
  017bc	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  017c1	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  017c4	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  017c7	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  017ca	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  017cd	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  017d0	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  017d3	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188498[ebp], 0

; 426  : 	CString result;

  017da	8b f4		 mov	 esi, esp
  017dc	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  017df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  017e5	3b f4		 cmp	 esi, esp
  017e7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  017ec	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 427  : 	static BYTE parms[] =
; 428  : 		VTS_BSTR;
; 429  : 	InvokeHelper(0x92, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 430  : 		target);

  017f3	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  017f6	50		 push	 eax
  017f7	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
  017fc	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  017ff	51		 push	 ecx
  01800	6a 08		 push	 8
  01802	6a 01		 push	 1
  01804	68 92 00 00 00	 push	 146			; 00000092H
  01809	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0180c	52		 push	 edx
  0180d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01812	83 c4 1c	 add	 esp, 28			; 0000001cH

; 431  : 	return result;

  01815	8b f4		 mov	 esi, esp
  01817	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  0181a	50		 push	 eax
  0181b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0181e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01824	3b f4		 cmp	 esi, esp
  01826	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0182b	8b 4d e0	 mov	 ecx, DWORD PTR $T188498[ebp]
  0182e	83 c9 01	 or	 ecx, 1
  01831	89 4d e0	 mov	 DWORD PTR $T188498[ebp], ecx
  01834	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0183b	8b f4		 mov	 esi, esp
  0183d	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01840	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01846	3b f4		 cmp	 esi, esp
  01848	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0184d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 432  : }

  01850	52		 push	 edx
  01851	8b cd		 mov	 ecx, ebp
  01853	50		 push	 eax
  01854	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188505
  0185a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0185f	58		 pop	 eax
  01860	5a		 pop	 edx
  01861	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01864	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0186b	5e		 pop	 esi
  0186c	83 c4 20	 add	 esp, 32			; 00000020H
  0186f	3b ec		 cmp	 ebp, esp
  01871	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01876	8b e5		 mov	 esp, ebp
  01878	5d		 pop	 ebp
  01879	c2 08 00	 ret	 8
$L188505:
  0187c	01 00 00 00	 DD	 1
  01880	00 00 00 00	 DD	 $L188504
$L188504:
  01884	e8 ff ff ff	 DD	 -24			; ffffffe8H
  01888	04 00 00 00	 DD	 4
  0188c	00 00 00 00	 DD	 $L188502
$L188502:
  01890	72		 DB	 114			; 00000072H
  01891	65		 DB	 101			; 00000065H
  01892	73		 DB	 115			; 00000073H
  01893	75		 DB	 117			; 00000075H
  01894	6c		 DB	 108			; 0000006cH
  01895	74		 DB	 116			; 00000074H
  01896	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188496:
  000d8	8b f4		 mov	 esi, esp
  000da	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  000dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000e3	3b f4		 cmp	 esi, esp
  000e5	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z:
  000ea	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188501
  000ef	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?TCurrentLabel@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ENDP ; CShockwaveFlash::TCurrentLabel
PUBLIC	?TPlay@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::TPlay
;	COMDAT ?parms@?1??TPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::TPlay'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
?TPlay@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::TPlay
; _this$ = ecx

; 435  : {

  018a0	55		 push	 ebp
  018a1	8b ec		 mov	 ebp, esp
  018a3	51		 push	 ecx
  018a4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  018ab	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 436  : 	static BYTE parms[] =
; 437  : 		VTS_BSTR;
; 438  : 	InvokeHelper(0x93, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 439  : 		 target);

  018ae	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  018b1	50		 push	 eax
  018b2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  018b7	6a 00		 push	 0
  018b9	6a 00		 push	 0
  018bb	6a 01		 push	 1
  018bd	68 93 00 00 00	 push	 147			; 00000093H
  018c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  018c5	51		 push	 ecx
  018c6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  018cb	83 c4 1c	 add	 esp, 28			; 0000001cH

; 440  : }

  018ce	83 c4 04	 add	 esp, 4
  018d1	3b ec		 cmp	 ebp, esp
  018d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  018d8	8b e5		 mov	 esp, ebp
  018da	5d		 pop	 ebp
  018db	c2 04 00	 ret	 4
?TPlay@CShockwaveFlash@@QAEXPBD@Z ENDP			; CShockwaveFlash::TPlay
_TEXT	ENDS
PUBLIC	?TStopPlay@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::TStopPlay
;	COMDAT ?parms@?1??TStopPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TStopPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::TStopPlay'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
?TStopPlay@CShockwaveFlash@@QAEXPBD@Z PROC NEAR		; CShockwaveFlash::TStopPlay
; _this$ = ecx

; 443  : {

  018e0	55		 push	 ebp
  018e1	8b ec		 mov	 ebp, esp
  018e3	51		 push	 ecx
  018e4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  018eb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 444  : 	static BYTE parms[] =
; 445  : 		VTS_BSTR;
; 446  : 	InvokeHelper(0x94, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 447  : 		 target);

  018ee	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  018f1	50		 push	 eax
  018f2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TStopPlay@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  018f7	6a 00		 push	 0
  018f9	6a 00		 push	 0
  018fb	6a 01		 push	 1
  018fd	68 94 00 00 00	 push	 148			; 00000094H
  01902	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01905	51		 push	 ecx
  01906	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0190b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 448  : }

  0190e	83 c4 04	 add	 esp, 4
  01911	3b ec		 cmp	 ebp, esp
  01913	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01918	8b e5		 mov	 esp, ebp
  0191a	5d		 pop	 ebp
  0191b	c2 04 00	 ret	 4
?TStopPlay@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::TStopPlay
_TEXT	ENDS
PUBLIC	?SetVariable@CShockwaveFlash@@QAEXPBD0@Z	; CShockwaveFlash::SetVariable
;	COMDAT ?parms@?1??SetVariable@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetVariable@CShockwaveFlash@@QAEXPBD0@Z@4PAEA DB 0eH, 0eH, 00H ; `CShockwaveFlash::SetVariable'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?SetVariable@CShockwaveFlash@@QAEXPBD0@Z PROC NEAR	; CShockwaveFlash::SetVariable
; _this$ = ecx

; 451  : {

  01920	55		 push	 ebp
  01921	8b ec		 mov	 ebp, esp
  01923	51		 push	 ecx
  01924	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0192b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 452  : 	static BYTE parms[] =
; 453  : 		VTS_BSTR VTS_BSTR;
; 454  : 	InvokeHelper(0x97, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 455  : 		 name, value);

  0192e	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  01931	50		 push	 eax
  01932	8b 4d 08	 mov	 ecx, DWORD PTR _name$[ebp]
  01935	51		 push	 ecx
  01936	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetVariable@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
  0193b	6a 00		 push	 0
  0193d	6a 00		 push	 0
  0193f	6a 01		 push	 1
  01941	68 97 00 00 00	 push	 151			; 00000097H
  01946	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01949	52		 push	 edx
  0194a	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0194f	83 c4 20	 add	 esp, 32			; 00000020H

; 456  : }

  01952	83 c4 04	 add	 esp, 4
  01955	3b ec		 cmp	 ebp, esp
  01957	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0195c	8b e5		 mov	 esp, ebp
  0195e	5d		 pop	 ebp
  0195f	c2 08 00	 ret	 8
?SetVariable@CShockwaveFlash@@QAEXPBD0@Z ENDP		; CShockwaveFlash::SetVariable
_TEXT	ENDS
PUBLIC	?GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CShockwaveFlash::GetVariable
xdata$x	SEGMENT
$T188521 DD	0ffffffffH
	DD	FLAT:$L188511
$T188516 DD	019930520H
	DD	01H
	DD	FLAT:$T188521
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?parms@?1??GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA DB 0eH
	DB	00H						; `CShockwaveFlash::GetVariable'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
$T188513 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_name$ = 12						; size = 4
?GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z PROC NEAR ; CShockwaveFlash::GetVariable
; _this$ = ecx

; 459  : {

  01970	55		 push	 ebp
  01971	8b ec		 mov	 ebp, esp
  01973	6a ff		 push	 -1
  01975	68 00 00 00 00	 push	 __ehhandler$?GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
  0197a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01980	50		 push	 eax
  01981	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01988	83 ec 14	 sub	 esp, 20			; 00000014H
  0198b	56		 push	 esi
  0198c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  01991	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  01994	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  01997	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0199a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0199d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  019a0	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  019a3	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188513[ebp], 0

; 460  : 	CString result;

  019aa	8b f4		 mov	 esi, esp
  019ac	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  019af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  019b5	3b f4		 cmp	 esi, esp
  019b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  019bc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 461  : 	static BYTE parms[] =
; 462  : 		VTS_BSTR;
; 463  : 	InvokeHelper(0x98, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 464  : 		name);

  019c3	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  019c6	50		 push	 eax
  019c7	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
  019cc	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  019cf	51		 push	 ecx
  019d0	6a 08		 push	 8
  019d2	6a 01		 push	 1
  019d4	68 98 00 00 00	 push	 152			; 00000098H
  019d9	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  019dc	52		 push	 edx
  019dd	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  019e2	83 c4 1c	 add	 esp, 28			; 0000001cH

; 465  : 	return result;

  019e5	8b f4		 mov	 esi, esp
  019e7	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  019ea	50		 push	 eax
  019eb	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  019ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  019f4	3b f4		 cmp	 esi, esp
  019f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  019fb	8b 4d e0	 mov	 ecx, DWORD PTR $T188513[ebp]
  019fe	83 c9 01	 or	 ecx, 1
  01a01	89 4d e0	 mov	 DWORD PTR $T188513[ebp], ecx
  01a04	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01a0b	8b f4		 mov	 esi, esp
  01a0d	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01a10	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01a16	3b f4		 cmp	 esi, esp
  01a18	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a1d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 466  : }

  01a20	52		 push	 edx
  01a21	8b cd		 mov	 ecx, ebp
  01a23	50		 push	 eax
  01a24	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188520
  01a2a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01a2f	58		 pop	 eax
  01a30	5a		 pop	 edx
  01a31	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01a34	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01a3b	5e		 pop	 esi
  01a3c	83 c4 20	 add	 esp, 32			; 00000020H
  01a3f	3b ec		 cmp	 ebp, esp
  01a41	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a46	8b e5		 mov	 esp, ebp
  01a48	5d		 pop	 ebp
  01a49	c2 08 00	 ret	 8
$L188520:
  01a4c	01 00 00 00	 DD	 1
  01a50	00 00 00 00	 DD	 $L188519
$L188519:
  01a54	e8 ff ff ff	 DD	 -24			; ffffffe8H
  01a58	04 00 00 00	 DD	 4
  01a5c	00 00 00 00	 DD	 $L188517
$L188517:
  01a60	72		 DB	 114			; 00000072H
  01a61	65		 DB	 101			; 00000065H
  01a62	73		 DB	 115			; 00000073H
  01a63	75		 DB	 117			; 00000075H
  01a64	6c		 DB	 108			; 0000006cH
  01a65	74		 DB	 116			; 00000074H
  01a66	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188511:
  000f4	8b f4		 mov	 esi, esp
  000f6	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  000f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000ff	3b f4		 cmp	 esi, esp
  00101	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z:
  00106	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188516
  0010b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetVariable@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ENDP ; CShockwaveFlash::GetVariable
PUBLIC	?TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z	; CShockwaveFlash::TSetProperty
;	COMDAT ?parms@?1??TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z@4PAEA DB 0eH, 03H, 0eH
	DB	00H						; `CShockwaveFlash::TSetProperty'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_property$ = 12						; size = 4
_value$ = 16						; size = 4
?TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z PROC NEAR	; CShockwaveFlash::TSetProperty
; _this$ = ecx

; 469  : {

  01a70	55		 push	 ebp
  01a71	8b ec		 mov	 ebp, esp
  01a73	51		 push	 ecx
  01a74	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  01a7b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 470  : 	static BYTE parms[] =
; 471  : 		VTS_BSTR VTS_I4 VTS_BSTR;
; 472  : 	InvokeHelper(0x99, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 473  : 		 target, property, value);

  01a7e	8b 45 10	 mov	 eax, DWORD PTR _value$[ebp]
  01a81	50		 push	 eax
  01a82	8b 4d 0c	 mov	 ecx, DWORD PTR _property$[ebp]
  01a85	51		 push	 ecx
  01a86	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  01a89	52		 push	 edx
  01a8a	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z@4PAEA
  01a8f	6a 00		 push	 0
  01a91	6a 00		 push	 0
  01a93	6a 01		 push	 1
  01a95	68 99 00 00 00	 push	 153			; 00000099H
  01a9a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01a9d	50		 push	 eax
  01a9e	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01aa3	83 c4 24	 add	 esp, 36			; 00000024H

; 474  : }

  01aa6	83 c4 04	 add	 esp, 4
  01aa9	3b ec		 cmp	 ebp, esp
  01aab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01ab0	8b e5		 mov	 esp, ebp
  01ab2	5d		 pop	 ebp
  01ab3	c2 0c 00	 ret	 12			; 0000000cH
?TSetProperty@CShockwaveFlash@@QAEXPBDJ0@Z ENDP		; CShockwaveFlash::TSetProperty
_TEXT	ENDS
PUBLIC	?TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z ; CShockwaveFlash::TGetProperty
xdata$x	SEGMENT
$T188534 DD	0ffffffffH
	DD	FLAT:$L188524
$T188529 DD	019930520H
	DD	01H
	DD	FLAT:$T188534
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?parms@?1??TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z@4PAEA DB 0eH
	DB	03H, 00H					; `CShockwaveFlash::TGetProperty'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
$T188526 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_target$ = 12						; size = 4
_property$ = 16						; size = 4
?TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z PROC NEAR ; CShockwaveFlash::TGetProperty
; _this$ = ecx

; 477  : {

  01ac0	55		 push	 ebp
  01ac1	8b ec		 mov	 ebp, esp
  01ac3	6a ff		 push	 -1
  01ac5	68 00 00 00 00	 push	 __ehhandler$?TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z
  01aca	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01ad0	50		 push	 eax
  01ad1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01ad8	83 ec 14	 sub	 esp, 20			; 00000014H
  01adb	56		 push	 esi
  01adc	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  01ae1	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  01ae4	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  01ae7	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  01aea	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  01aed	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  01af0	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  01af3	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188526[ebp], 0

; 478  : 	CString result;

  01afa	8b f4		 mov	 esi, esp
  01afc	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01aff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01b05	3b f4		 cmp	 esi, esp
  01b07	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01b0c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 479  : 	static BYTE parms[] =
; 480  : 		VTS_BSTR VTS_I4;
; 481  : 	InvokeHelper(0x9a, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 482  : 		target, property);

  01b13	8b 45 10	 mov	 eax, DWORD PTR _property$[ebp]
  01b16	50		 push	 eax
  01b17	8b 4d 0c	 mov	 ecx, DWORD PTR _target$[ebp]
  01b1a	51		 push	 ecx
  01b1b	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z@4PAEA
  01b20	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  01b23	52		 push	 edx
  01b24	6a 08		 push	 8
  01b26	6a 01		 push	 1
  01b28	68 9a 00 00 00	 push	 154			; 0000009aH
  01b2d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01b30	50		 push	 eax
  01b31	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01b36	83 c4 20	 add	 esp, 32			; 00000020H

; 483  : 	return result;

  01b39	8b f4		 mov	 esi, esp
  01b3b	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01b3e	51		 push	 ecx
  01b3f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01b42	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01b48	3b f4		 cmp	 esi, esp
  01b4a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01b4f	8b 55 e0	 mov	 edx, DWORD PTR $T188526[ebp]
  01b52	83 ca 01	 or	 edx, 1
  01b55	89 55 e0	 mov	 DWORD PTR $T188526[ebp], edx
  01b58	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01b5f	8b f4		 mov	 esi, esp
  01b61	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01b64	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01b6a	3b f4		 cmp	 esi, esp
  01b6c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01b71	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 484  : }

  01b74	52		 push	 edx
  01b75	8b cd		 mov	 ecx, ebp
  01b77	50		 push	 eax
  01b78	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188533
  01b7e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01b83	58		 pop	 eax
  01b84	5a		 pop	 edx
  01b85	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01b88	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01b8f	5e		 pop	 esi
  01b90	83 c4 20	 add	 esp, 32			; 00000020H
  01b93	3b ec		 cmp	 ebp, esp
  01b95	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01b9a	8b e5		 mov	 esp, ebp
  01b9c	5d		 pop	 ebp
  01b9d	c2 0c 00	 ret	 12			; 0000000cH
$L188533:
  01ba0	01 00 00 00	 DD	 1
  01ba4	00 00 00 00	 DD	 $L188532
$L188532:
  01ba8	e8 ff ff ff	 DD	 -24			; ffffffe8H
  01bac	04 00 00 00	 DD	 4
  01bb0	00 00 00 00	 DD	 $L188530
$L188530:
  01bb4	72		 DB	 114			; 00000072H
  01bb5	65		 DB	 101			; 00000065H
  01bb6	73		 DB	 115			; 00000073H
  01bb7	75		 DB	 117			; 00000075H
  01bb8	6c		 DB	 108			; 0000006cH
  01bb9	74		 DB	 116			; 00000074H
  01bba	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188524:
  00110	8b f4		 mov	 esi, esp
  00112	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0011b	3b f4		 cmp	 esi, esp
  0011d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z:
  00122	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188529
  00127	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?TGetProperty@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDJ@Z ENDP ; CShockwaveFlash::TGetProperty
PUBLIC	?TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z		; CShockwaveFlash::TCallFrame
;	COMDAT ?parms@?1??TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA DB 0eH, 03H, 00H ; `CShockwaveFlash::TCallFrame'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_FrameNum$ = 12						; size = 4
?TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z PROC NEAR	; CShockwaveFlash::TCallFrame
; _this$ = ecx

; 487  : {

  01bc0	55		 push	 ebp
  01bc1	8b ec		 mov	 ebp, esp
  01bc3	51		 push	 ecx
  01bc4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  01bcb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 488  : 	static BYTE parms[] =
; 489  : 		VTS_BSTR VTS_I4;
; 490  : 	InvokeHelper(0x9b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 491  : 		 target, FrameNum);

  01bce	8b 45 0c	 mov	 eax, DWORD PTR _FrameNum$[ebp]
  01bd1	50		 push	 eax
  01bd2	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  01bd5	51		 push	 ecx
  01bd6	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z@4PAEA
  01bdb	6a 00		 push	 0
  01bdd	6a 00		 push	 0
  01bdf	6a 01		 push	 1
  01be1	68 9b 00 00 00	 push	 155			; 0000009bH
  01be6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01be9	52		 push	 edx
  01bea	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01bef	83 c4 20	 add	 esp, 32			; 00000020H

; 492  : }

  01bf2	83 c4 04	 add	 esp, 4
  01bf5	3b ec		 cmp	 ebp, esp
  01bf7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01bfc	8b e5		 mov	 esp, ebp
  01bfe	5d		 pop	 ebp
  01bff	c2 08 00	 ret	 8
?TCallFrame@CShockwaveFlash@@QAEXPBDJ@Z ENDP		; CShockwaveFlash::TCallFrame
_TEXT	ENDS
PUBLIC	?TCallLabel@CShockwaveFlash@@QAEXPBD0@Z		; CShockwaveFlash::TCallLabel
;	COMDAT ?parms@?1??TCallLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TCallLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA DB 0eH, 0eH, 00H ; `CShockwaveFlash::TCallLabel'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_label$ = 12						; size = 4
?TCallLabel@CShockwaveFlash@@QAEXPBD0@Z PROC NEAR	; CShockwaveFlash::TCallLabel
; _this$ = ecx

; 495  : {

  01c10	55		 push	 ebp
  01c11	8b ec		 mov	 ebp, esp
  01c13	51		 push	 ecx
  01c14	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  01c1b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	static BYTE parms[] =
; 497  : 		VTS_BSTR VTS_BSTR;
; 498  : 	InvokeHelper(0x9c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 499  : 		 target, label);

  01c1e	8b 45 0c	 mov	 eax, DWORD PTR _label$[ebp]
  01c21	50		 push	 eax
  01c22	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  01c25	51		 push	 ecx
  01c26	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TCallLabel@CShockwaveFlash@@QAEXPBD0@Z@4PAEA
  01c2b	6a 00		 push	 0
  01c2d	6a 00		 push	 0
  01c2f	6a 01		 push	 1
  01c31	68 9c 00 00 00	 push	 156			; 0000009cH
  01c36	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01c39	52		 push	 edx
  01c3a	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01c3f	83 c4 20	 add	 esp, 32			; 00000020H

; 500  : }

  01c42	83 c4 04	 add	 esp, 4
  01c45	3b ec		 cmp	 ebp, esp
  01c47	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01c4c	8b e5		 mov	 esp, ebp
  01c4e	5d		 pop	 ebp
  01c4f	c2 08 00	 ret	 8
?TCallLabel@CShockwaveFlash@@QAEXPBD0@Z ENDP		; CShockwaveFlash::TCallLabel
_TEXT	ENDS
PUBLIC	?TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z	; CShockwaveFlash::TSetPropertyNum
EXTRN	__fltused:NEAR
;	COMDAT ?parms@?1??TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z@4PAEA DB 0eH, 03H
	DB	05H, 00H					; `CShockwaveFlash::TSetPropertyNum'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_property$ = 12						; size = 4
_value$ = 16						; size = 8
?TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z PROC NEAR	; CShockwaveFlash::TSetPropertyNum
; _this$ = ecx

; 503  : {

  01c60	55		 push	 ebp
  01c61	8b ec		 mov	 ebp, esp
  01c63	51		 push	 ecx
  01c64	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  01c6b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 504  : 	static BYTE parms[] =
; 505  : 		VTS_BSTR VTS_I4 VTS_R8;
; 506  : 	InvokeHelper(0x9d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 507  : 		 target, property, value);

  01c6e	dd 45 10	 fld	 QWORD PTR _value$[ebp]
  01c71	83 ec 08	 sub	 esp, 8
  01c74	dd 1c 24	 fstp	 QWORD PTR [esp]
  01c77	8b 45 0c	 mov	 eax, DWORD PTR _property$[ebp]
  01c7a	50		 push	 eax
  01c7b	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  01c7e	51		 push	 ecx
  01c7f	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z@4PAEA
  01c84	6a 00		 push	 0
  01c86	6a 00		 push	 0
  01c88	6a 01		 push	 1
  01c8a	68 9d 00 00 00	 push	 157			; 0000009dH
  01c8f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01c92	52		 push	 edx
  01c93	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01c98	83 c4 28	 add	 esp, 40			; 00000028H

; 508  : }

  01c9b	83 c4 04	 add	 esp, 4
  01c9e	3b ec		 cmp	 ebp, esp
  01ca0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01ca5	8b e5		 mov	 esp, ebp
  01ca7	5d		 pop	 ebp
  01ca8	c2 10 00	 ret	 16			; 00000010H
?TSetPropertyNum@CShockwaveFlash@@QAEXPBDJN@Z ENDP	; CShockwaveFlash::TSetPropertyNum
_TEXT	ENDS
PUBLIC	?TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z	; CShockwaveFlash::TGetPropertyNum
;	COMDAT ?parms@?1??TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z@4PAEA DB 0eH, 03H, 00H ; `CShockwaveFlash::TGetPropertyNum'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_result$ = -16						; size = 8
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_property$ = 12						; size = 4
?TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z PROC NEAR	; CShockwaveFlash::TGetPropertyNum
; _this$ = ecx

; 511  : {

  01cb0	55		 push	 ebp
  01cb1	8b ec		 mov	 ebp, esp
  01cb3	83 ec 14	 sub	 esp, 20			; 00000014H
  01cb6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  01cbb	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  01cbe	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  01cc1	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  01cc4	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  01cc7	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  01cca	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 512  : 	double result;
; 513  : 	static BYTE parms[] =
; 514  : 		VTS_BSTR VTS_I4;
; 515  : 	InvokeHelper(0x9e, DISPATCH_METHOD, VT_R8, (void*)&result, parms,
; 516  : 		target, property);

  01ccd	8b 45 0c	 mov	 eax, DWORD PTR _property$[ebp]
  01cd0	50		 push	 eax
  01cd1	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  01cd4	51		 push	 ecx
  01cd5	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
  01cda	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  01cdd	52		 push	 edx
  01cde	6a 05		 push	 5
  01ce0	6a 01		 push	 1
  01ce2	68 9e 00 00 00	 push	 158			; 0000009eH
  01ce7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01cea	50		 push	 eax
  01ceb	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01cf0	83 c4 20	 add	 esp, 32			; 00000020H

; 517  : 	return result;

  01cf3	dd 45 f0	 fld	 QWORD PTR _result$[ebp]

; 518  : }

  01cf6	52		 push	 edx
  01cf7	8b cd		 mov	 ecx, ebp
  01cf9	50		 push	 eax
  01cfa	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188542
  01d00	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01d05	58		 pop	 eax
  01d06	5a		 pop	 edx
  01d07	83 c4 14	 add	 esp, 20			; 00000014H
  01d0a	3b ec		 cmp	 ebp, esp
  01d0c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01d11	8b e5		 mov	 esp, ebp
  01d13	5d		 pop	 ebp
  01d14	c2 08 00	 ret	 8
$L188542:
  01d17	01 00 00 00	 DD	 1
  01d1b	00 00 00 00	 DD	 $L188541
$L188541:
  01d1f	f0 ff ff ff	 DD	 -16			; fffffff0H
  01d23	08 00 00 00	 DD	 8
  01d27	00 00 00 00	 DD	 $L188540
$L188540:
  01d2b	72		 DB	 114			; 00000072H
  01d2c	65		 DB	 101			; 00000065H
  01d2d	73		 DB	 115			; 00000073H
  01d2e	75		 DB	 117			; 00000075H
  01d2f	6c		 DB	 108			; 0000006cH
  01d30	74		 DB	 116			; 00000074H
  01d31	00		 DB	 0
?TGetPropertyNum@CShockwaveFlash@@QAENPBDJ@Z ENDP	; CShockwaveFlash::TGetPropertyNum
_TEXT	ENDS
PUBLIC	?TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z ; CShockwaveFlash::TGetPropertyAsNumber
;	COMDAT ?parms@?1??TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z@4PAEA DB 0eH, 03H
	DB	00H						; `CShockwaveFlash::TGetPropertyAsNumber'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_result$ = -16						; size = 8
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_property$ = 12						; size = 4
?TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z PROC NEAR ; CShockwaveFlash::TGetPropertyAsNumber
; _this$ = ecx

; 521  : {

  01d40	55		 push	 ebp
  01d41	8b ec		 mov	 ebp, esp
  01d43	83 ec 14	 sub	 esp, 20			; 00000014H
  01d46	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  01d4b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  01d4e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  01d51	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  01d54	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  01d57	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  01d5a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 522  : 	double result;
; 523  : 	static BYTE parms[] =
; 524  : 		VTS_BSTR VTS_I4;
; 525  : 	InvokeHelper(0xac, DISPATCH_METHOD, VT_R8, (void*)&result, parms,
; 526  : 		target, property);

  01d5d	8b 45 0c	 mov	 eax, DWORD PTR _property$[ebp]
  01d60	50		 push	 eax
  01d61	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  01d64	51		 push	 ecx
  01d65	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z@4PAEA
  01d6a	8d 55 f0	 lea	 edx, DWORD PTR _result$[ebp]
  01d6d	52		 push	 edx
  01d6e	6a 05		 push	 5
  01d70	6a 01		 push	 1
  01d72	68 ac 00 00 00	 push	 172			; 000000acH
  01d77	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01d7a	50		 push	 eax
  01d7b	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01d80	83 c4 20	 add	 esp, 32			; 00000020H

; 527  : 	return result;

  01d83	dd 45 f0	 fld	 QWORD PTR _result$[ebp]

; 528  : }

  01d86	52		 push	 edx
  01d87	8b cd		 mov	 ecx, ebp
  01d89	50		 push	 eax
  01d8a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188546
  01d90	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01d95	58		 pop	 eax
  01d96	5a		 pop	 edx
  01d97	83 c4 14	 add	 esp, 20			; 00000014H
  01d9a	3b ec		 cmp	 ebp, esp
  01d9c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01da1	8b e5		 mov	 esp, ebp
  01da3	5d		 pop	 ebp
  01da4	c2 08 00	 ret	 8
$L188546:
  01da7	01 00 00 00	 DD	 1
  01dab	00 00 00 00	 DD	 $L188545
$L188545:
  01daf	f0 ff ff ff	 DD	 -16			; fffffff0H
  01db3	08 00 00 00	 DD	 8
  01db7	00 00 00 00	 DD	 $L188544
$L188544:
  01dbb	72		 DB	 114			; 00000072H
  01dbc	65		 DB	 101			; 00000065H
  01dbd	73		 DB	 115			; 00000073H
  01dbe	75		 DB	 117			; 00000075H
  01dbf	6c		 DB	 108			; 0000006cH
  01dc0	74		 DB	 116			; 00000074H
  01dc1	00		 DB	 0
?TGetPropertyAsNumber@CShockwaveFlash@@QAENPBDJ@Z ENDP	; CShockwaveFlash::TGetPropertyAsNumber
_TEXT	ENDS
PUBLIC	?GetSWRemote@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetSWRemote
xdata$x	SEGMENT
$T188558 DD	0ffffffffH
	DD	FLAT:$L188548
$T188553 DD	019930520H
	DD	01H
	DD	FLAT:$T188558
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188550 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetSWRemote@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetSWRemote
; _this$ = ecx

; 531  : {

  01dd0	55		 push	 ebp
  01dd1	8b ec		 mov	 ebp, esp
  01dd3	6a ff		 push	 -1
  01dd5	68 00 00 00 00	 push	 __ehhandler$?GetSWRemote@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  01dda	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01de0	50		 push	 eax
  01de1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01de8	83 ec 14	 sub	 esp, 20			; 00000014H
  01deb	56		 push	 esi
  01dec	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  01df1	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  01df4	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  01df7	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  01dfa	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  01dfd	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  01e00	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  01e03	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188550[ebp], 0

; 532  : 	CString result;

  01e0a	8b f4		 mov	 esi, esp
  01e0c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01e0f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01e15	3b f4		 cmp	 esi, esp
  01e17	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01e1c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 533  : 	InvokeHelper(0x9f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  01e23	6a 00		 push	 0
  01e25	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  01e28	50		 push	 eax
  01e29	6a 08		 push	 8
  01e2b	6a 02		 push	 2
  01e2d	68 9f 00 00 00	 push	 159			; 0000009fH
  01e32	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01e35	51		 push	 ecx
  01e36	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01e3b	83 c4 18	 add	 esp, 24			; 00000018H

; 534  : 	return result;

  01e3e	8b f4		 mov	 esi, esp
  01e40	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  01e43	52		 push	 edx
  01e44	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01e47	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01e4d	3b f4		 cmp	 esi, esp
  01e4f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01e54	8b 45 e0	 mov	 eax, DWORD PTR $T188550[ebp]
  01e57	83 c8 01	 or	 eax, 1
  01e5a	89 45 e0	 mov	 DWORD PTR $T188550[ebp], eax
  01e5d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01e64	8b f4		 mov	 esi, esp
  01e66	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01e69	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01e6f	3b f4		 cmp	 esi, esp
  01e71	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01e76	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 535  : }

  01e79	52		 push	 edx
  01e7a	8b cd		 mov	 ecx, ebp
  01e7c	50		 push	 eax
  01e7d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188557
  01e83	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01e88	58		 pop	 eax
  01e89	5a		 pop	 edx
  01e8a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01e8d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01e94	5e		 pop	 esi
  01e95	83 c4 20	 add	 esp, 32			; 00000020H
  01e98	3b ec		 cmp	 ebp, esp
  01e9a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01e9f	8b e5		 mov	 esp, ebp
  01ea1	5d		 pop	 ebp
  01ea2	c2 04 00	 ret	 4
$L188557:
  01ea5	01 00 00 00	 DD	 1
  01ea9	00 00 00 00	 DD	 $L188556
$L188556:
  01ead	e8 ff ff ff	 DD	 -24			; ffffffe8H
  01eb1	04 00 00 00	 DD	 4
  01eb5	00 00 00 00	 DD	 $L188554
$L188554:
  01eb9	72		 DB	 114			; 00000072H
  01eba	65		 DB	 101			; 00000065H
  01ebb	73		 DB	 115			; 00000073H
  01ebc	75		 DB	 117			; 00000075H
  01ebd	6c		 DB	 108			; 0000006cH
  01ebe	74		 DB	 116			; 00000074H
  01ebf	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188548:
  0012c	8b f4		 mov	 esi, esp
  0012e	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00131	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00137	3b f4		 cmp	 esi, esp
  00139	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetSWRemote@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0013e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188553
  00143	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetSWRemote@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetSWRemote
PUBLIC	?SetSWRemote@CShockwaveFlash@@QAEXPBD@Z		; CShockwaveFlash::SetSWRemote
;	COMDAT ?parms@?1??SetSWRemote@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetSWRemote@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetSWRemote'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetSWRemote@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetSWRemote
; _this$ = ecx

; 538  : {

  01ec0	55		 push	 ebp
  01ec1	8b ec		 mov	 ebp, esp
  01ec3	51		 push	 ecx
  01ec4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  01ecb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 539  : 	static BYTE parms[] =
; 540  : 		VTS_BSTR;
; 541  : 	InvokeHelper(0x9f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 542  : 		 lpszNewValue);

  01ece	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  01ed1	50		 push	 eax
  01ed2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetSWRemote@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  01ed7	6a 00		 push	 0
  01ed9	6a 00		 push	 0
  01edb	6a 04		 push	 4
  01edd	68 9f 00 00 00	 push	 159			; 0000009fH
  01ee2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01ee5	51		 push	 ecx
  01ee6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01eeb	83 c4 1c	 add	 esp, 28			; 0000001cH

; 543  : }

  01eee	83 c4 04	 add	 esp, 4
  01ef1	3b ec		 cmp	 ebp, esp
  01ef3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01ef8	8b e5		 mov	 esp, ebp
  01efa	5d		 pop	 ebp
  01efb	c2 04 00	 ret	 4
?SetSWRemote@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetSWRemote
_TEXT	ENDS
PUBLIC	?GetFlashVars@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetFlashVars
xdata$x	SEGMENT
$T188571 DD	0ffffffffH
	DD	FLAT:$L188561
$T188566 DD	019930520H
	DD	01H
	DD	FLAT:$T188571
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188563 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetFlashVars@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetFlashVars
; _this$ = ecx

; 546  : {

  01f00	55		 push	 ebp
  01f01	8b ec		 mov	 ebp, esp
  01f03	6a ff		 push	 -1
  01f05	68 00 00 00 00	 push	 __ehhandler$?GetFlashVars@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  01f0a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01f10	50		 push	 eax
  01f11	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01f18	83 ec 14	 sub	 esp, 20			; 00000014H
  01f1b	56		 push	 esi
  01f1c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  01f21	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  01f24	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  01f27	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  01f2a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  01f2d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  01f30	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  01f33	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188563[ebp], 0

; 547  : 	CString result;

  01f3a	8b f4		 mov	 esi, esp
  01f3c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01f3f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01f45	3b f4		 cmp	 esi, esp
  01f47	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01f4c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 548  : 	InvokeHelper(0xaa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  01f53	6a 00		 push	 0
  01f55	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  01f58	50		 push	 eax
  01f59	6a 08		 push	 8
  01f5b	6a 02		 push	 2
  01f5d	68 aa 00 00 00	 push	 170			; 000000aaH
  01f62	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01f65	51		 push	 ecx
  01f66	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  01f6b	83 c4 18	 add	 esp, 24			; 00000018H

; 549  : 	return result;

  01f6e	8b f4		 mov	 esi, esp
  01f70	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  01f73	52		 push	 edx
  01f74	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01f77	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01f7d	3b f4		 cmp	 esi, esp
  01f7f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01f84	8b 45 e0	 mov	 eax, DWORD PTR $T188563[ebp]
  01f87	83 c8 01	 or	 eax, 1
  01f8a	89 45 e0	 mov	 DWORD PTR $T188563[ebp], eax
  01f8d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01f94	8b f4		 mov	 esi, esp
  01f96	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  01f99	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01f9f	3b f4		 cmp	 esi, esp
  01fa1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01fa6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 550  : }

  01fa9	52		 push	 edx
  01faa	8b cd		 mov	 ecx, ebp
  01fac	50		 push	 eax
  01fad	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188570
  01fb3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01fb8	58		 pop	 eax
  01fb9	5a		 pop	 edx
  01fba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01fbd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01fc4	5e		 pop	 esi
  01fc5	83 c4 20	 add	 esp, 32			; 00000020H
  01fc8	3b ec		 cmp	 ebp, esp
  01fca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01fcf	8b e5		 mov	 esp, ebp
  01fd1	5d		 pop	 ebp
  01fd2	c2 04 00	 ret	 4
$L188570:
  01fd5	01 00 00 00	 DD	 1
  01fd9	00 00 00 00	 DD	 $L188569
$L188569:
  01fdd	e8 ff ff ff	 DD	 -24			; ffffffe8H
  01fe1	04 00 00 00	 DD	 4
  01fe5	00 00 00 00	 DD	 $L188567
$L188567:
  01fe9	72		 DB	 114			; 00000072H
  01fea	65		 DB	 101			; 00000065H
  01feb	73		 DB	 115			; 00000073H
  01fec	75		 DB	 117			; 00000075H
  01fed	6c		 DB	 108			; 0000006cH
  01fee	74		 DB	 116			; 00000074H
  01fef	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188561:
  00148	8b f4		 mov	 esi, esp
  0014a	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0014d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00153	3b f4		 cmp	 esi, esp
  00155	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetFlashVars@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  0015a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188566
  0015f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetFlashVars@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetFlashVars
PUBLIC	?SetFlashVars@CShockwaveFlash@@QAEXPBD@Z	; CShockwaveFlash::SetFlashVars
;	COMDAT ?parms@?1??SetFlashVars@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetFlashVars@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetFlashVars'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetFlashVars@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetFlashVars
; _this$ = ecx

; 553  : {

  01ff0	55		 push	 ebp
  01ff1	8b ec		 mov	 ebp, esp
  01ff3	51		 push	 ecx
  01ff4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  01ffb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 554  : 	static BYTE parms[] =
; 555  : 		VTS_BSTR;
; 556  : 	InvokeHelper(0xaa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 557  : 		 lpszNewValue);

  01ffe	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  02001	50		 push	 eax
  02002	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetFlashVars@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  02007	6a 00		 push	 0
  02009	6a 00		 push	 0
  0200b	6a 04		 push	 4
  0200d	68 aa 00 00 00	 push	 170			; 000000aaH
  02012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02015	51		 push	 ecx
  02016	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0201b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 558  : }

  0201e	83 c4 04	 add	 esp, 4
  02021	3b ec		 cmp	 ebp, esp
  02023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02028	8b e5		 mov	 esp, ebp
  0202a	5d		 pop	 ebp
  0202b	c2 04 00	 ret	 4
?SetFlashVars@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetFlashVars
_TEXT	ENDS
PUBLIC	?GetAllowScriptAccess@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetAllowScriptAccess
xdata$x	SEGMENT
$T188584 DD	0ffffffffH
	DD	FLAT:$L188574
$T188579 DD	019930520H
	DD	01H
	DD	FLAT:$T188584
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188576 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAllowScriptAccess@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetAllowScriptAccess
; _this$ = ecx

; 561  : {

  02030	55		 push	 ebp
  02031	8b ec		 mov	 ebp, esp
  02033	6a ff		 push	 -1
  02035	68 00 00 00 00	 push	 __ehhandler$?GetAllowScriptAccess@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0203a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02040	50		 push	 eax
  02041	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02048	83 ec 14	 sub	 esp, 20			; 00000014H
  0204b	56		 push	 esi
  0204c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  02051	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  02054	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  02057	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0205a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0205d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  02060	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  02063	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188576[ebp], 0

; 562  : 	CString result;

  0206a	8b f4		 mov	 esi, esp
  0206c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0206f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02075	3b f4		 cmp	 esi, esp
  02077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0207c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 563  : 	InvokeHelper(0xab, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  02083	6a 00		 push	 0
  02085	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  02088	50		 push	 eax
  02089	6a 08		 push	 8
  0208b	6a 02		 push	 2
  0208d	68 ab 00 00 00	 push	 171			; 000000abH
  02092	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  02095	51		 push	 ecx
  02096	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0209b	83 c4 18	 add	 esp, 24			; 00000018H

; 564  : 	return result;

  0209e	8b f4		 mov	 esi, esp
  020a0	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  020a3	52		 push	 edx
  020a4	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  020a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  020ad	3b f4		 cmp	 esi, esp
  020af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  020b4	8b 45 e0	 mov	 eax, DWORD PTR $T188576[ebp]
  020b7	83 c8 01	 or	 eax, 1
  020ba	89 45 e0	 mov	 DWORD PTR $T188576[ebp], eax
  020bd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  020c4	8b f4		 mov	 esi, esp
  020c6	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  020c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  020cf	3b f4		 cmp	 esi, esp
  020d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  020d6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 565  : }

  020d9	52		 push	 edx
  020da	8b cd		 mov	 ecx, ebp
  020dc	50		 push	 eax
  020dd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188583
  020e3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  020e8	58		 pop	 eax
  020e9	5a		 pop	 edx
  020ea	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  020ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  020f4	5e		 pop	 esi
  020f5	83 c4 20	 add	 esp, 32			; 00000020H
  020f8	3b ec		 cmp	 ebp, esp
  020fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  020ff	8b e5		 mov	 esp, ebp
  02101	5d		 pop	 ebp
  02102	c2 04 00	 ret	 4
$L188583:
  02105	01 00 00 00	 DD	 1
  02109	00 00 00 00	 DD	 $L188582
$L188582:
  0210d	e8 ff ff ff	 DD	 -24			; ffffffe8H
  02111	04 00 00 00	 DD	 4
  02115	00 00 00 00	 DD	 $L188580
$L188580:
  02119	72		 DB	 114			; 00000072H
  0211a	65		 DB	 101			; 00000065H
  0211b	73		 DB	 115			; 00000073H
  0211c	75		 DB	 117			; 00000075H
  0211d	6c		 DB	 108			; 0000006cH
  0211e	74		 DB	 116			; 00000074H
  0211f	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188574:
  00164	8b f4		 mov	 esi, esp
  00166	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00169	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0016f	3b f4		 cmp	 esi, esp
  00171	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetAllowScriptAccess@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00176	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188579
  0017b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetAllowScriptAccess@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetAllowScriptAccess
PUBLIC	?SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z ; CShockwaveFlash::SetAllowScriptAccess
;	COMDAT ?parms@?1??SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetAllowScriptAccess'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z PROC NEAR ; CShockwaveFlash::SetAllowScriptAccess
; _this$ = ecx

; 568  : {

  02120	55		 push	 ebp
  02121	8b ec		 mov	 ebp, esp
  02123	51		 push	 ecx
  02124	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0212b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 569  : 	static BYTE parms[] =
; 570  : 		VTS_BSTR;
; 571  : 	InvokeHelper(0xab, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 572  : 		 lpszNewValue);

  0212e	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  02131	50		 push	 eax
  02132	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  02137	6a 00		 push	 0
  02139	6a 00		 push	 0
  0213b	6a 04		 push	 4
  0213d	68 ab 00 00 00	 push	 171			; 000000abH
  02142	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02145	51		 push	 ecx
  02146	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0214b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 573  : }

  0214e	83 c4 04	 add	 esp, 4
  02151	3b ec		 cmp	 ebp, esp
  02153	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02158	8b e5		 mov	 esp, ebp
  0215a	5d		 pop	 ebp
  0215b	c2 04 00	 ret	 4
?SetAllowScriptAccess@CShockwaveFlash@@QAEXPBD@Z ENDP	; CShockwaveFlash::SetAllowScriptAccess
_TEXT	ENDS
PUBLIC	?GetMovieData@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetMovieData
xdata$x	SEGMENT
$T188597 DD	0ffffffffH
	DD	FLAT:$L188587
$T188592 DD	019930520H
	DD	01H
	DD	FLAT:$T188597
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188589 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetMovieData@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetMovieData
; _this$ = ecx

; 576  : {

  02160	55		 push	 ebp
  02161	8b ec		 mov	 ebp, esp
  02163	6a ff		 push	 -1
  02165	68 00 00 00 00	 push	 __ehhandler$?GetMovieData@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0216a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02170	50		 push	 eax
  02171	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02178	83 ec 14	 sub	 esp, 20			; 00000014H
  0217b	56		 push	 esi
  0217c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  02181	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  02184	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  02187	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0218a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0218d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  02190	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  02193	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188589[ebp], 0

; 577  : 	CString result;

  0219a	8b f4		 mov	 esi, esp
  0219c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0219f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  021a5	3b f4		 cmp	 esi, esp
  021a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  021ac	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 578  : 	InvokeHelper(0xbe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  021b3	6a 00		 push	 0
  021b5	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  021b8	50		 push	 eax
  021b9	6a 08		 push	 8
  021bb	6a 02		 push	 2
  021bd	68 be 00 00 00	 push	 190			; 000000beH
  021c2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  021c5	51		 push	 ecx
  021c6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  021cb	83 c4 18	 add	 esp, 24			; 00000018H

; 579  : 	return result;

  021ce	8b f4		 mov	 esi, esp
  021d0	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  021d3	52		 push	 edx
  021d4	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  021d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  021dd	3b f4		 cmp	 esi, esp
  021df	e8 00 00 00 00	 call	 __RTC_CheckEsp
  021e4	8b 45 e0	 mov	 eax, DWORD PTR $T188589[ebp]
  021e7	83 c8 01	 or	 eax, 1
  021ea	89 45 e0	 mov	 DWORD PTR $T188589[ebp], eax
  021ed	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  021f4	8b f4		 mov	 esi, esp
  021f6	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  021f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  021ff	3b f4		 cmp	 esi, esp
  02201	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02206	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 580  : }

  02209	52		 push	 edx
  0220a	8b cd		 mov	 ecx, ebp
  0220c	50		 push	 eax
  0220d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188596
  02213	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  02218	58		 pop	 eax
  02219	5a		 pop	 edx
  0221a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0221d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02224	5e		 pop	 esi
  02225	83 c4 20	 add	 esp, 32			; 00000020H
  02228	3b ec		 cmp	 ebp, esp
  0222a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0222f	8b e5		 mov	 esp, ebp
  02231	5d		 pop	 ebp
  02232	c2 04 00	 ret	 4
$L188596:
  02235	01 00 00 00	 DD	 1
  02239	00 00 00 00	 DD	 $L188595
$L188595:
  0223d	e8 ff ff ff	 DD	 -24			; ffffffe8H
  02241	04 00 00 00	 DD	 4
  02245	00 00 00 00	 DD	 $L188593
$L188593:
  02249	72		 DB	 114			; 00000072H
  0224a	65		 DB	 101			; 00000065H
  0224b	73		 DB	 115			; 00000073H
  0224c	75		 DB	 117			; 00000075H
  0224d	6c		 DB	 108			; 0000006cH
  0224e	74		 DB	 116			; 00000074H
  0224f	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188587:
  00180	8b f4		 mov	 esi, esp
  00182	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  00185	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0018b	3b f4		 cmp	 esi, esp
  0018d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetMovieData@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  00192	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188592
  00197	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetMovieData@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetMovieData
PUBLIC	?SetMovieData@CShockwaveFlash@@QAEXPBD@Z	; CShockwaveFlash::SetMovieData
;	COMDAT ?parms@?1??SetMovieData@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetMovieData@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetMovieData'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetMovieData@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetMovieData
; _this$ = ecx

; 583  : {

  02250	55		 push	 ebp
  02251	8b ec		 mov	 ebp, esp
  02253	51		 push	 ecx
  02254	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0225b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 584  : 	static BYTE parms[] =
; 585  : 		VTS_BSTR;
; 586  : 	InvokeHelper(0xbe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 587  : 		 lpszNewValue);

  0225e	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  02261	50		 push	 eax
  02262	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetMovieData@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  02267	6a 00		 push	 0
  02269	6a 00		 push	 0
  0226b	6a 04		 push	 4
  0226d	68 be 00 00 00	 push	 190			; 000000beH
  02272	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02275	51		 push	 ecx
  02276	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0227b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 588  : }

  0227e	83 c4 04	 add	 esp, 4
  02281	3b ec		 cmp	 ebp, esp
  02283	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02288	8b e5		 mov	 esp, ebp
  0228a	5d		 pop	 ebp
  0228b	c2 04 00	 ret	 4
?SetMovieData@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetMovieData
_TEXT	ENDS
PUBLIC	?GetInlineData@CShockwaveFlash@@QAEPAUIUnknown@@XZ ; CShockwaveFlash::GetInlineData
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetInlineData@CShockwaveFlash@@QAEPAUIUnknown@@XZ PROC NEAR ; CShockwaveFlash::GetInlineData
; _this$ = ecx

; 591  : {

  02290	55		 push	 ebp
  02291	8b ec		 mov	 ebp, esp
  02293	83 ec 10	 sub	 esp, 16			; 00000010H
  02296	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0229b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0229e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  022a1	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  022a4	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  022a7	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 592  : 	LPUNKNOWN result;
; 593  : 	InvokeHelper(0xbf, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&result, NULL);

  022aa	6a 00		 push	 0
  022ac	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  022af	50		 push	 eax
  022b0	6a 0d		 push	 13			; 0000000dH
  022b2	6a 02		 push	 2
  022b4	68 bf 00 00 00	 push	 191			; 000000bfH
  022b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  022bc	51		 push	 ecx
  022bd	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  022c2	83 c4 18	 add	 esp, 24			; 00000018H

; 594  : 	return result;

  022c5	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 595  : }

  022c8	52		 push	 edx
  022c9	8b cd		 mov	 ecx, ebp
  022cb	50		 push	 eax
  022cc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188602
  022d2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  022d7	58		 pop	 eax
  022d8	5a		 pop	 edx
  022d9	83 c4 10	 add	 esp, 16			; 00000010H
  022dc	3b ec		 cmp	 ebp, esp
  022de	e8 00 00 00 00	 call	 __RTC_CheckEsp
  022e3	8b e5		 mov	 esp, ebp
  022e5	5d		 pop	 ebp
  022e6	c3		 ret	 0
$L188602:
  022e7	01 00 00 00	 DD	 1
  022eb	00 00 00 00	 DD	 $L188601
$L188601:
  022ef	f4 ff ff ff	 DD	 -12			; fffffff4H
  022f3	04 00 00 00	 DD	 4
  022f7	00 00 00 00	 DD	 $L188600
$L188600:
  022fb	72		 DB	 114			; 00000072H
  022fc	65		 DB	 101			; 00000065H
  022fd	73		 DB	 115			; 00000073H
  022fe	75		 DB	 117			; 00000075H
  022ff	6c		 DB	 108			; 0000006cH
  02300	74		 DB	 116			; 00000074H
  02301	00		 DB	 0
?GetInlineData@CShockwaveFlash@@QAEPAUIUnknown@@XZ ENDP	; CShockwaveFlash::GetInlineData
_TEXT	ENDS
PUBLIC	?SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z ; CShockwaveFlash::SetInlineData
;	COMDAT ?parms@?1??SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z@4PAEA DB 0dH
	DB	00H						; `CShockwaveFlash::SetInlineData'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newValue$ = 8						; size = 4
?SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z PROC NEAR ; CShockwaveFlash::SetInlineData
; _this$ = ecx

; 598  : {

  02310	55		 push	 ebp
  02311	8b ec		 mov	 ebp, esp
  02313	51		 push	 ecx
  02314	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0231b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 599  : 	static BYTE parms[] =
; 600  : 		VTS_UNKNOWN;
; 601  : 	InvokeHelper(0xbf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 602  : 		 newValue);

  0231e	8b 45 08	 mov	 eax, DWORD PTR _newValue$[ebp]
  02321	50		 push	 eax
  02322	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z@4PAEA
  02327	6a 00		 push	 0
  02329	6a 00		 push	 0
  0232b	6a 04		 push	 4
  0232d	68 bf 00 00 00	 push	 191			; 000000bfH
  02332	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02335	51		 push	 ecx
  02336	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0233b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 603  : }

  0233e	83 c4 04	 add	 esp, 4
  02341	3b ec		 cmp	 ebp, esp
  02343	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02348	8b e5		 mov	 esp, ebp
  0234a	5d		 pop	 ebp
  0234b	c2 04 00	 ret	 4
?SetInlineData@CShockwaveFlash@@QAEXPAUIUnknown@@@Z ENDP ; CShockwaveFlash::SetInlineData
_TEXT	ENDS
PUBLIC	?GetSeamlessTabbing@CShockwaveFlash@@QAEHXZ	; CShockwaveFlash::GetSeamlessTabbing
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetSeamlessTabbing@CShockwaveFlash@@QAEHXZ PROC NEAR	; CShockwaveFlash::GetSeamlessTabbing
; _this$ = ecx

; 606  : {

  02350	55		 push	 ebp
  02351	8b ec		 mov	 ebp, esp
  02353	83 ec 10	 sub	 esp, 16			; 00000010H
  02356	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0235b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0235e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  02361	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  02364	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  02367	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 607  : 	BOOL result;
; 608  : 	InvokeHelper(0xc0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  0236a	6a 00		 push	 0
  0236c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  0236f	50		 push	 eax
  02370	6a 0b		 push	 11			; 0000000bH
  02372	6a 02		 push	 2
  02374	68 c0 00 00 00	 push	 192			; 000000c0H
  02379	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0237c	51		 push	 ecx
  0237d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  02382	83 c4 18	 add	 esp, 24			; 00000018H

; 609  : 	return result;

  02385	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 610  : }

  02388	52		 push	 edx
  02389	8b cd		 mov	 ecx, ebp
  0238b	50		 push	 eax
  0238c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188607
  02392	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  02397	58		 pop	 eax
  02398	5a		 pop	 edx
  02399	83 c4 10	 add	 esp, 16			; 00000010H
  0239c	3b ec		 cmp	 ebp, esp
  0239e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  023a3	8b e5		 mov	 esp, ebp
  023a5	5d		 pop	 ebp
  023a6	c3		 ret	 0
$L188607:
  023a7	01 00 00 00	 DD	 1
  023ab	00 00 00 00	 DD	 $L188606
$L188606:
  023af	f4 ff ff ff	 DD	 -12			; fffffff4H
  023b3	04 00 00 00	 DD	 4
  023b7	00 00 00 00	 DD	 $L188605
$L188605:
  023bb	72		 DB	 114			; 00000072H
  023bc	65		 DB	 101			; 00000065H
  023bd	73		 DB	 115			; 00000073H
  023be	75		 DB	 117			; 00000075H
  023bf	6c		 DB	 108			; 0000006cH
  023c0	74		 DB	 116			; 00000074H
  023c1	00		 DB	 0
?GetSeamlessTabbing@CShockwaveFlash@@QAEHXZ ENDP	; CShockwaveFlash::GetSeamlessTabbing
_TEXT	ENDS
PUBLIC	?SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z	; CShockwaveFlash::SetSeamlessTabbing
;	COMDAT ?parms@?1??SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetSeamlessTabbing'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z PROC NEAR	; CShockwaveFlash::SetSeamlessTabbing
; _this$ = ecx

; 613  : {

  023d0	55		 push	 ebp
  023d1	8b ec		 mov	 ebp, esp
  023d3	51		 push	 ecx
  023d4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  023db	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 614  : 	static BYTE parms[] =
; 615  : 		VTS_BOOL;
; 616  : 	InvokeHelper(0xc0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 617  : 		 bNewValue);

  023de	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  023e1	50		 push	 eax
  023e2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z@4PAEA
  023e7	6a 00		 push	 0
  023e9	6a 00		 push	 0
  023eb	6a 04		 push	 4
  023ed	68 c0 00 00 00	 push	 192			; 000000c0H
  023f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  023f5	51		 push	 ecx
  023f6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  023fb	83 c4 1c	 add	 esp, 28			; 0000001cH

; 618  : }

  023fe	83 c4 04	 add	 esp, 4
  02401	3b ec		 cmp	 ebp, esp
  02403	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02408	8b e5		 mov	 esp, ebp
  0240a	5d		 pop	 ebp
  0240b	c2 04 00	 ret	 4
?SetSeamlessTabbing@CShockwaveFlash@@QAEXH@Z ENDP	; CShockwaveFlash::SetSeamlessTabbing
_TEXT	ENDS
PUBLIC	?EnforceLocalSecurity@CShockwaveFlash@@QAEXXZ	; CShockwaveFlash::EnforceLocalSecurity
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EnforceLocalSecurity@CShockwaveFlash@@QAEXXZ PROC NEAR	; CShockwaveFlash::EnforceLocalSecurity
; _this$ = ecx

; 621  : {

  02410	55		 push	 ebp
  02411	8b ec		 mov	 ebp, esp
  02413	51		 push	 ecx
  02414	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0241b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 622  : 	InvokeHelper(0xc1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  0241e	6a 00		 push	 0
  02420	6a 00		 push	 0
  02422	6a 00		 push	 0
  02424	6a 01		 push	 1
  02426	68 c1 00 00 00	 push	 193			; 000000c1H
  0242b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0242e	50		 push	 eax
  0242f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  02434	83 c4 18	 add	 esp, 24			; 00000018H

; 623  : }

  02437	83 c4 04	 add	 esp, 4
  0243a	3b ec		 cmp	 ebp, esp
  0243c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02441	8b e5		 mov	 esp, ebp
  02443	5d		 pop	 ebp
  02444	c3		 ret	 0
?EnforceLocalSecurity@CShockwaveFlash@@QAEXXZ ENDP	; CShockwaveFlash::EnforceLocalSecurity
_TEXT	ENDS
PUBLIC	?GetProfile@CShockwaveFlash@@QAEHXZ		; CShockwaveFlash::GetProfile
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetProfile@CShockwaveFlash@@QAEHXZ PROC NEAR		; CShockwaveFlash::GetProfile
; _this$ = ecx

; 626  : {

  02450	55		 push	 ebp
  02451	8b ec		 mov	 ebp, esp
  02453	83 ec 10	 sub	 esp, 16			; 00000010H
  02456	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0245b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0245e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  02461	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  02464	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  02467	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 627  : 	BOOL result;
; 628  : 	InvokeHelper(0xc2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);

  0246a	6a 00		 push	 0
  0246c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  0246f	50		 push	 eax
  02470	6a 0b		 push	 11			; 0000000bH
  02472	6a 02		 push	 2
  02474	68 c2 00 00 00	 push	 194			; 000000c2H
  02479	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0247c	51		 push	 ecx
  0247d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  02482	83 c4 18	 add	 esp, 24			; 00000018H

; 629  : 	return result;

  02485	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 630  : }

  02488	52		 push	 edx
  02489	8b cd		 mov	 ecx, ebp
  0248b	50		 push	 eax
  0248c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188613
  02492	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  02497	58		 pop	 eax
  02498	5a		 pop	 edx
  02499	83 c4 10	 add	 esp, 16			; 00000010H
  0249c	3b ec		 cmp	 ebp, esp
  0249e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  024a3	8b e5		 mov	 esp, ebp
  024a5	5d		 pop	 ebp
  024a6	c3		 ret	 0
$L188613:
  024a7	01 00 00 00	 DD	 1
  024ab	00 00 00 00	 DD	 $L188612
$L188612:
  024af	f4 ff ff ff	 DD	 -12			; fffffff4H
  024b3	04 00 00 00	 DD	 4
  024b7	00 00 00 00	 DD	 $L188611
$L188611:
  024bb	72		 DB	 114			; 00000072H
  024bc	65		 DB	 101			; 00000065H
  024bd	73		 DB	 115			; 00000073H
  024be	75		 DB	 117			; 00000075H
  024bf	6c		 DB	 108			; 0000006cH
  024c0	74		 DB	 116			; 00000074H
  024c1	00		 DB	 0
?GetProfile@CShockwaveFlash@@QAEHXZ ENDP		; CShockwaveFlash::GetProfile
_TEXT	ENDS
PUBLIC	?SetProfile@CShockwaveFlash@@QAEXH@Z		; CShockwaveFlash::SetProfile
;	COMDAT ?parms@?1??SetProfile@CShockwaveFlash@@QAEXH@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetProfile@CShockwaveFlash@@QAEXH@Z@4PAEA DB 0bH, 00H ; `CShockwaveFlash::SetProfile'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bNewValue$ = 8						; size = 4
?SetProfile@CShockwaveFlash@@QAEXH@Z PROC NEAR		; CShockwaveFlash::SetProfile
; _this$ = ecx

; 633  : {

  024d0	55		 push	 ebp
  024d1	8b ec		 mov	 ebp, esp
  024d3	51		 push	 ecx
  024d4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  024db	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 634  : 	static BYTE parms[] =
; 635  : 		VTS_BOOL;
; 636  : 	InvokeHelper(0xc2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 637  : 		 bNewValue);

  024de	8b 45 08	 mov	 eax, DWORD PTR _bNewValue$[ebp]
  024e1	50		 push	 eax
  024e2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetProfile@CShockwaveFlash@@QAEXH@Z@4PAEA
  024e7	6a 00		 push	 0
  024e9	6a 00		 push	 0
  024eb	6a 04		 push	 4
  024ed	68 c2 00 00 00	 push	 194			; 000000c2H
  024f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  024f5	51		 push	 ecx
  024f6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  024fb	83 c4 1c	 add	 esp, 28			; 0000001cH

; 638  : }

  024fe	83 c4 04	 add	 esp, 4
  02501	3b ec		 cmp	 ebp, esp
  02503	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02508	8b e5		 mov	 esp, ebp
  0250a	5d		 pop	 ebp
  0250b	c2 04 00	 ret	 4
?SetProfile@CShockwaveFlash@@QAEXH@Z ENDP		; CShockwaveFlash::SetProfile
_TEXT	ENDS
PUBLIC	?GetProfileAddress@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetProfileAddress
xdata$x	SEGMENT
$T188626 DD	0ffffffffH
	DD	FLAT:$L188616
$T188621 DD	019930520H
	DD	01H
	DD	FLAT:$T188626
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188618 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetProfileAddress@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetProfileAddress
; _this$ = ecx

; 641  : {

  02510	55		 push	 ebp
  02511	8b ec		 mov	 ebp, esp
  02513	6a ff		 push	 -1
  02515	68 00 00 00 00	 push	 __ehhandler$?GetProfileAddress@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0251a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02520	50		 push	 eax
  02521	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02528	83 ec 14	 sub	 esp, 20			; 00000014H
  0252b	56		 push	 esi
  0252c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  02531	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  02534	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  02537	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0253a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0253d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  02540	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  02543	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188618[ebp], 0

; 642  : 	CString result;

  0254a	8b f4		 mov	 esi, esp
  0254c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0254f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02555	3b f4		 cmp	 esi, esp
  02557	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0255c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 643  : 	InvokeHelper(0xc3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  02563	6a 00		 push	 0
  02565	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  02568	50		 push	 eax
  02569	6a 08		 push	 8
  0256b	6a 02		 push	 2
  0256d	68 c3 00 00 00	 push	 195			; 000000c3H
  02572	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  02575	51		 push	 ecx
  02576	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0257b	83 c4 18	 add	 esp, 24			; 00000018H

; 644  : 	return result;

  0257e	8b f4		 mov	 esi, esp
  02580	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  02583	52		 push	 edx
  02584	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  02587	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0258d	3b f4		 cmp	 esi, esp
  0258f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02594	8b 45 e0	 mov	 eax, DWORD PTR $T188618[ebp]
  02597	83 c8 01	 or	 eax, 1
  0259a	89 45 e0	 mov	 DWORD PTR $T188618[ebp], eax
  0259d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  025a4	8b f4		 mov	 esi, esp
  025a6	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  025a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  025af	3b f4		 cmp	 esi, esp
  025b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  025b6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 645  : }

  025b9	52		 push	 edx
  025ba	8b cd		 mov	 ecx, ebp
  025bc	50		 push	 eax
  025bd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188625
  025c3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  025c8	58		 pop	 eax
  025c9	5a		 pop	 edx
  025ca	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  025cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  025d4	5e		 pop	 esi
  025d5	83 c4 20	 add	 esp, 32			; 00000020H
  025d8	3b ec		 cmp	 ebp, esp
  025da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  025df	8b e5		 mov	 esp, ebp
  025e1	5d		 pop	 ebp
  025e2	c2 04 00	 ret	 4
$L188625:
  025e5	01 00 00 00	 DD	 1
  025e9	00 00 00 00	 DD	 $L188624
$L188624:
  025ed	e8 ff ff ff	 DD	 -24			; ffffffe8H
  025f1	04 00 00 00	 DD	 4
  025f5	00 00 00 00	 DD	 $L188622
$L188622:
  025f9	72		 DB	 114			; 00000072H
  025fa	65		 DB	 101			; 00000065H
  025fb	73		 DB	 115			; 00000073H
  025fc	75		 DB	 117			; 00000075H
  025fd	6c		 DB	 108			; 0000006cH
  025fe	74		 DB	 116			; 00000074H
  025ff	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188616:
  0019c	8b f4		 mov	 esi, esp
  0019e	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  001a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001a7	3b f4		 cmp	 esi, esp
  001a9	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetProfileAddress@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  001ae	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188621
  001b3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetProfileAddress@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetProfileAddress
PUBLIC	?SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z	; CShockwaveFlash::SetProfileAddress
;	COMDAT ?parms@?1??SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetProfileAddress'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetProfileAddress
; _this$ = ecx

; 648  : {

  02600	55		 push	 ebp
  02601	8b ec		 mov	 ebp, esp
  02603	51		 push	 ecx
  02604	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0260b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 649  : 	static BYTE parms[] =
; 650  : 		VTS_BSTR;
; 651  : 	InvokeHelper(0xc3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 652  : 		 lpszNewValue);

  0260e	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  02611	50		 push	 eax
  02612	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  02617	6a 00		 push	 0
  02619	6a 00		 push	 0
  0261b	6a 04		 push	 4
  0261d	68 c3 00 00 00	 push	 195			; 000000c3H
  02622	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02625	51		 push	 ecx
  02626	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0262b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 653  : }

  0262e	83 c4 04	 add	 esp, 4
  02631	3b ec		 cmp	 ebp, esp
  02633	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02638	8b e5		 mov	 esp, ebp
  0263a	5d		 pop	 ebp
  0263b	c2 04 00	 ret	 4
?SetProfileAddress@CShockwaveFlash@@QAEXPBD@Z ENDP	; CShockwaveFlash::SetProfileAddress
_TEXT	ENDS
PUBLIC	?GetProfilePort@CShockwaveFlash@@QAEJXZ		; CShockwaveFlash::GetProfilePort
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -12						; size = 4
_this$ = -4						; size = 4
?GetProfilePort@CShockwaveFlash@@QAEJXZ PROC NEAR	; CShockwaveFlash::GetProfilePort
; _this$ = ecx

; 656  : {

  02640	55		 push	 ebp
  02641	8b ec		 mov	 ebp, esp
  02643	83 ec 10	 sub	 esp, 16			; 00000010H
  02646	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0264b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0264e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  02651	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  02654	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  02657	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 657  : 	long result;
; 658  : 	InvokeHelper(0xc4, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);

  0265a	6a 00		 push	 0
  0265c	8d 45 f4	 lea	 eax, DWORD PTR _result$[ebp]
  0265f	50		 push	 eax
  02660	6a 03		 push	 3
  02662	6a 02		 push	 2
  02664	68 c4 00 00 00	 push	 196			; 000000c4H
  02669	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0266c	51		 push	 ecx
  0266d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  02672	83 c4 18	 add	 esp, 24			; 00000018H

; 659  : 	return result;

  02675	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 660  : }

  02678	52		 push	 edx
  02679	8b cd		 mov	 ecx, ebp
  0267b	50		 push	 eax
  0267c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188631
  02682	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  02687	58		 pop	 eax
  02688	5a		 pop	 edx
  02689	83 c4 10	 add	 esp, 16			; 00000010H
  0268c	3b ec		 cmp	 ebp, esp
  0268e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02693	8b e5		 mov	 esp, ebp
  02695	5d		 pop	 ebp
  02696	c3		 ret	 0
$L188631:
  02697	01 00 00 00	 DD	 1
  0269b	00 00 00 00	 DD	 $L188630
$L188630:
  0269f	f4 ff ff ff	 DD	 -12			; fffffff4H
  026a3	04 00 00 00	 DD	 4
  026a7	00 00 00 00	 DD	 $L188629
$L188629:
  026ab	72		 DB	 114			; 00000072H
  026ac	65		 DB	 101			; 00000065H
  026ad	73		 DB	 115			; 00000073H
  026ae	75		 DB	 117			; 00000075H
  026af	6c		 DB	 108			; 0000006cH
  026b0	74		 DB	 116			; 00000074H
  026b1	00		 DB	 0
?GetProfilePort@CShockwaveFlash@@QAEJXZ ENDP		; CShockwaveFlash::GetProfilePort
_TEXT	ENDS
PUBLIC	?SetProfilePort@CShockwaveFlash@@QAEXJ@Z	; CShockwaveFlash::SetProfilePort
;	COMDAT ?parms@?1??SetProfilePort@CShockwaveFlash@@QAEXJ@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetProfilePort@CShockwaveFlash@@QAEXJ@Z@4PAEA DB 03H, 00H ; `CShockwaveFlash::SetProfilePort'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNewValue$ = 8						; size = 4
?SetProfilePort@CShockwaveFlash@@QAEXJ@Z PROC NEAR	; CShockwaveFlash::SetProfilePort
; _this$ = ecx

; 663  : {

  026c0	55		 push	 ebp
  026c1	8b ec		 mov	 ebp, esp
  026c3	51		 push	 ecx
  026c4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  026cb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 664  : 	static BYTE parms[] =
; 665  : 		VTS_I4;
; 666  : 	InvokeHelper(0xc4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 667  : 		 nNewValue);

  026ce	8b 45 08	 mov	 eax, DWORD PTR _nNewValue$[ebp]
  026d1	50		 push	 eax
  026d2	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetProfilePort@CShockwaveFlash@@QAEXJ@Z@4PAEA
  026d7	6a 00		 push	 0
  026d9	6a 00		 push	 0
  026db	6a 04		 push	 4
  026dd	68 c4 00 00 00	 push	 196			; 000000c4H
  026e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  026e5	51		 push	 ecx
  026e6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  026eb	83 c4 1c	 add	 esp, 28			; 0000001cH

; 668  : }

  026ee	83 c4 04	 add	 esp, 4
  026f1	3b ec		 cmp	 ebp, esp
  026f3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  026f8	8b e5		 mov	 esp, ebp
  026fa	5d		 pop	 ebp
  026fb	c2 04 00	 ret	 4
?SetProfilePort@CShockwaveFlash@@QAEXJ@Z ENDP		; CShockwaveFlash::SetProfilePort
_TEXT	ENDS
PUBLIC	?CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CShockwaveFlash::CallFunction
xdata$x	SEGMENT
$T188644 DD	0ffffffffH
	DD	FLAT:$L188634
$T188639 DD	019930520H
	DD	01H
	DD	FLAT:$T188644
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?parms@?1??CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA DB 0eH
	DB	00H						; `CShockwaveFlash::CallFunction'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
$T188636 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_request$ = 12						; size = 4
?CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z PROC NEAR ; CShockwaveFlash::CallFunction
; _this$ = ecx

; 671  : {

  02700	55		 push	 ebp
  02701	8b ec		 mov	 ebp, esp
  02703	6a ff		 push	 -1
  02705	68 00 00 00 00	 push	 __ehhandler$?CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
  0270a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02710	50		 push	 eax
  02711	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02718	83 ec 14	 sub	 esp, 20			; 00000014H
  0271b	56		 push	 esi
  0271c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  02721	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  02724	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  02727	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0272a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0272d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  02730	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  02733	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188636[ebp], 0

; 672  : 	CString result;

  0273a	8b f4		 mov	 esi, esp
  0273c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0273f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02745	3b f4		 cmp	 esi, esp
  02747	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0274c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 673  : 	static BYTE parms[] =
; 674  : 		VTS_BSTR;
; 675  : 	InvokeHelper(0xc6, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
; 676  : 		request);

  02753	8b 45 0c	 mov	 eax, DWORD PTR _request$[ebp]
  02756	50		 push	 eax
  02757	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z@4PAEA
  0275c	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  0275f	51		 push	 ecx
  02760	6a 08		 push	 8
  02762	6a 01		 push	 1
  02764	68 c6 00 00 00	 push	 198			; 000000c6H
  02769	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0276c	52		 push	 edx
  0276d	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  02772	83 c4 1c	 add	 esp, 28			; 0000001cH

; 677  : 	return result;

  02775	8b f4		 mov	 esi, esp
  02777	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  0277a	50		 push	 eax
  0277b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0277e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  02784	3b f4		 cmp	 esi, esp
  02786	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0278b	8b 4d e0	 mov	 ecx, DWORD PTR $T188636[ebp]
  0278e	83 c9 01	 or	 ecx, 1
  02791	89 4d e0	 mov	 DWORD PTR $T188636[ebp], ecx
  02794	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0279b	8b f4		 mov	 esi, esp
  0279d	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  027a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  027a6	3b f4		 cmp	 esi, esp
  027a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  027ad	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 678  : }

  027b0	52		 push	 edx
  027b1	8b cd		 mov	 ecx, ebp
  027b3	50		 push	 eax
  027b4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188643
  027ba	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  027bf	58		 pop	 eax
  027c0	5a		 pop	 edx
  027c1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  027c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  027cb	5e		 pop	 esi
  027cc	83 c4 20	 add	 esp, 32			; 00000020H
  027cf	3b ec		 cmp	 ebp, esp
  027d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  027d6	8b e5		 mov	 esp, ebp
  027d8	5d		 pop	 ebp
  027d9	c2 08 00	 ret	 8
$L188643:
  027dc	01 00 00 00	 DD	 1
  027e0	00 00 00 00	 DD	 $L188642
$L188642:
  027e4	e8 ff ff ff	 DD	 -24			; ffffffe8H
  027e8	04 00 00 00	 DD	 4
  027ec	00 00 00 00	 DD	 $L188640
$L188640:
  027f0	72		 DB	 114			; 00000072H
  027f1	65		 DB	 101			; 00000065H
  027f2	73		 DB	 115			; 00000073H
  027f3	75		 DB	 117			; 00000075H
  027f4	6c		 DB	 108			; 0000006cH
  027f5	74		 DB	 116			; 00000074H
  027f6	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188634:
  001b8	8b f4		 mov	 esi, esp
  001ba	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  001bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001c3	3b f4		 cmp	 esi, esp
  001c5	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z:
  001ca	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188639
  001cf	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallFunction@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ENDP ; CShockwaveFlash::CallFunction
PUBLIC	?SetReturnValue@CShockwaveFlash@@QAEXPBD@Z	; CShockwaveFlash::SetReturnValue
;	COMDAT ?parms@?1??SetReturnValue@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetReturnValue@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetReturnValue'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_returnValue$ = 8					; size = 4
?SetReturnValue@CShockwaveFlash@@QAEXPBD@Z PROC NEAR	; CShockwaveFlash::SetReturnValue
; _this$ = ecx

; 681  : {

  02800	55		 push	 ebp
  02801	8b ec		 mov	 ebp, esp
  02803	51		 push	 ecx
  02804	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0280b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 682  : 	static BYTE parms[] =
; 683  : 		VTS_BSTR;
; 684  : 	InvokeHelper(0xc7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
; 685  : 		 returnValue);

  0280e	8b 45 08	 mov	 eax, DWORD PTR _returnValue$[ebp]
  02811	50		 push	 eax
  02812	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetReturnValue@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  02817	6a 00		 push	 0
  02819	6a 00		 push	 0
  0281b	6a 01		 push	 1
  0281d	68 c7 00 00 00	 push	 199			; 000000c7H
  02822	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02825	51		 push	 ecx
  02826	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0282b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 686  : }

  0282e	83 c4 04	 add	 esp, 4
  02831	3b ec		 cmp	 ebp, esp
  02833	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02838	8b e5		 mov	 esp, ebp
  0283a	5d		 pop	 ebp
  0283b	c2 04 00	 ret	 4
?SetReturnValue@CShockwaveFlash@@QAEXPBD@Z ENDP		; CShockwaveFlash::SetReturnValue
_TEXT	ENDS
PUBLIC	?DisableLocalSecurity@CShockwaveFlash@@QAEXXZ	; CShockwaveFlash::DisableLocalSecurity
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DisableLocalSecurity@CShockwaveFlash@@QAEXXZ PROC NEAR	; CShockwaveFlash::DisableLocalSecurity
; _this$ = ecx

; 689  : {

  02840	55		 push	 ebp
  02841	8b ec		 mov	 ebp, esp
  02843	51		 push	 ecx
  02844	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0284b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 690  : 	InvokeHelper(0xc8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);

  0284e	6a 00		 push	 0
  02850	6a 00		 push	 0
  02852	6a 00		 push	 0
  02854	6a 01		 push	 1
  02856	68 c8 00 00 00	 push	 200			; 000000c8H
  0285b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0285e	50		 push	 eax
  0285f	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  02864	83 c4 18	 add	 esp, 24			; 00000018H

; 691  : }

  02867	83 c4 04	 add	 esp, 4
  0286a	3b ec		 cmp	 ebp, esp
  0286c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02871	8b e5		 mov	 esp, ebp
  02873	5d		 pop	 ebp
  02874	c3		 ret	 0
?DisableLocalSecurity@CShockwaveFlash@@QAEXXZ ENDP	; CShockwaveFlash::DisableLocalSecurity
_TEXT	ENDS
PUBLIC	?GetAllowNetworking@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CShockwaveFlash::GetAllowNetworking
xdata$x	SEGMENT
$T188658 DD	0ffffffffH
	DD	FLAT:$L188648
$T188653 DD	019930520H
	DD	01H
	DD	FLAT:$T188658
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188650 = -32						; size = 4
_result$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAllowNetworking@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CShockwaveFlash::GetAllowNetworking
; _this$ = ecx

; 694  : {

  02880	55		 push	 ebp
  02881	8b ec		 mov	 ebp, esp
  02883	6a ff		 push	 -1
  02885	68 00 00 00 00	 push	 __ehhandler$?GetAllowNetworking@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ
  0288a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02890	50		 push	 eax
  02891	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02898	83 ec 14	 sub	 esp, 20			; 00000014H
  0289b	56		 push	 esi
  0289c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  028a1	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  028a4	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  028a7	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  028aa	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  028ad	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  028b0	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  028b3	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T188650[ebp], 0

; 695  : 	CString result;

  028ba	8b f4		 mov	 esi, esp
  028bc	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  028bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  028c5	3b f4		 cmp	 esi, esp
  028c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  028cc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 696  : 	InvokeHelper(0xc9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);

  028d3	6a 00		 push	 0
  028d5	8d 45 e8	 lea	 eax, DWORD PTR _result$[ebp]
  028d8	50		 push	 eax
  028d9	6a 08		 push	 8
  028db	6a 02		 push	 2
  028dd	68 c9 00 00 00	 push	 201			; 000000c9H
  028e2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  028e5	51		 push	 ecx
  028e6	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  028eb	83 c4 18	 add	 esp, 24			; 00000018H

; 697  : 	return result;

  028ee	8b f4		 mov	 esi, esp
  028f0	8d 55 e8	 lea	 edx, DWORD PTR _result$[ebp]
  028f3	52		 push	 edx
  028f4	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  028f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  028fd	3b f4		 cmp	 esi, esp
  028ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02904	8b 45 e0	 mov	 eax, DWORD PTR $T188650[ebp]
  02907	83 c8 01	 or	 eax, 1
  0290a	89 45 e0	 mov	 DWORD PTR $T188650[ebp], eax
  0290d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02914	8b f4		 mov	 esi, esp
  02916	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  02919	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0291f	3b f4		 cmp	 esi, esp
  02921	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02926	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 698  : }

  02929	52		 push	 edx
  0292a	8b cd		 mov	 ecx, ebp
  0292c	50		 push	 eax
  0292d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188657
  02933	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  02938	58		 pop	 eax
  02939	5a		 pop	 edx
  0293a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0293d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02944	5e		 pop	 esi
  02945	83 c4 20	 add	 esp, 32			; 00000020H
  02948	3b ec		 cmp	 ebp, esp
  0294a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0294f	8b e5		 mov	 esp, ebp
  02951	5d		 pop	 ebp
  02952	c2 04 00	 ret	 4
$L188657:
  02955	01 00 00 00	 DD	 1
  02959	00 00 00 00	 DD	 $L188656
$L188656:
  0295d	e8 ff ff ff	 DD	 -24			; ffffffe8H
  02961	04 00 00 00	 DD	 4
  02965	00 00 00 00	 DD	 $L188654
$L188654:
  02969	72		 DB	 114			; 00000072H
  0296a	65		 DB	 101			; 00000065H
  0296b	73		 DB	 115			; 00000073H
  0296c	75		 DB	 117			; 00000075H
  0296d	6c		 DB	 108			; 0000006cH
  0296e	74		 DB	 116			; 00000074H
  0296f	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188648:
  001d4	8b f4		 mov	 esi, esp
  001d6	8d 4d e8	 lea	 ecx, DWORD PTR _result$[ebp]
  001d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001df	3b f4		 cmp	 esi, esp
  001e1	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetAllowNetworking@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:
  001e6	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188653
  001eb	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetAllowNetworking@CShockwaveFlash@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CShockwaveFlash::GetAllowNetworking
PUBLIC	?SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z	; CShockwaveFlash::SetAllowNetworking
;	COMDAT ?parms@?1??SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z@4PAEA
_DATA	SEGMENT
?parms@?1??SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z@4PAEA DB 0eH, 00H ; `CShockwaveFlash::SetAllowNetworking'::`2'::parms
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszNewValue$ = 8					; size = 4
?SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z PROC NEAR ; CShockwaveFlash::SetAllowNetworking
; _this$ = ecx

; 701  : {

  02970	55		 push	 ebp
  02971	8b ec		 mov	 ebp, esp
  02973	51		 push	 ecx
  02974	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0297b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 702  : 	static BYTE parms[] =
; 703  : 		VTS_BSTR;
; 704  : 	InvokeHelper(0xc9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
; 705  : 		 lpszNewValue);

  0297e	8b 45 08	 mov	 eax, DWORD PTR _lpszNewValue$[ebp]
  02981	50		 push	 eax
  02982	68 00 00 00 00	 push	 OFFSET FLAT:?parms@?1??SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z@4PAEA
  02987	6a 00		 push	 0
  02989	6a 00		 push	 0
  0298b	6a 04		 push	 4
  0298d	68 c9 00 00 00	 push	 201			; 000000c9H
  02992	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02995	51		 push	 ecx
  02996	e8 00 00 00 00	 call	 ?InvokeHelper@CWnd@@QAAXJGGPAXPBEZZ ; CWnd::InvokeHelper
  0299b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 706  : }

  0299e	83 c4 04	 add	 esp, 4
  029a1	3b ec		 cmp	 ebp, esp
  029a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  029a8	8b e5		 mov	 esp, ebp
  029aa	5d		 pop	 ebp
  029ab	c2 04 00	 ret	 4
?SetAllowNetworking@CShockwaveFlash@@QAEXPBD@Z ENDP	; CShockwaveFlash::SetAllowNetworking
_TEXT	ENDS
END
