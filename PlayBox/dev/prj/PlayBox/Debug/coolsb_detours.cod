; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\Gui\CommonControl\SkinScroll\coolsb_detours.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_Detour_EnableScrollBar@12
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
;	COMDAT rtc$IMZ
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\gui\commoncontrol\skinscroll\coolsb_detours.c
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCsu
rtc$TMZ	ENDS
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_wSBflags$ = 12						; size = 4
_wArrows$ = 16						; size = 4
_Detour_EnableScrollBar@12 PROC NEAR

; 11   : DETOUR_TRAMPOLINE(BOOL WINAPI Detour_EnableScrollBar(HWND hwnd, int wSBflags, UINT wArrows), EnableScrollBar);

  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	e8 00 00 00 00	 call	 @_Detours_GetVA_EnableScrollBar@0
  00007	ff e0		 jmp	 eax
  00009	c3		 ret	 0
  0000a	90		 npad	 1
  0000b	90		 npad	 1
  0000c	90		 npad	 1
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	90		 npad	 1
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	90		 npad	 1
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	90		 npad	 1
  0001b	90		 npad	 1
  0001c	90		 npad	 1
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	90		 npad	 1
_Detour_EnableScrollBar@12 ENDP
_TEXT	ENDS
EXTRN	__imp__EnableScrollBar@12:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
@_Detours_GetVA_EnableScrollBar@0 PROC NEAR

; 11   : DETOUR_TRAMPOLINE(BOOL WINAPI Detour_EnableScrollBar(HWND hwnd, int wSBflags, UINT wArrows), EnableScrollBar);

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__EnableScrollBar@12
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
@_Detours_GetVA_EnableScrollBar@0 ENDP
_TEXT	ENDS
PUBLIC	_Detour_GetScrollInfo@12
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_fnBar$ = 12						; size = 4
_lpsi$ = 16						; size = 4
_Detour_GetScrollInfo@12 PROC NEAR

; 12   : DETOUR_TRAMPOLINE(BOOL WINAPI Detour_GetScrollInfo	(HWND hwnd, int fnBar, LPSCROLLINFO lpsi), GetScrollInfo);

  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	e8 00 00 00 00	 call	 @_Detours_GetVA_GetScrollInfo@0
  00037	ff e0		 jmp	 eax
  00039	c3		 ret	 0
  0003a	90		 npad	 1
  0003b	90		 npad	 1
  0003c	90		 npad	 1
  0003d	90		 npad	 1
  0003e	90		 npad	 1
  0003f	90		 npad	 1
  00040	90		 npad	 1
  00041	90		 npad	 1
  00042	90		 npad	 1
  00043	90		 npad	 1
  00044	90		 npad	 1
  00045	90		 npad	 1
  00046	90		 npad	 1
  00047	90		 npad	 1
  00048	90		 npad	 1
  00049	90		 npad	 1
  0004a	90		 npad	 1
  0004b	90		 npad	 1
  0004c	90		 npad	 1
  0004d	90		 npad	 1
  0004e	90		 npad	 1
  0004f	90		 npad	 1
_Detour_GetScrollInfo@12 ENDP
_TEXT	ENDS
EXTRN	__imp__GetScrollInfo@12:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
@_Detours_GetVA_GetScrollInfo@0 PROC NEAR

; 12   : DETOUR_TRAMPOLINE(BOOL WINAPI Detour_GetScrollInfo	(HWND hwnd, int fnBar, LPSCROLLINFO lpsi), GetScrollInfo);

  00050	55		 push	 ebp
  00051	8b ec		 mov	 ebp, esp
  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__GetScrollInfo@12
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
@_Detours_GetVA_GetScrollInfo@0 ENDP
_TEXT	ENDS
PUBLIC	_Detour_GetScrollPos@8
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_nBar$ = 12						; size = 4
_Detour_GetScrollPos@8 PROC NEAR

; 13   : DETOUR_TRAMPOLINE(int  WINAPI Detour_GetScrollPos	(HWND hwnd, int nBar), GetScrollPos);

  00060	90		 npad	 1
  00061	90		 npad	 1
  00062	e8 00 00 00 00	 call	 @_Detours_GetVA_GetScrollPos@0
  00067	ff e0		 jmp	 eax
  00069	c3		 ret	 0
  0006a	90		 npad	 1
  0006b	90		 npad	 1
  0006c	90		 npad	 1
  0006d	90		 npad	 1
  0006e	90		 npad	 1
  0006f	90		 npad	 1
  00070	90		 npad	 1
  00071	90		 npad	 1
  00072	90		 npad	 1
  00073	90		 npad	 1
  00074	90		 npad	 1
  00075	90		 npad	 1
  00076	90		 npad	 1
  00077	90		 npad	 1
  00078	90		 npad	 1
  00079	90		 npad	 1
  0007a	90		 npad	 1
  0007b	90		 npad	 1
  0007c	90		 npad	 1
  0007d	90		 npad	 1
  0007e	90		 npad	 1
  0007f	90		 npad	 1
_Detour_GetScrollPos@8 ENDP
_TEXT	ENDS
EXTRN	__imp__GetScrollPos@8:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
@_Detours_GetVA_GetScrollPos@0 PROC NEAR

; 13   : DETOUR_TRAMPOLINE(int  WINAPI Detour_GetScrollPos	(HWND hwnd, int nBar), GetScrollPos);

  00080	55		 push	 ebp
  00081	8b ec		 mov	 ebp, esp
  00083	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__GetScrollPos@8
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
@_Detours_GetVA_GetScrollPos@0 ENDP
_TEXT	ENDS
PUBLIC	_Detour_GetScrollRange@16
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_nBar$ = 12						; size = 4
_lpMinPos$ = 16						; size = 4
_lpMaxPos$ = 20						; size = 4
_Detour_GetScrollRange@16 PROC NEAR

; 14   : DETOUR_TRAMPOLINE(BOOL WINAPI Detour_GetScrollRange	(HWND hwnd, int nBar, LPINT lpMinPos, LPINT lpMaxPos), GetScrollRange);

  00090	90		 npad	 1
  00091	90		 npad	 1
  00092	e8 00 00 00 00	 call	 @_Detours_GetVA_GetScrollRange@0
  00097	ff e0		 jmp	 eax
  00099	c3		 ret	 0
  0009a	90		 npad	 1
  0009b	90		 npad	 1
  0009c	90		 npad	 1
  0009d	90		 npad	 1
  0009e	90		 npad	 1
  0009f	90		 npad	 1
  000a0	90		 npad	 1
  000a1	90		 npad	 1
  000a2	90		 npad	 1
  000a3	90		 npad	 1
  000a4	90		 npad	 1
  000a5	90		 npad	 1
  000a6	90		 npad	 1
  000a7	90		 npad	 1
  000a8	90		 npad	 1
  000a9	90		 npad	 1
  000aa	90		 npad	 1
  000ab	90		 npad	 1
  000ac	90		 npad	 1
  000ad	90		 npad	 1
  000ae	90		 npad	 1
  000af	90		 npad	 1
_Detour_GetScrollRange@16 ENDP
_TEXT	ENDS
EXTRN	__imp__GetScrollRange@16:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
@_Detours_GetVA_GetScrollRange@0 PROC NEAR

; 14   : DETOUR_TRAMPOLINE(BOOL WINAPI Detour_GetScrollRange	(HWND hwnd, int nBar, LPINT lpMinPos, LPINT lpMaxPos), GetScrollRange);

  000b0	55		 push	 ebp
  000b1	8b ec		 mov	 ebp, esp
  000b3	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__GetScrollRange@16
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
@_Detours_GetVA_GetScrollRange@0 ENDP
_TEXT	ENDS
PUBLIC	_Detour_SetScrollInfo@16
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_fnBar$ = 12						; size = 4
_lpsi$ = 16						; size = 4
_fRedraw$ = 20						; size = 4
_Detour_SetScrollInfo@16 PROC NEAR

; 15   : DETOUR_TRAMPOLINE(int  WINAPI Detour_SetScrollInfo	(HWND hwnd, int fnBar, LPSCROLLINFO lpsi, BOOL fRedraw), SetScrollInfo);

  000c0	90		 npad	 1
  000c1	90		 npad	 1
  000c2	e8 00 00 00 00	 call	 @_Detours_GetVA_SetScrollInfo@0
  000c7	ff e0		 jmp	 eax
  000c9	c3		 ret	 0
  000ca	90		 npad	 1
  000cb	90		 npad	 1
  000cc	90		 npad	 1
  000cd	90		 npad	 1
  000ce	90		 npad	 1
  000cf	90		 npad	 1
  000d0	90		 npad	 1
  000d1	90		 npad	 1
  000d2	90		 npad	 1
  000d3	90		 npad	 1
  000d4	90		 npad	 1
  000d5	90		 npad	 1
  000d6	90		 npad	 1
  000d7	90		 npad	 1
  000d8	90		 npad	 1
  000d9	90		 npad	 1
  000da	90		 npad	 1
  000db	90		 npad	 1
  000dc	90		 npad	 1
  000dd	90		 npad	 1
  000de	90		 npad	 1
  000df	90		 npad	 1
_Detour_SetScrollInfo@16 ENDP
_TEXT	ENDS
EXTRN	__imp__SetScrollInfo@16:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
@_Detours_GetVA_SetScrollInfo@0 PROC NEAR

; 15   : DETOUR_TRAMPOLINE(int  WINAPI Detour_SetScrollInfo	(HWND hwnd, int fnBar, LPSCROLLINFO lpsi, BOOL fRedraw), SetScrollInfo);

  000e0	55		 push	 ebp
  000e1	8b ec		 mov	 ebp, esp
  000e3	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__SetScrollInfo@16
  000e8	5d		 pop	 ebp
  000e9	c3		 ret	 0
@_Detours_GetVA_SetScrollInfo@0 ENDP
_TEXT	ENDS
PUBLIC	_Detour_SetScrollPos@16
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_nBar$ = 12						; size = 4
_nPos$ = 16						; size = 4
_fRedraw$ = 20						; size = 4
_Detour_SetScrollPos@16 PROC NEAR

; 16   : DETOUR_TRAMPOLINE(int  WINAPI Detour_SetScrollPos	(HWND hwnd, int nBar, int nPos, BOOL fRedraw), SetScrollPos);

  000f0	90		 npad	 1
  000f1	90		 npad	 1
  000f2	e8 00 00 00 00	 call	 @_Detours_GetVA_SetScrollPos@0
  000f7	ff e0		 jmp	 eax
  000f9	c3		 ret	 0
  000fa	90		 npad	 1
  000fb	90		 npad	 1
  000fc	90		 npad	 1
  000fd	90		 npad	 1
  000fe	90		 npad	 1
  000ff	90		 npad	 1
  00100	90		 npad	 1
  00101	90		 npad	 1
  00102	90		 npad	 1
  00103	90		 npad	 1
  00104	90		 npad	 1
  00105	90		 npad	 1
  00106	90		 npad	 1
  00107	90		 npad	 1
  00108	90		 npad	 1
  00109	90		 npad	 1
  0010a	90		 npad	 1
  0010b	90		 npad	 1
  0010c	90		 npad	 1
  0010d	90		 npad	 1
  0010e	90		 npad	 1
  0010f	90		 npad	 1
_Detour_SetScrollPos@16 ENDP
_TEXT	ENDS
EXTRN	__imp__SetScrollPos@16:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
@_Detours_GetVA_SetScrollPos@0 PROC NEAR

; 16   : DETOUR_TRAMPOLINE(int  WINAPI Detour_SetScrollPos	(HWND hwnd, int nBar, int nPos, BOOL fRedraw), SetScrollPos);

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__SetScrollPos@16
  00118	5d		 pop	 ebp
  00119	c3		 ret	 0
@_Detours_GetVA_SetScrollPos@0 ENDP
_TEXT	ENDS
PUBLIC	_Detour_SetScrollRange@20
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_nBar$ = 12						; size = 4
_nMinPos$ = 16						; size = 4
_nMaxPos$ = 20						; size = 4
_fRedraw$ = 24						; size = 4
_Detour_SetScrollRange@20 PROC NEAR

; 17   : DETOUR_TRAMPOLINE(int  WINAPI Detour_SetScrollRange	(HWND hwnd, int nBar, int nMinPos, int nMaxPos, BOOL fRedraw), SetScrollRange);

  00120	90		 npad	 1
  00121	90		 npad	 1
  00122	e8 00 00 00 00	 call	 @_Detours_GetVA_SetScrollRange@0
  00127	ff e0		 jmp	 eax
  00129	c3		 ret	 0
  0012a	90		 npad	 1
  0012b	90		 npad	 1
  0012c	90		 npad	 1
  0012d	90		 npad	 1
  0012e	90		 npad	 1
  0012f	90		 npad	 1
  00130	90		 npad	 1
  00131	90		 npad	 1
  00132	90		 npad	 1
  00133	90		 npad	 1
  00134	90		 npad	 1
  00135	90		 npad	 1
  00136	90		 npad	 1
  00137	90		 npad	 1
  00138	90		 npad	 1
  00139	90		 npad	 1
  0013a	90		 npad	 1
  0013b	90		 npad	 1
  0013c	90		 npad	 1
  0013d	90		 npad	 1
  0013e	90		 npad	 1
  0013f	90		 npad	 1
_Detour_SetScrollRange@20 ENDP
_TEXT	ENDS
EXTRN	__imp__SetScrollRange@20:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
@_Detours_GetVA_SetScrollRange@0 PROC NEAR

; 17   : DETOUR_TRAMPOLINE(int  WINAPI Detour_SetScrollRange	(HWND hwnd, int nBar, int nMinPos, int nMaxPos, BOOL fRedraw), SetScrollRange);

  00140	55		 push	 ebp
  00141	8b ec		 mov	 ebp, esp
  00143	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__SetScrollRange@20
  00148	5d		 pop	 ebp
  00149	c3		 ret	 0
@_Detours_GetVA_SetScrollRange@0 ENDP
_TEXT	ENDS
PUBLIC	_Detour_ShowScrollBar@12
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_wBar$ = 12						; size = 4
_fShow$ = 16						; size = 4
_Detour_ShowScrollBar@12 PROC NEAR

; 18   : DETOUR_TRAMPOLINE(BOOL WINAPI Detour_ShowScrollBar	(HWND hwnd, int wBar, BOOL fShow), ShowScrollBar);

  00150	90		 npad	 1
  00151	90		 npad	 1
  00152	e8 00 00 00 00	 call	 @_Detours_GetVA_ShowScrollBar@0
  00157	ff e0		 jmp	 eax
  00159	c3		 ret	 0
  0015a	90		 npad	 1
  0015b	90		 npad	 1
  0015c	90		 npad	 1
  0015d	90		 npad	 1
  0015e	90		 npad	 1
  0015f	90		 npad	 1
  00160	90		 npad	 1
  00161	90		 npad	 1
  00162	90		 npad	 1
  00163	90		 npad	 1
  00164	90		 npad	 1
  00165	90		 npad	 1
  00166	90		 npad	 1
  00167	90		 npad	 1
  00168	90		 npad	 1
  00169	90		 npad	 1
  0016a	90		 npad	 1
  0016b	90		 npad	 1
  0016c	90		 npad	 1
  0016d	90		 npad	 1
  0016e	90		 npad	 1
  0016f	90		 npad	 1
_Detour_ShowScrollBar@12 ENDP
_TEXT	ENDS
EXTRN	__imp__ShowScrollBar@12:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
@_Detours_GetVA_ShowScrollBar@0 PROC NEAR

; 18   : DETOUR_TRAMPOLINE(BOOL WINAPI Detour_ShowScrollBar	(HWND hwnd, int wBar, BOOL fShow), ShowScrollBar);

  00170	55		 push	 ebp
  00171	8b ec		 mov	 ebp, esp
  00173	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__ShowScrollBar@12
  00178	5d		 pop	 ebp
  00179	c3		 ret	 0
@_Detours_GetVA_ShowScrollBar@0 ENDP
_TEXT	ENDS
PUBLIC	_CoolSB_InitializeApp@0
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	_CoolSB_SetESBProc@4:NEAR
EXTRN	__imp__GetVersion@0:NEAR
EXTRN	_DetourFunctionWithTrampoline@8:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_dwVersion$ = -4					; size = 4
_CoolSB_InitializeApp@0 PROC NEAR

; 85   : {

  00180	55		 push	 ebp
  00181	8b ec		 mov	 ebp, esp
  00183	51		 push	 ecx
  00184	56		 push	 esi
  00185	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 86   : 	DWORD dwVersion = GetVersion();

  0018c	8b f4		 mov	 esi, esp
  0018e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersion@0
  00194	3b f4		 cmp	 esi, esp
  00196	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019b	89 45 fc	 mov	 DWORD PTR _dwVersion$[ebp], eax

; 87   : 
; 88   : 	// Only available under Windows NT, 2000 and XP
; 89   : 	if(dwVersion < 0x80000000)

  0019e	81 7d fc 00 00
	00 80		 cmp	 DWORD PTR _dwVersion$[ebp], -2147483648 ; 80000000H
  001a5	0f 83 89 00 00
	00		 jae	 $L75007

; 90   : 	{
; 91   : 		DetourFunctionWithTrampoline((PBYTE)Detour_EnableScrollBar, (PBYTE)Tramp_EnableScrollBar);

  001ab	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_EnableScrollBar@12
  001b0	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_EnableScrollBar@12
  001b5	e8 00 00 00 00	 call	 _DetourFunctionWithTrampoline@8

; 92   : 		DetourFunctionWithTrampoline((PBYTE)Detour_GetScrollInfo,   (PBYTE)Tramp_GetScrollInfo);

  001ba	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_GetScrollInfo@12
  001bf	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_GetScrollInfo@12
  001c4	e8 00 00 00 00	 call	 _DetourFunctionWithTrampoline@8

; 93   : 		DetourFunctionWithTrampoline((PBYTE)Detour_GetScrollPos,    (PBYTE)Tramp_GetScrollPos);

  001c9	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_GetScrollPos@8
  001ce	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_GetScrollPos@8
  001d3	e8 00 00 00 00	 call	 _DetourFunctionWithTrampoline@8

; 94   : 		DetourFunctionWithTrampoline((PBYTE)Detour_GetScrollRange,  (PBYTE)Tramp_GetScrollRange);

  001d8	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_GetScrollRange@16
  001dd	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_GetScrollRange@16
  001e2	e8 00 00 00 00	 call	 _DetourFunctionWithTrampoline@8

; 95   : 		DetourFunctionWithTrampoline((PBYTE)Detour_SetScrollInfo,   (PBYTE)Tramp_SetScrollInfo);

  001e7	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_SetScrollInfo@16
  001ec	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_SetScrollInfo@16
  001f1	e8 00 00 00 00	 call	 _DetourFunctionWithTrampoline@8

; 96   : 		DetourFunctionWithTrampoline((PBYTE)Detour_SetScrollPos,    (PBYTE)Tramp_SetScrollPos);

  001f6	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_SetScrollPos@16
  001fb	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_SetScrollPos@16
  00200	e8 00 00 00 00	 call	 _DetourFunctionWithTrampoline@8

; 97   : 		DetourFunctionWithTrampoline((PBYTE)Detour_SetScrollRange,  (PBYTE)Tramp_SetScrollRange);

  00205	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_SetScrollRange@20
  0020a	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_SetScrollRange@20
  0020f	e8 00 00 00 00	 call	 _DetourFunctionWithTrampoline@8

; 98   : 		DetourFunctionWithTrampoline((PBYTE)Detour_ShowScrollBar,   (PBYTE)Tramp_ShowScrollBar);

  00214	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_ShowScrollBar@12
  00219	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_ShowScrollBar@12
  0021e	e8 00 00 00 00	 call	 _DetourFunctionWithTrampoline@8

; 99   : 
; 100  : 		// don't actually use this feature within coolsb yet, but we might need it
; 101  : 		CoolSB_SetESBProc(Detour_EnableScrollBar);

  00223	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_EnableScrollBar@12
  00228	e8 00 00 00 00	 call	 _CoolSB_SetESBProc@4

; 102  : 
; 103  : 		return TRUE;

  0022d	b8 01 00 00 00	 mov	 eax, 1
  00232	eb 02		 jmp	 SHORT $L75005
$L75007:

; 104  : 	}
; 105  : 	else
; 106  : 	{
; 107  : 		return FALSE;

  00234	33 c0		 xor	 eax, eax
$L75005:

; 108  : 	}	
; 109  : }

  00236	5e		 pop	 esi
  00237	83 c4 04	 add	 esp, 4
  0023a	3b ec		 cmp	 ebp, esp
  0023c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00241	8b e5		 mov	 esp, ebp
  00243	5d		 pop	 ebp
  00244	c3		 ret	 0
_CoolSB_InitializeApp@0 ENDP
_TEXT	ENDS
EXTRN	_CoolSB_IsCoolScrollEnabled@4:NEAR
EXTRN	_CoolSB_EnableScrollBar@12:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_wSBflags$ = 12						; size = 4
_wArrows$ = 16						; size = 4
_Tramp_EnableScrollBar@12 PROC NEAR

; 21   : {

  00250	55		 push	 ebp
  00251	8b ec		 mov	 ebp, esp

; 22   : 	if(CoolSB_IsCoolScrollEnabled(hwnd))	

  00253	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00256	50		 push	 eax
  00257	e8 00 00 00 00	 call	 _CoolSB_IsCoolScrollEnabled@4
  0025c	85 c0		 test	 eax, eax
  0025e	74 13		 je	 SHORT $L74924

; 23   : 		return CoolSB_EnableScrollBar(hwnd, wSBflags, wArrows);

  00260	8b 4d 10	 mov	 ecx, DWORD PTR _wArrows$[ebp]
  00263	51		 push	 ecx
  00264	8b 55 0c	 mov	 edx, DWORD PTR _wSBflags$[ebp]
  00267	52		 push	 edx
  00268	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 _CoolSB_EnableScrollBar@12
  00271	eb 11		 jmp	 SHORT $L74923
$L74924:

; 24   : 	else
; 25   : 		return Detour_EnableScrollBar(hwnd, wSBflags, wArrows);

  00273	8b 4d 10	 mov	 ecx, DWORD PTR _wArrows$[ebp]
  00276	51		 push	 ecx
  00277	8b 55 0c	 mov	 edx, DWORD PTR _wSBflags$[ebp]
  0027a	52		 push	 edx
  0027b	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0027e	50		 push	 eax
  0027f	e8 00 00 00 00	 call	 _Detour_EnableScrollBar@12
$L74923:

; 26   : }

  00284	3b ec		 cmp	 ebp, esp
  00286	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0028b	5d		 pop	 ebp
  0028c	c2 0c 00	 ret	 12			; 0000000cH
_Tramp_EnableScrollBar@12 ENDP
_TEXT	ENDS
EXTRN	_CoolSB_GetScrollInfo@12:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_fnBar$ = 12						; size = 4
_lpsi$ = 16						; size = 4
_Tramp_GetScrollInfo@12 PROC NEAR

; 29   : {

  00290	55		 push	 ebp
  00291	8b ec		 mov	 ebp, esp

; 30   : 	if(CoolSB_IsCoolScrollEnabled(hwnd))	

  00293	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00296	50		 push	 eax
  00297	e8 00 00 00 00	 call	 _CoolSB_IsCoolScrollEnabled@4
  0029c	85 c0		 test	 eax, eax
  0029e	74 13		 je	 SHORT $L74934

; 31   : 		return CoolSB_GetScrollInfo(hwnd, fnBar, lpsi);

  002a0	8b 4d 10	 mov	 ecx, DWORD PTR _lpsi$[ebp]
  002a3	51		 push	 ecx
  002a4	8b 55 0c	 mov	 edx, DWORD PTR _fnBar$[ebp]
  002a7	52		 push	 edx
  002a8	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  002ab	50		 push	 eax
  002ac	e8 00 00 00 00	 call	 _CoolSB_GetScrollInfo@12
  002b1	eb 11		 jmp	 SHORT $L74933
$L74934:

; 32   : 	else
; 33   : 		return Detour_GetScrollInfo(hwnd, fnBar, lpsi);

  002b3	8b 4d 10	 mov	 ecx, DWORD PTR _lpsi$[ebp]
  002b6	51		 push	 ecx
  002b7	8b 55 0c	 mov	 edx, DWORD PTR _fnBar$[ebp]
  002ba	52		 push	 edx
  002bb	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  002be	50		 push	 eax
  002bf	e8 00 00 00 00	 call	 _Detour_GetScrollInfo@12
$L74933:

; 34   : }

  002c4	3b ec		 cmp	 ebp, esp
  002c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002cb	5d		 pop	 ebp
  002cc	c2 0c 00	 ret	 12			; 0000000cH
_Tramp_GetScrollInfo@12 ENDP
_TEXT	ENDS
EXTRN	_CoolSB_GetScrollPos@8:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_nBar$ = 12						; size = 4
_Tramp_GetScrollPos@8 PROC NEAR

; 37   : {

  002d0	55		 push	 ebp
  002d1	8b ec		 mov	 ebp, esp

; 38   : 	if(CoolSB_IsCoolScrollEnabled(hwnd))	

  002d3	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  002d6	50		 push	 eax
  002d7	e8 00 00 00 00	 call	 _CoolSB_IsCoolScrollEnabled@4
  002dc	85 c0		 test	 eax, eax
  002de	74 0f		 je	 SHORT $L74942

; 39   : 		return CoolSB_GetScrollPos(hwnd, nBar);

  002e0	8b 4d 0c	 mov	 ecx, DWORD PTR _nBar$[ebp]
  002e3	51		 push	 ecx
  002e4	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  002e7	52		 push	 edx
  002e8	e8 00 00 00 00	 call	 _CoolSB_GetScrollPos@8
  002ed	eb 0d		 jmp	 SHORT $L74941
$L74942:

; 40   : 	else
; 41   : 		return Detour_GetScrollPos(hwnd, nBar);

  002ef	8b 45 0c	 mov	 eax, DWORD PTR _nBar$[ebp]
  002f2	50		 push	 eax
  002f3	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  002f6	51		 push	 ecx
  002f7	e8 00 00 00 00	 call	 _Detour_GetScrollPos@8
$L74941:

; 42   : }

  002fc	3b ec		 cmp	 ebp, esp
  002fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00303	5d		 pop	 ebp
  00304	c2 08 00	 ret	 8
_Tramp_GetScrollPos@8 ENDP
_TEXT	ENDS
EXTRN	_CoolSB_GetScrollRange@16:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_nBar$ = 12						; size = 4
_lpMinPos$ = 16						; size = 4
_lpMaxPos$ = 20						; size = 4
_Tramp_GetScrollRange@16 PROC NEAR

; 45   : {

  00310	55		 push	 ebp
  00311	8b ec		 mov	 ebp, esp

; 46   : 	if(CoolSB_IsCoolScrollEnabled(hwnd))	

  00313	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00316	50		 push	 eax
  00317	e8 00 00 00 00	 call	 _CoolSB_IsCoolScrollEnabled@4
  0031c	85 c0		 test	 eax, eax
  0031e	74 17		 je	 SHORT $L74954

; 47   : 		return CoolSB_GetScrollRange(hwnd, nBar, lpMinPos, lpMaxPos);

  00320	8b 4d 14	 mov	 ecx, DWORD PTR _lpMaxPos$[ebp]
  00323	51		 push	 ecx
  00324	8b 55 10	 mov	 edx, DWORD PTR _lpMinPos$[ebp]
  00327	52		 push	 edx
  00328	8b 45 0c	 mov	 eax, DWORD PTR _nBar$[ebp]
  0032b	50		 push	 eax
  0032c	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0032f	51		 push	 ecx
  00330	e8 00 00 00 00	 call	 _CoolSB_GetScrollRange@16
  00335	eb 15		 jmp	 SHORT $L74953
$L74954:

; 48   : 	else
; 49   : 		return Detour_GetScrollRange(hwnd, nBar, lpMinPos, lpMaxPos);

  00337	8b 55 14	 mov	 edx, DWORD PTR _lpMaxPos$[ebp]
  0033a	52		 push	 edx
  0033b	8b 45 10	 mov	 eax, DWORD PTR _lpMinPos$[ebp]
  0033e	50		 push	 eax
  0033f	8b 4d 0c	 mov	 ecx, DWORD PTR _nBar$[ebp]
  00342	51		 push	 ecx
  00343	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00346	52		 push	 edx
  00347	e8 00 00 00 00	 call	 _Detour_GetScrollRange@16
$L74953:

; 50   : }

  0034c	3b ec		 cmp	 ebp, esp
  0034e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00353	5d		 pop	 ebp
  00354	c2 10 00	 ret	 16			; 00000010H
_Tramp_GetScrollRange@16 ENDP
_TEXT	ENDS
EXTRN	_CoolSB_SetScrollInfo@16:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_fnBar$ = 12						; size = 4
_lpsi$ = 16						; size = 4
_fRedraw$ = 20						; size = 4
_Tramp_SetScrollInfo@16 PROC NEAR

; 53   : {

  00360	55		 push	 ebp
  00361	8b ec		 mov	 ebp, esp

; 54   : 	if(CoolSB_IsCoolScrollEnabled(hwnd))	

  00363	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00366	50		 push	 eax
  00367	e8 00 00 00 00	 call	 _CoolSB_IsCoolScrollEnabled@4
  0036c	85 c0		 test	 eax, eax
  0036e	74 17		 je	 SHORT $L74966

; 55   : 		return CoolSB_SetScrollInfo(hwnd, fnBar, lpsi, fRedraw);

  00370	8b 4d 14	 mov	 ecx, DWORD PTR _fRedraw$[ebp]
  00373	51		 push	 ecx
  00374	8b 55 10	 mov	 edx, DWORD PTR _lpsi$[ebp]
  00377	52		 push	 edx
  00378	8b 45 0c	 mov	 eax, DWORD PTR _fnBar$[ebp]
  0037b	50		 push	 eax
  0037c	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0037f	51		 push	 ecx
  00380	e8 00 00 00 00	 call	 _CoolSB_SetScrollInfo@16
  00385	eb 15		 jmp	 SHORT $L74965
$L74966:

; 56   : 	else
; 57   : 		return Detour_SetScrollInfo(hwnd, fnBar, lpsi, fRedraw);

  00387	8b 55 14	 mov	 edx, DWORD PTR _fRedraw$[ebp]
  0038a	52		 push	 edx
  0038b	8b 45 10	 mov	 eax, DWORD PTR _lpsi$[ebp]
  0038e	50		 push	 eax
  0038f	8b 4d 0c	 mov	 ecx, DWORD PTR _fnBar$[ebp]
  00392	51		 push	 ecx
  00393	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00396	52		 push	 edx
  00397	e8 00 00 00 00	 call	 _Detour_SetScrollInfo@16
$L74965:

; 58   : }

  0039c	3b ec		 cmp	 ebp, esp
  0039e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003a3	5d		 pop	 ebp
  003a4	c2 10 00	 ret	 16			; 00000010H
_Tramp_SetScrollInfo@16 ENDP
_TEXT	ENDS
EXTRN	_CoolSB_SetScrollPos@16:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_nBar$ = 12						; size = 4
_nPos$ = 16						; size = 4
_fRedraw$ = 20						; size = 4
_Tramp_SetScrollPos@16 PROC NEAR

; 61   : {

  003b0	55		 push	 ebp
  003b1	8b ec		 mov	 ebp, esp

; 62   : 	if(CoolSB_IsCoolScrollEnabled(hwnd))	

  003b3	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  003b6	50		 push	 eax
  003b7	e8 00 00 00 00	 call	 _CoolSB_IsCoolScrollEnabled@4
  003bc	85 c0		 test	 eax, eax
  003be	74 17		 je	 SHORT $L74978

; 63   : 		return CoolSB_SetScrollPos(hwnd, nBar, nPos, fRedraw);

  003c0	8b 4d 14	 mov	 ecx, DWORD PTR _fRedraw$[ebp]
  003c3	51		 push	 ecx
  003c4	8b 55 10	 mov	 edx, DWORD PTR _nPos$[ebp]
  003c7	52		 push	 edx
  003c8	8b 45 0c	 mov	 eax, DWORD PTR _nBar$[ebp]
  003cb	50		 push	 eax
  003cc	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  003cf	51		 push	 ecx
  003d0	e8 00 00 00 00	 call	 _CoolSB_SetScrollPos@16
  003d5	eb 15		 jmp	 SHORT $L74977
$L74978:

; 64   : 	else
; 65   : 		return Detour_SetScrollPos(hwnd, nBar, nPos, fRedraw);

  003d7	8b 55 14	 mov	 edx, DWORD PTR _fRedraw$[ebp]
  003da	52		 push	 edx
  003db	8b 45 10	 mov	 eax, DWORD PTR _nPos$[ebp]
  003de	50		 push	 eax
  003df	8b 4d 0c	 mov	 ecx, DWORD PTR _nBar$[ebp]
  003e2	51		 push	 ecx
  003e3	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  003e6	52		 push	 edx
  003e7	e8 00 00 00 00	 call	 _Detour_SetScrollPos@16
$L74977:

; 66   : }

  003ec	3b ec		 cmp	 ebp, esp
  003ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003f3	5d		 pop	 ebp
  003f4	c2 10 00	 ret	 16			; 00000010H
_Tramp_SetScrollPos@16 ENDP
_TEXT	ENDS
EXTRN	_CoolSB_SetScrollRange@20:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_nBar$ = 12						; size = 4
_nMinPos$ = 16						; size = 4
_nMaxPos$ = 20						; size = 4
_fRedraw$ = 24						; size = 4
_Tramp_SetScrollRange@20 PROC NEAR

; 69   : {

  00400	55		 push	 ebp
  00401	8b ec		 mov	 ebp, esp

; 70   : 	if(CoolSB_IsCoolScrollEnabled(hwnd))	

  00403	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00406	50		 push	 eax
  00407	e8 00 00 00 00	 call	 _CoolSB_IsCoolScrollEnabled@4
  0040c	85 c0		 test	 eax, eax
  0040e	74 1b		 je	 SHORT $L74992

; 71   : 		return CoolSB_SetScrollRange(hwnd, nBar, nMinPos, nMaxPos, fRedraw);

  00410	8b 4d 18	 mov	 ecx, DWORD PTR _fRedraw$[ebp]
  00413	51		 push	 ecx
  00414	8b 55 14	 mov	 edx, DWORD PTR _nMaxPos$[ebp]
  00417	52		 push	 edx
  00418	8b 45 10	 mov	 eax, DWORD PTR _nMinPos$[ebp]
  0041b	50		 push	 eax
  0041c	8b 4d 0c	 mov	 ecx, DWORD PTR _nBar$[ebp]
  0041f	51		 push	 ecx
  00420	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00423	52		 push	 edx
  00424	e8 00 00 00 00	 call	 _CoolSB_SetScrollRange@20
  00429	eb 19		 jmp	 SHORT $L74991
$L74992:

; 72   : 	else
; 73   : 		return Detour_SetScrollRange(hwnd, nBar, nMinPos, nMaxPos, fRedraw);

  0042b	8b 45 18	 mov	 eax, DWORD PTR _fRedraw$[ebp]
  0042e	50		 push	 eax
  0042f	8b 4d 14	 mov	 ecx, DWORD PTR _nMaxPos$[ebp]
  00432	51		 push	 ecx
  00433	8b 55 10	 mov	 edx, DWORD PTR _nMinPos$[ebp]
  00436	52		 push	 edx
  00437	8b 45 0c	 mov	 eax, DWORD PTR _nBar$[ebp]
  0043a	50		 push	 eax
  0043b	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0043e	51		 push	 ecx
  0043f	e8 00 00 00 00	 call	 _Detour_SetScrollRange@20
$L74991:

; 74   : }

  00444	3b ec		 cmp	 ebp, esp
  00446	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0044b	5d		 pop	 ebp
  0044c	c2 14 00	 ret	 20			; 00000014H
_Tramp_SetScrollRange@20 ENDP
_TEXT	ENDS
EXTRN	_CoolSB_ShowScrollBar@12:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_wBar$ = 12						; size = 4
_fShow$ = 16						; size = 4
_Tramp_ShowScrollBar@12 PROC NEAR

; 77   : {

  00450	55		 push	 ebp
  00451	8b ec		 mov	 ebp, esp

; 78   : 	if(CoolSB_IsCoolScrollEnabled(hwnd))	

  00453	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00456	50		 push	 eax
  00457	e8 00 00 00 00	 call	 _CoolSB_IsCoolScrollEnabled@4
  0045c	85 c0		 test	 eax, eax
  0045e	74 13		 je	 SHORT $L75002

; 79   : 		return CoolSB_ShowScrollBar(hwnd, wBar, fShow);

  00460	8b 4d 10	 mov	 ecx, DWORD PTR _fShow$[ebp]
  00463	51		 push	 ecx
  00464	8b 55 0c	 mov	 edx, DWORD PTR _wBar$[ebp]
  00467	52		 push	 edx
  00468	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0046b	50		 push	 eax
  0046c	e8 00 00 00 00	 call	 _CoolSB_ShowScrollBar@12
  00471	eb 11		 jmp	 SHORT $L75001
$L75002:

; 80   : 	else
; 81   : 		return Detour_ShowScrollBar(hwnd, wBar, fShow);

  00473	8b 4d 10	 mov	 ecx, DWORD PTR _fShow$[ebp]
  00476	51		 push	 ecx
  00477	8b 55 0c	 mov	 edx, DWORD PTR _wBar$[ebp]
  0047a	52		 push	 edx
  0047b	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0047e	50		 push	 eax
  0047f	e8 00 00 00 00	 call	 _Detour_ShowScrollBar@12
$L75001:

; 82   : }

  00484	3b ec		 cmp	 ebp, esp
  00486	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0048b	5d		 pop	 ebp
  0048c	c2 0c 00	 ret	 12			; 0000000cH
_Tramp_ShowScrollBar@12 ENDP
_TEXT	ENDS
PUBLIC	_CoolSB_UninitializeApp@0
EXTRN	_DetourRemove@8:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_dwVersion$ = -4					; size = 4
_CoolSB_UninitializeApp@0 PROC NEAR

; 112  : {

  00490	55		 push	 ebp
  00491	8b ec		 mov	 ebp, esp
  00493	51		 push	 ecx
  00494	56		 push	 esi
  00495	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 113  : 	DWORD dwVersion = GetVersion();

  0049c	8b f4		 mov	 esi, esp
  0049e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersion@0
  004a4	3b f4		 cmp	 esi, esp
  004a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004ab	89 45 fc	 mov	 DWORD PTR _dwVersion$[ebp], eax

; 114  : 
; 115  : 	// Only available under Windows NT, 2000 and XP
; 116  : 	if(dwVersion < 0x80000000)

  004ae	81 7d fc 00 00
	00 80		 cmp	 DWORD PTR _dwVersion$[ebp], -2147483648 ; 80000000H
  004b5	0f 83 8a 00 00
	00		 jae	 $L75028

; 117  : 	{
; 118  : 		DetourRemove((PBYTE)Detour_EnableScrollBar, (PBYTE)Tramp_EnableScrollBar);

  004bb	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_EnableScrollBar@12
  004c0	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_EnableScrollBar@12
  004c5	e8 00 00 00 00	 call	 _DetourRemove@8

; 119  : 		DetourRemove((PBYTE)Detour_GetScrollInfo,   (PBYTE)Tramp_GetScrollInfo);

  004ca	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_GetScrollInfo@12
  004cf	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_GetScrollInfo@12
  004d4	e8 00 00 00 00	 call	 _DetourRemove@8

; 120  : 		DetourRemove((PBYTE)Detour_GetScrollPos,    (PBYTE)Tramp_GetScrollPos);

  004d9	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_GetScrollPos@8
  004de	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_GetScrollPos@8
  004e3	e8 00 00 00 00	 call	 _DetourRemove@8

; 121  : 		DetourRemove((PBYTE)Detour_GetScrollRange,  (PBYTE)Tramp_GetScrollRange);

  004e8	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_GetScrollRange@16
  004ed	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_GetScrollRange@16
  004f2	e8 00 00 00 00	 call	 _DetourRemove@8

; 122  : 		DetourRemove((PBYTE)Detour_SetScrollInfo,   (PBYTE)Tramp_SetScrollInfo);

  004f7	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_SetScrollInfo@16
  004fc	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_SetScrollInfo@16
  00501	e8 00 00 00 00	 call	 _DetourRemove@8

; 123  : 		DetourRemove((PBYTE)Detour_SetScrollPos,    (PBYTE)Tramp_SetScrollPos);

  00506	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_SetScrollPos@16
  0050b	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_SetScrollPos@16
  00510	e8 00 00 00 00	 call	 _DetourRemove@8

; 124  : 		DetourRemove((PBYTE)Detour_SetScrollRange,  (PBYTE)Tramp_SetScrollRange);

  00515	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_SetScrollRange@20
  0051a	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_SetScrollRange@20
  0051f	e8 00 00 00 00	 call	 _DetourRemove@8

; 125  : 		DetourRemove((PBYTE)Detour_ShowScrollBar,   (PBYTE)Tramp_ShowScrollBar);

  00524	68 00 00 00 00	 push	 OFFSET FLAT:_Tramp_ShowScrollBar@12
  00529	68 00 00 00 00	 push	 OFFSET FLAT:_Detour_ShowScrollBar@12
  0052e	e8 00 00 00 00	 call	 _DetourRemove@8

; 126  : 
; 127  : 		// don't actually use this feature within coolsb yet, but we might need it
; 128  : 		CoolSB_SetESBProc(EnableScrollBar);

  00533	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__EnableScrollBar@12
  00538	50		 push	 eax
  00539	e8 00 00 00 00	 call	 _CoolSB_SetESBProc@4

; 129  : 
; 130  : 		return TRUE;

  0053e	b8 01 00 00 00	 mov	 eax, 1
  00543	eb 02		 jmp	 SHORT $L75026
$L75028:

; 131  : 	}
; 132  : 	else
; 133  : 	{
; 134  : 		return FALSE;

  00545	33 c0		 xor	 eax, eax
$L75026:

; 135  : 	}
; 136  : }

  00547	5e		 pop	 esi
  00548	83 c4 04	 add	 esp, 4
  0054b	3b ec		 cmp	 ebp, esp
  0054d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00552	8b e5		 mov	 esp, ebp
  00554	5d		 pop	 ebp
  00555	c3		 ret	 0
_CoolSB_UninitializeApp@0 ENDP
_TEXT	ENDS
END
