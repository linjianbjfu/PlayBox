; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\AppConfig\config\Dlg\BaseDlg.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0EN@IBFBLEEG@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_C@_0EN@CBMLGOH@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FG@LDNDNCJM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_messageEntries@BaseDialog@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@BaseDialog@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B	; BaseDialog::classBaseDialog
PUBLIC	?_messageEntries@BaseDialog@@0QBUAFX_MSGMAP_ENTRY@@B ; BaseDialog::_messageEntries
PUBLIC	?messageMap@BaseDialog@@1UAFX_MSGMAP@@B		; BaseDialog::messageMap
EXTRN	?GetThisClass@CDialog@@SGPAUCRuntimeClass@@XZ:NEAR ; CDialog::GetThisClass
EXTRN	?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ:NEAR ; CDialog::GetThisMessageMap
CONST	SEGMENT
$SG187048 DB	'BaseDialog', 00H
CONST	ENDS
;	COMDAT ?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B
CONST	SEGMENT
?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B DD FLAT:$SG187048 ; BaseDialog::classBaseDialog
	DD	090H
	DD	0ffffH
	DD	00H
	DD	FLAT:?GetThisClass@CDialog@@SGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?_messageEntries@BaseDialog@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@BaseDialog@@0QBUAFX_MSGMAP_ENTRY@@B DD 00H ; BaseDialog::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@BaseDialog@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@BaseDialog@@1UAFX_MSGMAP@@B DD FLAT:?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ ; BaseDialog::messageMap
	DD	FLAT:?_messageEntries@BaseDialog@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
PUBLIC	?GetThisClass@BaseDialog@@SGPAUCRuntimeClass@@XZ ; BaseDialog::GetThisClass
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
;	COMDAT rtc$IMZ
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\appconfig\config\dlg\basedlg.cpp
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCsu
rtc$TMZ	ENDS
_TEXT	SEGMENT
?GetThisClass@BaseDialog@@SGPAUCRuntimeClass@@XZ PROC NEAR ; BaseDialog::GetThisClass

; 4    : IMPLEMENT_DYNAMIC(BaseDialog, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B ; BaseDialog::classBaseDialog
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetThisClass@BaseDialog@@SGPAUCRuntimeClass@@XZ ENDP	; BaseDialog::GetThisClass
_TEXT	ENDS
PUBLIC	?GetRuntimeClass@BaseDialog@@UBEPAUCRuntimeClass@@XZ ; BaseDialog::GetRuntimeClass
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRuntimeClass@BaseDialog@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; BaseDialog::GetRuntimeClass
; _this$ = ecx

; 4    : IMPLEMENT_DYNAMIC(BaseDialog, CDialog)

  00010	55		 push	 ebp
  00011	8b ec		 mov	 ebp, esp
  00013	51		 push	 ecx
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classBaseDialog@BaseDialog@@2UCRuntimeClass@@B ; BaseDialog::classBaseDialog
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?GetRuntimeClass@BaseDialog@@UBEPAUCRuntimeClass@@XZ ENDP ; BaseDialog::GetRuntimeClass
_TEXT	ENDS
PUBLIC	?GetThisMessageMap@BaseDialog@@KGPBUAFX_MSGMAP@@XZ ; BaseDialog::GetThisMessageMap
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
?GetThisMessageMap@BaseDialog@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; BaseDialog::GetThisMessageMap

; 6    : BEGIN_MESSAGE_MAP(BaseDialog, CDialog)

  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
  00033	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@BaseDialog@@1UAFX_MSGMAP@@B ; BaseDialog::messageMap
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?GetThisMessageMap@BaseDialog@@KGPBUAFX_MSGMAP@@XZ ENDP	; BaseDialog::GetThisMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@BaseDialog@@MBEPBUAFX_MSGMAP@@XZ	; BaseDialog::GetMessageMap
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@BaseDialog@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; BaseDialog::GetMessageMap
; _this$ = ecx

; 6    : BEGIN_MESSAGE_MAP(BaseDialog, CDialog)

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	51		 push	 ecx
  00044	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0004b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0004e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@BaseDialog@@1UAFX_MSGMAP@@B ; BaseDialog::messageMap
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
?GetMessageMap@BaseDialog@@MBEPBUAFX_MSGMAP@@XZ ENDP	; BaseDialog::GetMessageMap
_TEXT	ENDS
PUBLIC	?OnInitDialog@BaseDialog@@MAEHXZ		; BaseDialog::OnInitDialog
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:NEAR		; CDialog::OnInitDialog
EXTRN	?UpdateData@CWnd@@QAEHH@Z:NEAR			; CWnd::UpdateData
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInitDialog@BaseDialog@@MAEHXZ PROC NEAR		; BaseDialog::OnInitDialog
; _this$ = ecx

; 11   : {

  00060	55		 push	 ebp
  00061	8b ec		 mov	 ebp, esp
  00063	51		 push	 ecx
  00064	56		 push	 esi
  00065	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0006c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 12   : 	CDialog::OnInitDialog();

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 13   : 	LoadConf();

  00077	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 10		 mov	 edx, DWORD PTR [eax]
  0007c	8b f4		 mov	 esi, esp
  0007e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	ff 92 68 01 00
	00		 call	 DWORD PTR [edx+360]
  00087	3b f4		 cmp	 esi, esp
  00089	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 14   : 	UpdateData( FALSE );

  0008e	6a 00		 push	 0
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?UpdateData@CWnd@@QAEHH@Z ; CWnd::UpdateData

; 15   : 	return TRUE;

  00098	b8 01 00 00 00	 mov	 eax, 1

; 16   : }

  0009d	5e		 pop	 esi
  0009e	83 c4 04	 add	 esp, 4
  000a1	3b ec		 cmp	 ebp, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c3		 ret	 0
?OnInitDialog@BaseDialog@@MAEHXZ ENDP			; BaseDialog::OnInitDialog
_TEXT	ENDS
PUBLIC	?OnCancel@BaseDialog@@MAEXXZ			; BaseDialog::OnCancel
EXTRN	__imp__PostMessageA@16:NEAR
EXTRN	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ:NEAR	; CWnd::GetSafeHwnd
EXTRN	?GetParent@CWnd@@QBEPAV1@XZ:NEAR		; CWnd::GetParent
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_pWnd$ = -8						; size = 4
_this$ = -4						; size = 4
?OnCancel@BaseDialog@@MAEXXZ PROC NEAR			; BaseDialog::OnCancel
; _this$ = ecx

; 19   : {

  000b0	55		 push	 ebp
  000b1	8b ec		 mov	 ebp, esp
  000b3	83 ec 08	 sub	 esp, 8
  000b6	56		 push	 esi
  000b7	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  000be	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  000c5	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 20   : 	CWnd* pWnd = GetParent();

  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  000d0	89 45 f8	 mov	 DWORD PTR _pWnd$[ebp], eax

; 21   : 	if( pWnd != NULL )

  000d3	83 7d f8 00	 cmp	 DWORD PTR _pWnd$[ebp], 0
  000d7	74 21		 je	 SHORT $L187068

; 22   : 	{
; 23   : 		::PostMessage( pWnd->GetSafeHwnd(), WM_COMMAND, MAKELPARAM(IDCANCEL,BN_CLICKED), 0 );

  000d9	8b f4		 mov	 esi, esp
  000db	6a 00		 push	 0
  000dd	6a 02		 push	 2
  000df	68 11 01 00 00	 push	 273			; 00000111H
  000e4	8b 4d f8	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  000e7	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  000ec	50		 push	 eax
  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  000f3	3b f4		 cmp	 esi, esp
  000f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187068:

; 24   : 	}	
; 25   : }

  000fa	5e		 pop	 esi
  000fb	83 c4 08	 add	 esp, 8
  000fe	3b ec		 cmp	 ebp, esp
  00100	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c3		 ret	 0
?OnCancel@BaseDialog@@MAEXXZ ENDP			; BaseDialog::OnCancel
_TEXT	ENDS
PUBLIC	?OnOK@BaseDialog@@MAEXXZ			; BaseDialog::OnOK
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnOK@BaseDialog@@MAEXXZ PROC NEAR			; BaseDialog::OnOK
; _this$ = ecx

; 28   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	51		 push	 ecx
  00114	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0011b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 29   : }

  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c3		 ret	 0
?OnOK@BaseDialog@@MAEXXZ ENDP				; BaseDialog::OnOK
_TEXT	ENDS
PUBLIC	?OnCtlColor@BaseDialog@@IAEPAUHBRUSH__@@PAVCDC@@PAVCWnd@@I@Z ; BaseDialog::OnCtlColor
EXTRN	?OnCtlColor@CWnd@@IAEPAUHBRUSH__@@PAVCDC@@PAV1@I@Z:NEAR ; CWnd::OnCtlColor
EXTRN	__imp__CreateSolidBrush@4:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_hbr$ = -8						; size = 4
_this$ = -4						; size = 4
_pDC$ = 8						; size = 4
_pWnd$ = 12						; size = 4
_nCtlColor$ = 16					; size = 4
?OnCtlColor@BaseDialog@@IAEPAUHBRUSH__@@PAVCDC@@PAVCWnd@@I@Z PROC NEAR ; BaseDialog::OnCtlColor
; _this$ = ecx

; 32   : {

  00130	55		 push	 ebp
  00131	8b ec		 mov	 ebp, esp
  00133	83 ec 08	 sub	 esp, 8
  00136	56		 push	 esi
  00137	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0013e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00145	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 33   : 	HBRUSH hbr = CDialog::OnCtlColor(pDC, pWnd, nCtlColor);

  00148	8b 45 10	 mov	 eax, DWORD PTR _nCtlColor$[ebp]
  0014b	50		 push	 eax
  0014c	8b 4d 0c	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  0014f	51		 push	 ecx
  00150	8b 55 08	 mov	 edx, DWORD PTR _pDC$[ebp]
  00153	52		 push	 edx
  00154	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00157	e8 00 00 00 00	 call	 ?OnCtlColor@CWnd@@IAEPAUHBRUSH__@@PAVCDC@@PAV1@I@Z ; CWnd::OnCtlColor
  0015c	89 45 f8	 mov	 DWORD PTR _hbr$[ebp], eax

; 34   : 	hbr = ::CreateSolidBrush( RGB(255,255,255) );

  0015f	8b f4		 mov	 esi, esp
  00161	68 ff ff ff 00	 push	 16777215		; 00ffffffH
  00166	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateSolidBrush@4
  0016c	3b f4		 cmp	 esi, esp
  0016e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00173	89 45 f8	 mov	 DWORD PTR _hbr$[ebp], eax

; 35   : 	return hbr;

  00176	8b 45 f8	 mov	 eax, DWORD PTR _hbr$[ebp]

; 36   : }

  00179	5e		 pop	 esi
  0017a	83 c4 08	 add	 esp, 8
  0017d	3b ec		 cmp	 ebp, esp
  0017f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00184	8b e5		 mov	 esp, ebp
  00186	5d		 pop	 ebp
  00187	c2 0c 00	 ret	 12			; 0000000cH
?OnCtlColor@BaseDialog@@IAEPAUHBRUSH__@@PAVCDC@@PAVCWnd@@I@Z ENDP ; BaseDialog::OnCtlColor
_TEXT	ENDS
PUBLIC	?SthChanged@BaseDialog@@UAEXXZ			; BaseDialog::SthChanged
EXTRN	__imp__GetDlgItem@8:NEAR
EXTRN	__imp__EnableWindow@8:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_pWnd$ = -8						; size = 4
_this$ = -4						; size = 4
?SthChanged@BaseDialog@@UAEXXZ PROC NEAR		; BaseDialog::SthChanged
; _this$ = ecx

; 39   : {

  00190	55		 push	 ebp
  00191	8b ec		 mov	 ebp, esp
  00193	83 ec 08	 sub	 esp, 8
  00196	56		 push	 esi
  00197	57		 push	 edi
  00198	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0019f	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  001a6	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 40   : 	CWnd* pWnd = GetParent();

  001a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ac	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  001b1	89 45 f8	 mov	 DWORD PTR _pWnd$[ebp], eax

; 41   : 	if( pWnd != NULL )

  001b4	83 7d f8 00	 cmp	 DWORD PTR _pWnd$[ebp], 0
  001b8	74 2f		 je	 SHORT $L187097

; 42   : 	{
; 43   : 		::EnableWindow(::GetDlgItem(pWnd->GetSafeHwnd(), IDC_BUTTON_APPLY), TRUE);

  001ba	8b f4		 mov	 esi, esp
  001bc	6a 01		 push	 1
  001be	8b fc		 mov	 edi, esp
  001c0	68 bd 00 00 00	 push	 189			; 000000bdH
  001c5	8b 4d f8	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  001c8	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  001cd	50		 push	 eax
  001ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  001d4	3b fc		 cmp	 edi, esp
  001d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001db	50		 push	 eax
  001dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  001e2	3b f4		 cmp	 esi, esp
  001e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187097:

; 44   : 	}
; 45   : }

  001e9	5f		 pop	 edi
  001ea	5e		 pop	 esi
  001eb	83 c4 08	 add	 esp, 8
  001ee	3b ec		 cmp	 ebp, esp
  001f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f5	8b e5		 mov	 esp, ebp
  001f7	5d		 pop	 ebp
  001f8	c3		 ret	 0
?SthChanged@BaseDialog@@UAEXXZ ENDP			; BaseDialog::SthChanged
_TEXT	ENDS
END
