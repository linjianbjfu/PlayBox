; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\module\WebInteract\WebPage.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0P@CLMBAKJD@JSCall?5Error?3?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@GOJCFFEC@iStart?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BL@PKIBFLAK@AtlIsValidString?$CI?5pszSub?5?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@FDHNHANE@AtlIsValidString?$CI?5pszCharSet?5?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EN@IBFBLEEG@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@JOOHECM@nNewLength?5?$DM?$DN?5GetLength?$CI?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@GIMJKKKN@AtlIsValidString?$CI?5psz?5?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ?ShowError@CWebPage@@IAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWebPage@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAUIHTMLDocument2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextA@?$ChTraitsCRT@D@ATL@@SAPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSpace@?$ChTraitsCRT@D@ATL@@SAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringFindString@?$ChTraitsCRT@D@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringScanSet@?$ChTraitsCRT@D@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3CWebPage@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CWebPage@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CWebPage@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCWebPage@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4CWebPage@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_C@_0EN@CBMLGOH@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FG@LDNDNCJM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@NMJIPIKP@nNull?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FJ@DMHPDOJC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FI@FDBICBML@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlIsValidString@ATL@@YAHPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FH@KDPNIMBO@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@DLMMDKDI@pbstr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPA_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPA_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPA_WPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CWebPage@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CJ@FJEKGMMD@Warning?3?5implicit?5LoadString?$CI?$CFu?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
CONST	SEGMENT
$SG187095 DB	'FormatMessage Netive Error', 00H
	ORG $+1
$SG187128 DB	'pDisp != 0', 00H
	ORG $+1
$SG187129 DB	'.\src\module\WebInteract\WebPage.cpp', 00H
	ORG $+3
$SG187131 DB	'NULL pointer', 00H
	ORG $+3
$SG187137 DB	'Failed to get HTML document COM object', 00H
	ORG $+1
$SG187145 DB	'm_spDoc != 0', 00H
	ORG $+3
$SG187146 DB	'.\src\module\WebInteract\WebPage.cpp', 00H
	ORG $+3
$SG187148 DB	'NULL pointer', 00H
	ORG $+3
$SG187163 DB	'((HRESULT)(hr) >= 0)', 00H
	ORG $+3
$SG187164 DB	'.\src\module\WebInteract\WebPage.cpp', 00H
	ORG $+3
$SG187171 DB	'm_spDoc != 0', 00H
	ORG $+3
$SG187172 DB	'.\src\module\WebInteract\WebPage.cpp', 00H
	ORG $+3
$SG187174 DB	'NULL pointer', 00H
	ORG $+3
$SG187249 DB	'((HRESULT)(hr) >= 0)', 00H
	ORG $+3
$SG187250 DB	'.\src\module\WebInteract\WebPage.cpp', 00H
	ORG $+3
$SG187298 DB	'Cannot GetScript', 00H
	ORG $+3
$SG187341 DB	' ', 0aH, 0dH, 09H, 00H
	ORG $+3
$SG187351 DB	'function', 00H
	ORG $+3
$SG187353 DB	'/*', 00H
	ORG $+1
$SG187361 DB	'*/', 00H
$SG187363 DB	00H
$SG187367 DB	'(', 00H
	ORG $+2
$SG187371 DB	')', 00H
	ORG $+2
$SG187379 DB	',', 00H
CONST	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z ; GetSystemErrorMessage
EXTRN	__imp__FormatMessageA@28:NEAR
EXTRN	__imp__LocalFree@4:NEAR
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	__except_list:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:NEAR
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:NEAR
;	COMDAT rtc$IMZ
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\webinteract\webpage.cpp
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
xdata$x	SEGMENT
$T188106 DD	0ffffffffH
	DD	FLAT:$L188090
$T188097 DD	019930520H
	DD	01H
	DD	FLAT:$T188106
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T188092 = -40						; size = 4
_lpBuffer$ = -32					; size = 4
_strError$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_dwError$ = 12						; size = 4
?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z PROC NEAR ; GetSystemErrorMessage

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	56		 push	 esi
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00024	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00027	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0002a	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002d	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00030	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00033	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00036	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T188092[ebp], 0

; 22   : 	CString strError;

  0003d	8b f4		 mov	 esi, esp
  0003f	8d 4d ec	 lea	 ecx, DWORD PTR _strError$[ebp]
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 23   : 	LPTSTR lpBuffer;
; 24   : 
; 25   : 	if(!FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,
; 26   : 			NULL,  dwError,
; 27   : 			MAKELANGID(LANG_NEUTRAL, SUBLANG_SYS_DEFAULT),
; 28   : 			(LPTSTR) &lpBuffer, 0, NULL))

  00056	8b f4		 mov	 esi, esp
  00058	6a 00		 push	 0
  0005a	6a 00		 push	 0
  0005c	8d 45 e0	 lea	 eax, DWORD PTR _lpBuffer$[ebp]
  0005f	50		 push	 eax
  00060	68 00 08 00 00	 push	 2048			; 00000800H
  00065	8b 4d 0c	 mov	 ecx, DWORD PTR _dwError$[ebp]
  00068	51		 push	 ecx
  00069	6a 00		 push	 0
  0006b	68 00 11 00 00	 push	 4352			; 00001100H
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FormatMessageA@28
  00076	3b f4		 cmp	 esi, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	85 c0		 test	 eax, eax
  0007f	75 19		 jne	 SHORT $L187094

; 29   : 
; 30   : 	{
; 31   : 		strError = "FormatMessage Netive Error" ;

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET FLAT:$SG187095
  00088	8d 4d ec	 lea	 ecx, DWORD PTR _strError$[ebp]
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  00091	3b f4		 cmp	 esi, esp
  00093	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 32   : 	}
; 33   : 	else

  00098	eb 29		 jmp	 SHORT $L187096
$L187094:

; 34   : 	{
; 35   : 		strError = lpBuffer;

  0009a	8b f4		 mov	 esi, esp
  0009c	8b 55 e0	 mov	 edx, DWORD PTR _lpBuffer$[ebp]
  0009f	52		 push	 edx
  000a0	8d 4d ec	 lea	 ecx, DWORD PTR _strError$[ebp]
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 36   : 		LocalFree(lpBuffer);

  000b0	8b f4		 mov	 esi, esp
  000b2	8b 45 e0	 mov	 eax, DWORD PTR _lpBuffer$[ebp]
  000b5	50		 push	 eax
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LocalFree@4
  000bc	3b f4		 cmp	 esi, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187096:

; 37   : 	}
; 38   : 	return strError;

  000c3	8b f4		 mov	 esi, esp
  000c5	8d 4d ec	 lea	 ecx, DWORD PTR _strError$[ebp]
  000c8	51		 push	 ecx
  000c9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  000d2	3b f4		 cmp	 esi, esp
  000d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d9	8b 55 d8	 mov	 edx, DWORD PTR $T188092[ebp]
  000dc	83 ca 01	 or	 edx, 1
  000df	89 55 d8	 mov	 DWORD PTR $T188092[ebp], edx
  000e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e9	8b f4		 mov	 esi, esp
  000eb	8d 4d ec	 lea	 ecx, DWORD PTR _strError$[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000f4	3b f4		 cmp	 esi, esp
  000f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fb	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 39   : }

  000fe	52		 push	 edx
  000ff	8b cd		 mov	 ecx, ebp
  00101	50		 push	 eax
  00102	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188104
  00108	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0010d	58		 pop	 eax
  0010e	5a		 pop	 edx
  0010f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00112	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00119	5e		 pop	 esi
  0011a	83 c4 28	 add	 esp, 40			; 00000028H
  0011d	3b ec		 cmp	 ebp, esp
  0011f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c3		 ret	 0
$L188104:
  00128	02 00 00 00	 DD	 2
  0012c	00 00 00 00	 DD	 $L188103
$L188103:
  00130	ec ff ff ff	 DD	 -20			; ffffffecH
  00134	04 00 00 00	 DD	 4
  00138	00 00 00 00	 DD	 $L188099
  0013c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00140	04 00 00 00	 DD	 4
  00144	00 00 00 00	 DD	 $L188100
$L188100:
  00148	6c		 DB	 108			; 0000006cH
  00149	70		 DB	 112			; 00000070H
  0014a	42		 DB	 66			; 00000042H
  0014b	75		 DB	 117			; 00000075H
  0014c	66		 DB	 102			; 00000066H
  0014d	66		 DB	 102			; 00000066H
  0014e	65		 DB	 101			; 00000065H
  0014f	72		 DB	 114			; 00000072H
  00150	00		 DB	 0
$L188099:
  00151	73		 DB	 115			; 00000073H
  00152	74		 DB	 116			; 00000074H
  00153	72		 DB	 114			; 00000072H
  00154	45		 DB	 69			; 00000045H
  00155	72		 DB	 114			; 00000072H
  00156	72		 DB	 114			; 00000072H
  00157	6f		 DB	 111			; 0000006fH
  00158	72		 DB	 114			; 00000072H
  00159	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188090:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d ec	 lea	 ecx, DWORD PTR _strError$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188097
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z ENDP ; GetSystemErrorMessage
PUBLIC	?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
EXTRN	__imp_?Right@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z:NEAR
EXTRN	__imp_?Left@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z:NEAR
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:NEAR
EXTRN	__imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ:NEAR
EXTRN	__imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ:NEAR
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:NEAR
EXTRN	__imp_?Find@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBDH@Z:NEAR
EXTRN	__imp_?FindOneOf@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:NEAR
EXTRN	__imp_?TrimRight@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ:NEAR
EXTRN	__imp_?TrimLeft@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ:NEAR
xdata$x	SEGMENT
$T188126 DD	0ffffffffH
	DD	FLAT:$L188113
	DD	00H
	DD	FLAT:$L188114
	DD	01H
	DD	FLAT:$L188115
	DD	01H
	DD	FLAT:$L188116
$T188121 DD	019930520H
	DD	04H
	DD	FLAT:$T188126
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv151 = -60						; size = 4
tv163 = -56						; size = 4
tv149 = -52						; size = 4
tv160 = -48						; size = 4
tv81 = -44						; size = 4
$T188118 = -40						; size = 4
$T188112 = -36						; size = 4
$T188111 = -32						; size = 4
_idx$ = -28						; size = 4
_strToken$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_strSrc$ = 12						; size = 4
_strDelim$ = 16						; size = 4
_bTrim$ = 20						; size = 1
_bFindOneOf$ = 24					; size = 1
?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z PROC NEAR ; GetNextToken

; 42   : {

  00160	55		 push	 ebp
  00161	8b ec		 mov	 ebp, esp
  00163	6a ff		 push	 -1
  00165	68 00 00 00 00	 push	 __ehhandler$?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z
  0016a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00170	50		 push	 eax
  00171	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00178	83 ec 30	 sub	 esp, 48			; 00000030H
  0017b	56		 push	 esi
  0017c	57		 push	 edi
  0017d	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  00180	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00185	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0018a	f3 ab		 rep stosd
  0018c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T188118[ebp], 0
  00193	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 43   : 	CString strToken;

  0019a	8b f4		 mov	 esi, esp
  0019c	8d 4d ec	 lea	 ecx, DWORD PTR _strToken$[ebp]
  0019f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001a5	3b f4		 cmp	 esi, esp
  001a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ac	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 44   : 	int idx = bFindOneOf? strSrc.FindOneOf(strDelim) : strSrc.Find(strDelim);

  001b0	0f b6 45 18	 movzx	 eax, BYTE PTR _bFindOneOf$[ebp]
  001b4	85 c0		 test	 eax, eax
  001b6	74 2a		 je	 SHORT $L188109
  001b8	8b f4		 mov	 esi, esp
  001ba	8d 4d 10	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  001bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  001c3	3b f4		 cmp	 esi, esp
  001c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ca	8b f4		 mov	 esi, esp
  001cc	50		 push	 eax
  001cd	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  001d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?FindOneOf@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  001d6	3b f4		 cmp	 esi, esp
  001d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001dd	89 45 d4	 mov	 DWORD PTR tv81[ebp], eax
  001e0	eb 2a		 jmp	 SHORT $L188110
$L188109:
  001e2	8b f4		 mov	 esi, esp
  001e4	6a 00		 push	 0
  001e6	8b fc		 mov	 edi, esp
  001e8	8d 4d 10	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  001eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  001f1	3b fc		 cmp	 edi, esp
  001f3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f8	50		 push	 eax
  001f9	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  001fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Find@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBDH@Z
  00202	3b f4		 cmp	 esi, esp
  00204	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00209	89 45 d4	 mov	 DWORD PTR tv81[ebp], eax
$L188110:
  0020c	8b 4d d4	 mov	 ecx, DWORD PTR tv81[ebp]
  0020f	89 4d e4	 mov	 DWORD PTR _idx$[ebp], ecx

; 45   : 	if(idx != -1)

  00212	83 7d e4 ff	 cmp	 DWORD PTR _idx$[ebp], -1
  00216	0f 84 bf 00 00
	00		 je	 $L187106

; 46   : 	{
; 47   : 		strToken  = strSrc.Left(idx);

  0021c	8b f4		 mov	 esi, esp
  0021e	8b 55 e4	 mov	 edx, DWORD PTR _idx$[ebp]
  00221	52		 push	 edx
  00222	8d 45 e0	 lea	 eax, DWORD PTR $T188111[ebp]
  00225	50		 push	 eax
  00226	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  00229	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Left@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z
  0022f	3b f4		 cmp	 esi, esp
  00231	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00236	89 45 d0	 mov	 DWORD PTR tv160[ebp], eax
  00239	8b 4d d0	 mov	 ecx, DWORD PTR tv160[ebp]
  0023c	89 4d cc	 mov	 DWORD PTR tv149[ebp], ecx
  0023f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00243	8b f4		 mov	 esi, esp
  00245	8b 55 cc	 mov	 edx, DWORD PTR tv149[ebp]
  00248	52		 push	 edx
  00249	8d 4d ec	 lea	 ecx, DWORD PTR _strToken$[ebp]
  0024c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00252	3b f4		 cmp	 esi, esp
  00254	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00259	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0025d	8b f4		 mov	 esi, esp
  0025f	8d 4d e0	 lea	 ecx, DWORD PTR $T188111[ebp]
  00262	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00268	3b f4		 cmp	 esi, esp
  0026a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 48   : 		strSrc = strSrc.Right(strSrc.GetLength() - (idx + 1) );

  0026f	8b f4		 mov	 esi, esp
  00271	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  00274	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  0027a	3b f4		 cmp	 esi, esp
  0027c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00281	8b 4d e4	 mov	 ecx, DWORD PTR _idx$[ebp]
  00284	83 c1 01	 add	 ecx, 1
  00287	2b c1		 sub	 eax, ecx
  00289	8b f4		 mov	 esi, esp
  0028b	50		 push	 eax
  0028c	8d 55 dc	 lea	 edx, DWORD PTR $T188112[ebp]
  0028f	52		 push	 edx
  00290	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  00293	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Right@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z
  00299	3b f4		 cmp	 esi, esp
  0029b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a0	89 45 c8	 mov	 DWORD PTR tv163[ebp], eax
  002a3	8b 45 c8	 mov	 eax, DWORD PTR tv163[ebp]
  002a6	89 45 c4	 mov	 DWORD PTR tv151[ebp], eax
  002a9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  002ad	8b f4		 mov	 esi, esp
  002af	8b 4d c4	 mov	 ecx, DWORD PTR tv151[ebp]
  002b2	51		 push	 ecx
  002b3	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  002b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  002bc	3b f4		 cmp	 esi, esp
  002be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002c3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  002c7	8b f4		 mov	 esi, esp
  002c9	8d 4d dc	 lea	 ecx, DWORD PTR $T188112[ebp]
  002cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002d2	3b f4		 cmp	 esi, esp
  002d4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 49   : 	}
; 50   : 	else

  002d9	eb 28		 jmp	 SHORT $L187109
$L187106:

; 51   : 	{
; 52   : 		strToken = strSrc;

  002db	8b f4		 mov	 esi, esp
  002dd	8b 55 0c	 mov	 edx, DWORD PTR _strSrc$[ebp]
  002e0	52		 push	 edx
  002e1	8d 4d ec	 lea	 ecx, DWORD PTR _strToken$[ebp]
  002e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  002ea	3b f4		 cmp	 esi, esp
  002ec	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 53   : 		strSrc.Empty();

  002f1	8b f4		 mov	 esi, esp
  002f3	8b 4d 0c	 mov	 ecx, DWORD PTR _strSrc$[ebp]
  002f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ
  002fc	3b f4		 cmp	 esi, esp
  002fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187109:

; 54   : 	}
; 55   : 	if(bTrim)

  00303	0f b6 45 14	 movzx	 eax, BYTE PTR _bTrim$[ebp]
  00307	85 c0		 test	 eax, eax
  00309	74 24		 je	 SHORT $L187110

; 56   : 	{
; 57   : 		strToken.TrimLeft();

  0030b	8b f4		 mov	 esi, esp
  0030d	8d 4d ec	 lea	 ecx, DWORD PTR _strToken$[ebp]
  00310	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TrimLeft@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ
  00316	3b f4		 cmp	 esi, esp
  00318	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 58   : 		strToken.TrimRight();

  0031d	8b f4		 mov	 esi, esp
  0031f	8d 4d ec	 lea	 ecx, DWORD PTR _strToken$[ebp]
  00322	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TrimRight@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ
  00328	3b f4		 cmp	 esi, esp
  0032a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187110:

; 59   : 	}
; 60   : 	return strToken;

  0032f	8b f4		 mov	 esi, esp
  00331	8d 4d ec	 lea	 ecx, DWORD PTR _strToken$[ebp]
  00334	51		 push	 ecx
  00335	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00338	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0033e	3b f4		 cmp	 esi, esp
  00340	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00345	8b 55 d8	 mov	 edx, DWORD PTR $T188118[ebp]
  00348	83 ca 01	 or	 edx, 1
  0034b	89 55 d8	 mov	 DWORD PTR $T188118[ebp], edx
  0034e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00352	8b f4		 mov	 esi, esp
  00354	8d 4d ec	 lea	 ecx, DWORD PTR _strToken$[ebp]
  00357	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0035d	3b f4		 cmp	 esi, esp
  0035f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00364	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0036b	8b f4		 mov	 esi, esp
  0036d	8d 4d 10	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  00370	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00376	3b f4		 cmp	 esi, esp
  00378	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0037d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 61   : }

  00380	52		 push	 edx
  00381	8b cd		 mov	 ecx, ebp
  00383	50		 push	 eax
  00384	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188125
  0038a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0038f	58		 pop	 eax
  00390	5a		 pop	 edx
  00391	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00394	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0039b	5f		 pop	 edi
  0039c	5e		 pop	 esi
  0039d	83 c4 3c	 add	 esp, 60			; 0000003cH
  003a0	3b ec		 cmp	 ebp, esp
  003a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003a7	8b e5		 mov	 esp, ebp
  003a9	5d		 pop	 ebp
  003aa	c3		 ret	 0
$L188125:
  003ab	01 00 00 00	 DD	 1
  003af	00 00 00 00	 DD	 $L188124
$L188124:
  003b3	ec ff ff ff	 DD	 -20			; ffffffecH
  003b7	04 00 00 00	 DD	 4
  003bb	00 00 00 00	 DD	 $L188122
$L188122:
  003bf	73		 DB	 115			; 00000073H
  003c0	74		 DB	 116			; 00000074H
  003c1	72		 DB	 114			; 00000072H
  003c2	54		 DB	 84			; 00000054H
  003c3	6f		 DB	 111			; 0000006fH
  003c4	6b		 DB	 107			; 0000006bH
  003c5	65		 DB	 101			; 00000065H
  003c6	6e		 DB	 110			; 0000006eH
  003c7	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188113:
  0001c	8b f4		 mov	 esi, esp
  0001e	8d 4d 10	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00027	3b f4		 cmp	 esi, esp
  00029	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188114:
  0002e	8b f4		 mov	 esi, esp
  00030	8d 4d ec	 lea	 ecx, DWORD PTR _strToken$[ebp]
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00039	3b f4		 cmp	 esi, esp
  0003b	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188115:
  00040	8b f4		 mov	 esi, esp
  00042	8d 4d e0	 lea	 ecx, DWORD PTR $T188111[ebp]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0004b	3b f4		 cmp	 esi, esp
  0004d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188116:
  00052	8b f4		 mov	 esi, esp
  00054	8d 4d dc	 lea	 ecx, DWORD PTR $T188112[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0005d	3b f4		 cmp	 esi, esp
  0005f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z:
  00064	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188121
  00069	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ENDP ; GetNextToken
PUBLIC	??_R4CWebPage@@6B@				; CWebPage::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWebPage@@@8				; CWebPage `RTTI Type Descriptor'
PUBLIC	??_R3CWebPage@@8				; CWebPage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWebPage@@8				; CWebPage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CWebPage@@8			; CWebPage::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??0CWebPage@@QAE@XZ				; CWebPage::CWebPage
PUBLIC	??_7CWebPage@@6B@				; CWebPage::`vftable'
PUBLIC	??_GCWebPage@@UAEPAXI@Z				; CWebPage::`scalar deleting destructor'
PUBLIC	??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z	; ATL::CComPtr<IHTMLDocument2>::CComPtr<IHTMLDocument2>
EXTRN	??_ECWebPage@@UAEPAXI@Z:NEAR			; CWebPage::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_7CWebPage@@6B@
CONST	SEGMENT
??_7CWebPage@@6B@ DD FLAT:??_R4CWebPage@@6B@		; CWebPage::`vftable'
	DD	FLAT:??_ECWebPage@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CWebPage@@6B@
rdata$r	SEGMENT
??_R4CWebPage@@6B@ DD 00H				; CWebPage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWebPage@@@8
	DD	FLAT:??_R3CWebPage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWebPage@@@8
_DATA	SEGMENT
??_R0?AVCWebPage@@@8 DD FLAT:??_7type_info@@6B@		; CWebPage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWebPage@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CWebPage@@8
rdata$r	SEGMENT
??_R3CWebPage@@8 DD 00H					; CWebPage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWebPage@@8
rdata$r	ENDS
;	COMDAT ??_R2CWebPage@@8
rdata$r	SEGMENT
??_R2CWebPage@@8 DD FLAT:??_R1A@?0A@A@CWebPage@@8	; CWebPage::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CWebPage@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CWebPage@@8 DD FLAT:??_R0?AVCWebPage@@@8	; CWebPage::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
; Function compile flags: /Odt /RTCsu
rdata$r	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CWebPage@@QAE@XZ PROC NEAR				; CWebPage::CWebPage
; _this$ = ecx

; 68   : {

  003d0	55		 push	 ebp
  003d1	8b ec		 mov	 ebp, esp
  003d3	51		 push	 ecx
  003d4	56		 push	 esi
  003d5	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  003dc	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  003df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003e2	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWebPage@@6B@
  003e8	6a 00		 push	 0
  003ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ed	83 c1 04	 add	 ecx, 4
  003f0	e8 00 00 00 00	 call	 ??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z ; ATL::CComPtr<IHTMLDocument2>::CComPtr<IHTMLDocument2>
  003f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003f8	83 c1 08	 add	 ecx, 8
  003fb	8b f4		 mov	 esi, esp
  003fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00403	3b f4		 cmp	 esi, esp
  00405	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 69   : }

  0040a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0040d	5e		 pop	 esi
  0040e	83 c4 04	 add	 esp, 4
  00411	3b ec		 cmp	 ebp, esp
  00413	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00418	8b e5		 mov	 esp, ebp
  0041a	5d		 pop	 ebp
  0041b	c3		 ret	 0
??0CWebPage@@QAE@XZ ENDP				; CWebPage::CWebPage
_TEXT	ENDS
PUBLIC	??1CWebPage@@UAE@XZ				; CWebPage::~CWebPage
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_GCWebPage@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCWebPage@@UAEPAXI@Z PROC NEAR			; CWebPage::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CWebPage@@UAE@XZ	; CWebPage::~CWebPage
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $L187117
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$L187117:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCWebPage@@UAEPAXI@Z ENDP				; CWebPage::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ	; ATL::CComPtr<IHTMLDocument2>::~CComPtr<IHTMLDocument2>
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CWebPage@@UAE@XZ PROC NEAR				; CWebPage::~CWebPage
; _this$ = ecx

; 72   : {

  00420	55		 push	 ebp
  00421	8b ec		 mov	 ebp, esp
  00423	51		 push	 ecx
  00424	56		 push	 esi
  00425	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0042c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0042f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00432	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWebPage@@6B@

; 73   : 
; 74   : }

  00438	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0043b	83 c1 08	 add	 ecx, 8
  0043e	8b f4		 mov	 esi, esp
  00440	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00446	3b f4		 cmp	 esi, esp
  00448	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0044d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00450	83 c1 04	 add	 ecx, 4
  00453	e8 00 00 00 00	 call	 ??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ
  00458	5e		 pop	 esi
  00459	83 c4 04	 add	 esp, 4
  0045c	3b ec		 cmp	 ebp, esp
  0045e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00463	8b e5		 mov	 esp, ebp
  00465	5d		 pop	 ebp
  00466	c3		 ret	 0
??1CWebPage@@UAE@XZ ENDP				; CWebPage::~CWebPage
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IHTMLDocument2>::~CComPtrBase<IHTMLDocument2>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IHTMLDocument2>::~CComPtr<IHTMLDocument2>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IHTMLDocument2>::~CComPtrBase<IHTMLDocument2>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IHTMLDocument2>::~CComPtr<IHTMLDocument2>
_TEXT	ENDS
PUBLIC	??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ; ATL::CComPtrBase<IDispatch>::operator->
PUBLIC	??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
PUBLIC	??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>
PUBLIC	?SetDocument@CWebPage@@QAE_NPAUIDispatch@@@Z	; CWebPage::SetDocument
PUBLIC	?ShowError@CWebPage@@IAEXPBD@Z			; CWebPage::ShowError
PUBLIC	??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator&
PUBLIC	??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z ; ATL::CComPtr<IHTMLDocument2>::operator=
EXTRN	__imp___CrtDbgReport:NEAR
EXTRN	_IID_IHTMLDocument2:BYTE
xdata$x	SEGMENT
$T188146 DD	0ffffffffH
	DD	FLAT:$L188139
$T188141 DD	019930520H
	DD	01H
	DD	FLAT:$T188146
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv86 = -40						; size = 4
$T188138 = -34						; size = 1
$T188137 = -33						; size = 1
_hr$ = -32						; size = 4
_spDisp$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pDisp$ = 8						; size = 4
?SetDocument@CWebPage@@QAE_NPAUIDispatch@@@Z PROC NEAR	; CWebPage::SetDocument
; _this$ = ecx

; 77   : {

  00470	55		 push	 ebp
  00471	8b ec		 mov	 ebp, esp
  00473	6a ff		 push	 -1
  00475	68 00 00 00 00	 push	 __ehhandler$?SetDocument@CWebPage@@QAE_NPAUIDispatch@@@Z
  0047a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00480	50		 push	 eax
  00481	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00488	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0048b	56		 push	 esi
  0048c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00491	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00494	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00497	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0049a	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0049d	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  004a0	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  004a3	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  004a6	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 78   : 	CHECK_POINTER(pDisp);

  004a9	83 7d 08 00	 cmp	 DWORD PTR _pDisp$[ebp], 0
  004ad	75 28		 jne	 SHORT $L188136
  004af	8b f4		 mov	 esi, esp
  004b1	68 00 00 00 00	 push	 OFFSET FLAT:$SG187128
  004b6	6a 00		 push	 0
  004b8	6a 4e		 push	 78			; 0000004eH
  004ba	68 00 00 00 00	 push	 OFFSET FLAT:$SG187129
  004bf	6a 02		 push	 2
  004c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  004c7	83 c4 14	 add	 esp, 20			; 00000014H
  004ca	3b f4		 cmp	 esi, esp
  004cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004d1	83 f8 01	 cmp	 eax, 1
  004d4	75 01		 jne	 SHORT $L188136
  004d6	cc		 int	 3
$L188136:
  004d7	83 7d 08 00	 cmp	 DWORD PTR _pDisp$[ebp], 0
  004db	75 14		 jne	 SHORT $L187130
  004dd	68 00 00 00 00	 push	 OFFSET FLAT:$SG187131
  004e2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  004e5	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError
  004ea	32 c0		 xor	 al, al
  004ec	e9 94 00 00 00	 jmp	 $L187126
$L187130:

; 79   : 
; 80   : 	m_spDoc = NULL;

  004f1	6a 00		 push	 0
  004f3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  004f6	83 c1 04	 add	 ecx, 4
  004f9	e8 00 00 00 00	 call	 ??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z ; ATL::CComPtr<IHTMLDocument2>::operator=

; 81   : 
; 82   : 	CComPtr<IDispatch> spDisp = pDisp;

  004fe	8b 4d 08	 mov	 ecx, DWORD PTR _pDisp$[ebp]
  00501	51		 push	 ecx
  00502	8d 4d e8	 lea	 ecx, DWORD PTR _spDisp$[ebp]
  00505	e8 00 00 00 00	 call	 ??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
  0050a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 83   : 
; 84   : 	HRESULT hr = spDisp->QueryInterface(IID_IHTMLDocument2,(void**)&m_spDoc);

  00511	8d 4d e8	 lea	 ecx, DWORD PTR _spDisp$[ebp]
  00514	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ; ATL::CComPtrBase<IDispatch>::operator->
  00519	89 45 d8	 mov	 DWORD PTR tv86[ebp], eax
  0051c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0051f	83 c1 04	 add	 ecx, 4
  00522	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator&
  00527	8b f4		 mov	 esi, esp
  00529	50		 push	 eax
  0052a	68 00 00 00 00	 push	 OFFSET FLAT:_IID_IHTMLDocument2
  0052f	8b 55 d8	 mov	 edx, DWORD PTR tv86[ebp]
  00532	52		 push	 edx
  00533	8b 45 d8	 mov	 eax, DWORD PTR tv86[ebp]
  00536	8b 08		 mov	 ecx, DWORD PTR [eax]
  00538	ff 11		 call	 DWORD PTR [ecx]
  0053a	3b f4		 cmp	 esi, esp
  0053c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00541	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax

; 85   : 	if(FAILED(hr))

  00544	83 7d e0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00548	7d 25		 jge	 SHORT $L187136

; 86   : 	{
; 87   : 		ShowError("Failed to get HTML document COM object");

  0054a	68 00 00 00 00	 push	 OFFSET FLAT:$SG187137
  0054f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00552	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError

; 88   : 		return false;

  00557	c6 45 df 00	 mov	 BYTE PTR $T188137[ebp], 0
  0055b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00562	8d 4d e8	 lea	 ecx, DWORD PTR _spDisp$[ebp]
  00565	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  0056a	8a 45 df	 mov	 al, BYTE PTR $T188137[ebp]
  0056d	eb 16		 jmp	 SHORT $L187126
$L187136:

; 89   : 	}
; 90   : 	return true;

  0056f	c6 45 de 01	 mov	 BYTE PTR $T188138[ebp], 1
  00573	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0057a	8d 4d e8	 lea	 ecx, DWORD PTR _spDisp$[ebp]
  0057d	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  00582	8a 45 de	 mov	 al, BYTE PTR $T188138[ebp]
$L187126:

; 91   : }

  00585	52		 push	 edx
  00586	8b cd		 mov	 ecx, ebp
  00588	50		 push	 eax
  00589	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188145
  0058f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00594	58		 pop	 eax
  00595	5a		 pop	 edx
  00596	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00599	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  005a0	5e		 pop	 esi
  005a1	83 c4 28	 add	 esp, 40			; 00000028H
  005a4	3b ec		 cmp	 ebp, esp
  005a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005ab	8b e5		 mov	 esp, ebp
  005ad	5d		 pop	 ebp
  005ae	c2 04 00	 ret	 4
$L188145:
  005b1	01 00 00 00	 DD	 1
  005b5	00 00 00 00	 DD	 $L188144
$L188144:
  005b9	e8 ff ff ff	 DD	 -24			; ffffffe8H
  005bd	04 00 00 00	 DD	 4
  005c1	00 00 00 00	 DD	 $L188142
$L188142:
  005c5	73		 DB	 115			; 00000073H
  005c6	70		 DB	 112			; 00000070H
  005c7	44		 DB	 68			; 00000044H
  005c8	69		 DB	 105			; 00000069H
  005c9	73		 DB	 115			; 00000073H
  005ca	70		 DB	 112			; 00000070H
  005cb	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188139:
  0006e	8d 4d e8	 lea	 ecx, DWORD PTR _spDisp$[ebp]
  00071	e9 00 00 00 00	 jmp	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
__ehhandler$?SetDocument@CWebPage@@QAE_NPAUIDispatch@@@Z:
  00076	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188141
  0007b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetDocument@CWebPage@@QAE_NPAUIDispatch@@@Z ENDP	; CWebPage::SetDocument
PUBLIC	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
PUBLIC	??_C@_0P@CLMBAKJD@JSCall?5Error?3?6?$AA@	; `string'
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:NEAR
;	COMDAT xdata$x
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\webinteract\webpage.h
xdata$x	SEGMENT
$T188155 DD	0ffffffffH
	DD	FLAT:$L188150
	DD	00H
	DD	FLAT:$L188151
$T188153 DD	019930520H
	DD	02H
	DD	FLAT:$T188155
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0P@CLMBAKJD@JSCall?5Error?3?6?$AA@
CONST	SEGMENT
??_C@_0P@CLMBAKJD@JSCall?5Error?3?6?$AA@ DB 'JSCall Error:', 0aH, 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?ShowError@CWebPage@@IAEXPBD@Z
_TEXT	SEGMENT
tv81 = -40						; size = 4
tv85 = -36						; size = 4
tv79 = -32						; size = 4
tv82 = -28						; size = 4
$T188149 = -24						; size = 4
$T188148 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_lpszText$ = 8						; size = 4
?ShowError@CWebPage@@IAEXPBD@Z PROC NEAR		; CWebPage::ShowError, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ShowError@CWebPage@@IAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	56		 push	 esi
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00024	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00027	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0002a	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002d	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00030	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00033	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 45   : 	m_strError = "JSCall Error:\n" + CString(lpszText);

  00039	8b f4		 mov	 esi, esp
  0003b	8b 45 08	 mov	 eax, DWORD PTR _lpszText$[ebp]
  0003e	50		 push	 eax
  0003f	8d 4d ec	 lea	 ecx, DWORD PTR $T188148[ebp]
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	89 45 e4	 mov	 DWORD PTR tv82[ebp], eax
  00052	8b 4d e4	 mov	 ecx, DWORD PTR tv82[ebp]
  00055	89 4d e0	 mov	 DWORD PTR tv79[ebp], ecx
  00058	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005f	8b 55 e0	 mov	 edx, DWORD PTR tv79[ebp]
  00062	52		 push	 edx
  00063	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@CLMBAKJD@JSCall?5Error?3?6?$AA@
  00068	8d 45 e8	 lea	 eax, DWORD PTR $T188149[ebp]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
  00074	89 45 dc	 mov	 DWORD PTR tv85[ebp], eax
  00077	8b 4d dc	 mov	 ecx, DWORD PTR tv85[ebp]
  0007a	89 4d d8	 mov	 DWORD PTR tv81[ebp], ecx
  0007d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00081	8b f4		 mov	 esi, esp
  00083	8b 55 d8	 mov	 edx, DWORD PTR tv81[ebp]
  00086	52		 push	 edx
  00087	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	83 c1 08	 add	 ecx, 8
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00093	3b f4		 cmp	 esi, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0009e	8b f4		 mov	 esi, esp
  000a0	8d 4d e8	 lea	 ecx, DWORD PTR $T188149[ebp]
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b7	8b f4		 mov	 esi, esp
  000b9	8d 4d ec	 lea	 ecx, DWORD PTR $T188148[ebp]
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000c2	3b f4		 cmp	 esi, esp
  000c4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 46   : }

  000c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d3	5e		 pop	 esi
  000d4	83 c4 28	 add	 esp, 40			; 00000028H
  000d7	3b ec		 cmp	 ebp, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L188150:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d ec	 lea	 ecx, DWORD PTR $T188148[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188151:
  00012	8b f4		 mov	 esi, esp
  00014	8d 4d e8	 lea	 ecx, DWORD PTR $T188149[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0001d	3b f4		 cmp	 esi, esp
  0001f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?ShowError@CWebPage@@IAEXPBD@Z:
  00024	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188153
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ShowError@CWebPage@@IAEXPBD@Z ENDP			; CWebPage::ShowError
PUBLIC	??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ ; ATL::CComPtrBase<IDispatch>::operator&
PUBLIC	?GetJScript@CWebPage@@QAE_NAAV?$CComPtr@UIDispatch@@@ATL@@@Z ; CWebPage::GetJScript
PUBLIC	??B?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAUIHTMLDocument2@@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator IHTMLDocument2 *
PUBLIC	??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator->
PUBLIC	??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z ; ATL::CComPtrBase<IHTMLDocument2>::operator==
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\webinteract\webpage.cpp
_TEXT	SEGMENT
tv90 = -12						; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_spDisp$ = 8						; size = 4
?GetJScript@CWebPage@@QAE_NAAV?$CComPtr@UIDispatch@@@ATL@@@Z PROC NEAR ; CWebPage::GetJScript
; _this$ = ecx

; 94   : {

  005d0	55		 push	 ebp
  005d1	8b ec		 mov	 ebp, esp
  005d3	83 ec 0c	 sub	 esp, 12			; 0000000cH
  005d6	56		 push	 esi
  005d7	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  005de	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  005e5	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  005ec	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 95   : 	CHECK_POINTER(m_spDoc);

  005ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005f2	83 c1 04	 add	 ecx, 4
  005f5	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAUIHTMLDocument2@@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator IHTMLDocument2 *
  005fa	85 c0		 test	 eax, eax
  005fc	75 28		 jne	 SHORT $L188159
  005fe	8b f4		 mov	 esi, esp
  00600	68 00 00 00 00	 push	 OFFSET FLAT:$SG187145
  00605	6a 00		 push	 0
  00607	6a 5f		 push	 95			; 0000005fH
  00609	68 00 00 00 00	 push	 OFFSET FLAT:$SG187146
  0060e	6a 02		 push	 2
  00610	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00616	83 c4 14	 add	 esp, 20			; 00000014H
  00619	3b f4		 cmp	 esi, esp
  0061b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00620	83 f8 01	 cmp	 eax, 1
  00623	75 01		 jne	 SHORT $L188159
  00625	cc		 int	 3
$L188159:
  00626	6a 00		 push	 0
  00628	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0062b	83 c1 04	 add	 ecx, 4
  0062e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z ; ATL::CComPtrBase<IHTMLDocument2>::operator==
  00633	0f b6 c8	 movzx	 ecx, al
  00636	85 c9		 test	 ecx, ecx
  00638	74 11		 je	 SHORT $L187147
  0063a	68 00 00 00 00	 push	 OFFSET FLAT:$SG187148
  0063f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00642	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError
  00647	32 c0		 xor	 al, al
  00649	eb 66		 jmp	 SHORT $L187143
$L187147:

; 96   : 	HRESULT hr = m_spDoc->get_Script(&spDisp);

  0064b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0064e	83 c1 04	 add	 ecx, 4
  00651	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator->
  00656	89 45 f4	 mov	 DWORD PTR tv90[ebp], eax
  00659	8b 4d 08	 mov	 ecx, DWORD PTR _spDisp$[ebp]
  0065c	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ ; ATL::CComPtrBase<IDispatch>::operator&
  00661	8b f4		 mov	 esi, esp
  00663	50		 push	 eax
  00664	8b 55 f4	 mov	 edx, DWORD PTR tv90[ebp]
  00667	52		 push	 edx
  00668	8b 45 f4	 mov	 eax, DWORD PTR tv90[ebp]
  0066b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0066d	ff 51 1c	 call	 DWORD PTR [ecx+28]
  00670	3b f4		 cmp	 esi, esp
  00672	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00677	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 97   : 	ATLASSERT(SUCCEEDED(hr));

  0067a	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0067e	7d 28		 jge	 SHORT $L188160
  00680	8b f4		 mov	 esi, esp
  00682	68 00 00 00 00	 push	 OFFSET FLAT:$SG187163
  00687	6a 00		 push	 0
  00689	6a 61		 push	 97			; 00000061H
  0068b	68 00 00 00 00	 push	 OFFSET FLAT:$SG187164
  00690	6a 02		 push	 2
  00692	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00698	83 c4 14	 add	 esp, 20			; 00000014H
  0069b	3b f4		 cmp	 esi, esp
  0069d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006a2	83 f8 01	 cmp	 eax, 1
  006a5	75 01		 jne	 SHORT $L188160
  006a7	cc		 int	 3
$L188160:

; 98   : 	return SUCCEEDED(hr);

  006a8	33 c0		 xor	 eax, eax
  006aa	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  006ae	0f 9d c0	 setge	 al
$L187143:

; 99   : }

  006b1	5e		 pop	 esi
  006b2	83 c4 0c	 add	 esp, 12			; 0000000cH
  006b5	3b ec		 cmp	 ebp, esp
  006b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006bc	8b e5		 mov	 esp, ebp
  006be	5d		 pop	 ebp
  006bf	c2 04 00	 ret	 4
?GetJScript@CWebPage@@QAE_NAAV?$CComPtr@UIDispatch@@@ATL@@@Z ENDP ; CWebPage::GetJScript
_TEXT	ENDS
PUBLIC	?GetJScripts@CWebPage@@QAE_NAAV?$CComPtr@UIHTMLElementCollection@@@ATL@@@Z ; CWebPage::GetJScripts
PUBLIC	??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ ; ATL::CComPtrBase<IHTMLElementCollection>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
tv90 = -12						; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_spColl$ = 8						; size = 4
?GetJScripts@CWebPage@@QAE_NAAV?$CComPtr@UIHTMLElementCollection@@@ATL@@@Z PROC NEAR ; CWebPage::GetJScripts
; _this$ = ecx

; 102  : {

  006d0	55		 push	 ebp
  006d1	8b ec		 mov	 ebp, esp
  006d3	83 ec 0c	 sub	 esp, 12			; 0000000cH
  006d6	56		 push	 esi
  006d7	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  006de	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  006e5	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  006ec	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 	CHECK_POINTER(m_spDoc);

  006ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006f2	83 c1 04	 add	 ecx, 4
  006f5	e8 00 00 00 00	 call	 ??B?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAUIHTMLDocument2@@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator IHTMLDocument2 *
  006fa	85 c0		 test	 eax, eax
  006fc	75 28		 jne	 SHORT $L188162
  006fe	8b f4		 mov	 esi, esp
  00700	68 00 00 00 00	 push	 OFFSET FLAT:$SG187171
  00705	6a 00		 push	 0
  00707	6a 67		 push	 103			; 00000067H
  00709	68 00 00 00 00	 push	 OFFSET FLAT:$SG187172
  0070e	6a 02		 push	 2
  00710	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00716	83 c4 14	 add	 esp, 20			; 00000014H
  00719	3b f4		 cmp	 esi, esp
  0071b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00720	83 f8 01	 cmp	 eax, 1
  00723	75 01		 jne	 SHORT $L188162
  00725	cc		 int	 3
$L188162:
  00726	6a 00		 push	 0
  00728	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0072b	83 c1 04	 add	 ecx, 4
  0072e	e8 00 00 00 00	 call	 ??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z ; ATL::CComPtrBase<IHTMLDocument2>::operator==
  00733	0f b6 c8	 movzx	 ecx, al
  00736	85 c9		 test	 ecx, ecx
  00738	74 11		 je	 SHORT $L187173
  0073a	68 00 00 00 00	 push	 OFFSET FLAT:$SG187174
  0073f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00742	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError
  00747	32 c0		 xor	 al, al
  00749	eb 66		 jmp	 SHORT $L187169
$L187173:

; 104  : 	HRESULT hr = m_spDoc->get_scripts(&spColl);

  0074b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0074e	83 c1 04	 add	 ecx, 4
  00751	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ ; ATL::CComPtrBase<IHTMLDocument2>::operator->
  00756	89 45 f4	 mov	 DWORD PTR tv90[ebp], eax
  00759	8b 4d 08	 mov	 ecx, DWORD PTR _spColl$[ebp]
  0075c	e8 00 00 00 00	 call	 ??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ ; ATL::CComPtrBase<IHTMLElementCollection>::operator&
  00761	8b f4		 mov	 esi, esp
  00763	50		 push	 eax
  00764	8b 55 f4	 mov	 edx, DWORD PTR tv90[ebp]
  00767	52		 push	 edx
  00768	8b 45 f4	 mov	 eax, DWORD PTR tv90[ebp]
  0076b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076d	ff 51 48	 call	 DWORD PTR [ecx+72]
  00770	3b f4		 cmp	 esi, esp
  00772	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00777	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 105  : 	ATLASSERT(SUCCEEDED(hr));

  0077a	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0077e	7d 28		 jge	 SHORT $L188163
  00780	8b f4		 mov	 esi, esp
  00782	68 00 00 00 00	 push	 OFFSET FLAT:$SG187249
  00787	6a 00		 push	 0
  00789	6a 69		 push	 105			; 00000069H
  0078b	68 00 00 00 00	 push	 OFFSET FLAT:$SG187250
  00790	6a 02		 push	 2
  00792	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00798	83 c4 14	 add	 esp, 20			; 00000014H
  0079b	3b f4		 cmp	 esi, esp
  0079d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007a2	83 f8 01	 cmp	 eax, 1
  007a5	75 01		 jne	 SHORT $L188163
  007a7	cc		 int	 3
$L188163:

; 106  : 	return SUCCEEDED(hr);

  007a8	33 c0		 xor	 eax, eax
  007aa	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  007ae	0f 9d c0	 setge	 al
$L187169:

; 107  : }

  007b1	5e		 pop	 esi
  007b2	83 c4 0c	 add	 esp, 12			; 0000000cH
  007b5	3b ec		 cmp	 ebp, esp
  007b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007bc	8b e5		 mov	 esp, ebp
  007be	5d		 pop	 ebp
  007bf	c2 04 00	 ret	 4
?GetJScripts@CWebPage@@QAE_NAAV?$CComPtr@UIHTMLElementCollection@@@ATL@@@Z ENDP ; CWebPage::GetJScripts
_TEXT	ENDS
PUBLIC	?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
PUBLIC	?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
EXTRN	??0CStringArray@@QAE@XZ:NEAR			; CStringArray::CStringArray
EXTRN	??1CStringArray@@UAE@XZ:NEAR			; CStringArray::~CStringArray
xdata$x	SEGMENT
$T188176 DD	0ffffffffH
	DD	FLAT:$L188167
	DD	00H
	DD	FLAT:$L188168
$T188171 DD	019930520H
	DD	02H
	DD	FLAT:$T188176
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv92 = -57						; size = 1
tv91 = -56						; size = 4
$T188166 = -52						; size = 4
$T188165 = -45						; size = 1
_paramArray$ = -40					; size = 20
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strFunc$ = 8						; size = 4
_pVarResult$ = 12					; size = 4
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCComVariant@3@@Z PROC NEAR ; CWebPage::CallJScript
; _this$ = ecx

; 110  : {

  007d0	55		 push	 ebp
  007d1	8b ec		 mov	 ebp, esp
  007d3	6a ff		 push	 -1
  007d5	68 00 00 00 00	 push	 __ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCComVariant@3@@Z
  007da	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  007e0	50		 push	 eax
  007e1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  007e8	83 ec 30	 sub	 esp, 48			; 00000030H
  007eb	56		 push	 esi
  007ec	57		 push	 edi
  007ed	51		 push	 ecx
  007ee	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  007f1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  007f6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  007fb	f3 ab		 rep stosd
  007fd	59		 pop	 ecx
  007fe	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00801	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 111  : 	CStringArray paramArray;

  00808	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  0080b	e8 00 00 00 00	 call	 ??0CStringArray@@QAE@XZ	; CStringArray::CStringArray
  00810	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 112  : 	return CallJScript(strFunc,paramArray,pVarResult);

  00814	8b 45 0c	 mov	 eax, DWORD PTR _pVarResult$[ebp]
  00817	50		 push	 eax
  00818	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  0081b	51		 push	 ecx
  0081c	51		 push	 ecx
  0081d	8b cc		 mov	 ecx, esp
  0081f	89 65 cc	 mov	 DWORD PTR $T188166[ebp], esp
  00822	8b f4		 mov	 esi, esp
  00824	8d 55 08	 lea	 edx, DWORD PTR _strFunc$[ebp]
  00827	52		 push	 edx
  00828	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0082e	3b f4		 cmp	 esi, esp
  00830	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00835	89 45 c8	 mov	 DWORD PTR tv91[ebp], eax
  00838	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0083b	e8 00 00 00 00	 call	 ?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
  00840	88 45 c7	 mov	 BYTE PTR tv92[ebp], al
  00843	8a 45 c7	 mov	 al, BYTE PTR tv92[ebp]
  00846	88 45 d3	 mov	 BYTE PTR $T188165[ebp], al
  00849	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0084d	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00850	e8 00 00 00 00	 call	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
  00855	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0085c	8b f4		 mov	 esi, esp
  0085e	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00861	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00867	3b f4		 cmp	 esi, esp
  00869	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0086e	8a 45 d3	 mov	 al, BYTE PTR $T188165[ebp]

; 113  : }

  00871	52		 push	 edx
  00872	8b cd		 mov	 ecx, ebp
  00874	50		 push	 eax
  00875	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188175
  0087b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00880	58		 pop	 eax
  00881	5a		 pop	 edx
  00882	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00885	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0088c	5f		 pop	 edi
  0088d	5e		 pop	 esi
  0088e	83 c4 3c	 add	 esp, 60			; 0000003cH
  00891	3b ec		 cmp	 ebp, esp
  00893	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00898	8b e5		 mov	 esp, ebp
  0089a	5d		 pop	 ebp
  0089b	c2 08 00	 ret	 8
$L188175:
  0089e	01 00 00 00	 DD	 1
  008a2	00 00 00 00	 DD	 $L188174
$L188174:
  008a6	d8 ff ff ff	 DD	 -40			; ffffffd8H
  008aa	14 00 00 00	 DD	 20			; 00000014H
  008ae	00 00 00 00	 DD	 $L188172
$L188172:
  008b2	70		 DB	 112			; 00000070H
  008b3	61		 DB	 97			; 00000061H
  008b4	72		 DB	 114			; 00000072H
  008b5	61		 DB	 97			; 00000061H
  008b6	6d		 DB	 109			; 0000006dH
  008b7	41		 DB	 65			; 00000041H
  008b8	72		 DB	 114			; 00000072H
  008b9	72		 DB	 114			; 00000072H
  008ba	61		 DB	 97			; 00000061H
  008bb	79		 DB	 121			; 00000079H
  008bc	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188167:
  00080	8b f4		 mov	 esi, esp
  00082	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0008b	3b f4		 cmp	 esi, esp
  0008d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188168:
  00092	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00095	e9 00 00 00 00	 jmp	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
__ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCComVariant@3@@Z:
  0009a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188171
  0009f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCComVariant@3@@Z ENDP ; CWebPage::CallJScript
PUBLIC	?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0PAVCComVariant@3@@Z ; CWebPage::CallJScript
EXTRN	?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CStringArray::Add
xdata$x	SEGMENT
$T188190 DD	0ffffffffH
	DD	FLAT:$L188180
	DD	00H
	DD	FLAT:$L188181
	DD	01H
	DD	FLAT:$L188182
$T188185 DD	019930520H
	DD	03H
	DD	FLAT:$T188190
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv128 = -57						; size = 1
tv95 = -56						; size = 4
$T188179 = -52						; size = 4
$T188178 = -45						; size = 1
_paramArray$ = -40					; size = 20
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strFunc$ = 8						; size = 4
_strArg1$ = 12						; size = 4
_pVarResult$ = 16					; size = 4
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0PAVCComVariant@3@@Z PROC NEAR ; CWebPage::CallJScript
; _this$ = ecx

; 116  : {

  008c0	55		 push	 ebp
  008c1	8b ec		 mov	 ebp, esp
  008c3	6a ff		 push	 -1
  008c5	68 00 00 00 00	 push	 __ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0PAVCComVariant@3@@Z
  008ca	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  008d0	50		 push	 eax
  008d1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  008d8	83 ec 30	 sub	 esp, 48			; 00000030H
  008db	56		 push	 esi
  008dc	57		 push	 edi
  008dd	51		 push	 ecx
  008de	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  008e1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  008e6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  008eb	f3 ab		 rep stosd
  008ed	59		 pop	 ecx
  008ee	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  008f1	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 117  : 	CStringArray paramArray;

  008f8	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  008fb	e8 00 00 00 00	 call	 ??0CStringArray@@QAE@XZ	; CStringArray::CStringArray
  00900	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 118  : 	paramArray.Add(strArg1);

  00904	8d 45 0c	 lea	 eax, DWORD PTR _strArg1$[ebp]
  00907	50		 push	 eax
  00908	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  0090b	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 119  : 	return CallJScript(strFunc,paramArray,pVarResult);

  00910	8b 4d 10	 mov	 ecx, DWORD PTR _pVarResult$[ebp]
  00913	51		 push	 ecx
  00914	8d 55 d8	 lea	 edx, DWORD PTR _paramArray$[ebp]
  00917	52		 push	 edx
  00918	51		 push	 ecx
  00919	8b cc		 mov	 ecx, esp
  0091b	89 65 cc	 mov	 DWORD PTR $T188179[ebp], esp
  0091e	8b f4		 mov	 esi, esp
  00920	8d 45 08	 lea	 eax, DWORD PTR _strFunc$[ebp]
  00923	50		 push	 eax
  00924	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0092a	3b f4		 cmp	 esi, esp
  0092c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00931	89 45 c8	 mov	 DWORD PTR tv95[ebp], eax
  00934	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00937	e8 00 00 00 00	 call	 ?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
  0093c	88 45 c7	 mov	 BYTE PTR tv128[ebp], al
  0093f	8a 4d c7	 mov	 cl, BYTE PTR tv128[ebp]
  00942	88 4d d3	 mov	 BYTE PTR $T188178[ebp], cl
  00945	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00949	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  0094c	e8 00 00 00 00	 call	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
  00951	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00955	8b f4		 mov	 esi, esp
  00957	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  0095a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00960	3b f4		 cmp	 esi, esp
  00962	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00967	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0096e	8b f4		 mov	 esi, esp
  00970	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  00973	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00979	3b f4		 cmp	 esi, esp
  0097b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00980	8a 45 d3	 mov	 al, BYTE PTR $T188178[ebp]

; 120  : }

  00983	52		 push	 edx
  00984	8b cd		 mov	 ecx, ebp
  00986	50		 push	 eax
  00987	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188189
  0098d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00992	58		 pop	 eax
  00993	5a		 pop	 edx
  00994	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00997	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0099e	5f		 pop	 edi
  0099f	5e		 pop	 esi
  009a0	83 c4 3c	 add	 esp, 60			; 0000003cH
  009a3	3b ec		 cmp	 ebp, esp
  009a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009aa	8b e5		 mov	 esp, ebp
  009ac	5d		 pop	 ebp
  009ad	c2 0c 00	 ret	 12			; 0000000cH
$L188189:
  009b0	01 00 00 00	 DD	 1
  009b4	00 00 00 00	 DD	 $L188188
$L188188:
  009b8	d8 ff ff ff	 DD	 -40			; ffffffd8H
  009bc	14 00 00 00	 DD	 20			; 00000014H
  009c0	00 00 00 00	 DD	 $L188186
$L188186:
  009c4	70		 DB	 112			; 00000070H
  009c5	61		 DB	 97			; 00000061H
  009c6	72		 DB	 114			; 00000072H
  009c7	61		 DB	 97			; 00000061H
  009c8	6d		 DB	 109			; 0000006dH
  009c9	41		 DB	 65			; 00000041H
  009ca	72		 DB	 114			; 00000072H
  009cb	72		 DB	 114			; 00000072H
  009cc	61		 DB	 97			; 00000061H
  009cd	79		 DB	 121			; 00000079H
  009ce	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188180:
  000a4	8b f4		 mov	 esi, esp
  000a6	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000af	3b f4		 cmp	 esi, esp
  000b1	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188181:
  000b6	8b f4		 mov	 esi, esp
  000b8	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  000bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000c1	3b f4		 cmp	 esi, esp
  000c3	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188182:
  000c8	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  000cb	e9 00 00 00 00	 jmp	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
__ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0PAVCComVariant@3@@Z:
  000d0	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188185
  000d5	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0PAVCComVariant@3@@Z ENDP ; CWebPage::CallJScript
PUBLIC	?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00PAVCComVariant@3@@Z ; CWebPage::CallJScript
xdata$x	SEGMENT
$T188205 DD	0ffffffffH
	DD	FLAT:$L188194
	DD	00H
	DD	FLAT:$L188195
	DD	01H
	DD	FLAT:$L188196
	DD	02H
	DD	FLAT:$L188197
$T188200 DD	019930520H
	DD	04H
	DD	FLAT:$T188205
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv132 = -57						; size = 1
tv131 = -56						; size = 4
$T188193 = -52						; size = 4
$T188192 = -45						; size = 1
_paramArray$ = -40					; size = 20
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strFunc$ = 8						; size = 4
_strArg1$ = 12						; size = 4
_strArg2$ = 16						; size = 4
_pVarResult$ = 20					; size = 4
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00PAVCComVariant@3@@Z PROC NEAR ; CWebPage::CallJScript
; _this$ = ecx

; 123  : {

  009d0	55		 push	 ebp
  009d1	8b ec		 mov	 ebp, esp
  009d3	6a ff		 push	 -1
  009d5	68 00 00 00 00	 push	 __ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00PAVCComVariant@3@@Z
  009da	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  009e0	50		 push	 eax
  009e1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  009e8	83 ec 30	 sub	 esp, 48			; 00000030H
  009eb	56		 push	 esi
  009ec	57		 push	 edi
  009ed	51		 push	 ecx
  009ee	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  009f1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  009f6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  009fb	f3 ab		 rep stosd
  009fd	59		 pop	 ecx
  009fe	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00a01	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2

; 124  : 	CStringArray paramArray;

  00a08	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00a0b	e8 00 00 00 00	 call	 ??0CStringArray@@QAE@XZ	; CStringArray::CStringArray
  00a10	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 125  : 	paramArray.Add(strArg1);

  00a14	8d 45 0c	 lea	 eax, DWORD PTR _strArg1$[ebp]
  00a17	50		 push	 eax
  00a18	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00a1b	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 126  : 	paramArray.Add(strArg2);

  00a20	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  00a23	51		 push	 ecx
  00a24	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00a27	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 127  : 	return CallJScript(strFunc,paramArray,pVarResult);

  00a2c	8b 55 14	 mov	 edx, DWORD PTR _pVarResult$[ebp]
  00a2f	52		 push	 edx
  00a30	8d 45 d8	 lea	 eax, DWORD PTR _paramArray$[ebp]
  00a33	50		 push	 eax
  00a34	51		 push	 ecx
  00a35	8b cc		 mov	 ecx, esp
  00a37	89 65 cc	 mov	 DWORD PTR $T188193[ebp], esp
  00a3a	8b f4		 mov	 esi, esp
  00a3c	8d 55 08	 lea	 edx, DWORD PTR _strFunc$[ebp]
  00a3f	52		 push	 edx
  00a40	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00a46	3b f4		 cmp	 esi, esp
  00a48	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a4d	89 45 c8	 mov	 DWORD PTR tv131[ebp], eax
  00a50	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00a53	e8 00 00 00 00	 call	 ?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
  00a58	88 45 c7	 mov	 BYTE PTR tv132[ebp], al
  00a5b	8a 45 c7	 mov	 al, BYTE PTR tv132[ebp]
  00a5e	88 45 d3	 mov	 BYTE PTR $T188192[ebp], al
  00a61	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00a65	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00a68	e8 00 00 00 00	 call	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
  00a6d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00a71	8b f4		 mov	 esi, esp
  00a73	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00a76	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00a7c	3b f4		 cmp	 esi, esp
  00a7e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a83	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00a87	8b f4		 mov	 esi, esp
  00a89	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  00a8c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00a92	3b f4		 cmp	 esi, esp
  00a94	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a99	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00aa0	8b f4		 mov	 esi, esp
  00aa2	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  00aa5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00aab	3b f4		 cmp	 esi, esp
  00aad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ab2	8a 45 d3	 mov	 al, BYTE PTR $T188192[ebp]

; 128  : }

  00ab5	52		 push	 edx
  00ab6	8b cd		 mov	 ecx, ebp
  00ab8	50		 push	 eax
  00ab9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188204
  00abf	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00ac4	58		 pop	 eax
  00ac5	5a		 pop	 edx
  00ac6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00ac9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00ad0	5f		 pop	 edi
  00ad1	5e		 pop	 esi
  00ad2	83 c4 3c	 add	 esp, 60			; 0000003cH
  00ad5	3b ec		 cmp	 ebp, esp
  00ad7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00adc	8b e5		 mov	 esp, ebp
  00ade	5d		 pop	 ebp
  00adf	c2 10 00	 ret	 16			; 00000010H
$L188204:
  00ae2	01 00 00 00	 DD	 1
  00ae6	00 00 00 00	 DD	 $L188203
$L188203:
  00aea	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00aee	14 00 00 00	 DD	 20			; 00000014H
  00af2	00 00 00 00	 DD	 $L188201
$L188201:
  00af6	70		 DB	 112			; 00000070H
  00af7	61		 DB	 97			; 00000061H
  00af8	72		 DB	 114			; 00000072H
  00af9	61		 DB	 97			; 00000061H
  00afa	6d		 DB	 109			; 0000006dH
  00afb	41		 DB	 65			; 00000041H
  00afc	72		 DB	 114			; 00000072H
  00afd	72		 DB	 114			; 00000072H
  00afe	61		 DB	 97			; 00000061H
  00aff	79		 DB	 121			; 00000079H
  00b00	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188194:
  000da	8b f4		 mov	 esi, esp
  000dc	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  000df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000e5	3b f4		 cmp	 esi, esp
  000e7	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188195:
  000ec	8b f4		 mov	 esi, esp
  000ee	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  000f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000f7	3b f4		 cmp	 esi, esp
  000f9	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188196:
  000fe	8b f4		 mov	 esi, esp
  00100	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00109	3b f4		 cmp	 esi, esp
  0010b	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188197:
  00110	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00113	e9 00 00 00 00	 jmp	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
__ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00PAVCComVariant@3@@Z:
  00118	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188200
  0011d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00PAVCComVariant@3@@Z ENDP ; CWebPage::CallJScript
PUBLIC	?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@000PAVCComVariant@3@@Z ; CWebPage::CallJScript
xdata$x	SEGMENT
$T188221 DD	0ffffffffH
	DD	FLAT:$L188209
	DD	00H
	DD	FLAT:$L188210
	DD	01H
	DD	FLAT:$L188211
	DD	02H
	DD	FLAT:$L188212
	DD	03H
	DD	FLAT:$L188213
$T188216 DD	019930520H
	DD	05H
	DD	FLAT:$T188221
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv136 = -57						; size = 1
tv135 = -56						; size = 4
$T188208 = -52						; size = 4
$T188207 = -45						; size = 1
_paramArray$ = -40					; size = 20
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strFunc$ = 8						; size = 4
_strArg1$ = 12						; size = 4
_strArg2$ = 16						; size = 4
_strArg3$ = 20						; size = 4
_pVarResult$ = 24					; size = 4
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@000PAVCComVariant@3@@Z PROC NEAR ; CWebPage::CallJScript
; _this$ = ecx

; 131  : {

  00b10	55		 push	 ebp
  00b11	8b ec		 mov	 ebp, esp
  00b13	6a ff		 push	 -1
  00b15	68 00 00 00 00	 push	 __ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@000PAVCComVariant@3@@Z
  00b1a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00b20	50		 push	 eax
  00b21	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00b28	83 ec 30	 sub	 esp, 48			; 00000030H
  00b2b	56		 push	 esi
  00b2c	57		 push	 edi
  00b2d	51		 push	 ecx
  00b2e	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  00b31	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00b36	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00b3b	f3 ab		 rep stosd
  00b3d	59		 pop	 ecx
  00b3e	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00b41	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3

; 132  : 	CStringArray paramArray;

  00b48	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00b4b	e8 00 00 00 00	 call	 ??0CStringArray@@QAE@XZ	; CStringArray::CStringArray
  00b50	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 133  : 	paramArray.Add(strArg1);

  00b54	8d 45 0c	 lea	 eax, DWORD PTR _strArg1$[ebp]
  00b57	50		 push	 eax
  00b58	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00b5b	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 134  : 	paramArray.Add(strArg2);

  00b60	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  00b63	51		 push	 ecx
  00b64	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00b67	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 135  : 	paramArray.Add(strArg3);

  00b6c	8d 55 14	 lea	 edx, DWORD PTR _strArg3$[ebp]
  00b6f	52		 push	 edx
  00b70	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00b73	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add

; 136  : 	return CallJScript(strFunc,paramArray,pVarResult);

  00b78	8b 45 18	 mov	 eax, DWORD PTR _pVarResult$[ebp]
  00b7b	50		 push	 eax
  00b7c	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00b7f	51		 push	 ecx
  00b80	51		 push	 ecx
  00b81	8b cc		 mov	 ecx, esp
  00b83	89 65 cc	 mov	 DWORD PTR $T188208[ebp], esp
  00b86	8b f4		 mov	 esi, esp
  00b88	8d 55 08	 lea	 edx, DWORD PTR _strFunc$[ebp]
  00b8b	52		 push	 edx
  00b8c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00b92	3b f4		 cmp	 esi, esp
  00b94	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b99	89 45 c8	 mov	 DWORD PTR tv135[ebp], eax
  00b9c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b9f	e8 00 00 00 00	 call	 ?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ; CWebPage::CallJScript
  00ba4	88 45 c7	 mov	 BYTE PTR tv136[ebp], al
  00ba7	8a 45 c7	 mov	 al, BYTE PTR tv136[ebp]
  00baa	88 45 d3	 mov	 BYTE PTR $T188207[ebp], al
  00bad	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00bb1	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  00bb4	e8 00 00 00 00	 call	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
  00bb9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00bbd	8b f4		 mov	 esi, esp
  00bbf	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00bc2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00bc8	3b f4		 cmp	 esi, esp
  00bca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bcf	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00bd3	8b f4		 mov	 esi, esp
  00bd5	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  00bd8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00bde	3b f4		 cmp	 esi, esp
  00be0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00be5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00be9	8b f4		 mov	 esi, esp
  00beb	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  00bee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00bf4	3b f4		 cmp	 esi, esp
  00bf6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bfb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c02	8b f4		 mov	 esi, esp
  00c04	8d 4d 14	 lea	 ecx, DWORD PTR _strArg3$[ebp]
  00c07	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00c0d	3b f4		 cmp	 esi, esp
  00c0f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c14	8a 45 d3	 mov	 al, BYTE PTR $T188207[ebp]

; 137  : }

  00c17	52		 push	 edx
  00c18	8b cd		 mov	 ecx, ebp
  00c1a	50		 push	 eax
  00c1b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188220
  00c21	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00c26	58		 pop	 eax
  00c27	5a		 pop	 edx
  00c28	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00c2b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00c32	5f		 pop	 edi
  00c33	5e		 pop	 esi
  00c34	83 c4 3c	 add	 esp, 60			; 0000003cH
  00c37	3b ec		 cmp	 ebp, esp
  00c39	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c3e	8b e5		 mov	 esp, ebp
  00c40	5d		 pop	 ebp
  00c41	c2 14 00	 ret	 20			; 00000014H
$L188220:
  00c44	01 00 00 00	 DD	 1
  00c48	00 00 00 00	 DD	 $L188219
$L188219:
  00c4c	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00c50	14 00 00 00	 DD	 20			; 00000014H
  00c54	00 00 00 00	 DD	 $L188217
$L188217:
  00c58	70		 DB	 112			; 00000070H
  00c59	61		 DB	 97			; 00000061H
  00c5a	72		 DB	 114			; 00000072H
  00c5b	61		 DB	 97			; 00000061H
  00c5c	6d		 DB	 109			; 0000006dH
  00c5d	41		 DB	 65			; 00000041H
  00c5e	72		 DB	 114			; 00000072H
  00c5f	72		 DB	 114			; 00000072H
  00c60	61		 DB	 97			; 00000061H
  00c61	79		 DB	 121			; 00000079H
  00c62	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188209:
  00122	8b f4		 mov	 esi, esp
  00124	8d 4d 14	 lea	 ecx, DWORD PTR _strArg3$[ebp]
  00127	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0012d	3b f4		 cmp	 esi, esp
  0012f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188210:
  00134	8b f4		 mov	 esi, esp
  00136	8d 4d 10	 lea	 ecx, DWORD PTR _strArg2$[ebp]
  00139	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0013f	3b f4		 cmp	 esi, esp
  00141	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188211:
  00146	8b f4		 mov	 esi, esp
  00148	8d 4d 0c	 lea	 ecx, DWORD PTR _strArg1$[ebp]
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00151	3b f4		 cmp	 esi, esp
  00153	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188212:
  00158	8b f4		 mov	 esi, esp
  0015a	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  0015d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00163	3b f4		 cmp	 esi, esp
  00165	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188213:
  0016a	8d 4d d8	 lea	 ecx, DWORD PTR _paramArray$[ebp]
  0016d	e9 00 00 00 00	 jmp	 ??1CStringArray@@UAE@XZ	; CStringArray::~CStringArray
__ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@000PAVCComVariant@3@@Z:
  00172	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188216
  00177	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@000PAVCComVariant@3@@Z ENDP ; CWebPage::CallJScript
PUBLIC	??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
PUBLIC	??0CComVariant@ATL@@QAE@XZ			; ATL::CComVariant::CComVariant
PUBLIC	??1CComVariant@ATL@@QAE@XZ			; ATL::CComVariant::~CComVariant
PUBLIC	??4CComVariant@ATL@@QAEAAV01@ABV01@@Z		; ATL::CComVariant::operator=
PUBLIC	??1CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::~CComBSTR
PUBLIC	??ICComBSTR@ATL@@QAEPAPA_WXZ			; ATL::CComBSTR::operator&
PUBLIC	?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z		; ATL::CComBSTR::CopyTo
PUBLIC	??0CComBSTR@ATL@@QAE@PBD@Z			; ATL::CComBSTR::CComBSTR
EXTRN	_GUID_NULL:BYTE
EXTRN	??_U@YAPAXI@Z:NEAR				; operator new[]
EXTRN	??_V@YAXPAX@Z:NEAR				; operator delete[]
EXTRN	?GetSize@CStringArray@@QBEHXZ:NEAR		; CStringArray::GetSize
EXTRN	?GetAt@CStringArray@@QBEABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:NEAR ; CStringArray::GetAt
EXTRN	_memset:NEAR
xdata$x	SEGMENT
$T188251 DD	0ffffffffH
	DD	FLAT:$L188231
	DD	00H
	DD	FLAT:$L188232
	DD	01H
	DD	FLAT:$L188233
	DD	02H
	DD	FLAT:$L188234
	DD	02H
	DD	FLAT:$L188236
	DD	04H
	DD	FLAT:$L188237
$T188239 DD	019930520H
	DD	06H
	DD	FLAT:$T188251
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv213 = -228						; size = 4
tv169 = -224						; size = 4
tv174 = -220						; size = 4
tv206 = -216						; size = 4
tv76 = -212						; size = 4
tv84 = -208						; size = 4
$T188230 = -202						; size = 1
$T188229 = -201						; size = 1
$T188228 = -200						; size = 4
$T188227 = -196						; size = 4
$T188226 = -192						; size = 4
$T188225 = -185						; size = 1
$T188224 = -184						; size = 4
$T188223 = -177						; size = 1
_nArgErr$ = -172					; size = 4
_vaResult$ = -160					; size = 16
_excepInfo$ = -136					; size = 32
_bstr$187322 = -96					; size = 4
_i$187318 = -88						; size = 4
_dispparams$ = -80					; size = 16
_arraySize$ = -60					; size = 4
_hr$ = -56						; size = 4
_dispid$ = -48						; size = 4
_bstrMember$ = -36					; size = 4
_spScript$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strFunc$ = 8						; size = 4
_paramArray$ = 12					; size = 4
_pVarResult$ = 16					; size = 4
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z PROC NEAR ; CWebPage::CallJScript
; _this$ = ecx

; 140  : {

  00c70	55		 push	 ebp
  00c71	8b ec		 mov	 ebp, esp
  00c73	6a ff		 push	 -1
  00c75	68 00 00 00 00	 push	 __ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z
  00c7a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00c80	50		 push	 eax
  00c81	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00c88	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00c8e	56		 push	 esi
  00c8f	57		 push	 edi
  00c90	51		 push	 ecx
  00c91	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00c97	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00c9c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00ca1	f3 ab		 rep stosd
  00ca3	59		 pop	 ecx
  00ca4	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00ca7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 141  : 	CComPtr<IDispatch> spScript;

  00cae	8d 4d e8	 lea	 ecx, DWORD PTR _spScript$[ebp]
  00cb1	e8 00 00 00 00	 call	 ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
  00cb6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 142  : 	if(!GetJScript(spScript))

  00cba	8d 45 e8	 lea	 eax, DWORD PTR _spScript$[ebp]
  00cbd	50		 push	 eax
  00cbe	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00cc1	e8 00 00 00 00	 call	 ?GetJScript@CWebPage@@QAE_NAAV?$CComPtr@UIDispatch@@@ATL@@@Z ; CWebPage::GetJScript
  00cc6	0f b6 c8	 movzx	 ecx, al
  00cc9	85 c9		 test	 ecx, ecx
  00ccb	75 44		 jne	 SHORT $L187297

; 143  : 	{
; 144  : 		ShowError("Cannot GetScript");

  00ccd	68 00 00 00 00	 push	 OFFSET FLAT:$SG187298
  00cd2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00cd5	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError

; 145  : 		return false;

  00cda	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR $T188223[ebp], 0
  00ce1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ce5	8d 4d e8	 lea	 ecx, DWORD PTR _spScript$[ebp]
  00ce8	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  00ced	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00cf4	8b f4		 mov	 esi, esp
  00cf6	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00cf9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00cff	3b f4		 cmp	 esi, esp
  00d01	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d06	8a 85 4f ff ff
	ff		 mov	 al, BYTE PTR $T188223[ebp]
  00d0c	e9 84 03 00 00	 jmp	 $L187295
$L187297:

; 146  : 	}
; 147  : 	CComBSTR bstrMember(strFunc);

  00d11	8b f4		 mov	 esi, esp
  00d13	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00d16	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00d1c	3b f4		 cmp	 esi, esp
  00d1e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d23	50		 push	 eax
  00d24	8d 4d dc	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  00d27	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR
  00d2c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 148  : 	DISPID dispid = NULL;

  00d30	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _dispid$[ebp], 0

; 149  : 	HRESULT hr = spScript->GetIDsOfNames(IID_NULL,&bstrMember,1,
; 150  : 											LOCALE_SYSTEM_DEFAULT,&dispid);

  00d37	8d 4d e8	 lea	 ecx, DWORD PTR _spScript$[ebp]
  00d3a	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ; ATL::CComPtrBase<IDispatch>::operator->
  00d3f	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv84[ebp], eax
  00d45	8b f4		 mov	 esi, esp
  00d47	8d 55 d0	 lea	 edx, DWORD PTR _dispid$[ebp]
  00d4a	52		 push	 edx
  00d4b	68 00 08 00 00	 push	 2048			; 00000800H
  00d50	6a 01		 push	 1
  00d52	8d 4d dc	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  00d55	e8 00 00 00 00	 call	 ??ICComBSTR@ATL@@QAEPAPA_WXZ ; ATL::CComBSTR::operator&
  00d5a	50		 push	 eax
  00d5b	68 00 00 00 00	 push	 OFFSET FLAT:_GUID_NULL
  00d60	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv84[ebp]
  00d66	50		 push	 eax
  00d67	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv84[ebp]
  00d6d	8b 11		 mov	 edx, DWORD PTR [ecx]
  00d6f	ff 52 14	 call	 DWORD PTR [edx+20]
  00d72	3b f4		 cmp	 esi, esp
  00d74	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d79	89 45 c8	 mov	 DWORD PTR _hr$[ebp], eax

; 151  : 	if(FAILED(hr))

  00d7c	83 7d c8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00d80	0f 8d a3 00 00
	00		 jge	 $L187311

; 152  : 	{
; 153  : 		ShowError(GetSystemErrorMessage(hr));

  00d86	8b 45 c8	 mov	 eax, DWORD PTR _hr$[ebp]
  00d89	50		 push	 eax
  00d8a	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T188224[ebp]
  00d90	51		 push	 ecx
  00d91	e8 00 00 00 00	 call	 ?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z ; GetSystemErrorMessage
  00d96	83 c4 08	 add	 esp, 8
  00d99	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv76[ebp], eax
  00d9f	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR tv76[ebp]
  00da5	89 95 28 ff ff
	ff		 mov	 DWORD PTR tv206[ebp], edx
  00dab	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00daf	8b f4		 mov	 esi, esp
  00db1	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR tv206[ebp]
  00db7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00dbd	3b f4		 cmp	 esi, esp
  00dbf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00dc4	50		 push	 eax
  00dc5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00dc8	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError
  00dcd	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00dd1	8b f4		 mov	 esi, esp
  00dd3	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T188224[ebp]
  00dd9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00ddf	3b f4		 cmp	 esi, esp
  00de1	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 154  : 		return false;

  00de6	c6 85 47 ff ff
	ff 00		 mov	 BYTE PTR $T188225[ebp], 0
  00ded	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00df1	8d 4d dc	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  00df4	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00df9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00dfd	8d 4d e8	 lea	 ecx, DWORD PTR _spScript$[ebp]
  00e00	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  00e05	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00e0c	8b f4		 mov	 esi, esp
  00e0e	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00e11	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00e17	3b f4		 cmp	 esi, esp
  00e19	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e1e	8a 85 47 ff ff
	ff		 mov	 al, BYTE PTR $T188225[ebp]
  00e24	e9 6c 02 00 00	 jmp	 $L187295
$L187311:

; 155  : 	}
; 156  : 
; 157  : 	const int arraySize = paramArray.GetSize();

  00e29	8b 4d 0c	 mov	 ecx, DWORD PTR _paramArray$[ebp]
  00e2c	e8 00 00 00 00	 call	 ?GetSize@CStringArray@@QBEHXZ ; CStringArray::GetSize
  00e31	89 45 c4	 mov	 DWORD PTR _arraySize$[ebp], eax

; 158  : 
; 159  : 	DISPPARAMS dispparams;
; 160  : 	memset(&dispparams, 0, sizeof dispparams);

  00e34	6a 10		 push	 16			; 00000010H
  00e36	6a 00		 push	 0
  00e38	8d 45 b0	 lea	 eax, DWORD PTR _dispparams$[ebp]
  00e3b	50		 push	 eax
  00e3c	e8 00 00 00 00	 call	 _memset
  00e41	83 c4 0c	 add	 esp, 12			; 0000000cH

; 161  : 	dispparams.cArgs = arraySize;

  00e44	8b 4d c4	 mov	 ecx, DWORD PTR _arraySize$[ebp]
  00e47	89 4d b8	 mov	 DWORD PTR _dispparams$[ebp+8], ecx

; 162  : 	dispparams.rgvarg = new VARIANT[dispparams.cArgs];

  00e4a	8b 55 b8	 mov	 edx, DWORD PTR _dispparams$[ebp+8]
  00e4d	c1 e2 04	 shl	 edx, 4
  00e50	52		 push	 edx
  00e51	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00e56	83 c4 04	 add	 esp, 4
  00e59	89 85 40 ff ff
	ff		 mov	 DWORD PTR $T188226[ebp], eax
  00e5f	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR $T188226[ebp]
  00e65	89 45 b0	 mov	 DWORD PTR _dispparams$[ebp], eax

; 163  : 	
; 164  : 	for( int i = 0; i < arraySize; i++)

  00e68	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _i$187318[ebp], 0
  00e6f	eb 09		 jmp	 SHORT $L187319
$L187320:
  00e71	8b 4d a8	 mov	 ecx, DWORD PTR _i$187318[ebp]
  00e74	83 c1 01	 add	 ecx, 1
  00e77	89 4d a8	 mov	 DWORD PTR _i$187318[ebp], ecx
$L187319:
  00e7a	8b 55 a8	 mov	 edx, DWORD PTR _i$187318[ebp]
  00e7d	3b 55 c4	 cmp	 edx, DWORD PTR _arraySize$[ebp]
  00e80	7d 5b		 jge	 SHORT $L187321

; 165  : 	{
; 166  : 		CComBSTR bstr = paramArray.GetAt(arraySize - 1 - i); // back reading

  00e82	8b 45 c4	 mov	 eax, DWORD PTR _arraySize$[ebp]
  00e85	83 e8 01	 sub	 eax, 1
  00e88	2b 45 a8	 sub	 eax, DWORD PTR _i$187318[ebp]
  00e8b	50		 push	 eax
  00e8c	8b 4d 0c	 mov	 ecx, DWORD PTR _paramArray$[ebp]
  00e8f	e8 00 00 00 00	 call	 ?GetAt@CStringArray@@QBEABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CStringArray::GetAt
  00e94	8b f4		 mov	 esi, esp
  00e96	8b c8		 mov	 ecx, eax
  00e98	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00e9e	3b f4		 cmp	 esi, esp
  00ea0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ea5	50		 push	 eax
  00ea6	8d 4d a0	 lea	 ecx, DWORD PTR _bstr$187322[ebp]
  00ea9	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR

; 167  : 		bstr.CopyTo(&dispparams.rgvarg[i].bstrVal);

  00eae	8b 4d a8	 mov	 ecx, DWORD PTR _i$187318[ebp]
  00eb1	c1 e1 04	 shl	 ecx, 4
  00eb4	8b 55 b0	 mov	 edx, DWORD PTR _dispparams$[ebp]
  00eb7	8d 44 0a 08	 lea	 eax, DWORD PTR [edx+ecx+8]
  00ebb	50		 push	 eax
  00ebc	8d 4d a0	 lea	 ecx, DWORD PTR _bstr$187322[ebp]
  00ebf	e8 00 00 00 00	 call	 ?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z ; ATL::CComBSTR::CopyTo

; 168  : 		dispparams.rgvarg[i].vt = VT_BSTR;

  00ec4	8b 4d a8	 mov	 ecx, DWORD PTR _i$187318[ebp]
  00ec7	c1 e1 04	 shl	 ecx, 4
  00eca	8b 55 b0	 mov	 edx, DWORD PTR _dispparams$[ebp]
  00ecd	66 c7 04 0a 08
	00		 mov	 WORD PTR [edx+ecx], 8

; 169  : 	}

  00ed3	8d 4d a0	 lea	 ecx, DWORD PTR _bstr$187322[ebp]
  00ed6	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00edb	eb 94		 jmp	 SHORT $L187320
$L187321:

; 170  : 	dispparams.cNamedArgs = 0;

  00edd	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _dispparams$[ebp+12], 0

; 171  : 
; 172  : 	EXCEPINFO excepInfo;
; 173  : 	memset(&excepInfo, 0, sizeof excepInfo);

  00ee4	6a 20		 push	 32			; 00000020H
  00ee6	6a 00		 push	 0
  00ee8	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _excepInfo$[ebp]
  00eee	50		 push	 eax
  00eef	e8 00 00 00 00	 call	 _memset
  00ef4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 174  :    	CComVariant vaResult;

  00ef7	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _vaResult$[ebp]
  00efd	e8 00 00 00 00	 call	 ??0CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::CComVariant
  00f02	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 175  : 	UINT nArgErr = (UINT)-1;  // initialize to invalid arg

  00f06	c7 85 54 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR _nArgErr$[ebp], -1

; 176  :          
; 177  : 	hr = spScript->Invoke(dispid,IID_NULL,0,
; 178  : 							DISPATCH_METHOD,&dispparams,&vaResult,&excepInfo,&nArgErr);

  00f10	8d 4d e8	 lea	 ecx, DWORD PTR _spScript$[ebp]
  00f13	e8 00 00 00 00	 call	 ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ; ATL::CComPtrBase<IDispatch>::operator->
  00f18	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv174[ebp], eax
  00f1e	8b f4		 mov	 esi, esp
  00f20	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _nArgErr$[ebp]
  00f26	51		 push	 ecx
  00f27	8d 95 78 ff ff
	ff		 lea	 edx, DWORD PTR _excepInfo$[ebp]
  00f2d	52		 push	 edx
  00f2e	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _vaResult$[ebp]
  00f34	50		 push	 eax
  00f35	8d 4d b0	 lea	 ecx, DWORD PTR _dispparams$[ebp]
  00f38	51		 push	 ecx
  00f39	6a 01		 push	 1
  00f3b	6a 00		 push	 0
  00f3d	68 00 00 00 00	 push	 OFFSET FLAT:_GUID_NULL
  00f42	8b 55 d0	 mov	 edx, DWORD PTR _dispid$[ebp]
  00f45	52		 push	 edx
  00f46	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv174[ebp]
  00f4c	50		 push	 eax
  00f4d	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv174[ebp]
  00f53	8b 11		 mov	 edx, DWORD PTR [ecx]
  00f55	ff 52 18	 call	 DWORD PTR [edx+24]
  00f58	3b f4		 cmp	 esi, esp
  00f5a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f5f	89 45 c8	 mov	 DWORD PTR _hr$[ebp], eax

; 179  : 
; 180  : 	delete [] dispparams.rgvarg;

  00f62	8b 45 b0	 mov	 eax, DWORD PTR _dispparams$[ebp]
  00f65	89 85 3c ff ff
	ff		 mov	 DWORD PTR $T188227[ebp], eax
  00f6b	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR $T188227[ebp]
  00f71	51		 push	 ecx
  00f72	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00f77	83 c4 04	 add	 esp, 4

; 181  : 	if(FAILED(hr))

  00f7a	83 7d c8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00f7e	0f 8d af 00 00
	00		 jge	 $L187329

; 182  : 	{
; 183  : 		ShowError(GetSystemErrorMessage(hr));

  00f84	8b 55 c8	 mov	 edx, DWORD PTR _hr$[ebp]
  00f87	52		 push	 edx
  00f88	8d 85 38 ff ff
	ff		 lea	 eax, DWORD PTR $T188228[ebp]
  00f8e	50		 push	 eax
  00f8f	e8 00 00 00 00	 call	 ?GetSystemErrorMessage@@YA?BV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@K@Z ; GetSystemErrorMessage
  00f94	83 c4 08	 add	 esp, 8
  00f97	89 85 20 ff ff
	ff		 mov	 DWORD PTR tv169[ebp], eax
  00f9d	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR tv169[ebp]
  00fa3	89 8d 1c ff ff
	ff		 mov	 DWORD PTR tv213[ebp], ecx
  00fa9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00fad	8b f4		 mov	 esi, esp
  00faf	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR tv213[ebp]
  00fb5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00fbb	3b f4		 cmp	 esi, esp
  00fbd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00fc2	50		 push	 eax
  00fc3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00fc6	e8 00 00 00 00	 call	 ?ShowError@CWebPage@@IAEXPBD@Z ; CWebPage::ShowError
  00fcb	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00fcf	8b f4		 mov	 esi, esp
  00fd1	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR $T188228[ebp]
  00fd7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00fdd	3b f4		 cmp	 esi, esp
  00fdf	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 184  : 		return false;

  00fe4	c6 85 37 ff ff
	ff 00		 mov	 BYTE PTR $T188229[ebp], 0
  00feb	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00fef	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _vaResult$[ebp]
  00ff5	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  00ffa	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00ffe	8d 4d dc	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  01001	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  01006	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0100a	8d 4d e8	 lea	 ecx, DWORD PTR _spScript$[ebp]
  0100d	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  01012	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01019	8b f4		 mov	 esi, esp
  0101b	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  0101e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01024	3b f4		 cmp	 esi, esp
  01026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0102b	8a 85 37 ff ff
	ff		 mov	 al, BYTE PTR $T188229[ebp]
  01031	eb 62		 jmp	 SHORT $L187295
$L187329:

; 185  : 	}
; 186  : 	
; 187  : 	if(pVarResult)

  01033	83 7d 10 00	 cmp	 DWORD PTR _pVarResult$[ebp], 0
  01037	74 0f		 je	 SHORT $L187332

; 188  : 	{
; 189  : 		*pVarResult = vaResult;

  01039	8d 95 60 ff ff
	ff		 lea	 edx, DWORD PTR _vaResult$[ebp]
  0103f	52		 push	 edx
  01040	8b 4d 10	 mov	 ecx, DWORD PTR _pVarResult$[ebp]
  01043	e8 00 00 00 00	 call	 ??4CComVariant@ATL@@QAEAAV01@ABV01@@Z ; ATL::CComVariant::operator=
$L187332:

; 190  : 	}
; 191  : 	return true;

  01048	c6 85 36 ff ff
	ff 01		 mov	 BYTE PTR $T188230[ebp], 1
  0104f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01053	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _vaResult$[ebp]
  01059	e8 00 00 00 00	 call	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
  0105e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01062	8d 4d dc	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  01065	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  0106a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0106e	8d 4d e8	 lea	 ecx, DWORD PTR _spScript$[ebp]
  01071	e8 00 00 00 00	 call	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
  01076	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0107d	8b f4		 mov	 esi, esp
  0107f	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  01082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01088	3b f4		 cmp	 esi, esp
  0108a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0108f	8a 85 36 ff ff
	ff		 mov	 al, BYTE PTR $T188230[ebp]
$L187295:

; 192  : }

  01095	52		 push	 edx
  01096	8b cd		 mov	 ecx, ebp
  01098	50		 push	 eax
  01099	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188250
  0109f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  010a4	58		 pop	 eax
  010a5	5a		 pop	 edx
  010a6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  010a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  010b0	5f		 pop	 edi
  010b1	5e		 pop	 esi
  010b2	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  010b8	3b ec		 cmp	 ebp, esp
  010ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  010bf	8b e5		 mov	 esp, ebp
  010c1	5d		 pop	 ebp
  010c2	c2 0c 00	 ret	 12			; 0000000cH
$L188250:
  010c5	08 00 00 00	 DD	 8
  010c9	00 00 00 00	 DD	 $L188249
$L188249:
  010cd	e8 ff ff ff	 DD	 -24			; ffffffe8H
  010d1	04 00 00 00	 DD	 4
  010d5	00 00 00 00	 DD	 $L188240
  010d9	dc ff ff ff	 DD	 -36			; ffffffdcH
  010dd	04 00 00 00	 DD	 4
  010e1	00 00 00 00	 DD	 $L188241
  010e5	d0 ff ff ff	 DD	 -48			; ffffffd0H
  010e9	04 00 00 00	 DD	 4
  010ed	00 00 00 00	 DD	 $L188242
  010f1	b0 ff ff ff	 DD	 -80			; ffffffb0H
  010f5	10 00 00 00	 DD	 16			; 00000010H
  010f9	00 00 00 00	 DD	 $L188243
  010fd	a0 ff ff ff	 DD	 -96			; ffffffa0H
  01101	04 00 00 00	 DD	 4
  01105	00 00 00 00	 DD	 $L188244
  01109	78 ff ff ff	 DD	 -136			; ffffff78H
  0110d	20 00 00 00	 DD	 32			; 00000020H
  01111	00 00 00 00	 DD	 $L188245
  01115	60 ff ff ff	 DD	 -160			; ffffff60H
  01119	10 00 00 00	 DD	 16			; 00000010H
  0111d	00 00 00 00	 DD	 $L188246
  01121	54 ff ff ff	 DD	 -172			; ffffff54H
  01125	04 00 00 00	 DD	 4
  01129	00 00 00 00	 DD	 $L188247
$L188247:
  0112d	6e		 DB	 110			; 0000006eH
  0112e	41		 DB	 65			; 00000041H
  0112f	72		 DB	 114			; 00000072H
  01130	67		 DB	 103			; 00000067H
  01131	45		 DB	 69			; 00000045H
  01132	72		 DB	 114			; 00000072H
  01133	72		 DB	 114			; 00000072H
  01134	00		 DB	 0
$L188246:
  01135	76		 DB	 118			; 00000076H
  01136	61		 DB	 97			; 00000061H
  01137	52		 DB	 82			; 00000052H
  01138	65		 DB	 101			; 00000065H
  01139	73		 DB	 115			; 00000073H
  0113a	75		 DB	 117			; 00000075H
  0113b	6c		 DB	 108			; 0000006cH
  0113c	74		 DB	 116			; 00000074H
  0113d	00		 DB	 0
$L188245:
  0113e	65		 DB	 101			; 00000065H
  0113f	78		 DB	 120			; 00000078H
  01140	63		 DB	 99			; 00000063H
  01141	65		 DB	 101			; 00000065H
  01142	70		 DB	 112			; 00000070H
  01143	49		 DB	 73			; 00000049H
  01144	6e		 DB	 110			; 0000006eH
  01145	66		 DB	 102			; 00000066H
  01146	6f		 DB	 111			; 0000006fH
  01147	00		 DB	 0
$L188244:
  01148	62		 DB	 98			; 00000062H
  01149	73		 DB	 115			; 00000073H
  0114a	74		 DB	 116			; 00000074H
  0114b	72		 DB	 114			; 00000072H
  0114c	00		 DB	 0
$L188243:
  0114d	64		 DB	 100			; 00000064H
  0114e	69		 DB	 105			; 00000069H
  0114f	73		 DB	 115			; 00000073H
  01150	70		 DB	 112			; 00000070H
  01151	70		 DB	 112			; 00000070H
  01152	61		 DB	 97			; 00000061H
  01153	72		 DB	 114			; 00000072H
  01154	61		 DB	 97			; 00000061H
  01155	6d		 DB	 109			; 0000006dH
  01156	73		 DB	 115			; 00000073H
  01157	00		 DB	 0
$L188242:
  01158	64		 DB	 100			; 00000064H
  01159	69		 DB	 105			; 00000069H
  0115a	73		 DB	 115			; 00000073H
  0115b	70		 DB	 112			; 00000070H
  0115c	69		 DB	 105			; 00000069H
  0115d	64		 DB	 100			; 00000064H
  0115e	00		 DB	 0
$L188241:
  0115f	62		 DB	 98			; 00000062H
  01160	73		 DB	 115			; 00000073H
  01161	74		 DB	 116			; 00000074H
  01162	72		 DB	 114			; 00000072H
  01163	4d		 DB	 77			; 0000004dH
  01164	65		 DB	 101			; 00000065H
  01165	6d		 DB	 109			; 0000006dH
  01166	62		 DB	 98			; 00000062H
  01167	65		 DB	 101			; 00000065H
  01168	72		 DB	 114			; 00000072H
  01169	00		 DB	 0
$L188240:
  0116a	73		 DB	 115			; 00000073H
  0116b	70		 DB	 112			; 00000070H
  0116c	53		 DB	 83			; 00000053H
  0116d	63		 DB	 99			; 00000063H
  0116e	72		 DB	 114			; 00000072H
  0116f	69		 DB	 105			; 00000069H
  01170	70		 DB	 112			; 00000070H
  01171	74		 DB	 116			; 00000074H
  01172	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188231:
  0017c	8b f4		 mov	 esi, esp
  0017e	8d 4d 08	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00181	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00187	3b f4		 cmp	 esi, esp
  00189	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188232:
  0018e	8d 4d e8	 lea	 ecx, DWORD PTR _spScript$[ebp]
  00191	e9 00 00 00 00	 jmp	 ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
$L188233:
  00196	8d 4d dc	 lea	 ecx, DWORD PTR _bstrMember$[ebp]
  00199	e9 00 00 00 00	 jmp	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
$L188234:
  0019e	8b f4		 mov	 esi, esp
  001a0	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T188224[ebp]
  001a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001ac	3b f4		 cmp	 esi, esp
  001ae	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188236:
  001b3	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _vaResult$[ebp]
  001b9	e9 00 00 00 00	 jmp	 ??1CComVariant@ATL@@QAE@XZ ; ATL::CComVariant::~CComVariant
$L188237:
  001be	8b f4		 mov	 esi, esp
  001c0	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR $T188228[ebp]
  001c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001cc	3b f4		 cmp	 esi, esp
  001ce	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z:
  001d3	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188239
  001d8	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CallJScript@CWebPage@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABVCStringArray@@PAVCComVariant@3@@Z ENDP ; CWebPage::CallJScript
PUBLIC	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
PUBLIC	?ScanJScript@CWebPage@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV23@AAVCStringArray@@@Z ; CWebPage::ScanJScript
EXTRN	?RemoveAll@CStringArray@@QAEXXZ:NEAR		; CStringArray::RemoveAll
EXTRN	__imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ:NEAR
xdata$x	SEGMENT
$T188288 DD	0ffffffffH
	DD	FLAT:$L188260
	DD	00H
	DD	FLAT:$L188261
	DD	01H
	DD	FLAT:$L188263
	DD	01H
	DD	FLAT:$L188270
	DD	03H
	DD	FLAT:$L188272
	DD	04H
	DD	FLAT:$L188273
	DD	05H
	DD	FLAT:$L188275
$T188277 DD	019930520H
	DD	07H
	DD	FLAT:$T188288
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv298 = -180						; size = 4
tv296 = -176						; size = 4
tv295 = -172						; size = 4
tv289 = -168						; size = 4
tv288 = -164						; size = 4
tv283 = -160						; size = 4
tv282 = -156						; size = 4
tv270 = -152						; size = 4
tv269 = -148						; size = 4
tv263 = -144						; size = 4
tv262 = -140						; size = 4
$T188267 = -136						; size = 4
$T188259 = -132						; size = 4
$T188258 = -128						; size = 4
$T188257 = -121						; size = 1
$T188256 = -120						; size = 4
$T188255 = -116						; size = 4
$T188254 = -112						; size = 4
$T188253 = -108						; size = 4
_strArg$ = -100						; size = 4
_strArgs$ = -88						; size = 4
_strFunc$ = -76						; size = 4
_strStop$187357 = -64					; size = 4
_strStart$187347 = -52					; size = 4
_bFound$ = -41						; size = 1
_strSrc$ = -36						; size = 4
_strDelim$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_strAText$ = 12						; size = 4
_args$ = 16						; size = 4
?ScanJScript@CWebPage@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV23@AAVCStringArray@@@Z PROC NEAR ; CWebPage::ScanJScript
; _this$ = ecx

; 196  : {

  01180	55		 push	 ebp
  01181	8b ec		 mov	 ebp, esp
  01183	6a ff		 push	 -1
  01185	68 00 00 00 00	 push	 __ehhandler$?ScanJScript@CWebPage@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV23@AAVCStringArray@@@Z
  0118a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01190	50		 push	 eax
  01191	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01198	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  0119e	56		 push	 esi
  0119f	57		 push	 edi
  011a0	51		 push	 ecx
  011a1	8d bd 4c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-180]
  011a7	b9 2a 00 00 00	 mov	 ecx, 42			; 0000002aH
  011ac	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  011b1	f3 ab		 rep stosd
  011b3	59		 pop	 ecx
  011b4	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  011b7	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T188267[ebp], 0

; 197  : 	args.RemoveAll();

  011c1	8b 4d 10	 mov	 ecx, DWORD PTR _args$[ebp]
  011c4	e8 00 00 00 00	 call	 ?RemoveAll@CStringArray@@QAEXXZ ; CStringArray::RemoveAll

; 198  : 	CString strDelim(" \n\r\t"),strSrc(strAText);

  011c9	8b f4		 mov	 esi, esp
  011cb	68 00 00 00 00	 push	 OFFSET FLAT:$SG187341
  011d0	8d 4d e8	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  011d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  011d9	3b f4		 cmp	 esi, esp
  011db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011e0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  011e7	8b f4		 mov	 esi, esp
  011e9	8b 45 0c	 mov	 eax, DWORD PTR _strAText$[ebp]
  011ec	50		 push	 eax
  011ed	8d 4d dc	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  011f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  011f6	3b f4		 cmp	 esi, esp
  011f8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011fd	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 199  : 	bool bFound = false;

  01201	c6 45 d7 00	 mov	 BYTE PTR _bFound$[ebp], 0
$L187345:

; 200  : 	while(!strSrc.IsEmpty())

  01205	8b f4		 mov	 esi, esp
  01207	8d 4d dc	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  0120a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  01210	3b f4		 cmp	 esi, esp
  01212	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01217	0f b6 c8	 movzx	 ecx, al
  0121a	85 c9		 test	 ecx, ecx
  0121c	0f 85 40 01 00
	00		 jne	 $L187346

; 201  : 	{
; 202  : 		CString strStart = GetNextToken(strSrc,strDelim);

  01222	6a 01		 push	 1
  01224	6a 00		 push	 0
  01226	51		 push	 ecx
  01227	8b cc		 mov	 ecx, esp
  01229	89 65 94	 mov	 DWORD PTR $T188253[ebp], esp
  0122c	8b f4		 mov	 esi, esp
  0122e	8d 55 e8	 lea	 edx, DWORD PTR _strDelim$[ebp]
  01231	52		 push	 edx
  01232	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01238	3b f4		 cmp	 esi, esp
  0123a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0123f	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv262[ebp], eax
  01245	8d 45 dc	 lea	 eax, DWORD PTR _strSrc$[ebp]
  01248	50		 push	 eax
  01249	8d 4d cc	 lea	 ecx, DWORD PTR _strStart$187347[ebp]
  0124c	51		 push	 ecx
  0124d	e8 00 00 00 00	 call	 ?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
  01252	83 c4 14	 add	 esp, 20			; 00000014H
  01255	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv263[ebp], eax
  0125b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 203  : 		if(strStart == "function")

  0125f	68 00 00 00 00	 push	 OFFSET FLAT:$SG187351
  01264	8d 55 cc	 lea	 edx, DWORD PTR _strStart$187347[ebp]
  01267	52		 push	 edx
  01268	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  0126d	83 c4 08	 add	 esp, 8
  01270	0f b6 c0	 movzx	 eax, al
  01273	85 c0		 test	 eax, eax
  01275	74 1f		 je	 SHORT $L187350

; 204  : 		{
; 205  : 			bFound = true;

  01277	c6 45 d7 01	 mov	 BYTE PTR _bFound$[ebp], 1

; 206  : 			break;

  0127b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0127f	8b f4		 mov	 esi, esp
  01281	8d 4d cc	 lea	 ecx, DWORD PTR _strStart$187347[ebp]
  01284	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0128a	3b f4		 cmp	 esi, esp
  0128c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01291	e9 cc 00 00 00	 jmp	 $L187346
$L187350:

; 207  : 		}
; 208  : 		if(strStart == "/*")

  01296	68 00 00 00 00	 push	 OFFSET FLAT:$SG187353
  0129b	8d 4d cc	 lea	 ecx, DWORD PTR _strStart$187347[ebp]
  0129e	51		 push	 ecx
  0129f	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  012a4	83 c4 08	 add	 esp, 8
  012a7	0f b6 d0	 movzx	 edx, al
  012aa	85 d2		 test	 edx, edx
  012ac	0f 84 95 00 00
	00		 je	 $L187352
$L187355:

; 209  : 		{
; 210  : 			// Skip comments
; 211  : 			while(!strSrc.IsEmpty())

  012b2	8b f4		 mov	 esi, esp
  012b4	8d 4d dc	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  012b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  012bd	3b f4		 cmp	 esi, esp
  012bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012c4	0f b6 c0	 movzx	 eax, al
  012c7	85 c0		 test	 eax, eax
  012c9	75 7c		 jne	 SHORT $L187352

; 212  : 			{
; 213  : 				CString strStop = GetNextToken(strSrc,strDelim);

  012cb	6a 01		 push	 1
  012cd	6a 00		 push	 0
  012cf	51		 push	 ecx
  012d0	8b cc		 mov	 ecx, esp
  012d2	89 65 90	 mov	 DWORD PTR $T188254[ebp], esp
  012d5	8b f4		 mov	 esi, esp
  012d7	8d 55 e8	 lea	 edx, DWORD PTR _strDelim$[ebp]
  012da	52		 push	 edx
  012db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  012e1	3b f4		 cmp	 esi, esp
  012e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012e8	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv269[ebp], eax
  012ee	8d 45 dc	 lea	 eax, DWORD PTR _strSrc$[ebp]
  012f1	50		 push	 eax
  012f2	8d 4d c0	 lea	 ecx, DWORD PTR _strStop$187357[ebp]
  012f5	51		 push	 ecx
  012f6	e8 00 00 00 00	 call	 ?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
  012fb	83 c4 14	 add	 esp, 20			; 00000014H
  012fe	89 85 68 ff ff
	ff		 mov	 DWORD PTR tv270[ebp], eax

; 214  : 				if(strStop == "*/")

  01304	68 00 00 00 00	 push	 OFFSET FLAT:$SG187361
  01309	8d 55 c0	 lea	 edx, DWORD PTR _strStop$187357[ebp]
  0130c	52		 push	 edx
  0130d	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  01312	83 c4 08	 add	 esp, 8
  01315	0f b6 c0	 movzx	 eax, al
  01318	85 c0		 test	 eax, eax
  0131a	74 14		 je	 SHORT $L187360

; 215  : 				{
; 216  : 					break;

  0131c	8b f4		 mov	 esi, esp
  0131e	8d 4d c0	 lea	 ecx, DWORD PTR _strStop$187357[ebp]
  01321	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01327	3b f4		 cmp	 esi, esp
  01329	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0132e	eb 17		 jmp	 SHORT $L187352
$L187360:

; 217  : 				}
; 218  : 			}

  01330	8b f4		 mov	 esi, esp
  01332	8d 4d c0	 lea	 ecx, DWORD PTR _strStop$187357[ebp]
  01335	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0133b	3b f4		 cmp	 esi, esp
  0133d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01342	e9 6b ff ff ff	 jmp	 $L187355
$L187352:

; 219  : 		}
; 220  : 	}

  01347	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0134b	8b f4		 mov	 esi, esp
  0134d	8d 4d cc	 lea	 ecx, DWORD PTR _strStart$187347[ebp]
  01350	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01356	3b f4		 cmp	 esi, esp
  01358	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0135d	e9 a3 fe ff ff	 jmp	 $L187345
$L187346:

; 221  : 
; 222  : 	if(!bFound)

  01362	0f b6 4d d7	 movzx	 ecx, BYTE PTR _bFound$[ebp]
  01366	85 c9		 test	 ecx, ecx
  01368	75 5d		 jne	 SHORT $L187362

; 223  : 		return "";

  0136a	8b f4		 mov	 esi, esp
  0136c	68 00 00 00 00	 push	 OFFSET FLAT:$SG187363
  01371	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01374	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  0137a	3b f4		 cmp	 esi, esp
  0137c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01381	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR $T188267[ebp]
  01387	83 ca 01	 or	 edx, 1
  0138a	89 95 78 ff ff
	ff		 mov	 DWORD PTR $T188267[ebp], edx
  01390	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01394	8b f4		 mov	 esi, esp
  01396	8d 4d dc	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  01399	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0139f	3b f4		 cmp	 esi, esp
  013a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  013ad	8b f4		 mov	 esi, esp
  013af	8d 4d e8	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  013b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  013b8	3b f4		 cmp	 esi, esp
  013ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013bf	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  013c2	e9 f5 01 00 00	 jmp	 $L187339
$L187362:

; 224  : 	
; 225  : 	CString strFunc = GetNextToken(strSrc,"(",true);

  013c7	6a 01		 push	 1
  013c9	6a 01		 push	 1
  013cb	51		 push	 ecx
  013cc	8b cc		 mov	 ecx, esp
  013ce	89 65 8c	 mov	 DWORD PTR $T188255[ebp], esp
  013d1	8b f4		 mov	 esi, esp
  013d3	68 00 00 00 00	 push	 OFFSET FLAT:$SG187367
  013d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  013de	3b f4		 cmp	 esi, esp
  013e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013e5	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv282[ebp], eax
  013eb	8d 45 dc	 lea	 eax, DWORD PTR _strSrc$[ebp]
  013ee	50		 push	 eax
  013ef	8d 4d b4	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  013f2	51		 push	 ecx
  013f3	e8 00 00 00 00	 call	 ?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
  013f8	83 c4 14	 add	 esp, 20			; 00000014H
  013fb	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv283[ebp], eax
  01401	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 226  : 	CString strArgs = GetNextToken(strSrc,")",true);

  01405	6a 01		 push	 1
  01407	6a 01		 push	 1
  01409	51		 push	 ecx
  0140a	8b cc		 mov	 ecx, esp
  0140c	89 65 88	 mov	 DWORD PTR $T188256[ebp], esp
  0140f	8b f4		 mov	 esi, esp
  01411	68 00 00 00 00	 push	 OFFSET FLAT:$SG187371
  01416	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  0141c	3b f4		 cmp	 esi, esp
  0141e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01423	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv288[ebp], eax
  01429	8d 55 dc	 lea	 edx, DWORD PTR _strSrc$[ebp]
  0142c	52		 push	 edx
  0142d	8d 45 a8	 lea	 eax, DWORD PTR _strArgs$[ebp]
  01430	50		 push	 eax
  01431	e8 00 00 00 00	 call	 ?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
  01436	83 c4 14	 add	 esp, 20			; 00000014H
  01439	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv289[ebp], eax
  0143f	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 227  : 
; 228  : 	// Parse arguments
; 229  : 	CString strArg;

  01443	8b f4		 mov	 esi, esp
  01445	8d 4d 9c	 lea	 ecx, DWORD PTR _strArg$[ebp]
  01448	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0144e	3b f4		 cmp	 esi, esp
  01450	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01455	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
$L187374:

; 230  : 	while(!(strArg = GetNextToken(strArgs,",")).IsEmpty())

  01459	6a 01		 push	 1
  0145b	6a 00		 push	 0
  0145d	51		 push	 ecx
  0145e	8b cc		 mov	 ecx, esp
  01460	89 65 80	 mov	 DWORD PTR $T188258[ebp], esp
  01463	8b f4		 mov	 esi, esp
  01465	68 00 00 00 00	 push	 OFFSET FLAT:$SG187379
  0146a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  01470	3b f4		 cmp	 esi, esp
  01472	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01477	89 85 54 ff ff
	ff		 mov	 DWORD PTR tv295[ebp], eax
  0147d	8d 4d a8	 lea	 ecx, DWORD PTR _strArgs$[ebp]
  01480	51		 push	 ecx
  01481	8d 95 7c ff ff
	ff		 lea	 edx, DWORD PTR $T188259[ebp]
  01487	52		 push	 edx
  01488	e8 00 00 00 00	 call	 ?GetNextToken@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV12@V12@_N2@Z ; GetNextToken
  0148d	83 c4 14	 add	 esp, 20			; 00000014H
  01490	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv296[ebp], eax
  01496	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv296[ebp]
  0149c	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv298[ebp], eax
  014a2	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  014a6	8b f4		 mov	 esi, esp
  014a8	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv298[ebp]
  014ae	51		 push	 ecx
  014af	8d 4d 9c	 lea	 ecx, DWORD PTR _strArg$[ebp]
  014b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  014b8	3b f4		 cmp	 esi, esp
  014ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014bf	8b f4		 mov	 esi, esp
  014c1	8b c8		 mov	 ecx, eax
  014c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  014c9	3b f4		 cmp	 esi, esp
  014cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014d0	0f b6 d0	 movzx	 edx, al
  014d3	f7 da		 neg	 edx
  014d5	1b d2		 sbb	 edx, edx
  014d7	42		 inc	 edx
  014d8	88 55 87	 mov	 BYTE PTR $T188257[ebp], dl
  014db	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  014df	8b f4		 mov	 esi, esp
  014e1	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T188259[ebp]
  014e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  014ed	3b f4		 cmp	 esi, esp
  014ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014f4	0f b6 45 87	 movzx	 eax, BYTE PTR $T188257[ebp]
  014f8	85 c0		 test	 eax, eax
  014fa	74 11		 je	 SHORT $L187375

; 231  : 		args.Add(strArg);

  014fc	8d 4d 9c	 lea	 ecx, DWORD PTR _strArg$[ebp]
  014ff	51		 push	 ecx
  01500	8b 4d 10	 mov	 ecx, DWORD PTR _args$[ebp]
  01503	e8 00 00 00 00	 call	 ?Add@CStringArray@@QAEHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CStringArray::Add
  01508	e9 4c ff ff ff	 jmp	 $L187374
$L187375:

; 232  : 
; 233  : 	strAText= strSrc;

  0150d	8b f4		 mov	 esi, esp
  0150f	8d 55 dc	 lea	 edx, DWORD PTR _strSrc$[ebp]
  01512	52		 push	 edx
  01513	8b 4d 0c	 mov	 ecx, DWORD PTR _strAText$[ebp]
  01516	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  0151c	3b f4		 cmp	 esi, esp
  0151e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 234  : 	return strFunc;

  01523	8b f4		 mov	 esi, esp
  01525	8d 45 b4	 lea	 eax, DWORD PTR _strFunc$[ebp]
  01528	50		 push	 eax
  01529	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0152c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01532	3b f4		 cmp	 esi, esp
  01534	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01539	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR $T188267[ebp]
  0153f	83 c9 01	 or	 ecx, 1
  01542	89 8d 78 ff ff
	ff		 mov	 DWORD PTR $T188267[ebp], ecx
  01548	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0154c	8b f4		 mov	 esi, esp
  0154e	8d 4d 9c	 lea	 ecx, DWORD PTR _strArg$[ebp]
  01551	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01557	3b f4		 cmp	 esi, esp
  01559	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0155e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01562	8b f4		 mov	 esi, esp
  01564	8d 4d a8	 lea	 ecx, DWORD PTR _strArgs$[ebp]
  01567	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0156d	3b f4		 cmp	 esi, esp
  0156f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01574	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01578	8b f4		 mov	 esi, esp
  0157a	8d 4d b4	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  0157d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01583	3b f4		 cmp	 esi, esp
  01585	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0158a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0158e	8b f4		 mov	 esi, esp
  01590	8d 4d dc	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  01593	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01599	3b f4		 cmp	 esi, esp
  0159b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  015a7	8b f4		 mov	 esi, esp
  015a9	8d 4d e8	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  015ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  015b2	3b f4		 cmp	 esi, esp
  015b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015b9	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L187339:

; 235  : }

  015bc	52		 push	 edx
  015bd	8b cd		 mov	 ecx, ebp
  015bf	50		 push	 eax
  015c0	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188287
  015c6	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  015cb	58		 pop	 eax
  015cc	5a		 pop	 edx
  015cd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  015d0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  015d7	5f		 pop	 edi
  015d8	5e		 pop	 esi
  015d9	81 c4 b4 00 00
	00		 add	 esp, 180		; 000000b4H
  015df	3b ec		 cmp	 ebp, esp
  015e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015e6	8b e5		 mov	 esp, ebp
  015e8	5d		 pop	 ebp
  015e9	c2 0c 00	 ret	 12			; 0000000cH
$L188287:
  015ec	07 00 00 00	 DD	 7
  015f0	00 00 00 00	 DD	 $L188286
$L188286:
  015f4	e8 ff ff ff	 DD	 -24			; ffffffe8H
  015f8	04 00 00 00	 DD	 4
  015fc	00 00 00 00	 DD	 $L188278
  01600	dc ff ff ff	 DD	 -36			; ffffffdcH
  01604	04 00 00 00	 DD	 4
  01608	00 00 00 00	 DD	 $L188279
  0160c	cc ff ff ff	 DD	 -52			; ffffffccH
  01610	04 00 00 00	 DD	 4
  01614	00 00 00 00	 DD	 $L188280
  01618	c0 ff ff ff	 DD	 -64			; ffffffc0H
  0161c	04 00 00 00	 DD	 4
  01620	00 00 00 00	 DD	 $L188281
  01624	b4 ff ff ff	 DD	 -76			; ffffffb4H
  01628	04 00 00 00	 DD	 4
  0162c	00 00 00 00	 DD	 $L188282
  01630	a8 ff ff ff	 DD	 -88			; ffffffa8H
  01634	04 00 00 00	 DD	 4
  01638	00 00 00 00	 DD	 $L188283
  0163c	9c ff ff ff	 DD	 -100			; ffffff9cH
  01640	04 00 00 00	 DD	 4
  01644	00 00 00 00	 DD	 $L188284
$L188284:
  01648	73		 DB	 115			; 00000073H
  01649	74		 DB	 116			; 00000074H
  0164a	72		 DB	 114			; 00000072H
  0164b	41		 DB	 65			; 00000041H
  0164c	72		 DB	 114			; 00000072H
  0164d	67		 DB	 103			; 00000067H
  0164e	00		 DB	 0
$L188283:
  0164f	73		 DB	 115			; 00000073H
  01650	74		 DB	 116			; 00000074H
  01651	72		 DB	 114			; 00000072H
  01652	41		 DB	 65			; 00000041H
  01653	72		 DB	 114			; 00000072H
  01654	67		 DB	 103			; 00000067H
  01655	73		 DB	 115			; 00000073H
  01656	00		 DB	 0
$L188282:
  01657	73		 DB	 115			; 00000073H
  01658	74		 DB	 116			; 00000074H
  01659	72		 DB	 114			; 00000072H
  0165a	46		 DB	 70			; 00000046H
  0165b	75		 DB	 117			; 00000075H
  0165c	6e		 DB	 110			; 0000006eH
  0165d	63		 DB	 99			; 00000063H
  0165e	00		 DB	 0
$L188281:
  0165f	73		 DB	 115			; 00000073H
  01660	74		 DB	 116			; 00000074H
  01661	72		 DB	 114			; 00000072H
  01662	53		 DB	 83			; 00000053H
  01663	74		 DB	 116			; 00000074H
  01664	6f		 DB	 111			; 0000006fH
  01665	70		 DB	 112			; 00000070H
  01666	00		 DB	 0
$L188280:
  01667	73		 DB	 115			; 00000073H
  01668	74		 DB	 116			; 00000074H
  01669	72		 DB	 114			; 00000072H
  0166a	53		 DB	 83			; 00000053H
  0166b	74		 DB	 116			; 00000074H
  0166c	61		 DB	 97			; 00000061H
  0166d	72		 DB	 114			; 00000072H
  0166e	74		 DB	 116			; 00000074H
  0166f	00		 DB	 0
$L188279:
  01670	73		 DB	 115			; 00000073H
  01671	74		 DB	 116			; 00000074H
  01672	72		 DB	 114			; 00000072H
  01673	53		 DB	 83			; 00000053H
  01674	72		 DB	 114			; 00000072H
  01675	63		 DB	 99			; 00000063H
  01676	00		 DB	 0
$L188278:
  01677	73		 DB	 115			; 00000073H
  01678	74		 DB	 116			; 00000074H
  01679	72		 DB	 114			; 00000072H
  0167a	44		 DB	 68			; 00000044H
  0167b	65		 DB	 101			; 00000065H
  0167c	6c		 DB	 108			; 0000006cH
  0167d	69		 DB	 105			; 00000069H
  0167e	6d		 DB	 109			; 0000006dH
  0167f	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188260:
  001dd	8b f4		 mov	 esi, esp
  001df	8d 4d e8	 lea	 ecx, DWORD PTR _strDelim$[ebp]
  001e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001e8	3b f4		 cmp	 esi, esp
  001ea	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188261:
  001ef	8b f4		 mov	 esi, esp
  001f1	8d 4d dc	 lea	 ecx, DWORD PTR _strSrc$[ebp]
  001f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001fa	3b f4		 cmp	 esi, esp
  001fc	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188263:
  00201	8b f4		 mov	 esi, esp
  00203	8d 4d cc	 lea	 ecx, DWORD PTR _strStart$187347[ebp]
  00206	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0020c	3b f4		 cmp	 esi, esp
  0020e	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188270:
  00213	8b f4		 mov	 esi, esp
  00215	8d 4d b4	 lea	 ecx, DWORD PTR _strFunc$[ebp]
  00218	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0021e	3b f4		 cmp	 esi, esp
  00220	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188272:
  00225	8b f4		 mov	 esi, esp
  00227	8d 4d a8	 lea	 ecx, DWORD PTR _strArgs$[ebp]
  0022a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00230	3b f4		 cmp	 esi, esp
  00232	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188273:
  00237	8b f4		 mov	 esi, esp
  00239	8d 4d 9c	 lea	 ecx, DWORD PTR _strArg$[ebp]
  0023c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00242	3b f4		 cmp	 esi, esp
  00244	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188275:
  00249	8b f4		 mov	 esi, esp
  0024b	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T188259[ebp]
  00251	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00257	3b f4		 cmp	 esi, esp
  00259	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?ScanJScript@CWebPage@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV23@AAVCStringArray@@@Z:
  0025e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188277
  00263	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ScanJScript@CWebPage@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAV23@AAVCStringArray@@@Z ENDP ; CWebPage::ScanJScript
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	__imp__GetVersionExA@4:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -164				; size = 4
_ver$ = -156						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 5c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-164]
  00011	b9 29 00 00 00	 mov	 ecx, 41			; 00000029H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

  00025	c7 85 64 ff ff
	ff 94 00 00 00	 mov	 DWORD PTR _ver$[ebp], 148 ; 00000094H

; 139  : 	::GetVersionEx( &ver );

  0002f	8b f4		 mov	 esi, esp
  00031	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _ver$[ebp]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00045	83 bd 74 ff ff
	ff 02		 cmp	 DWORD PTR _ver$[ebp+16], 2
  0004c	75 15		 jne	 SHORT $L24163
  0004e	83 bd 68 ff ff
	ff 05		 cmp	 DWORD PTR _ver$[ebp+4], 5
  00055	72 0c		 jb	 SHORT $L24163

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  00057	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

  00061	eb 0a		 jmp	 SHORT $L24164
$L24163:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00063	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L24164:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  0006d	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _pfnGetThreadACP$[ebp]
  00073	51		 push	 ecx
  00074	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00079	e8 00 00 00 00	 call	 ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  0007e	8b f4		 mov	 esi, esp
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 152  : }

  0008d	52		 push	 edx
  0008e	8b cd		 mov	 ecx, ebp
  00090	50		 push	 eax
  00091	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188295
  00097	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009c	58		 pop	 eax
  0009d	5a		 pop	 edx
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	81 c4 a4 00 00
	00		 add	 esp, 164		; 000000a4H
  000ae	3b ec		 cmp	 ebp, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
$L188295:
  000b9	01 00 00 00	 DD	 1
  000bd	00 00 00 00	 DD	 $L188294
$L188294:
  000c1	64 ff ff ff	 DD	 -156			; ffffff64H
  000c5	94 00 00 00	 DD	 148			; 00000094H
  000c9	00 00 00 00	 DD	 $L188291
$L188291:
  000cd	76		 DB	 118			; 00000076H
  000ce	65		 DB	 101			; 00000065H
  000cf	72		 DB	 114			; 00000072H
  000d0	00		 DB	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _pNew$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8
  00014	3b f4		 cmp	 esi, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 93   : }

  0001b	5e		 pop	 esi
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$24151 = -32					; size = 4
_szACP$ = -24						; size = 7
_lcidThread$ = -12					; size = 4
_nACP$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  00033	8b f4		 mov	 esi, esp
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	89 45 f4	 mov	 DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  00045	8b f4		 mov	 esi, esp
  00047	6a 07		 push	 7
  00049	8d 45 e8	 lea	 eax, DWORD PTR _szACP$[ebp]
  0004c	50		 push	 eax
  0004d	68 04 10 00 00	 push	 4100			; 00001004H
  00052	8b 4d f4	 mov	 ecx, DWORD PTR _lcidThread$[ebp]
  00055	51		 push	 ecx
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	85 c0		 test	 eax, eax
  00065	74 34		 je	 SHORT $L24150

; 111  : 	{
; 112  : 		char* pch = szACP;

  00067	8d 55 e8	 lea	 edx, DWORD PTR _szACP$[ebp]
  0006a	89 55 e0	 mov	 DWORD PTR _pch$24151[ebp], edx
$L24153:

; 113  : 		while (*pch != '\0')

  0006d	8b 45 e0	 mov	 eax, DWORD PTR _pch$24151[ebp]
  00070	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00073	85 c9		 test	 ecx, ecx
  00075	74 24		 je	 SHORT $L24150

; 114  : 		{
; 115  : 			nACP *= 10;

  00077	8b 55 f8	 mov	 edx, DWORD PTR _nACP$[ebp]
  0007a	6b d2 0a	 imul	 edx, 10			; 0000000aH
  0007d	89 55 f8	 mov	 DWORD PTR _nACP$[ebp], edx

; 116  : 			nACP += *pch++ - '0';

  00080	8b 45 e0	 mov	 eax, DWORD PTR _pch$24151[ebp]
  00083	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00086	8b 55 f8	 mov	 edx, DWORD PTR _nACP$[ebp]
  00089	8d 44 0a d0	 lea	 eax, DWORD PTR [edx+ecx-48]
  0008d	89 45 f8	 mov	 DWORD PTR _nACP$[ebp], eax
  00090	8b 4d e0	 mov	 ecx, DWORD PTR _pch$24151[ebp]
  00093	83 c1 01	 add	 ecx, 1
  00096	89 4d e0	 mov	 DWORD PTR _pch$24151[ebp], ecx

; 117  : 		}

  00099	eb d2		 jmp	 SHORT $L24153
$L24150:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  0009b	83 7d f8 00	 cmp	 DWORD PTR _nACP$[ebp], 0
  0009f	75 12		 jne	 SHORT $L24155

; 121  : 		nACP = ::GetACP();

  000a1	8b f4		 mov	 esi, esp
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	89 45 f8	 mov	 DWORD PTR _nACP$[ebp], eax
$L24155:

; 122  : 
; 123  : 	return nACP;

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _nACP$[ebp]

; 124  : }

  000b6	52		 push	 edx
  000b7	8b cd		 mov	 ecx, ebp
  000b9	50		 push	 eax
  000ba	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188303
  000c0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c5	58		 pop	 eax
  000c6	5a		 pop	 edx
  000c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ca	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cf	5e		 pop	 esi
  000d0	83 c4 20	 add	 esp, 32			; 00000020H
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
$L188303:
  000de	01 00 00 00	 DD	 1
  000e2	00 00 00 00	 DD	 $L188302
$L188302:
  000e6	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000ea	07 00 00 00	 DD	 7
  000ee	00 00 00 00	 DD	 $L188300
$L188300:
  000f2	73		 DB	 115			; 00000073H
  000f3	7a		 DB	 122			; 0000007aH
  000f4	41		 DB	 65			; 00000041H
  000f5	43		 DB	 67			; 00000043H
  000f6	50		 DB	 80			; 00000050H
  000f7	00		 DB	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  : 	return( CP_THREAD_ACP );

  00003	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
EXTRN	__imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ:NEAR
EXTRN	__imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z:NEAR
EXTRN	__imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z:NEAR
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
xdata$x	SEGMENT
$T188316 DD	0ffffffffH
	DD	FLAT:$L188306
$T188311 DD	019930520H
	DD	01H
	DD	FLAT:$T188316
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
_TEXT	SEGMENT
$T188308 = -28						; size = 4
_strResult$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_psz1$ = 12						; size = 4
_str2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z PROC NEAR ; ATL::operator+, COMDAT

; 2032 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 10	 sub	 esp, 16			; 00000010H
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00025	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00028	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002e	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T188308[ebp], 0

; 2033 : 		CStringT strResult( str2.GetManager() );

  00035	8b f4		 mov	 esi, esp
  00037	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b f4		 mov	 esi, esp
  00049	50		 push	 eax
  0004a	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
  00053	3b f4		 cmp	 esi, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2034 : 
; 2035 : 		Concatenate( strResult, psz1, StringLength( psz1 ), str2, str2.GetLength() );

  00061	8b f4		 mov	 esi, esp
  00063	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b f4		 mov	 esi, esp
  00075	50		 push	 eax
  00076	8b fc		 mov	 edi, esp
  00078	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00081	3b fc		 cmp	 edi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	50		 push	 eax
  00089	8b fc		 mov	 edi, esp
  0008b	8b 45 0c	 mov	 eax, DWORD PTR _psz1$[ebp]
  0008e	50		 push	 eax
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z
  00095	83 c4 04	 add	 esp, 4
  00098	3b fc		 cmp	 edi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	50		 push	 eax
  000a0	8b 4d 0c	 mov	 ecx, DWORD PTR _psz1$[ebp]
  000a3	51		 push	 ecx
  000a4	8d 55 ec	 lea	 edx, DWORD PTR _strResult$[ebp]
  000a7	52		 push	 edx
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z
  000ae	83 c4 14	 add	 esp, 20			; 00000014H
  000b1	3b f4		 cmp	 esi, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2036 : 
; 2037 : 		return( strResult );

  000b8	8b f4		 mov	 esi, esp
  000ba	8d 45 ec	 lea	 eax, DWORD PTR _strResult$[ebp]
  000bd	50		 push	 eax
  000be	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  000c7	3b f4		 cmp	 esi, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ce	8b 4d e4	 mov	 ecx, DWORD PTR $T188308[ebp]
  000d1	83 c9 01	 or	 ecx, 1
  000d4	89 4d e4	 mov	 DWORD PTR $T188308[ebp], ecx
  000d7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000de	8b f4		 mov	 esi, esp
  000e0	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2038 : 	}

  000f3	52		 push	 edx
  000f4	8b cd		 mov	 ecx, ebp
  000f6	50		 push	 eax
  000f7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188315
  000fd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00102	58		 pop	 eax
  00103	5a		 pop	 edx
  00104	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00107	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	83 c4 1c	 add	 esp, 28			; 0000001cH
  00113	3b ec		 cmp	 ebp, esp
  00115	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c3		 ret	 0
$L188315:
  0011e	01 00 00 00	 DD	 1
  00122	00 00 00 00	 DD	 $L188314
$L188314:
  00126	ec ff ff ff	 DD	 -20			; ffffffecH
  0012a	04 00 00 00	 DD	 4
  0012e	00 00 00 00	 DD	 $L188312
$L188312:
  00132	73		 DB	 115			; 00000073H
  00133	74		 DB	 116			; 00000074H
  00134	72		 DB	 114			; 00000072H
  00135	52		 DB	 82			; 00000052H
  00136	65		 DB	 101			; 00000065H
  00137	73		 DB	 115			; 00000073H
  00138	75		 DB	 117			; 00000075H
  00139	6c		 DB	 108			; 0000006cH
  0013a	74		 DB	 116			; 00000074H
  0013b	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L188306:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188311
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ENDP ; ATL::operator+
EXTRN	__imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z PROC NEAR ; ATL::operator==, COMDAT

; 2087 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2088 : 		return( str1.Compare( psz2 ) == 0 );

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _psz2$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _str1$[ebp]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  00013	3b f4		 cmp	 esi, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001a	f7 d8		 neg	 eax
  0001c	1b c0		 sbb	 eax, eax
  0001e	40		 inc	 eax

; 2089 : 	}

  0001f	5e		 pop	 esi
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ENDP ; ATL::operator==
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z	; ATL::CComPtrBase<IHTMLDocument2>::CComPtrBase<IHTMLDocument2>
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNull$ = 8						; size = 4
??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z PROC NEAR	; ATL::CComPtr<IHTMLDocument2>::CComPtr<IHTMLDocument2>, COMDAT
; _this$ = ecx

; 253  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR _nNull$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z ; ATL::CComPtrBase<IHTMLDocument2>::CComPtrBase<IHTMLDocument2>

; 254  : 	}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$CComPtr@UIHTMLDocument2@@@ATL@@QAE@H@Z ENDP	; ATL::CComPtr<IHTMLDocument2>::CComPtr<IHTMLDocument2>
_TEXT	ENDS
PUBLIC	?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign
; Function compile flags: /Odt /RTCsu
;	COMDAT ??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z PROC NEAR ; ATL::CComPtr<IHTMLDocument2>::operator=, COMDAT
; _this$ = ecx

; 291  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 292  : 		return static_cast<T*>(AtlComPtrAssign((IUnknown**)&p, lp));

  0000e	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign

; 293  : 	}

  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??4?$CComPtr@UIHTMLDocument2@@@ATL@@QAEPAUIHTMLDocument2@@PAU2@@Z ENDP ; ATL::CComPtr<IHTMLDocument2>::operator=
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IHTMLDocument2>::~CComPtrBase<IHTMLDocument2>, COMDAT
; _this$ = ecx

; 126  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 19		 je	 SHORT $L187490

; 128  : 			p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	ff 52 08	 call	 DWORD PTR [edx+8]
  00029	3b f4		 cmp	 esi, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187490:

; 129  : 	}

  00030	5e		 pop	 esi
  00031	83 c4 04	 add	 esp, 4
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IHTMLDocument2>::~CComPtrBase<IHTMLDocument2>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAUIHTMLDocument2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAUIHTMLDocument2@@XZ PROC NEAR ; ATL::CComPtrBase<IHTMLDocument2>::operator IHTMLDocument2 *, COMDAT
; _this$ = ecx

; 131  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 133  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAUIHTMLDocument2@@XZ ENDP ; ATL::CComPtrBase<IHTMLDocument2>::operator IHTMLDocument2 *
_TEXT	ENDS
PUBLIC	??_C@_0FI@FDBICBML@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ ; `string'
PUBLIC	??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@		; `string'
;	COMDAT ??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
CONST	SEGMENT
??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@ DB 'p==0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FI@FDBICBML@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT
??_C@_0FI@FDBICBML@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ DB 'D:\Pr'
	DB	'ogram Files (x86)\Microsoft Visual Studio .NET 2003\Vc7\atlmf'
	DB	'c\include\atlcomcli.h', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ PROC NEAR ; ATL::CComPtrBase<IHTMLDocument2>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 2b		 je	 SHORT $L188325
  00017	8b f4		 mov	 esi, esp
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
  0001e	6a 00		 push	 0
  00020	68 8f 00 00 00	 push	 143			; 0000008fH
  00025	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FI@FDBICBML@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	83 f8 01	 cmp	 eax, 1
  0003f	75 01		 jne	 SHORT $L188325
  00041	cc		 int	 3
$L188325:

; 144  : 		return &p;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 145  : 	}

  00045	5e		 pop	 esi
  00046	83 c4 04	 add	 esp, 4
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
??I?$CComPtrBase@UIHTMLDocument2@@@ATL@@QAEPAPAUIHTMLDocument2@@XZ ENDP ; ATL::CComPtrBase<IHTMLDocument2>::operator&
_TEXT	ENDS
PUBLIC	??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@		; `string'
;	COMDAT ??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
CONST	SEGMENT
??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@ DB 'p!=0', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IHTMLDocument2>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	75 2b		 jne	 SHORT $L188327
  00017	8b f4		 mov	 esi, esp
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
  0001e	6a 00		 push	 0
  00020	68 94 00 00 00	 push	 148			; 00000094H
  00025	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FI@FDBICBML@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	83 f8 01	 cmp	 eax, 1
  0003f	75 01		 jne	 SHORT $L188327
  00041	cc		 int	 3
$L188327:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

  00042	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00045	8b 02		 mov	 eax, DWORD PTR [edx]

; 150  : 	}

  00047	5e		 pop	 esi
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??C?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIHTMLDocument2@@@1@XZ ENDP ; ATL::CComPtrBase<IHTMLDocument2>::operator->
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z PROC NEAR ; ATL::CComPtrBase<IHTMLDocument2>::operator==, COMDAT
; _this$ = ecx

; 160  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 161  : 		return p == pT;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	2b 45 08	 sub	 eax, DWORD PTR _pT$[ebp]
  00016	f7 d8		 neg	 eax
  00018	1b c0		 sbb	 eax, eax
  0001a	40		 inc	 eax

; 162  : 	}

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??8?$CComPtrBase@UIHTMLDocument2@@@ATL@@QBE_NPAUIHTMLDocument2@@@Z ENDP ; ATL::CComPtrBase<IHTMLDocument2>::operator==
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ PROC NEAR ; ATL::CComPtrBase<IHTMLElementCollection>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 2b		 je	 SHORT $L188330
  00017	8b f4		 mov	 esi, esp
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
  0001e	6a 00		 push	 0
  00020	68 8f 00 00 00	 push	 143			; 0000008fH
  00025	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FI@FDBICBML@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	83 f8 01	 cmp	 eax, 1
  0003f	75 01		 jne	 SHORT $L188330
  00041	cc		 int	 3
$L188330:

; 144  : 		return &p;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 145  : 	}

  00045	5e		 pop	 esi
  00046	83 c4 04	 add	 esp, 4
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
??I?$CComPtrBase@UIHTMLElementCollection@@@ATL@@QAEPAPAUIHTMLElementCollection@@XZ ENDP ; ATL::CComPtrBase<IHTMLElementCollection>::operator&
_TEXT	ENDS
PUBLIC	??_C@_0L@NMJIPIKP@nNull?5?$DN?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0L@NMJIPIKP@nNull?5?$DN?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@NMJIPIKP@nNull?5?$DN?$DN?50?$AA@ DB 'nNull == 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nNull$ = 8						; size = 4
??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z PROC NEAR ; ATL::CComPtrBase<IHTMLDocument2>::CComPtrBase<IHTMLDocument2>, COMDAT
; _this$ = ecx

; 111  : 	CComPtrBase(int nNull) throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 112  : 	{
; 113  : 		ATLASSERT(nNull == 0);

  0000f	83 7d 08 00	 cmp	 DWORD PTR _nNull$[ebp], 0
  00013	74 28		 je	 SHORT $L188332
  00015	8b f4		 mov	 esi, esp
  00017	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@NMJIPIKP@nNull?5?$DN?$DN?50?$AA@
  0001c	6a 00		 push	 0
  0001e	6a 71		 push	 113			; 00000071H
  00020	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FI@FDBICBML@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  00025	6a 02		 push	 2
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0002d	83 c4 14	 add	 esp, 20			; 00000014H
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	83 f8 01	 cmp	 eax, 1
  0003a	75 01		 jne	 SHORT $L188332
  0003c	cc		 int	 3
$L188332:

; 114  : 		(void)nNull;
; 115  : 		p = NULL;

  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 116  : 	}

  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	5e		 pop	 esi
  0004a	83 c4 04	 add	 esp, 4
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??0?$CComPtrBase@UIHTMLDocument2@@@ATL@@IAE@H@Z ENDP	; ATL::CComPtrBase<IHTMLDocument2>::CComPtrBase<IHTMLDocument2>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_lp$ = 12						; size = 4
?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z PROC NEAR ; ATL::AtlComPtrAssign, COMDAT

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 46   : 	if (pp == NULL)

  00004	83 7d 08 00	 cmp	 DWORD PTR _pp$[ebp], 0
  00008	75 04		 jne	 SHORT $L82098

; 47   : 		return NULL;

  0000a	33 c0		 xor	 eax, eax
  0000c	eb 47		 jmp	 SHORT $L82097
$L82098:

; 48   : 		
; 49   : 	if (lp != NULL)

  0000e	83 7d 0c 00	 cmp	 DWORD PTR _lp$[ebp], 0
  00012	74 15		 je	 SHORT $L82099

; 50   : 		lp->AddRef();

  00014	8b 45 0c	 mov	 eax, DWORD PTR _lp$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b f4		 mov	 esi, esp
  0001b	8b 55 0c	 mov	 edx, DWORD PTR _lp$[ebp]
  0001e	52		 push	 edx
  0001f	ff 51 04	 call	 DWORD PTR [ecx+4]
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L82099:

; 51   : 	if (*pp)

  00029	8b 45 08	 mov	 eax, DWORD PTR _pp$[ebp]
  0002c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002f	74 19		 je	 SHORT $L82100

; 52   : 		(*pp)->Release();

  00031	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  00034	8b 11		 mov	 edx, DWORD PTR [ecx]
  00036	8b 45 08	 mov	 eax, DWORD PTR _pp$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	8b 12		 mov	 edx, DWORD PTR [edx]
  0003d	8b f4		 mov	 esi, esp
  0003f	51		 push	 ecx
  00040	ff 52 08	 call	 DWORD PTR [edx+8]
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L82100:

; 53   : 	*pp = lp;

  0004a	8b 45 08	 mov	 eax, DWORD PTR _pp$[ebp]
  0004d	8b 4d 0c	 mov	 ecx, DWORD PTR _lp$[ebp]
  00050	89 08		 mov	 DWORD PTR [eax], ecx

; 54   : 	return lp;

  00052	8b 45 0c	 mov	 eax, DWORD PTR _lp$[ebp]
$L82097:

; 55   : }

  00055	5e		 pop	 esi
  00056	3b ec		 cmp	 ebp, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ENDP ; ATL::AtlComPtrAssign
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>, COMDAT
; _this$ = ecx

; 311  : 	CComPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>

; 312  : 	{
; 313  : 	}

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z PROC NEAR ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>, COMDAT
; _this$ = ecx

; 316  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>

; 317  : 	}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$CComPtr@UIDispatch@@@ATL@@QAE@PAUIDispatch@@@Z ENDP ; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
_TEXT	ENDS
EXTRN	__imp__SysFreeString@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComBSTR@ATL@@QAE@XZ PROC NEAR			; ATL::CComBSTR::~CComBSTR, COMDAT
; _this$ = ecx

; 628  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 629  : 		::SysFreeString(m_str);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4
  0001d	3b f4		 cmp	 esi, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 630  : 	}

  00024	5e		 pop	 esi
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::~CComBSTR
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??ICComBSTR@ATL@@QAEPAPA_WXZ PROC NEAR			; ATL::CComBSTR::operator&, COMDAT
; _this$ = ecx

; 644  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 645  : 		return &m_str;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 646  : 	}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??ICComBSTR@ATL@@QAEPAPA_WXZ ENDP			; ATL::CComBSTR::operator&
_TEXT	ENDS
PUBLIC	?Copy@CComBSTR@ATL@@QBEPA_WXZ			; ATL::CComBSTR::Copy
PUBLIC	??_C@_0L@DLMMDKDI@pbstr?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0L@DLMMDKDI@pbstr?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@DLMMDKDI@pbstr?5?$CB?$DN?50?$AA@ DB 'pbstr != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pbstr$ = 8						; size = 4
?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z PROC NEAR		; ATL::CComBSTR::CopyTo, COMDAT
; _this$ = ecx

; 654  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		ATLASSERT(pbstr != NULL);

  0000f	83 7d 08 00	 cmp	 DWORD PTR _pbstr$[ebp], 0
  00013	75 2b		 jne	 SHORT $L188339
  00015	8b f4		 mov	 esi, esp
  00017	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@DLMMDKDI@pbstr?5?$CB?$DN?50?$AA@
  0001c	6a 00		 push	 0
  0001e	68 8f 02 00 00	 push	 655			; 0000028fH
  00023	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FI@FDBICBML@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  00028	6a 02		 push	 2
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00030	83 c4 14	 add	 esp, 20			; 00000014H
  00033	3b f4		 cmp	 esi, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	83 f8 01	 cmp	 eax, 1
  0003d	75 01		 jne	 SHORT $L188339
  0003f	cc		 int	 3
$L188339:

; 656  : 		if (pbstr == NULL)

  00040	83 7d 08 00	 cmp	 DWORD PTR _pbstr$[ebp], 0
  00044	75 07		 jne	 SHORT $L82767

; 657  : 			return E_POINTER;

  00046	b8 03 40 00 80	 mov	 eax, -2147467261	; 80004003H
  0004b	eb 26		 jmp	 SHORT $L82764
$L82767:

; 658  : 		*pbstr = Copy();

  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?Copy@CComBSTR@ATL@@QBEPA_WXZ ; ATL::CComBSTR::Copy
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _pbstr$[ebp]
  00058	89 01		 mov	 DWORD PTR [ecx], eax

; 659  : 		if ((*pbstr == NULL) && (m_str != NULL))

  0005a	8b 55 08	 mov	 edx, DWORD PTR _pbstr$[ebp]
  0005d	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00060	75 0f		 jne	 SHORT $L82769
  00062	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	83 38 00	 cmp	 DWORD PTR [eax], 0
  00068	74 07		 je	 SHORT $L82769

; 660  : 			return E_OUTOFMEMORY;

  0006a	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  0006f	eb 02		 jmp	 SHORT $L82764
$L82769:

; 661  : 		return S_OK;

  00071	33 c0		 xor	 eax, eax
$L82764:

; 662  : 	}

  00073	5e		 pop	 esi
  00074	83 c4 04	 add	 esp, 4
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?CopyTo@CComBSTR@ATL@@QAEJPAPA_W@Z ENDP			; ATL::CComBSTR::CopyTo
_TEXT	ENDS
EXTRN	__imp__SysStringByteLen@4:NEAR
EXTRN	__imp__SysAllocStringByteLen@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Copy@CComBSTR@ATL@@QBEPA_WXZ PROC NEAR			; ATL::CComBSTR::Copy, COMDAT
; _this$ = ecx

; 648  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 649  : 		if (m_str == NULL)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	75 04		 jne	 SHORT $L82761

; 650  : 			return NULL;

  00017	33 c0		 xor	 eax, eax
  00019	eb 2b		 jmp	 SHORT $L82760
$L82761:

; 651  : 		return ::SysAllocStringByteLen((char*)m_str, ::SysStringByteLen(m_str));

  0001b	8b f4		 mov	 esi, esp
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	52		 push	 edx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysStringByteLen@4
  00029	3b f4		 cmp	 esi, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b f4		 mov	 esi, esp
  00032	50		 push	 eax
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 08		 mov	 ecx, DWORD PTR [eax]
  00038	51		 push	 ecx
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocStringByteLen@8
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L82760:

; 652  : 	}

  00046	5e		 pop	 esi
  00047	83 c4 04	 add	 esp, 4
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?Copy@CComBSTR@ATL@@QBEPA_WXZ ENDP			; ATL::CComBSTR::Copy
_TEXT	ENDS
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	?A2WBSTR@@YAPA_WPBDH@Z				; A2WBSTR
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0CComBSTR@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
??0CComBSTR@ATL@@QAE@PBD@Z PROC NEAR			; ATL::CComBSTR::CComBSTR, COMDAT
; _this$ = ecx

; 978  : 	CComBSTR(LPCSTR pSrc)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 979  : 	{
; 980  : 		if (pSrc != NULL)

  0000e	83 7d 08 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  00012	74 27		 je	 SHORT $L83029

; 981  : 		{
; 982  : 			m_str = A2WBSTR(pSrc);

  00014	6a ff		 push	 -1
  00016	8b 45 08	 mov	 eax, DWORD PTR _pSrc$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?A2WBSTR@@YAPA_WPBDH@Z	; A2WBSTR
  0001f	83 c4 08	 add	 esp, 8
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	89 01		 mov	 DWORD PTR [ecx], eax

; 983  : 			if (m_str == NULL)

  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0002d	75 0a		 jne	 SHORT $L83030

; 984  : 				AtlThrow(E_OUTOFMEMORY);

  0002f	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00034	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L83030:

; 985  : 		}
; 986  : 		else

  00039	eb 09		 jmp	 SHORT $L83028
$L83029:

; 987  : 			m_str = NULL;

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L83028:

; 988  : 	}

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$L188341:
  00047	83 c4 04	 add	 esp, 4
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
??0CComBSTR@ATL@@QAE@PBD@Z ENDP				; ATL::CComBSTR::CComBSTR
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
PUBLIC	??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ ; `string'
PUBLIC	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
PUBLIC	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
PUBLIC	??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@ ; `string'
EXTRN	__imp__MultiByteToWideChar@24:NEAR
EXTRN	__imp__SysAllocStringLen@8:NEAR
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
xdata$x	SEGMENT
$T188353 DD	0ffffffffH
	DD	FLAT:$L188346
$T188348 DD	019930520H
	DD	01H
	DD	FLAT:$T188353
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@
CONST	SEGMENT
??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@ DB 'nResult == nC'
	DB	'onvertedLen', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT
??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ DB 'D:\Pr'
	DB	'ogram Files (x86)\Microsoft Visual Studio .NET 2003\Vc7\atlmf'
	DB	'c\include\atlconv.h', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?A2WBSTR@@YAPA_WPBDH@Z
_TEXT	SEGMENT
$T188345 = -64						; size = 4
$T188344 = -60						; size = 4
_nResult$24434 = -56					; size = 4
_nAllocLen$ = -52					; size = 4
_nConvertedLen$ = -48					; size = 4
_str$ = -44						; size = 4
__AtlSafeAllocaManager$ = -36				; size = 4
__lpa_ex$ = -28						; size = 4
__lpw_ex$ = -24						; size = 4
__acp_ex$ = -20						; size = 4
__convert_ex$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lp$ = 8						; size = 4
_nLen$ = 12						; size = 4
?A2WBSTR@@YAPA_WPBDH@Z PROC NEAR			; A2WBSTR, COMDAT

; 775  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?A2WBSTR@@YAPA_WPBDH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 34	 sub	 esp, 52			; 00000034H
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  00020	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd

; 776  : 	if (lp == NULL || nLen == 0)

  0002c	83 7d 08 00	 cmp	 DWORD PTR _lp$[ebp], 0
  00030	74 06		 je	 SHORT $L24407
  00032	83 7d 0c 00	 cmp	 DWORD PTR _nLen$[ebp], 0
  00036	75 07		 jne	 SHORT $L24406
$L24407:

; 777  : 		return NULL;

  00038	33 c0		 xor	 eax, eax
  0003a	e9 37 01 00 00	 jmp	 $L24405
$L24406:

; 778  : 	USES_CONVERSION_EX;

  0003f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  00046	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  0004b	89 45 ec	 mov	 DWORD PTR __acp_ex$[ebp], eax
  0004e	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  00055	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  0005c	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0005f	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00064	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 779  : 	BSTR str = NULL;

  0006b	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _str$[ebp], 0

; 780  : 	int nConvertedLen = MultiByteToWideChar(_acp_ex, 0, lp,
; 781  : 		nLen, NULL, NULL);

  00072	8b f4		 mov	 esi, esp
  00074	6a 00		 push	 0
  00076	6a 00		 push	 0
  00078	8b 45 0c	 mov	 eax, DWORD PTR _nLen$[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  0007f	51		 push	 ecx
  00080	6a 00		 push	 0
  00082	8b 55 ec	 mov	 edx, DWORD PTR __acp_ex$[ebp]
  00085	52		 push	 edx
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  0008c	3b f4		 cmp	 esi, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	89 45 d0	 mov	 DWORD PTR _nConvertedLen$[ebp], eax

; 782  : 	int nAllocLen = nConvertedLen;

  00096	8b 45 d0	 mov	 eax, DWORD PTR _nConvertedLen$[ebp]
  00099	89 45 cc	 mov	 DWORD PTR _nAllocLen$[ebp], eax

; 783  : 	if (nLen == -1)

  0009c	83 7d 0c ff	 cmp	 DWORD PTR _nLen$[ebp], -1
  000a0	75 09		 jne	 SHORT $L24432

; 784  : 		nAllocLen -= 1;  // Don't allocate terminating '\0'

  000a2	8b 4d cc	 mov	 ecx, DWORD PTR _nAllocLen$[ebp]
  000a5	83 e9 01	 sub	 ecx, 1
  000a8	89 4d cc	 mov	 DWORD PTR _nAllocLen$[ebp], ecx
$L24432:

; 785  : 	str = ::SysAllocStringLen(NULL, nAllocLen);

  000ab	8b f4		 mov	 esi, esp
  000ad	8b 55 cc	 mov	 edx, DWORD PTR _nAllocLen$[ebp]
  000b0	52		 push	 edx
  000b1	6a 00		 push	 0
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocStringLen@8
  000b9	3b f4		 cmp	 esi, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	89 45 d4	 mov	 DWORD PTR _str$[ebp], eax

; 786  : 
; 787  : 	if (str != NULL)

  000c3	83 7d d4 00	 cmp	 DWORD PTR _str$[ebp], 0
  000c7	0f 84 91 00 00
	00		 je	 $L24433

; 788  : 	{
; 789  : 		int nResult;
; 790  : 		nResult = MultiByteToWideChar(_acp_ex, 0, lp, nLen, str, nConvertedLen);

  000cd	8b f4		 mov	 esi, esp
  000cf	8b 45 d0	 mov	 eax, DWORD PTR _nConvertedLen$[ebp]
  000d2	50		 push	 eax
  000d3	8b 4d d4	 mov	 ecx, DWORD PTR _str$[ebp]
  000d6	51		 push	 ecx
  000d7	8b 55 0c	 mov	 edx, DWORD PTR _nLen$[ebp]
  000da	52		 push	 edx
  000db	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  000de	50		 push	 eax
  000df	6a 00		 push	 0
  000e1	8b 4d ec	 mov	 ecx, DWORD PTR __acp_ex$[ebp]
  000e4	51		 push	 ecx
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  000eb	3b f4		 cmp	 esi, esp
  000ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f2	89 45 c8	 mov	 DWORD PTR _nResult$24434[ebp], eax

; 791  : 		ATLASSERT(nResult == nConvertedLen);

  000f5	8b 55 c8	 mov	 edx, DWORD PTR _nResult$24434[ebp]
  000f8	3b 55 d0	 cmp	 edx, DWORD PTR _nConvertedLen$[ebp]
  000fb	74 2b		 je	 SHORT $L188343
  000fd	8b f4		 mov	 esi, esp
  000ff	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@
  00104	6a 00		 push	 0
  00106	68 17 03 00 00	 push	 791			; 00000317H
  0010b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  00110	6a 02		 push	 2
  00112	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00118	83 c4 14	 add	 esp, 20			; 00000014H
  0011b	3b f4		 cmp	 esi, esp
  0011d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00122	83 f8 01	 cmp	 eax, 1
  00125	75 01		 jne	 SHORT $L188343
  00127	cc		 int	 3
$L188343:

; 792  : 		if(nResult != nConvertedLen)

  00128	8b 4d c8	 mov	 ecx, DWORD PTR _nResult$24434[ebp]
  0012b	3b 4d d0	 cmp	 ecx, DWORD PTR _nConvertedLen$[ebp]
  0012e	74 2e		 je	 SHORT $L24433

; 793  : 		{
; 794  : 			SysFreeString(str);

  00130	8b f4		 mov	 esi, esp
  00132	8b 55 d4	 mov	 edx, DWORD PTR _str$[ebp]
  00135	52		 push	 edx
  00136	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4
  0013c	3b f4		 cmp	 esi, esp
  0013e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 795  : 			return NULL;

  00143	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR $T188344[ebp], 0
  0014a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00151	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00154	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00159	8b 45 c4	 mov	 eax, DWORD PTR $T188344[ebp]
  0015c	eb 18		 jmp	 SHORT $L24405
$L24433:

; 796  : 		}
; 797  : 
; 798  : 	}
; 799  : 	return str;

  0015e	8b 45 d4	 mov	 eax, DWORD PTR _str$[ebp]
  00161	89 45 c0	 mov	 DWORD PTR $T188345[ebp], eax
  00164	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0016b	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0016e	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00173	8b 45 c0	 mov	 eax, DWORD PTR $T188345[ebp]
$L24405:

; 800  : }

  00176	52		 push	 edx
  00177	8b cd		 mov	 ecx, ebp
  00179	50		 push	 eax
  0017a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188352
  00180	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00185	58		 pop	 eax
  00186	5a		 pop	 edx
  00187	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0018a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00191	5f		 pop	 edi
  00192	5e		 pop	 esi
  00193	83 c4 40	 add	 esp, 64			; 00000040H
  00196	3b ec		 cmp	 ebp, esp
  00198	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019d	8b e5		 mov	 esp, ebp
  0019f	5d		 pop	 ebp
  001a0	c3		 ret	 0
$L188352:
  001a1	01 00 00 00	 DD	 1
  001a5	00 00 00 00	 DD	 $L188351
$L188351:
  001a9	dc ff ff ff	 DD	 -36			; ffffffdcH
  001ad	04 00 00 00	 DD	 4
  001b1	00 00 00 00	 DD	 $L188349
$L188349:
  001b5	5f		 DB	 95			; 0000005fH
  001b6	41		 DB	 65			; 00000041H
  001b7	74		 DB	 116			; 00000074H
  001b8	6c		 DB	 108			; 0000006cH
  001b9	53		 DB	 83			; 00000053H
  001ba	61		 DB	 97			; 00000061H
  001bb	66		 DB	 102			; 00000066H
  001bc	65		 DB	 101			; 00000065H
  001bd	41		 DB	 65			; 00000041H
  001be	6c		 DB	 108			; 0000006cH
  001bf	6c		 DB	 108			; 0000006cH
  001c0	6f		 DB	 111			; 0000006fH
  001c1	63		 DB	 99			; 00000063H
  001c2	61		 DB	 97			; 00000061H
  001c3	4d		 DB	 77			; 0000004dH
  001c4	61		 DB	 97			; 00000061H
  001c5	6e		 DB	 110			; 0000006eH
  001c6	61		 DB	 97			; 00000061H
  001c7	67		 DB	 103			; 00000067H
  001c8	65		 DB	 101			; 00000065H
  001c9	72		 DB	 114			; 00000072H
  001ca	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L188346:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?A2WBSTR@@YAPA_WPBDH@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188348
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?A2WBSTR@@YAPA_WPBDH@Z ENDP				; A2WBSTR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 158  : 	return( g_pfnGetThreadACP() );

  00004	8b f4		 mov	 esi, esp
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  0000c	3b f4		 cmp	 esi, esp
  0000e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 159  : }

  00013	5e		 pop	 esi
  00014	3b ec		 cmp	 ebp, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ ; `string'
PUBLIC	??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ ; `string'
EXTRN	?atlTraceException@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceException
EXTRN	?AfxThrowMemoryException@@YGXXZ:NEAR		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:NEAR		; AfxThrowOleException
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
CONST	SEGMENT
??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ DB 'AtlThrow: hr '
	DB	'= 0x%x', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT
??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ DB 'D:\Pr'
	DB	'ogram Files (x86)\Microsoft Visual Studio .NET 2003\Vc7\atlmf'
	DB	'c\include\atlexcept.h', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T188358 = -8						; size = 8
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

  00014	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
  0001d	6a 00		 push	 0
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?atlTraceException@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceException
  00024	e8 00 00 00 00	 call	 ??BCTraceCategory@ATL@@QBEKXZ ; ATL::CTraceCategory::operator unsigned long
  00029	50		 push	 eax
  0002a	6a 3e		 push	 62			; 0000003eH
  0002c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  00031	8d 4d f8	 lea	 ecx, DWORD PTR $T188358[ebp]
  00034	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003f	83 c4 14	 add	 esp, 20			; 00000014H

; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )

  00042	81 7d 08 0e 00
	07 80		 cmp	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH
  00049	75 05		 jne	 SHORT $L25222

; 65   : 	{
; 66   : 		AfxThrowMemoryException();

  0004b	e8 00 00 00 00	 call	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException
$L25222:

; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );

  00050	8b 4d 08	 mov	 ecx, DWORD PTR _hr$[ebp]
  00053	51		 push	 ecx
  00054	e8 00 00 00 00	 call	 ?AfxThrowOleException@@YGXJ@Z ; AfxThrowOleException
$L188357:

; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );
; 74   : #endif
; 75   : };

  00059	83 c4 08	 add	 esp, 8
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC NEAR	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 158  : 	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	8b 45 0c	 mov	 eax, DWORD PTR _nLineNo$[ebp]
  0001c	89 42 04	 mov	 DWORD PTR [edx+4], eax
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
; Function compile flags: /Odt /RTCsu
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT
_ptr$ = -4						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 161  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 162  : 		va_list ptr; va_start(ptr, pszFmt);

  0000b	8d 45 18	 lea	 eax, DWORD PTR _pszFmt$[ebp+4]
  0000e	89 45 fc	 mov	 DWORD PTR _ptr$[ebp], eax

; 163  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _ptr$[ebp]
  00014	51		 push	 ecx
  00015	8b 55 14	 mov	 edx, DWORD PTR _pszFmt$[ebp]
  00018	52		 push	 edx
  00019	8b 45 10	 mov	 eax, DWORD PTR _nLevel$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR _dwCategory$[ebp]
  00020	51		 push	 ecx
  00021	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00024	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00027	50		 push	 eax
  00028	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002d	52		 push	 edx
  0002e	68 00 00 00 00	 push	 OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
  00033	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z ; ATL::CTrace::TraceV
  00038	83 c4 1c	 add	 esp, 28			; 0000001cH

; 164  : 		va_end(ptr);

  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _ptr$[ebp], 0

; 165  : 	}

  00042	83 c4 04	 add	 esp, 4
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVA:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z PROC NEAR		; ATL::CTrace::TraceV, COMDAT

; 121  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 122  : 		AtlTraceVA(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

  00003	8b 45 20	 mov	 eax, DWORD PTR _args$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 1c	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 18	 mov	 edx, DWORD PTR _nLevel$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 14	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR _pszFileName$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 _AtlTraceVA
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH

; 123  : 	}

  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC NEAR			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 203  : 	return( m_dwCategory );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 204  : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
_TEXT	ENDS
EXTRN	__imp__VariantInit@4:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComVariant@ATL@@QAE@XZ PROC NEAR			; ATL::CComVariant::CComVariant, COMDAT
; _this$ = ecx

; 1531 : 	CComVariant() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1532 : 	{
; 1533 : 		::VariantInit(this);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
  0001b	3b f4		 cmp	 esi, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1534 : 	}

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5e		 pop	 esi
  00026	83 c4 04	 add	 esp, 4
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
??0CComVariant@ATL@@QAE@XZ ENDP				; ATL::CComVariant::CComVariant
_TEXT	ENDS
PUBLIC	?Clear@CComVariant@ATL@@QAEJXZ			; ATL::CComVariant::Clear
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComVariant@ATL@@QAE@XZ PROC NEAR			; ATL::CComVariant::~CComVariant, COMDAT
; _this$ = ecx

; 1536 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1537 : 		Clear();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?Clear@CComVariant@ATL@@QAEJXZ ; ATL::CComVariant::Clear

; 1538 : 	}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CComVariant@ATL@@QAE@XZ ENDP				; ATL::CComVariant::~CComVariant
_TEXT	ENDS
PUBLIC	?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z ; ATL::CComVariant::InternalCopy
; Function compile flags: /Odt /RTCsu
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_varSrc$ = 8						; size = 4
??4CComVariant@ATL@@QAEAAV01@ABV01@@Z PROC NEAR		; ATL::CComVariant::operator=, COMDAT
; _this$ = ecx

; 1684 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1685 : 		InternalCopy(&varSrc);

  0000e	8b 45 08	 mov	 eax, DWORD PTR _varSrc$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z ; ATL::CComVariant::InternalCopy

; 1686 : 		return *this;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 1687 : 	}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??4CComVariant@ATL@@QAEAAV01@ABV01@@Z ENDP		; ATL::CComVariant::operator=
_TEXT	ENDS
EXTRN	__imp__VariantClear@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CComVariant@ATL@@QAEJXZ PROC NEAR		; ATL::CComVariant::Clear, COMDAT
; _this$ = ecx

; 2095 : 	HRESULT Clear() { return ::VariantClear(this); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
  0001b	3b f4		 cmp	 esi, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	5e		 pop	 esi
  00023	83 c4 04	 add	 esp, 4
  00026	3b ec		 cmp	 ebp, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?Clear@CComVariant@ATL@@QAEJXZ ENDP			; ATL::CComVariant::Clear
_TEXT	ENDS
PUBLIC	?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z	; ATL::CComVariant::Copy
; Function compile flags: /Odt /RTCsu
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z PROC NEAR ; ATL::CComVariant::InternalCopy, COMDAT
; _this$ = ecx

; 2188 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2189 : 		HRESULT hr = Copy(pSrc);

  00017	8b 45 08	 mov	 eax, DWORD PTR _pSrc$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z ; ATL::CComVariant::Copy
  00023	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2190 : 		if (FAILED(hr))

  00026	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0002a	7d 11		 jge	 SHORT $L83929

; 2191 : 		{
; 2192 : 			vt = VT_ERROR;

  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	66 c7 01 0a 00	 mov	 WORD PTR [ecx], 10	; 0000000aH

; 2193 : 			scode = hr;

  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0003a	89 42 08	 mov	 DWORD PTR [edx+8], eax
$L83929:

; 2194 : 		}
; 2195 : 	}

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z ENDP ; ATL::CComVariant::InternalCopy
_TEXT	ENDS
EXTRN	__imp__VariantCopy@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z PROC NEAR	; ATL::CComVariant::Copy, COMDAT
; _this$ = ecx

; 2096 : 	HRESULT Copy(const VARIANT* pSrc) { return ::VariantCopy(this, const_cast<VARIANT*>(pSrc)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 08	 mov	 eax, DWORD PTR _pSrc$[ebp]
  00014	50		 push	 eax
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	51		 push	 ecx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantCopy@8
  0001f	3b f4		 cmp	 esi, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	5e		 pop	 esi
  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z ENDP	; ATL::CComVariant::Copy
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 373  : 	CAtlSafeAllocBufferManager() : m_pHead(NULL) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPAX@Z		; ATL::CCRTAllocator::Free
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$181574 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 387  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$L181572:

; 388  : 		// Walk the list and free the buffers
; 389  : 		while (m_pHead != NULL)

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	74 22		 je	 SHORT $L181570

; 390  : 		{
; 391  : 			CAtlSafeAllocBufferNode* p = m_pHead;

  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 f8	 mov	 DWORD PTR _p$181574[ebp], edx

; 392  : 			m_pHead = m_pHead->m_pNext;

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00031	89 02		 mov	 DWORD PTR [edx], eax

; 393  : 			Allocator::Free(p);

  00033	8b 4d f8	 mov	 ecx, DWORD PTR _p$181574[ebp]
  00036	51		 push	 ecx
  00037	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  0003c	83 c4 04	 add	 esp, 4

; 394  : 		}

  0003f	eb d6		 jmp	 SHORT $L181572
$L181570:

; 395  : 	}

  00041	83 c4 08	 add	 esp, 8
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
EXTRN	__imp__free:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC NEAR		; ATL::CCRTAllocator::Free, COMDAT

; 35   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 36   : 		free(p);

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00010	83 c4 04	 add	 esp, 4
  00013	3b f4		 cmp	 esi, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 37   : 	}

  0001a	5e		 pop	 esi
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 110  : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z PROC NEAR ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>, COMDAT
; _this$ = ecx

; 117  : 	CComPtrBase(T* lp) throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 	{
; 119  : 		p = lp;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  00015	89 08		 mov	 DWORD PTR [eax], ecx

; 120  : 		if (p != NULL)

  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0001d	74 19		 je	 SHORT $L181679

; 121  : 			p->AddRef();

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 02		 mov	 eax, DWORD PTR [edx]
  00029	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0002b	8b f4		 mov	 esi, esp
  0002d	50		 push	 eax
  0002e	ff 51 04	 call	 DWORD PTR [ecx+4]
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L181679:

; 122  : 	}

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	5e		 pop	 esi
  0003c	83 c4 04	 add	 esp, 4
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z ENDP ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>, COMDAT
; _this$ = ecx

; 126  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 19		 je	 SHORT $L181682

; 128  : 			p->Release();

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	8b 12		 mov	 edx, DWORD PTR [edx]
  00023	8b f4		 mov	 esi, esp
  00025	51		 push	 ecx
  00026	ff 52 08	 call	 DWORD PTR [edx+8]
  00029	3b f4		 cmp	 esi, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L181682:

; 129  : 	}

  00030	5e		 pop	 esi
  00031	83 c4 04	 add	 esp, 4
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ PROC NEAR ; ATL::CComPtrBase<IDispatch>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 2b		 je	 SHORT $L188377
  00017	8b f4		 mov	 esi, esp
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
  0001e	6a 00		 push	 0
  00020	68 8f 00 00 00	 push	 143			; 0000008fH
  00025	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FI@FDBICBML@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	83 f8 01	 cmp	 eax, 1
  0003f	75 01		 jne	 SHORT $L188377
  00041	cc		 int	 3
$L188377:

; 144  : 		return &p;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 145  : 	}

  00045	5e		 pop	 esi
  00046	83 c4 04	 add	 esp, 4
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ ENDP ; ATL::CComPtrBase<IDispatch>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IDispatch>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	75 2b		 jne	 SHORT $L188379
  00017	8b f4		 mov	 esi, esp
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
  0001e	6a 00		 push	 0
  00020	68 94 00 00 00	 push	 148			; 00000094H
  00025	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FI@FDBICBML@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	83 f8 01	 cmp	 eax, 1
  0003f	75 01		 jne	 SHORT $L188379
  00041	cc		 int	 3
$L188379:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

  00042	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00045	8b 02		 mov	 eax, DWORD PTR [edx]

; 150  : 	}

  00047	5e		 pop	 esi
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ENDP ; ATL::CComPtrBase<IDispatch>::operator->
_TEXT	ENDS
END
