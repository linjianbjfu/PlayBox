; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\LayoutMgr\ChangeColor\WebSubWnd.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0P@MDHCGOCC@m_pMemMgr?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FF@PEBLHPJJ@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@KICONMKH@pData?9?$DOpStringMgr?5?$DN?$DN?5this?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@HPMMCKHL@?$CI?$CIWORD?$CJ?$CI?$CIDWORD_PTR?$CJ?$CIpsz?$CJ?5?$DO?$DO?516?$CJ?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EN@IBFBLEEG@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@GIMJKKKN@AtlIsValidString?$CI?5psz?5?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ?IWebRefreshOb_Refresh@IWebRefreshObserver@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAtlStringMgr@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAtlStringMgr@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CompareStringW@?$ChTraitsOS@_W@ATL@@KGHKKPB_WH0H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStringTypeExW@?$ChTraitsOS@_W@ATL@@KGHKKPB_WHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lstrcmpiW@?$ChTraitsOS@_W@ATL@@KGHPB_W0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharLowerW@?$ChTraitsOS@_W@ATL@@KGPA_WPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharUpperW@?$ChTraitsOS@_W@ATL@@KGPA_WPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strchr@?$ChTraitsOS@_W@ATL@@SAPB_WPB_W_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strrchr@?$ChTraitsOS@_W@ATL@@SAPB_WPB_W_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_strrev@?$ChTraitsOS@_W@ATL@@SAPA_WPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strstr@?$ChTraitsOS@_W@ATL@@SAPB_WPB_W0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strspn@?$ChTraitsOS@_W@ATL@@SAHPB_W0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strcspn@?$ChTraitsOS@_W@ATL@@SAHPB_W0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strpbrk@?$ChTraitsOS@_W@ATL@@SAPB_WPB_W0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringFindString@?$ChTraitsOS@_W@ATL@@SAPB_WPB_W0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWebSubWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IWebRefreshObserver@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1IWebRefreshObserver@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GIWebRefreshObserver@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IMessageObserver@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$AtlAlignUp@H@ATL@@YGHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECWebSubWnd@@WPA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3CWebSubWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3IWebRefreshObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CAtlStringMgr@ATL@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CWebSubWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2IWebRefreshObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CAtlStringMgr@ATL@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1PA@?0A@A@IMessageObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1PA@?0A@A@IWebRefreshObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CView@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CScrollView@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CFormView@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CHtmlView@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CWebSubWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IMessageObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IWebRefreshObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IAtlStringMgr@ATL@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUIAtlStringMgr@ATL@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CAtlStringMgr@ATL@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVIMessageObserver@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCView@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCScrollView@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCFormView@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCHtmlView@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCWebSubWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVIWebRefreshObserver@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCAtlStringMgr@ATL@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4CWebSubWnd@@6BIWebRefreshObserver@@@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?accHitTest@CFormView@@UAEJJJPAUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?accLocation@CFormView@@UAEJPAJ000UtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_accName@CFormView@@UAEJUtagVARIANT@@PAPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_accChild@CFormView@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_accChildCount@CFormView@@UAEJPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4CWebSubWnd@@6BCHtmlView@@@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4IWebRefreshObserver@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4CAtlStringMgr@ATL@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_C@_0EN@CBMLGOH@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FG@LDNDNCJM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FH@KDPNIMBO@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlIsValidString@ATL@@YAHPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FJ@DMHPDOJC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_messageEntries@CWebSubWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CWebSubWnd@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?classCWebSubWnd@CWebSubWnd@@2UCRuntimeClass@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IMessageObserver@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4IMessageObserver@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3IMessageObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2IMessageObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_GIMessageObserver@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7IWebRefreshObserver@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1IMessageObserver@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CWebSubWnd@@6BIWebRefreshObserver@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWebSubWnd@@6BCHtmlView@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitATL@_WV?$ChTraitsCRT@_W@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09BBJEMDLA@nRet?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_strthunks@ATL@@3U_AtlStringThunks@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?CompareStringWThunk@ATL@@YGHKKPB_WH0H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ?CompareStringWFake@ATL@@YGHKKPB_WH0H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPB_WHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStringTypeExWThunk@ATL@@YGHKKPB_WHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStringTypeExWFake@ATL@@YGHKKPB_WHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FH@BOCPFCEM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lstrcmpiWThunk@ATL@@YGHPB_W0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lstrcmpiWFake@ATL@@YGHPB_W0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharLowerWThunk@ATL@@YGPA_WPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharLowerWFake@ATL@@YGPA_WPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharUpperWThunk@ATL@@YGPA_WPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharUpperWFake@ATL@@YGPA_WPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetEnvironmentVariableWThunk@ATL@@YGKPB_WPA_WK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetEnvironmentVariableWFake@ATL@@YGKPB_WPA_WK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrowLastWin32@ATL@@YGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@MLJMCNFJ@pStringMgr?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CNilStringData@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CAtlStringMgr@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	?_strthunks@ATL@@3U_AtlStringThunks@1@A		; ATL::_strthunks
PUBLIC	?GetEnvironmentVariableWThunk@ATL@@YGKPB_WPA_WK@Z ; ATL::GetEnvironmentVariableWThunk
PUBLIC	?CompareStringWThunk@ATL@@YGHKKPB_WH0H@Z	; ATL::CompareStringWThunk
PUBLIC	?GetStringTypeExWThunk@ATL@@YGHKKPB_WHPAG@Z	; ATL::GetStringTypeExWThunk
PUBLIC	?lstrcmpiWThunk@ATL@@YGHPB_W0@Z			; ATL::lstrcmpiWThunk
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitATL@_WV?$ChTraitsCRT@_W@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<wchar_t,ATL::StrTraitATL<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::c_bIsMFCDLLTraits
PUBLIC	?CharLowerWThunk@ATL@@YGPA_WPA_W@Z		; ATL::CharLowerWThunk
PUBLIC	?CharUpperWThunk@ATL@@YGPA_WPA_W@Z		; ATL::CharUpperWThunk
PUBLIC	?classCWebSubWnd@CWebSubWnd@@2UCRuntimeClass@@B	; CWebSubWnd::classCWebSubWnd
PUBLIC	?_messageEntries@CWebSubWnd@@0QBUAFX_MSGMAP_ENTRY@@B ; CWebSubWnd::_messageEntries
PUBLIC	?messageMap@CWebSubWnd@@1UAFX_MSGMAP@@B		; CWebSubWnd::messageMap
PUBLIC	?OnCreate@CWebSubWnd@@QAEHPAUtagCREATESTRUCTA@@@Z ; CWebSubWnd::OnCreate
PUBLIC	?OnSize@CWebSubWnd@@QAEXIHH@Z			; CWebSubWnd::OnSize
EXTRN	?GetThisClass@CHtmlView@@SGPAUCRuntimeClass@@XZ:NEAR ; CHtmlView::GetThisClass
EXTRN	?GetThisMessageMap@CHtmlView@@KGPBUAFX_MSGMAP@@XZ:NEAR ; CHtmlView::GetThisMessageMap
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB DB 00H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitATL@_WV?$ChTraitsCRT@_W@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitATL@_WV?$ChTraitsCRT@_W@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB DB 00H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<wchar_t,ATL::StrTraitATL<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::c_bIsMFCDLLTraits
CONST	ENDS
CONST	SEGMENT
$SG188900 DB	'CWebSubWnd', 00H
CONST	ENDS
;	COMDAT ?classCWebSubWnd@CWebSubWnd@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCWebSubWnd@CWebSubWnd@@2UCRuntimeClass@@B DD FLAT:$SG188900 ; CWebSubWnd::classCWebSubWnd
	DD	01bcH
	DD	0ffffH
	DD	00H
	DD	FLAT:?GetThisClass@CHtmlView@@SGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?_messageEntries@CWebSubWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CWebSubWnd@@0QBUAFX_MSGMAP_ENTRY@@B DD 01H ; CWebSubWnd::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	0dH
	DD	FLAT:?OnCreate@CWebSubWnd@@QAEHPAUtagCREATESTRUCTA@@@Z
	DD	05H
	DD	00H
	DD	00H
	DD	00H
	DD	016H
	DD	FLAT:?OnSize@CWebSubWnd@@QAEXIHH@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CWebSubWnd@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CWebSubWnd@@1UAFX_MSGMAP@@B DD FLAT:?GetThisMessageMap@CHtmlView@@KGPBUAFX_MSGMAP@@XZ ; CWebSubWnd::messageMap
	DD	FLAT:?_messageEntries@CWebSubWnd@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
CONST	SEGMENT
	ORG $+5
$SG188941 DB	'http://topmusic.kuwo.cn/today_recommend/skin/recSkin.htm'
	DB	'l?name=none', 00H
$SG188944 DB	'\html\skinerror.htm?r=', 00H
	ORG $+1
$SG188945 DB	'&w=skin', 00H
$SG188948 DB	'WEB_COMMEND_ERR', 00H
$SG188949 DB	'ERROR', 00H
	ORG $+2
$SG188962 DB	'T:%d', 00H
	ORG $+3
$SG188965 DB	'WEBLOADRECOM', 00H
	ORG $+3
$SG188967 DB	'skinerror', 00H
	ORG $+2
$SG188972 DB	'http://topmusic.kuwo.cn/today_recommend/skin/recSkin.htm'
	DB	'l?name=none', 00H
$SG188981 DB	'w', 00H
	ORG $+2
$SG188983 DB	'skin', 00H
CONST	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
;	COMDAT ?_strthunks@ATL@@3U_AtlStringThunks@1@A
_DATA	SEGMENT
?_strthunks@ATL@@3U_AtlStringThunks@1@A DD FLAT:?CompareStringWThunk@ATL@@YGHKKPB_WH0H@Z ; ATL::_strthunks
	DD	FLAT:?GetStringTypeExWThunk@ATL@@YGHKKPB_WHPAG@Z
	DD	FLAT:?lstrcmpiWThunk@ATL@@YGHPB_W0@Z
	DD	FLAT:?CharLowerWThunk@ATL@@YGPA_WPA_W@Z
	DD	FLAT:?CharUpperWThunk@ATL@@YGPA_WPA_W@Z
	DD	FLAT:?GetEnvironmentVariableWThunk@ATL@@YGKPB_WPA_WK@Z
_DATA	ENDS
CONST	SEGMENT
	ORG $+3
_ID_MESSAGE_REFRESH DD 04H
CONST	ENDS
PUBLIC	?get_accChild@CFormView@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z ; CFormView::get_accChild
PUBLIC	?get_accChildCount@CFormView@@UAEJPAJ@Z		; CFormView::get_accChildCount
PUBLIC	?get_accName@CFormView@@UAEJUtagVARIANT@@PAPA_W@Z ; CFormView::get_accName
PUBLIC	?accLocation@CFormView@@UAEJPAJ000UtagVARIANT@@@Z ; CFormView::accLocation
PUBLIC	?accHitTest@CFormView@@UAEJJJPAUtagVARIANT@@@Z	; CFormView::accHitTest
PUBLIC	??_R1A@?0A@A@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CObject@@8				; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R0?AVIMessageObserver@@@8			; IMessageObserver `RTTI Type Descriptor'
PUBLIC	??0IWebRefreshObserver@@QAE@XZ			; IWebRefreshObserver::IWebRefreshObserver
PUBLIC	??1IWebRefreshObserver@@UAE@XZ			; IWebRefreshObserver::~IWebRefreshObserver
PUBLIC	??_R0?AVIWebRefreshObserver@@@8			; IWebRefreshObserver `RTTI Type Descriptor'
PUBLIC	??_R4CWebSubWnd@@6BCHtmlView@@@			; CWebSubWnd::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWebSubWnd@@@8				; CWebSubWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWebSubWnd@@8				; CWebSubWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWebSubWnd@@8				; CWebSubWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CWebSubWnd@@8			; CWebSubWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R1A@?0A@A@CHtmlView@@8			; CHtmlView::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCHtmlView@@@8				; CHtmlView `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CFormView@@8			; CFormView::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCFormView@@@8				; CFormView `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CScrollView@@8			; CScrollView::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCScrollView@@@8				; CScrollView `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CView@@8				; CView::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCView@@@8				; CView `RTTI Type Descriptor'
PUBLIC	??_R1PA@?0A@A@IWebRefreshObserver@@8		; IWebRefreshObserver::`RTTI Base Class Descriptor at (240,-1,0,0)'
PUBLIC	??_R1PA@?0A@A@IMessageObserver@@8		; IMessageObserver::`RTTI Base Class Descriptor at (240,-1,0,0)'
PUBLIC	??_ECWebSubWnd@@WPA@AEPAXI@Z			; [thunk]:CWebSubWnd::`vector deleting destructor'
PUBLIC	??_R4CWebSubWnd@@6BIWebRefreshObserver@@@	; CWebSubWnd::`RTTI Complete Object Locator'
PUBLIC	?GetRuntimeClass@CWebSubWnd@@UBEPAUCRuntimeClass@@XZ ; CWebSubWnd::GetRuntimeClass
PUBLIC	?GetMessageMap@CWebSubWnd@@MBEPBUAFX_MSGMAP@@XZ	; CWebSubWnd::GetMessageMap
PUBLIC	??0CWebSubWnd@@QAE@XZ				; CWebSubWnd::CWebSubWnd
PUBLIC	?OnNavigateError@CWebSubWnd@@UAEXPBD0KPAH@Z	; CWebSubWnd::OnNavigateError
PUBLIC	?OnNavigateComplete2@CWebSubWnd@@UAEXPBD@Z	; CWebSubWnd::OnNavigateComplete2
PUBLIC	?OnGetHostInfo@CWebSubWnd@@UAEJPAU_DOCHOSTUIINFO@@@Z ; CWebSubWnd::OnGetHostInfo
PUBLIC	?IWebRefreshOb_Refresh@CWebSubWnd@@UAEXPBD@Z	; CWebSubWnd::IWebRefreshOb_Refresh
PUBLIC	?OnDocumentComplete@CWebSubWnd@@UAEXPBD@Z	; CWebSubWnd::OnDocumentComplete
PUBLIC	??_7CWebSubWnd@@6BCHtmlView@@@			; CWebSubWnd::`vftable'
PUBLIC	??_7CWebSubWnd@@6BIWebRefreshObserver@@@	; CWebSubWnd::`vftable'
PUBLIC	??_GCWebSubWnd@@UAEPAXI@Z			; CWebSubWnd::`scalar deleting destructor'
EXTRN	??0CHtmlView@@IAE@XZ:NEAR			; CHtmlView::CHtmlView
EXTRN	?GetEventSinkMap@CHtmlView@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CHtmlView::GetEventSinkMap
EXTRN	?IsSelected@CView@@UBEHPBVCObject@@@Z:NEAR	; CView::IsSelected
EXTRN	?OnDragEnter@CView@@UAEKPAVCOleDataObject@@KVCPoint@@@Z:NEAR ; CView::OnDragEnter
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?OnDragOver@CView@@UAEKPAVCOleDataObject@@KVCPoint@@@Z:NEAR ; CView::OnDragOver
EXTRN	?OnDragLeave@CView@@UAEXXZ:NEAR			; CView::OnDragLeave
EXTRN	?OnDrop@CView@@UAEHPAVCOleDataObject@@KVCPoint@@@Z:NEAR ; CView::OnDrop
EXTRN	?OnDropEx@CView@@UAEKPAVCOleDataObject@@KKVCPoint@@@Z:NEAR ; CView::OnDropEx
EXTRN	?OnDragScroll@CView@@UAEKKVCPoint@@@Z:NEAR	; CView::OnDragScroll
EXTRN	?OnUpdate@CView@@MAEXPAV1@JPAVCObject@@@Z:NEAR	; CView::OnUpdate
EXTRN	?OnPreparePrinting@CView@@MAEHPAUCPrintInfo@@@Z:NEAR ; CView::OnPreparePrinting
EXTRN	?OnBeginPrinting@CView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z:NEAR ; CView::OnBeginPrinting
EXTRN	?OnPrint@CView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z:NEAR ; CView::OnPrint
EXTRN	?OnEndPrinting@CView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z:NEAR ; CView::OnEndPrinting
EXTRN	?OnEndPrintPreview@CView@@MAEXPAVCDC@@PAUCPrintInfo@@UtagPOINT@@PAVCPreviewView@@@Z:NEAR ; CView::OnEndPrintPreview
EXTRN	?GetScrollBarCtrl@CView@@UBEPAVCScrollBar@@H@Z:NEAR ; CView::GetScrollBarCtrl
EXTRN	?OnCmdMsg@CView@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CView::OnCmdMsg
EXTRN	?PostNcDestroy@CView@@MAEXXZ:NEAR		; CView::PostNcDestroy
EXTRN	?CreateControlSite@CHtmlView@@UAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CHtmlView::CreateControlSite
EXTRN	?Create@CHtmlView@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z:NEAR ; CHtmlView::Create
EXTRN	?PreTranslateMessage@CHtmlView@@UAEHPAUtagMSG@@@Z:NEAR ; CHtmlView::PreTranslateMessage
EXTRN	?PreCreateWindow@CHtmlView@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CHtmlView::PreCreateWindow
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?OnShowContextMenu@CHtmlView@@UAEJKPAUtagPOINT@@PAUIUnknown@@PAUIDispatch@@@Z:NEAR ; CHtmlView::OnShowContextMenu
EXTRN	?OnGetExternal@CHtmlView@@UAEJPAPAUIDispatch@@@Z:NEAR ; CHtmlView::OnGetExternal
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accValue
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?OnShowUI@CHtmlView@@UAEJKPAUIOleInPlaceActiveObject@@PAUIOleCommandTarget@@PAUIOleInPlaceFrame@@PAUIOleInPlaceUIWindow@@@Z:NEAR ; CHtmlView::OnShowUI
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?OnHideUI@CHtmlView@@UAEJXZ:NEAR		; CHtmlView::OnHideUI
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDescription
EXTRN	?OnUpdateUI@CHtmlView@@UAEJXZ:NEAR		; CHtmlView::OnUpdateUI
EXTRN	?AfxGetMessageManager@@YAPAVIMessageManager@@XZ:NEAR ; AfxGetMessageManager
EXTRN	?OnEnableModeless@CHtmlView@@UAEJH@Z:NEAR	; CHtmlView::OnEnableModeless
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?OnDocWindowActivate@CHtmlView@@UAEJH@Z:NEAR	; CHtmlView::OnDocWindowActivate
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?OnFrameWindowActivate@CHtmlView@@UAEJH@Z:NEAR	; CHtmlView::OnFrameWindowActivate
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accHelp
EXTRN	?OnResizeBorder@CHtmlView@@UAEJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z:NEAR ; CHtmlView::OnResizeBorder
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?OnTranslateAccelerator@CHtmlView@@UAEJPAUtagMSG@@PBU_GUID@@K@Z:NEAR ; CHtmlView::OnTranslateAccelerator
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?OnGetOptionKeyPath@CHtmlView@@UAEJPAPA_WK@Z:NEAR ; CHtmlView::OnGetOptionKeyPath
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?OnFilterDataObject@CHtmlView@@UAEJPAUIDataObject@@PAPAU2@@Z:NEAR ; CHtmlView::OnFilterDataObject
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?OnTranslateUrl@CHtmlView@@UAEJKPA_WPAPA_W@Z:NEAR ; CHtmlView::OnTranslateUrl
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?OnInitialUpdate@CFormView@@UAEXXZ:NEAR		; CFormView::OnInitialUpdate
EXTRN	?OnGetDropTarget@CHtmlView@@UAEJPAUIDropTarget@@PAPAU2@@Z:NEAR ; CHtmlView::OnGetDropTarget
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?OnBeforeNavigate2@CHtmlView@@UAEXPBDK0AAVCByteArray@@0PAH@Z:NEAR ; CHtmlView::OnBeforeNavigate2
EXTRN	?OnStatusTextChange@CHtmlView@@UAEXPBD@Z:NEAR	; CHtmlView::OnStatusTextChange
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?OnProgressChange@CHtmlView@@UAEXJJ@Z:NEAR	; CHtmlView::OnProgressChange
EXTRN	__RTC_InitBase:NEAR
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?OnCommandStateChange@CHtmlView@@UAEXJH@Z:NEAR	; CHtmlView::OnCommandStateChange
EXTRN	__RTC_Shutdown:NEAR
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR	; CWnd::put_accName
EXTRN	?OnDownloadBegin@CHtmlView@@UAEXXZ:NEAR		; CHtmlView::OnDownloadBegin
EXTRN	?OnDownloadComplete@CHtmlView@@UAEXXZ:NEAR	; CHtmlView::OnDownloadComplete
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR ; CWnd::put_accValue
EXTRN	?OnTitleChange@CHtmlView@@UAEXPBD@Z:NEAR	; CHtmlView::OnTitleChange
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?OnPropertyChange@CHtmlView@@UAEXPBD@Z:NEAR	; CHtmlView::OnPropertyChange
EXTRN	?OnNewWindow2@CHtmlView@@UAEXPAPAUIDispatch@@PAH@Z:NEAR ; CHtmlView::OnNewWindow2
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	?OnQuit@CHtmlView@@UAEXXZ:NEAR			; CHtmlView::OnQuit
EXTRN	__except_list:DWORD
EXTRN	?OnVisible@CHtmlView@@UAEXH@Z:NEAR		; CHtmlView::OnVisible
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?OnToolBar@CHtmlView@@UAEXH@Z:NEAR		; CHtmlView::OnToolBar
EXTRN	?OnMenuBar@CHtmlView@@UAEXH@Z:NEAR		; CHtmlView::OnMenuBar
EXTRN	?OnActivateView@CFormView@@MAEXHPAVCView@@0@Z:NEAR ; CFormView::OnActivateView
EXTRN	?OnStatusBar@CHtmlView@@UAEXH@Z:NEAR		; CHtmlView::OnStatusBar
EXTRN	?CalcWindowRect@CScrollView@@UAEXPAUtagRECT@@I@Z:NEAR ; CScrollView::CalcWindowRect
EXTRN	?OnActivateFrame@CFormView@@MAEXIPAVCFrameWnd@@@Z:NEAR ; CFormView::OnActivateFrame
EXTRN	?OnFullScreen@CHtmlView@@UAEXH@Z:NEAR		; CHtmlView::OnFullScreen
EXTRN	?OnTheaterMode@CHtmlView@@UAEXH@Z:NEAR		; CHtmlView::OnTheaterMode
EXTRN	?OnPrepareDC@CScrollView@@UAEXPAVCDC@@PAUCPrintInfo@@@Z:NEAR ; CScrollView::OnPrepareDC
EXTRN	?SetOccDialogInfo@CFormView@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CFormView::SetOccDialogInfo
EXTRN	?GetWheelScrollDistance@CScrollView@@UAE?AVCSize@@V2@HH@Z:NEAR ; CScrollView::GetWheelScrollDistance
EXTRN	??1CHtmlView@@UAE@XZ:NEAR			; CHtmlView::~CHtmlView
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnDraw@CHtmlView@@UAEXPAVCDC@@@Z:NEAR		; CHtmlView::OnDraw
EXTRN	?OnScroll@CScrollView@@UAEHIIH@Z:NEAR		; CScrollView::OnScroll
EXTRN	?AssertValid@CHtmlView@@UBEXXZ:NEAR		; CHtmlView::AssertValid
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?Dump@CHtmlView@@UBEXAAVCDumpContext@@@Z:NEAR	; CHtmlView::Dump
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?OnScrollBy@CScrollView@@UAEHVCSize@@H@Z:NEAR	; CScrollView::OnScrollBy
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?NavigateComplete2@CHtmlView@@MAEXPAUIDispatch@@PAUtagVARIANT@@@Z:NEAR ; CHtmlView::NavigateComplete2
EXTRN	?BeforeNavigate2@CHtmlView@@MAEXPAUIDispatch@@PAUtagVARIANT@@1111PAF@Z:NEAR ; CHtmlView::BeforeNavigate2
EXTRN	?DocumentComplete@CHtmlView@@MAEXPAUIDispatch@@PAUtagVARIANT@@@Z:NEAR ; CHtmlView::DocumentComplete
EXTRN	?NavigateError@CHtmlView@@MAEXPAUIDispatch@@PAUtagVARIANT@@11PAF@Z:NEAR ; CHtmlView::NavigateError
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:NEAR	; CObject::Serialize
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:NEAR ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:NEAR		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:NEAR		; CWnd::EndModalState
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	??0CFlashWnd@@QAE@XZ:NEAR			; CFlashWnd::CFlashWnd
EXTRN	??1CFlashWnd@@UAE@XZ:NEAR			; CFlashWnd::~CFlashWnd
EXTRN	??_ECWebSubWnd@@UAEPAXI@Z:NEAR			; CWebSubWnd::`vector deleting destructor'
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
;	COMDAT rtc$IMZ
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\changecolor\websubwnd.cpp
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
xdata$x	SEGMENT
$T189686 DD	0ffffffffH
	DD	FLAT:$L189675
	DD	00H
	DD	FLAT:$L189676
	DD	01H
	DD	FLAT:$L189677
	DD	02H
	DD	FLAT:$L189678
$T189682 DD	019930520H
	DD	04H
	DD	FLAT:$T189686
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CWebSubWnd@@6BCHtmlView@@@
CONST	SEGMENT
??_7CWebSubWnd@@6BCHtmlView@@@ DD FLAT:??_R4CWebSubWnd@@6BCHtmlView@@@ ; CWebSubWnd::`vftable'
	DD	FLAT:?GetRuntimeClass@CWebSubWnd@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECWebSubWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CHtmlView@@UBEXXZ
	DD	FLAT:?Dump@CHtmlView@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CView@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWebSubWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CHtmlView@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CHtmlView@@UAEHPBD0KABUtagRECT@@PAVCWnd@@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CHtmlView@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CScrollView@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CView@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CFormView@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CFormView@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CFormView@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CFormView@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CFormView@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CHtmlView@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CView@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CHtmlView@@UAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CFormView@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?IsSelected@CView@@UBEHPBVCObject@@@Z
	DD	FLAT:?OnScroll@CScrollView@@UAEHIIH@Z
	DD	FLAT:?OnScrollBy@CScrollView@@UAEHVCSize@@H@Z
	DD	FLAT:?OnDragEnter@CView@@UAEKPAVCOleDataObject@@KVCPoint@@@Z
	DD	FLAT:?OnDragOver@CView@@UAEKPAVCOleDataObject@@KVCPoint@@@Z
	DD	FLAT:?OnDragLeave@CView@@UAEXXZ
	DD	FLAT:?OnDrop@CView@@UAEHPAVCOleDataObject@@KVCPoint@@@Z
	DD	FLAT:?OnDropEx@CView@@UAEKPAVCOleDataObject@@KKVCPoint@@@Z
	DD	FLAT:?OnDragScroll@CView@@UAEKKVCPoint@@@Z
	DD	FLAT:?OnPrepareDC@CScrollView@@UAEXPAVCDC@@PAUCPrintInfo@@@Z
	DD	FLAT:?OnInitialUpdate@CFormView@@UAEXXZ
	DD	FLAT:?OnActivateView@CFormView@@MAEXHPAVCView@@0@Z
	DD	FLAT:?OnActivateFrame@CFormView@@MAEXIPAVCFrameWnd@@@Z
	DD	FLAT:?OnUpdate@CView@@MAEXPAV1@JPAVCObject@@@Z
	DD	FLAT:?OnDraw@CHtmlView@@UAEXPAVCDC@@@Z
	DD	FLAT:?OnPreparePrinting@CView@@MAEHPAUCPrintInfo@@@Z
	DD	FLAT:?OnBeginPrinting@CView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z
	DD	FLAT:?OnPrint@CView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z
	DD	FLAT:?OnEndPrinting@CView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z
	DD	FLAT:?OnEndPrintPreview@CView@@MAEXPAVCDC@@PAUCPrintInfo@@UtagPOINT@@PAVCPreviewView@@@Z
	DD	FLAT:?GetWheelScrollDistance@CScrollView@@UAE?AVCSize@@V2@HH@Z
	DD	FLAT:?OnShowContextMenu@CHtmlView@@UAEJKPAUtagPOINT@@PAUIUnknown@@PAUIDispatch@@@Z
	DD	FLAT:?OnGetExternal@CHtmlView@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?OnGetHostInfo@CWebSubWnd@@UAEJPAU_DOCHOSTUIINFO@@@Z
	DD	FLAT:?OnShowUI@CHtmlView@@UAEJKPAUIOleInPlaceActiveObject@@PAUIOleCommandTarget@@PAUIOleInPlaceFrame@@PAUIOleInPlaceUIWindow@@@Z
	DD	FLAT:?OnHideUI@CHtmlView@@UAEJXZ
	DD	FLAT:?OnUpdateUI@CHtmlView@@UAEJXZ
	DD	FLAT:?OnEnableModeless@CHtmlView@@UAEJH@Z
	DD	FLAT:?OnDocWindowActivate@CHtmlView@@UAEJH@Z
	DD	FLAT:?OnFrameWindowActivate@CHtmlView@@UAEJH@Z
	DD	FLAT:?OnResizeBorder@CHtmlView@@UAEJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z
	DD	FLAT:?OnTranslateAccelerator@CHtmlView@@UAEJPAUtagMSG@@PBU_GUID@@K@Z
	DD	FLAT:?OnGetOptionKeyPath@CHtmlView@@UAEJPAPA_WK@Z
	DD	FLAT:?OnFilterDataObject@CHtmlView@@UAEJPAUIDataObject@@PAPAU2@@Z
	DD	FLAT:?OnTranslateUrl@CHtmlView@@UAEJKPA_WPAPA_W@Z
	DD	FLAT:?OnGetDropTarget@CHtmlView@@UAEJPAUIDropTarget@@PAPAU2@@Z
	DD	FLAT:?OnNavigateComplete2@CWebSubWnd@@UAEXPBD@Z
	DD	FLAT:?OnBeforeNavigate2@CHtmlView@@UAEXPBDK0AAVCByteArray@@0PAH@Z
	DD	FLAT:?OnStatusTextChange@CHtmlView@@UAEXPBD@Z
	DD	FLAT:?OnProgressChange@CHtmlView@@UAEXJJ@Z
	DD	FLAT:?OnCommandStateChange@CHtmlView@@UAEXJH@Z
	DD	FLAT:?OnDownloadBegin@CHtmlView@@UAEXXZ
	DD	FLAT:?OnDownloadComplete@CHtmlView@@UAEXXZ
	DD	FLAT:?OnTitleChange@CHtmlView@@UAEXPBD@Z
	DD	FLAT:?OnPropertyChange@CHtmlView@@UAEXPBD@Z
	DD	FLAT:?OnNewWindow2@CHtmlView@@UAEXPAPAUIDispatch@@PAH@Z
	DD	FLAT:?OnDocumentComplete@CWebSubWnd@@UAEXPBD@Z
	DD	FLAT:?OnQuit@CHtmlView@@UAEXXZ
	DD	FLAT:?OnVisible@CHtmlView@@UAEXH@Z
	DD	FLAT:?OnToolBar@CHtmlView@@UAEXH@Z
	DD	FLAT:?OnMenuBar@CHtmlView@@UAEXH@Z
	DD	FLAT:?OnStatusBar@CHtmlView@@UAEXH@Z
	DD	FLAT:?OnFullScreen@CHtmlView@@UAEXH@Z
	DD	FLAT:?OnTheaterMode@CHtmlView@@UAEXH@Z
	DD	FLAT:?OnNavigateError@CWebSubWnd@@UAEXPBD0KPAH@Z
	DD	FLAT:?NavigateComplete2@CHtmlView@@MAEXPAUIDispatch@@PAUtagVARIANT@@@Z
	DD	FLAT:?BeforeNavigate2@CHtmlView@@MAEXPAUIDispatch@@PAUtagVARIANT@@1111PAF@Z
	DD	FLAT:?DocumentComplete@CHtmlView@@MAEXPAUIDispatch@@PAUtagVARIANT@@@Z
	DD	FLAT:?NavigateError@CHtmlView@@MAEXPAUIDispatch@@PAUtagVARIANT@@11PAF@Z
CONST	ENDS
;	COMDAT ??_7CWebSubWnd@@6BIWebRefreshObserver@@@
CONST	SEGMENT
??_7CWebSubWnd@@6BIWebRefreshObserver@@@ DD FLAT:??_R4CWebSubWnd@@6BIWebRefreshObserver@@@ ; CWebSubWnd::`vftable'
	DD	FLAT:??_ECWebSubWnd@@WPA@AEPAXI@Z
	DD	FLAT:?IWebRefreshOb_Refresh@CWebSubWnd@@UAEXPBD@Z
CONST	ENDS
;	COMDAT ??_R4CWebSubWnd@@6BCHtmlView@@@
rdata$r	SEGMENT
??_R4CWebSubWnd@@6BCHtmlView@@@ DD 00H			; CWebSubWnd::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWebSubWnd@@@8
	DD	FLAT:??_R3CWebSubWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWebSubWnd@@@8
_DATA	SEGMENT
??_R0?AVCWebSubWnd@@@8 DD FLAT:??_7type_info@@6B@	; CWebSubWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWebSubWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CWebSubWnd@@8
rdata$r	SEGMENT
??_R3CWebSubWnd@@8 DD 00H				; CWebSubWnd::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2CWebSubWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CWebSubWnd@@8
rdata$r	SEGMENT
??_R2CWebSubWnd@@8 DD FLAT:??_R1A@?0A@A@CWebSubWnd@@8	; CWebSubWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@CHtmlView@@8
	DD	FLAT:??_R1A@?0A@A@CFormView@@8
	DD	FLAT:??_R1A@?0A@A@CScrollView@@8
	DD	FLAT:??_R1A@?0A@A@CView@@8
	DD	FLAT:??_R1A@?0A@A@CWnd@@8
	DD	FLAT:??_R1A@?0A@A@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@A@CObject@@8
	DD	FLAT:??_R1PA@?0A@A@IWebRefreshObserver@@8
	DD	FLAT:??_R1PA@?0A@A@IMessageObserver@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CWebSubWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CWebSubWnd@@8 DD FLAT:??_R0?AVCWebSubWnd@@@8 ; CWebSubWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CHtmlView@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CHtmlView@@8 DD FLAT:??_R0?AVCHtmlView@@@8	; CHtmlView::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCHtmlView@@@8
_DATA	SEGMENT
??_R0?AVCHtmlView@@@8 DD FLAT:??_7type_info@@6B@	; CHtmlView `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCHtmlView@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CFormView@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CFormView@@8 DD FLAT:??_R0?AVCFormView@@@8	; CFormView::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCFormView@@@8
_DATA	SEGMENT
??_R0?AVCFormView@@@8 DD FLAT:??_7type_info@@6B@	; CFormView `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFormView@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CScrollView@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CScrollView@@8 DD FLAT:??_R0?AVCScrollView@@@8 ; CScrollView::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCScrollView@@@8
_DATA	SEGMENT
??_R0?AVCScrollView@@@8 DD FLAT:??_7type_info@@6B@	; CScrollView `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCScrollView@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CView@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CView@@8 DD FLAT:??_R0?AVCView@@@8		; CView::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCView@@@8
_DATA	SEGMENT
??_R0?AVCView@@@8 DD FLAT:??_7type_info@@6B@		; CView `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCView@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R1PA@?0A@A@IWebRefreshObserver@@8
rdata$r	SEGMENT
??_R1PA@?0A@A@IWebRefreshObserver@@8 DD FLAT:??_R0?AVIWebRefreshObserver@@@8 ; IWebRefreshObserver::`RTTI Base Class Descriptor at (240,-1,0,0)'
	DD	01H
	DD	0f0H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVIWebRefreshObserver@@@8
_DATA	SEGMENT
??_R0?AVIWebRefreshObserver@@@8 DD FLAT:??_7type_info@@6B@ ; IWebRefreshObserver `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIWebRefreshObserver@@', 00H
_DATA	ENDS
;	COMDAT ??_R1PA@?0A@A@IMessageObserver@@8
rdata$r	SEGMENT
??_R1PA@?0A@A@IMessageObserver@@8 DD FLAT:??_R0?AVIMessageObserver@@@8 ; IMessageObserver::`RTTI Base Class Descriptor at (240,-1,0,0)'
	DD	00H
	DD	0f0H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVIMessageObserver@@@8
_DATA	SEGMENT
??_R0?AVIMessageObserver@@@8 DD FLAT:??_7type_info@@6B@	; IMessageObserver `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIMessageObserver@@', 00H
	ORG $-31
	DD	FLAT:??_7type_info@@6B@
	DD	00H
	DB	'.?AVIMessageObserver@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CWebSubWnd@@6BIWebRefreshObserver@@@
rdata$r	SEGMENT
??_R4CWebSubWnd@@6BIWebRefreshObserver@@@ DD 00H	; CWebSubWnd::`RTTI Complete Object Locator'
	DD	0f0H
	DD	00H
	DD	FLAT:??_R0?AVCWebSubWnd@@@8
	DD	FLAT:??_R3CWebSubWnd@@8
; Function compile flags: /Odt /RTCsu
rdata$r	ENDS
_TEXT	SEGMENT
tv91 = -24						; size = 4
tv129 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CWebSubWnd@@QAE@XZ PROC NEAR				; CWebSubWnd::CWebSubWnd
; _this$ = ecx

; 12   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CWebSubWnd@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  00023	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0002a	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00031	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ??0CHtmlView@@IAE@XZ	; CHtmlView::CHtmlView
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	81 c1 f0 00 00
	00		 add	 ecx, 240		; 000000f0H
  0004c	e8 00 00 00 00	 call	 ??0IWebRefreshObserver@@QAE@XZ
  00051	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWebSubWnd@@6BCHtmlView@@@
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	c7 81 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+240], OFFSET FLAT:??_7CWebSubWnd@@6BIWebRefreshObserver@@@
  0006b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	81 c1 fc 00 00
	00		 add	 ecx, 252		; 000000fcH
  00074	8b f4		 mov	 esi, esp
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0007c	3b f4		 cmp	 esi, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00083	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00087	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	81 c1 00 01 00
	00		 add	 ecx, 256		; 00000100H
  00090	e8 00 00 00 00	 call	 ??0CFlashWnd@@QAE@XZ	; CFlashWnd::CFlashWnd
  00095	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 13   : 	AfxGetMessageManager()->AttachMessage( ID_MESSAGE_REFRESH,this);

  00099	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  0009d	74 0e		 je	 SHORT $L189667
  0009f	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000a2	81 c2 f0 00 00
	00		 add	 edx, 240		; 000000f0H
  000a8	89 55 ec	 mov	 DWORD PTR tv129[ebp], edx
  000ab	eb 07		 jmp	 SHORT $L189668
$L189667:
  000ad	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$L189668:
  000b4	e8 00 00 00 00	 call	 ?AfxGetMessageManager@@YAPAVIMessageManager@@XZ ; AfxGetMessageManager
  000b9	89 45 e8	 mov	 DWORD PTR tv91[ebp], eax
  000bc	8b f4		 mov	 esi, esp
  000be	6a 02		 push	 2
  000c0	8b 45 ec	 mov	 eax, DWORD PTR tv129[ebp]
  000c3	50		 push	 eax
  000c4	68 00 00 00 00	 push	 OFFSET FLAT:_ID_MESSAGE_REFRESH
  000c9	8b 4d e8	 mov	 ecx, DWORD PTR tv91[ebp]
  000cc	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ce	8b 4d e8	 mov	 ecx, DWORD PTR tv91[ebp]
  000d1	ff 52 04	 call	 DWORD PTR [edx+4]
  000d4	3b f4		 cmp	 esi, esp
  000d6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 14   : }

  000db	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000e5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ef	5e		 pop	 esi
  000f0	83 c4 18	 add	 esp, 24			; 00000018H
  000f3	3b ec		 cmp	 ebp, esp
  000f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L189675:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CHtmlView@@UAE@XZ	; CHtmlView::~CHtmlView
$L189676:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 f0 00 00
	00		 add	 ecx, 240		; 000000f0H
  00011	e9 00 00 00 00	 jmp	 ??1IWebRefreshObserver@@UAE@XZ
$L189677:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 fc 00 00
	00		 add	 ecx, 252		; 000000fcH
  0001f	8b f4		 mov	 esi, esp
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00027	3b f4		 cmp	 esi, esp
  00029	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L189678:
  0002e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	81 c1 00 01 00
	00		 add	 ecx, 256		; 00000100H
  00037	e9 00 00 00 00	 jmp	 ??1CFlashWnd@@UAE@XZ	; CFlashWnd::~CFlashWnd
__ehhandler$??0CWebSubWnd@@QAE@XZ:
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189682
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CWebSubWnd@@QAE@XZ ENDP				; CWebSubWnd::CWebSubWnd
PUBLIC	??1CWebSubWnd@@UAE@XZ				; CWebSubWnd::~CWebSubWnd
EXTRN	??3CObject@@SGXPAX@Z:NEAR			; CObject::operator delete
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_GCWebSubWnd@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCWebSubWnd@@UAEPAXI@Z PROC NEAR			; CWebSubWnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CWebSubWnd@@UAE@XZ	; CWebSubWnd::~CWebSubWnd
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 09		 je	 SHORT $L188886
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L188886:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??_GCWebSubWnd@@UAEPAXI@Z ENDP				; CWebSubWnd::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0IMessageObserver@@QAE@XZ			; IMessageObserver::IMessageObserver
PUBLIC	??_R1A@?0A@A@IMessageObserver@@8		; IMessageObserver::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	?IWebRefreshOb_Refresh@IWebRefreshObserver@@UAEXPBD@Z ; IWebRefreshObserver::IWebRefreshOb_Refresh
PUBLIC	??_7IWebRefreshObserver@@6B@			; IWebRefreshObserver::`vftable'
PUBLIC	??_GIWebRefreshObserver@@UAEPAXI@Z		; IWebRefreshObserver::`scalar deleting destructor'
PUBLIC	??_R4IWebRefreshObserver@@6B@			; IWebRefreshObserver::`RTTI Complete Object Locator'
PUBLIC	??_R3IWebRefreshObserver@@8			; IWebRefreshObserver::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IWebRefreshObserver@@8			; IWebRefreshObserver::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@IWebRefreshObserver@@8		; IWebRefreshObserver::`RTTI Base Class Descriptor at (0,-1,0,0)'
EXTRN	??_EIWebRefreshObserver@@UAEPAXI@Z:NEAR		; IWebRefreshObserver::`vector deleting destructor'
;	COMDAT ??_7IWebRefreshObserver@@6B@
CONST	SEGMENT
??_7IWebRefreshObserver@@6B@ DD FLAT:??_R4IWebRefreshObserver@@6B@ ; IWebRefreshObserver::`vftable'
	DD	FLAT:??_EIWebRefreshObserver@@UAEPAXI@Z
	DD	FLAT:?IWebRefreshOb_Refresh@IWebRefreshObserver@@UAEXPBD@Z
CONST	ENDS
;	COMDAT ??_R4IWebRefreshObserver@@6B@
rdata$r	SEGMENT
??_R4IWebRefreshObserver@@6B@ DD 00H			; IWebRefreshObserver::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIWebRefreshObserver@@@8
	DD	FLAT:??_R3IWebRefreshObserver@@8
rdata$r	ENDS
;	COMDAT ??_R3IWebRefreshObserver@@8
rdata$r	SEGMENT
??_R3IWebRefreshObserver@@8 DD 00H			; IWebRefreshObserver::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IWebRefreshObserver@@8
rdata$r	ENDS
;	COMDAT ??_R2IWebRefreshObserver@@8
rdata$r	SEGMENT
??_R2IWebRefreshObserver@@8 DD FLAT:??_R1A@?0A@A@IWebRefreshObserver@@8 ; IWebRefreshObserver::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@IMessageObserver@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IWebRefreshObserver@@8
rdata$r	SEGMENT
??_R1A@?0A@A@IWebRefreshObserver@@8 DD FLAT:??_R0?AVIWebRefreshObserver@@@8 ; IWebRefreshObserver::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IMessageObserver@@8
rdata$r	SEGMENT
??_R1A@?0A@A@IMessageObserver@@8 DD FLAT:??_R0?AVIMessageObserver@@@8 ; IMessageObserver::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
; Function compile flags: /Odt /RTCsu
rdata$r	ENDS
;	COMDAT ??0IWebRefreshObserver@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IWebRefreshObserver@@QAE@XZ PROC NEAR		; IWebRefreshObserver::IWebRefreshObserver, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0IMessageObserver@@QAE@XZ
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7IWebRefreshObserver@@6B@
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??0IWebRefreshObserver@@QAE@XZ ENDP			; IWebRefreshObserver::IWebRefreshObserver
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\datainterface\iwebrefreshobserver.h
_TEXT	ENDS
;	COMDAT ?IWebRefreshOb_Refresh@IWebRefreshObserver@@UAEXPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_psz$ = 8						; size = 4
?IWebRefreshOb_Refresh@IWebRefreshObserver@@UAEXPBD@Z PROC NEAR ; IWebRefreshObserver::IWebRefreshOb_Refresh, COMDAT
; _this$ = ecx

; 8    : 	virtual void IWebRefreshOb_Refresh(const char* psz){};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?IWebRefreshOb_Refresh@IWebRefreshObserver@@UAEXPBD@Z ENDP ; IWebRefreshObserver::IWebRefreshOb_Refresh
_TEXT	ENDS
PUBLIC	??1IMessageObserver@@UAE@XZ			; IMessageObserver::~IMessageObserver
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1IWebRefreshObserver@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1IWebRefreshObserver@@UAE@XZ PROC NEAR		; IWebRefreshObserver::~IWebRefreshObserver, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1IMessageObserver@@UAE@XZ ; IMessageObserver::~IMessageObserver
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1IWebRefreshObserver@@UAE@XZ ENDP			; IWebRefreshObserver::~IWebRefreshObserver
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_GIWebRefreshObserver@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GIWebRefreshObserver@@UAEPAXI@Z PROC NEAR		; IWebRefreshObserver::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1IWebRefreshObserver@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $L188894
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$L188894:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GIWebRefreshObserver@@UAEPAXI@Z ENDP			; IWebRefreshObserver::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7IMessageObserver@@6B@			; IMessageObserver::`vftable'
PUBLIC	??_GIMessageObserver@@UAEPAXI@Z			; IMessageObserver::`scalar deleting destructor'
PUBLIC	??_R4IMessageObserver@@6B@			; IMessageObserver::`RTTI Complete Object Locator'
PUBLIC	??_R3IMessageObserver@@8			; IMessageObserver::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMessageObserver@@8			; IMessageObserver::`RTTI Base Class Array'
EXTRN	??_EIMessageObserver@@UAEPAXI@Z:NEAR		; IMessageObserver::`vector deleting destructor'
;	COMDAT ??_7IMessageObserver@@6B@
CONST	SEGMENT
??_7IMessageObserver@@6B@ DD FLAT:??_R4IMessageObserver@@6B@ ; IMessageObserver::`vftable'
	DD	FLAT:??_EIMessageObserver@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4IMessageObserver@@6B@
rdata$r	SEGMENT
??_R4IMessageObserver@@6B@ DD 00H			; IMessageObserver::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIMessageObserver@@@8
	DD	FLAT:??_R3IMessageObserver@@8
rdata$r	ENDS
;	COMDAT ??_R3IMessageObserver@@8
rdata$r	SEGMENT
??_R3IMessageObserver@@8 DD 00H				; IMessageObserver::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IMessageObserver@@8
rdata$r	ENDS
;	COMDAT ??_R2IMessageObserver@@8
rdata$r	SEGMENT
??_R2IMessageObserver@@8 DD FLAT:??_R1A@?0A@A@IMessageObserver@@8 ; IMessageObserver::`RTTI Base Class Array'
; Function compile flags: /Odt /RTCsu
rdata$r	ENDS
;	COMDAT ??0IMessageObserver@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IMessageObserver@@QAE@XZ PROC NEAR			; IMessageObserver::IMessageObserver, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7IMessageObserver@@6B@
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0IMessageObserver@@QAE@XZ ENDP			; IMessageObserver::IMessageObserver
_TEXT	ENDS
xdata$x	SEGMENT
$T189709 DD	0ffffffffH
	DD	FLAT:$L189700
	DD	00H
	DD	FLAT:$L189703
	DD	01H
	DD	FLAT:$L189704
	DD	02H
	DD	FLAT:$L189705
$T189707 DD	019930520H
	DD	04H
	DD	FLAT:$T189709
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\changecolor\websubwnd.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv68 = -28						; size = 4
tv80 = -24						; size = 4
tv85 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CWebSubWnd@@UAE@XZ PROC NEAR				; CWebSubWnd::~CWebSubWnd
; _this$ = ecx

; 17   : {

  00100	55		 push	 ebp
  00101	8b ec		 mov	 ebp, esp
  00103	6a ff		 push	 -1
  00105	68 00 00 00 00	 push	 __ehhandler$??1CWebSubWnd@@UAE@XZ
  0010a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00110	50		 push	 eax
  00111	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00118	83 ec 10	 sub	 esp, 16			; 00000010H
  0011b	56		 push	 esi
  0011c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00121	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00124	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00127	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0012a	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0012d	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00130	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00133	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWebSubWnd@@6BCHtmlView@@@
  00139	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013c	c7 81 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+240], OFFSET FLAT:??_7CWebSubWnd@@6BIWebRefreshObserver@@@
  00146	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3

; 18   : 	AfxGetMessageManager()->DetachMessage( ID_MESSAGE_REFRESH,this);

  0014d	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  00151	74 0e		 je	 SHORT $L189698
  00153	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00156	81 c2 f0 00 00
	00		 add	 edx, 240		; 000000f0H
  0015c	89 55 ec	 mov	 DWORD PTR tv85[ebp], edx
  0015f	eb 07		 jmp	 SHORT $L189699
$L189698:
  00161	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$L189699:
  00168	e8 00 00 00 00	 call	 ?AfxGetMessageManager@@YAPAVIMessageManager@@XZ ; AfxGetMessageManager
  0016d	89 45 e8	 mov	 DWORD PTR tv80[ebp], eax
  00170	8b f4		 mov	 esi, esp
  00172	8b 45 ec	 mov	 eax, DWORD PTR tv85[ebp]
  00175	50		 push	 eax
  00176	68 00 00 00 00	 push	 OFFSET FLAT:_ID_MESSAGE_REFRESH
  0017b	8b 4d e8	 mov	 ecx, DWORD PTR tv80[ebp]
  0017e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00180	8b 4d e8	 mov	 ecx, DWORD PTR tv80[ebp]
  00183	ff 52 08	 call	 DWORD PTR [edx+8]
  00186	3b f4		 cmp	 esi, esp
  00188	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 19   : }

  0018d	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00191	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	81 c1 00 01 00
	00		 add	 ecx, 256		; 00000100H
  0019a	e8 00 00 00 00	 call	 ??1CFlashWnd@@UAE@XZ	; CFlashWnd::~CFlashWnd
  0019f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001a3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	81 c1 fc 00 00
	00		 add	 ecx, 252		; 000000fcH
  001ac	8b f4		 mov	 esi, esp
  001ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001b4	3b f4		 cmp	 esi, esp
  001b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001bb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001bf	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  001c3	74 0d		 je	 SHORT $L189696
  001c5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001c8	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  001cd	89 45 e4	 mov	 DWORD PTR tv68[ebp], eax
  001d0	eb 07		 jmp	 SHORT $L189697
$L189696:
  001d2	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$L189697:
  001d9	8b 4d e4	 mov	 ecx, DWORD PTR tv68[ebp]
  001dc	e8 00 00 00 00	 call	 ??1IWebRefreshObserver@@UAE@XZ
  001e1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001e8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001eb	e8 00 00 00 00	 call	 ??1CHtmlView@@UAE@XZ	; CHtmlView::~CHtmlView
  001f0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001f3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001fa	5e		 pop	 esi
  001fb	83 c4 1c	 add	 esp, 28			; 0000001cH
  001fe	3b ec		 cmp	 ebp, esp
  00200	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00205	8b e5		 mov	 esp, ebp
  00207	5d		 pop	 ebp
  00208	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L189700:
  00046	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e9 00 00 00 00	 jmp	 ??1CHtmlView@@UAE@XZ	; CHtmlView::~CHtmlView
$L189703:
  0004e	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  00052	0f 84 10 00 00
	00		 je	 $L189701
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  00060	89 45 e4	 mov	 DWORD PTR tv68[ebp], eax
  00063	e9 07 00 00 00	 jmp	 $L189702
$L189701:
  00068	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$L189702:
  0006f	8b 4d e4	 mov	 ecx, DWORD PTR tv68[ebp]
  00072	e9 00 00 00 00	 jmp	 ??1IWebRefreshObserver@@UAE@XZ
$L189704:
  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	81 c1 fc 00 00
	00		 add	 ecx, 252		; 000000fcH
  00080	8b f4		 mov	 esi, esp
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00088	3b f4		 cmp	 esi, esp
  0008a	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L189705:
  0008f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	81 c1 00 01 00
	00		 add	 ecx, 256		; 00000100H
  00098	e9 00 00 00 00	 jmp	 ??1CFlashWnd@@UAE@XZ	; CFlashWnd::~CFlashWnd
__ehhandler$??1CWebSubWnd@@UAE@XZ:
  0009d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189707
  000a2	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CWebSubWnd@@UAE@XZ ENDP				; CWebSubWnd::~CWebSubWnd
PUBLIC	?GetThisClass@CWebSubWnd@@SGPAUCRuntimeClass@@XZ ; CWebSubWnd::GetThisClass
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
?GetThisClass@CWebSubWnd@@SGPAUCRuntimeClass@@XZ PROC NEAR ; CWebSubWnd::GetThisClass

; 20   : IMPLEMENT_DYNAMIC(CWebSubWnd, CHtmlView)

  00210	55		 push	 ebp
  00211	8b ec		 mov	 ebp, esp
  00213	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCWebSubWnd@CWebSubWnd@@2UCRuntimeClass@@B ; CWebSubWnd::classCWebSubWnd
  00218	5d		 pop	 ebp
  00219	c3		 ret	 0
?GetThisClass@CWebSubWnd@@SGPAUCRuntimeClass@@XZ ENDP	; CWebSubWnd::GetThisClass
; Function compile flags: /Odt /RTCsu
_this$ = -4						; size = 4
?GetRuntimeClass@CWebSubWnd@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; CWebSubWnd::GetRuntimeClass
; _this$ = ecx

; 20   : IMPLEMENT_DYNAMIC(CWebSubWnd, CHtmlView)

  00220	55		 push	 ebp
  00221	8b ec		 mov	 ebp, esp
  00223	51		 push	 ecx
  00224	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0022b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0022e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?classCWebSubWnd@CWebSubWnd@@2UCRuntimeClass@@B ; CWebSubWnd::classCWebSubWnd
  00233	8b e5		 mov	 esp, ebp
  00235	5d		 pop	 ebp
  00236	c3		 ret	 0
?GetRuntimeClass@CWebSubWnd@@UBEPAUCRuntimeClass@@XZ ENDP ; CWebSubWnd::GetRuntimeClass
_TEXT	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	___security_cookie:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -164				; size = 4
_ver$ = -156						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 5c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-164]
  00011	b9 29 00 00 00	 mov	 ecx, 41			; 00000029H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

  00025	c7 85 64 ff ff
	ff 94 00 00 00	 mov	 DWORD PTR _ver$[ebp], 148 ; 00000094H

; 139  : 	::GetVersionEx( &ver );

  0002f	8b f4		 mov	 esi, esp
  00031	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _ver$[ebp]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00045	83 bd 74 ff ff
	ff 02		 cmp	 DWORD PTR _ver$[ebp+16], 2
  0004c	75 15		 jne	 SHORT $L24163
  0004e	83 bd 68 ff ff
	ff 05		 cmp	 DWORD PTR _ver$[ebp+4], 5
  00055	72 0c		 jb	 SHORT $L24163

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  00057	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

  00061	eb 0a		 jmp	 SHORT $L24164
$L24163:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00063	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L24164:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  0006d	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _pfnGetThreadACP$[ebp]
  00073	51		 push	 ecx
  00074	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00079	e8 00 00 00 00	 call	 ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  0007e	8b f4		 mov	 esi, esp
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 152  : }

  0008d	52		 push	 edx
  0008e	8b cd		 mov	 ecx, ebp
  00090	50		 push	 eax
  00091	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189718
  00097	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009c	58		 pop	 eax
  0009d	5a		 pop	 edx
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	81 c4 a4 00 00
	00		 add	 esp, 164		; 000000a4H
  000ae	3b ec		 cmp	 ebp, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
$L189718:
  000b9	01 00 00 00	 DD	 1
  000bd	00 00 00 00	 DD	 $L189717
$L189717:
  000c1	64 ff ff ff	 DD	 -156			; ffffff64H
  000c5	94 00 00 00	 DD	 148			; 00000094H
  000c9	00 00 00 00	 DD	 $L189714
$L189714:
  000cd	76		 DB	 118			; 00000076H
  000ce	65		 DB	 101			; 00000065H
  000cf	72		 DB	 114			; 00000072H
  000d0	00		 DB	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _pNew$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8
  00014	3b f4		 cmp	 esi, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 93   : }

  0001b	5e		 pop	 esi
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$24151 = -32					; size = 4
_szACP$ = -24						; size = 7
_lcidThread$ = -12					; size = 4
_nACP$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  00033	8b f4		 mov	 esi, esp
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	89 45 f4	 mov	 DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  00045	8b f4		 mov	 esi, esp
  00047	6a 07		 push	 7
  00049	8d 45 e8	 lea	 eax, DWORD PTR _szACP$[ebp]
  0004c	50		 push	 eax
  0004d	68 04 10 00 00	 push	 4100			; 00001004H
  00052	8b 4d f4	 mov	 ecx, DWORD PTR _lcidThread$[ebp]
  00055	51		 push	 ecx
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	85 c0		 test	 eax, eax
  00065	74 34		 je	 SHORT $L24150

; 111  : 	{
; 112  : 		char* pch = szACP;

  00067	8d 55 e8	 lea	 edx, DWORD PTR _szACP$[ebp]
  0006a	89 55 e0	 mov	 DWORD PTR _pch$24151[ebp], edx
$L24153:

; 113  : 		while (*pch != '\0')

  0006d	8b 45 e0	 mov	 eax, DWORD PTR _pch$24151[ebp]
  00070	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00073	85 c9		 test	 ecx, ecx
  00075	74 24		 je	 SHORT $L24150

; 114  : 		{
; 115  : 			nACP *= 10;

  00077	8b 55 f8	 mov	 edx, DWORD PTR _nACP$[ebp]
  0007a	6b d2 0a	 imul	 edx, 10			; 0000000aH
  0007d	89 55 f8	 mov	 DWORD PTR _nACP$[ebp], edx

; 116  : 			nACP += *pch++ - '0';

  00080	8b 45 e0	 mov	 eax, DWORD PTR _pch$24151[ebp]
  00083	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00086	8b 55 f8	 mov	 edx, DWORD PTR _nACP$[ebp]
  00089	8d 44 0a d0	 lea	 eax, DWORD PTR [edx+ecx-48]
  0008d	89 45 f8	 mov	 DWORD PTR _nACP$[ebp], eax
  00090	8b 4d e0	 mov	 ecx, DWORD PTR _pch$24151[ebp]
  00093	83 c1 01	 add	 ecx, 1
  00096	89 4d e0	 mov	 DWORD PTR _pch$24151[ebp], ecx

; 117  : 		}

  00099	eb d2		 jmp	 SHORT $L24153
$L24150:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  0009b	83 7d f8 00	 cmp	 DWORD PTR _nACP$[ebp], 0
  0009f	75 12		 jne	 SHORT $L24155

; 121  : 		nACP = ::GetACP();

  000a1	8b f4		 mov	 esi, esp
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	89 45 f8	 mov	 DWORD PTR _nACP$[ebp], eax
$L24155:

; 122  : 
; 123  : 	return nACP;

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _nACP$[ebp]

; 124  : }

  000b6	52		 push	 edx
  000b7	8b cd		 mov	 ecx, ebp
  000b9	50		 push	 eax
  000ba	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189727
  000c0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c5	58		 pop	 eax
  000c6	5a		 pop	 edx
  000c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ca	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cf	5e		 pop	 esi
  000d0	83 c4 20	 add	 esp, 32			; 00000020H
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
$L189727:
  000de	01 00 00 00	 DD	 1
  000e2	00 00 00 00	 DD	 $L189726
$L189726:
  000e6	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000ea	07 00 00 00	 DD	 7
  000ee	00 00 00 00	 DD	 $L189724
$L189724:
  000f2	73		 DB	 115			; 00000073H
  000f3	7a		 DB	 122			; 0000007aH
  000f4	41		 DB	 65			; 00000041H
  000f5	43		 DB	 67			; 00000043H
  000f6	50		 DB	 80			; 00000050H
  000f7	00		 DB	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  : 	return( CP_THREAD_ACP );

  00003	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	?GetThisMessageMap@CWebSubWnd@@KGPBUAFX_MSGMAP@@XZ ; CWebSubWnd::GetThisMessageMap
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\changecolor\websubwnd.cpp
_TEXT	SEGMENT
?GetThisMessageMap@CWebSubWnd@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CWebSubWnd::GetThisMessageMap

; 22   : BEGIN_MESSAGE_MAP(CWebSubWnd, CHtmlView)

  00240	55		 push	 ebp
  00241	8b ec		 mov	 ebp, esp
  00243	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CWebSubWnd@@1UAFX_MSGMAP@@B ; CWebSubWnd::messageMap
  00248	5d		 pop	 ebp
  00249	c3		 ret	 0
?GetThisMessageMap@CWebSubWnd@@KGPBUAFX_MSGMAP@@XZ ENDP	; CWebSubWnd::GetThisMessageMap
; Function compile flags: /Odt /RTCsu
_this$ = -4						; size = 4
?GetMessageMap@CWebSubWnd@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CWebSubWnd::GetMessageMap
; _this$ = ecx

; 22   : BEGIN_MESSAGE_MAP(CWebSubWnd, CHtmlView)

  00250	55		 push	 ebp
  00251	8b ec		 mov	 ebp, esp
  00253	51		 push	 ecx
  00254	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0025b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0025e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CWebSubWnd@@1UAFX_MSGMAP@@B ; CWebSubWnd::messageMap
  00263	8b e5		 mov	 esp, ebp
  00265	5d		 pop	 ebp
  00266	c3		 ret	 0
?GetMessageMap@CWebSubWnd@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CWebSubWnd::GetMessageMap
_TEXT	ENDS
EXTRN	?OnCreate@CFormView@@IAEHPAUtagCREATESTRUCTA@@@Z:NEAR ; CFormView::OnCreate
EXTRN	??0CRect@@QAE@HHHH@Z:NEAR			; CRect::CRect
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
$T189732 = -20						; size = 16
_this$ = -4						; size = 4
_lpCreateStruct$ = 8					; size = 4
?OnCreate@CWebSubWnd@@QAEHPAUtagCREATESTRUCTA@@@Z PROC NEAR ; CWebSubWnd::OnCreate
; _this$ = ecx

; 28   : {

  00270	55		 push	 ebp
  00271	8b ec		 mov	 ebp, esp
  00273	83 ec 14	 sub	 esp, 20			; 00000014H
  00276	56		 push	 esi
  00277	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0027c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0027f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00282	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00285	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00288	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0028b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 29   : 	if( __super::OnCreate( lpCreateStruct) == -1 )

  0028e	8b 45 08	 mov	 eax, DWORD PTR _lpCreateStruct$[ebp]
  00291	50		 push	 eax
  00292	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00295	e8 00 00 00 00	 call	 ?OnCreate@CFormView@@IAEHPAUtagCREATESTRUCTA@@@Z ; CFormView::OnCreate
  0029a	83 f8 ff	 cmp	 eax, -1
  0029d	75 05		 jne	 SHORT $L188931

; 30   : 	{
; 31   : 		return -1;

  0029f	83 c8 ff	 or	 eax, -1
  002a2	eb 55		 jmp	 SHORT $L188930
$L188931:

; 32   : 	}
; 33   : 	m_flash.Create(NULL,NULL, WS_CHILD, CRect(0,0,0,0), this, 11456);

  002a4	8b f4		 mov	 esi, esp
  002a6	6a 00		 push	 0
  002a8	68 c0 2c 00 00	 push	 11456			; 00002cc0H
  002ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	51		 push	 ecx
  002b1	6a 00		 push	 0
  002b3	6a 00		 push	 0
  002b5	6a 00		 push	 0
  002b7	6a 00		 push	 0
  002b9	8d 4d ec	 lea	 ecx, DWORD PTR $T189732[ebp]
  002bc	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  002c1	50		 push	 eax
  002c2	68 00 00 00 40	 push	 1073741824		; 40000000H
  002c7	6a 00		 push	 0
  002c9	6a 00		 push	 0
  002cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ce	81 c1 00 01 00
	00		 add	 ecx, 256		; 00000100H
  002d4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002d7	8b 82 00 01 00
	00		 mov	 eax, DWORD PTR [edx+256]
  002dd	ff 50 5c	 call	 DWORD PTR [eax+92]
  002e0	3b f4		 cmp	 esi, esp
  002e2	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 34   : 	m_flash.ShowWindow(SW_SHOW);

  002e7	6a 05		 push	 5
  002e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ec	81 c1 00 01 00
	00		 add	 ecx, 256		; 00000100H
  002f2	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 35   : 	return 0;

  002f7	33 c0		 xor	 eax, eax
$L188930:

; 36   : }

  002f9	5e		 pop	 esi
  002fa	83 c4 14	 add	 esp, 20			; 00000014H
  002fd	3b ec		 cmp	 ebp, esp
  002ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00304	8b e5		 mov	 esp, ebp
  00306	5d		 pop	 ebp
  00307	c2 04 00	 ret	 4
?OnCreate@CWebSubWnd@@QAEHPAUtagCREATESTRUCTA@@@Z ENDP	; CWebSubWnd::OnCreate
_TEXT	ENDS
EXTRN	?Navigate2@CHtmlView@@QAEXPBDK00PAXK@Z:NEAR	; CHtmlView::Navigate2
EXTRN	?GetHomePath@CLhcImg@@SA_NQADH@Z:NEAR		; CLhcImg::GetHomePath
EXTRN	?SetHTTPRes@CJudgeFirewall@@SAXW4HTTP_REQUEST_TYPE@@H@Z:NEAR ; CJudgeFirewall::SetHTTPRes
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:NEAR
EXTRN	__imp_?LogUserActMsg@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:NEAR
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:NEAR
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:NEAR
EXTRN	__imp__strstr:NEAR
xdata$x	SEGMENT
$T189748 DD	0ffffffffH
	DD	FLAT:$L189737
	DD	00H
	DD	FLAT:$L189738
	DD	01H
	DD	FLAT:$L189739
$T189741 DD	019930520H
	DD	03H
	DD	FLAT:$T189748
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T189736 = -380						; size = 28
$T189735 = -352						; size = 28
_str$188943 = -320					; size = 28
_szBuffer$188942 = -284					; size = 260
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lpszURL$ = 8						; size = 4
_lpszFrame$ = 12					; size = 4
_dwError$ = 16						; size = 4
_pbCancel$ = 20						; size = 4
?OnNavigateError@CWebSubWnd@@UAEXPBD0KPAH@Z PROC NEAR	; CWebSubWnd::OnNavigateError
; _this$ = ecx

; 39   : {

  00310	55		 push	 ebp
  00311	8b ec		 mov	 ebp, esp
  00313	6a ff		 push	 -1
  00315	68 00 00 00 00	 push	 __ehhandler$?OnNavigateError@CWebSubWnd@@UAEXPBD0KPAH@Z
  0031a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00320	50		 push	 eax
  00321	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00328	81 ec 70 01 00
	00		 sub	 esp, 368		; 00000170H
  0032e	56		 push	 esi
  0032f	57		 push	 edi
  00330	51		 push	 ecx
  00331	8d bd 84 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-380]
  00337	b9 5c 00 00 00	 mov	 ecx, 92			; 0000005cH
  0033c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00341	f3 ab		 rep stosd
  00343	59		 pop	 ecx
  00344	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00349	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0034c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 40   : 	m_flash.ShowWindow(SW_HIDE);

  0034f	6a 00		 push	 0
  00351	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00354	81 c1 00 01 00
	00		 add	 ecx, 256		; 00000100H
  0035a	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 41   : 	if( strstr(lpszURL,WEBSKIN_RECOMMEND_URL) != 0 )

  0035f	8b f4		 mov	 esi, esp
  00361	68 00 00 00 00	 push	 OFFSET FLAT:$SG188941
  00366	8b 45 08	 mov	 eax, DWORD PTR _lpszURL$[ebp]
  00369	50		 push	 eax
  0036a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strstr
  00370	83 c4 08	 add	 esp, 8
  00373	3b f4		 cmp	 esi, esp
  00375	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0037a	85 c0		 test	 eax, eax
  0037c	0f 84 84 01 00
	00		 je	 $L188939

; 42   : 	{
; 43   : 		char szBuffer[MAX_PATH];
; 44   : 		CLhcImg::GetHomePath(szBuffer,MAX_PATH);

  00382	68 04 01 00 00	 push	 260			; 00000104H
  00387	8d 8d e4 fe ff
	ff		 lea	 ecx, DWORD PTR _szBuffer$188942[ebp]
  0038d	51		 push	 ecx
  0038e	e8 00 00 00 00	 call	 ?GetHomePath@CLhcImg@@SA_NQADH@Z ; CLhcImg::GetHomePath
  00393	83 c4 08	 add	 esp, 8

; 45   : 		string str = szBuffer;

  00396	8b f4		 mov	 esi, esp
  00398	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR _szBuffer$188942[ebp]
  0039e	52		 push	 edx
  0039f	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _str$188943[ebp]
  003a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  003ab	3b f4		 cmp	 esi, esp
  003ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 46   : 		str += "\\html\\skinerror.htm?r=";		

  003b9	8b f4		 mov	 esi, esp
  003bb	68 00 00 00 00	 push	 OFFSET FLAT:$SG188944
  003c0	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _str$188943[ebp]
  003c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
  003cc	3b f4		 cmp	 esi, esp
  003ce	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 47   : 		str += m_strURL;

  003d3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  003d6	81 c1 fc 00 00
	00		 add	 ecx, 252		; 000000fcH
  003dc	8b f4		 mov	 esi, esp
  003de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  003e4	3b f4		 cmp	 esi, esp
  003e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003eb	8b f4		 mov	 esi, esp
  003ed	50		 push	 eax
  003ee	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _str$188943[ebp]
  003f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
  003fa	3b f4		 cmp	 esi, esp
  003fc	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 48   : 		str += "&w=skin";

  00401	8b f4		 mov	 esi, esp
  00403	68 00 00 00 00	 push	 OFFSET FLAT:$SG188945
  00408	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _str$188943[ebp]
  0040e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
  00414	3b f4		 cmp	 esi, esp
  00416	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 49   : 
; 50   : 		Navigate2(str.c_str(), navNoReadFromCache, NULL);

  0041b	6a 00		 push	 0
  0041d	6a 00		 push	 0
  0041f	6a 00		 push	 0
  00421	6a 00		 push	 0
  00423	6a 04		 push	 4
  00425	8b f4		 mov	 esi, esp
  00427	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _str$188943[ebp]
  0042d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  00433	3b f4		 cmp	 esi, esp
  00435	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0043a	50		 push	 eax
  0043b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0043e	e8 00 00 00 00	 call	 ?Navigate2@CHtmlView@@QAEXPBDK00PAXK@Z ; CHtmlView::Navigate2

; 51   : 		m_bSucceed = FALSE;

  00443	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00446	c7 80 f4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+244], 0

; 52   : 
; 53   : 		LogUserActMsg("ERROR", "WEB_COMMEND_ERR");

  00450	8b f4		 mov	 esi, esp
  00452	68 00 00 00 00	 push	 OFFSET FLAT:$SG188948
  00457	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR $T189735[ebp]
  0045d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00463	3b f4		 cmp	 esi, esp
  00465	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0046a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0046e	8b f4		 mov	 esi, esp
  00470	68 00 00 00 00	 push	 OFFSET FLAT:$SG188949
  00475	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR $T189736[ebp]
  0047b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00481	3b f4		 cmp	 esi, esp
  00483	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00488	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0048c	8b f4		 mov	 esi, esp
  0048e	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR $T189735[ebp]
  00494	51		 push	 ecx
  00495	8d 95 84 fe ff
	ff		 lea	 edx, DWORD PTR $T189736[ebp]
  0049b	52		 push	 edx
  0049c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LogUserActMsg@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
  004a2	83 c4 08	 add	 esp, 8
  004a5	3b f4		 cmp	 esi, esp
  004a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004ac	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  004b0	8b f4		 mov	 esi, esp
  004b2	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR $T189736[ebp]
  004b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  004be	3b f4		 cmp	 esi, esp
  004c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004c5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  004c9	8b f4		 mov	 esi, esp
  004cb	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR $T189735[ebp]
  004d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  004d7	3b f4		 cmp	 esi, esp
  004d9	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 54   : 		CJudgeFirewall::SetHTTPRes( HTTP_WEB_COMMAND,0 );

  004de	6a 00		 push	 0
  004e0	6a 00		 push	 0
  004e2	e8 00 00 00 00	 call	 ?SetHTTPRes@CJudgeFirewall@@SAXW4HTTP_REQUEST_TYPE@@H@Z ; CJudgeFirewall::SetHTTPRes
  004e7	83 c4 08	 add	 esp, 8

; 55   : 	}

  004ea	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004f1	8b f4		 mov	 esi, esp
  004f3	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _str$188943[ebp]
  004f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  004ff	3b f4		 cmp	 esi, esp
  00501	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L188939:

; 56   : }

  00506	52		 push	 edx
  00507	8b cd		 mov	 ecx, ebp
  00509	50		 push	 eax
  0050a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189747
  00510	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00515	58		 pop	 eax
  00516	5a		 pop	 edx
  00517	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0051a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00521	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00524	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00529	5f		 pop	 edi
  0052a	5e		 pop	 esi
  0052b	81 c4 7c 01 00
	00		 add	 esp, 380		; 0000017cH
  00531	3b ec		 cmp	 ebp, esp
  00533	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00538	8b e5		 mov	 esp, ebp
  0053a	5d		 pop	 ebp
  0053b	c2 10 00	 ret	 16			; 00000010H
$L189747:
  0053e	02 00 00 00	 DD	 2
  00542	00 00 00 00	 DD	 $L189746
$L189746:
  00546	e4 fe ff ff	 DD	 -284			; fffffee4H
  0054a	04 01 00 00	 DD	 260			; 00000104H
  0054e	00 00 00 00	 DD	 $L189742
  00552	c0 fe ff ff	 DD	 -320			; fffffec0H
  00556	1c 00 00 00	 DD	 28			; 0000001cH
  0055a	00 00 00 00	 DD	 $L189743
$L189743:
  0055e	73		 DB	 115			; 00000073H
  0055f	74		 DB	 116			; 00000074H
  00560	72		 DB	 114			; 00000072H
  00561	00		 DB	 0
$L189742:
  00562	73		 DB	 115			; 00000073H
  00563	7a		 DB	 122			; 0000007aH
  00564	42		 DB	 66			; 00000042H
  00565	75		 DB	 117			; 00000075H
  00566	66		 DB	 102			; 00000066H
  00567	66		 DB	 102			; 00000066H
  00568	65		 DB	 101			; 00000065H
  00569	72		 DB	 114			; 00000072H
  0056a	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L189737:
  000a7	8b f4		 mov	 esi, esp
  000a9	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _str$188943[ebp]
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000b5	3b f4		 cmp	 esi, esp
  000b7	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L189738:
  000bc	8b f4		 mov	 esi, esp
  000be	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR $T189735[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000ca	3b f4		 cmp	 esi, esp
  000cc	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L189739:
  000d1	8b f4		 mov	 esi, esp
  000d3	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR $T189736[ebp]
  000d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000df	3b f4		 cmp	 esi, esp
  000e1	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?OnNavigateError@CWebSubWnd@@UAEXPBD0KPAH@Z:
  000e6	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189741
  000eb	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnNavigateError@CWebSubWnd@@UAEXPBD0KPAH@Z ENDP	; CWebSubWnd::OnNavigateError
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pInfo$ = 8						; size = 4
?OnGetHostInfo@CWebSubWnd@@UAEJPAU_DOCHOSTUIINFO@@@Z PROC NEAR ; CWebSubWnd::OnGetHostInfo
; _this$ = ecx

; 59   : {

  00570	55		 push	 ebp
  00571	8b ec		 mov	 ebp, esp
  00573	51		 push	 ecx
  00574	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0057b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 	pInfo->cbSize = sizeof(DOCHOSTUIINFO);

  0057e	8b 45 08	 mov	 eax, DWORD PTR _pInfo$[ebp]
  00581	c7 00 14 00 00
	00		 mov	 DWORD PTR [eax], 20	; 00000014H

; 61   : 	pInfo->dwFlags = DOCHOSTUIFLAG_NO3DBORDER ;

  00587	8b 4d 08	 mov	 ecx, DWORD PTR _pInfo$[ebp]
  0058a	c7 41 04 04 00
	00 00		 mov	 DWORD PTR [ecx+4], 4

; 62   : 	pInfo->dwDoubleClick = DOCHOSTUIDBLCLK_DEFAULT;

  00591	8b 55 08	 mov	 edx, DWORD PTR _pInfo$[ebp]
  00594	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 63   : 	return S_OK;

  0059b	33 c0		 xor	 eax, eax

; 64   : }

  0059d	8b e5		 mov	 esp, ebp
  0059f	5d		 pop	 ebp
  005a0	c2 04 00	 ret	 4
?OnGetHostInfo@CWebSubWnd@@UAEJPAU_DOCHOSTUIINFO@@@Z ENDP ; CWebSubWnd::OnGetHostInfo
_TEXT	ENDS
PUBLIC	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
EXTRN	?Refresh2@CHtmlView@@QAEXH@Z:NEAR		; CHtmlView::Refresh2
EXTRN	__imp__sprintf:NEAR
EXTRN	__imp__GetTickCount@0:NEAR
xdata$x	SEGMENT
$T189763 DD	0ffffffffH
	DD	FLAT:$L189754
	DD	00H
	DD	FLAT:$L189755
$T189757 DD	019930520H
	DD	02H
	DD	FLAT:$T189763
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T189753 = -116						; size = 28
$T189752 = -88						; size = 28
_szBuf$188961 = -56					; size = 32
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_strURL$ = 8						; size = 4
?OnNavigateComplete2@CWebSubWnd@@UAEXPBD@Z PROC NEAR	; CWebSubWnd::OnNavigateComplete2
; _this$ = ecx

; 67   : {

  005b0	55		 push	 ebp
  005b1	8b ec		 mov	 ebp, esp
  005b3	6a ff		 push	 -1
  005b5	68 00 00 00 00	 push	 __ehhandler$?OnNavigateComplete2@CWebSubWnd@@UAEXPBD@Z
  005ba	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  005c0	50		 push	 eax
  005c1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  005c8	83 ec 68	 sub	 esp, 104		; 00000068H
  005cb	56		 push	 esi
  005cc	57		 push	 edi
  005cd	51		 push	 ecx
  005ce	8d 7d 8c	 lea	 edi, DWORD PTR [ebp-116]
  005d1	b9 1a 00 00 00	 mov	 ecx, 26			; 0000001aH
  005d6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  005db	f3 ab		 rep stosd
  005dd	59		 pop	 ecx
  005de	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  005e3	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  005e6	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 68   : 	if( m_strURL == strURL )

  005e9	8b 45 08	 mov	 eax, DWORD PTR _strURL$[ebp]
  005ec	50		 push	 eax
  005ed	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005f0	81 c1 fc 00 00
	00		 add	 ecx, 252		; 000000fcH
  005f6	51		 push	 ecx
  005f7	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  005fc	83 c4 08	 add	 esp, 8
  005ff	0f b6 d0	 movzx	 edx, al
  00602	85 d2		 test	 edx, edx
  00604	0f 84 c1 00 00
	00		 je	 $L188960

; 69   : 	{
; 70   : 		char szBuf[32];
; 71   : 		sprintf(szBuf,"T:%d",GetTickCount() - m_dwStartShowTime );

  0060a	8b f4		 mov	 esi, esp
  0060c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00612	3b f4		 cmp	 esi, esp
  00614	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00619	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0061c	2b 81 f8 00 00
	00		 sub	 eax, DWORD PTR [ecx+248]
  00622	8b f4		 mov	 esi, esp
  00624	50		 push	 eax
  00625	68 00 00 00 00	 push	 OFFSET FLAT:$SG188962
  0062a	8d 55 c8	 lea	 edx, DWORD PTR _szBuf$188961[ebp]
  0062d	52		 push	 edx
  0062e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  00634	83 c4 0c	 add	 esp, 12			; 0000000cH
  00637	3b f4		 cmp	 esi, esp
  00639	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 72   : 		LogUserActMsg("WEBLOADRECOM",szBuf);

  0063e	8b f4		 mov	 esi, esp
  00640	8d 45 c8	 lea	 eax, DWORD PTR _szBuf$188961[ebp]
  00643	50		 push	 eax
  00644	8d 4d a8	 lea	 ecx, DWORD PTR $T189752[ebp]
  00647	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0064d	3b f4		 cmp	 esi, esp
  0064f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00654	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0065b	8b f4		 mov	 esi, esp
  0065d	68 00 00 00 00	 push	 OFFSET FLAT:$SG188965
  00662	8d 4d 8c	 lea	 ecx, DWORD PTR $T189753[ebp]
  00665	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0066b	3b f4		 cmp	 esi, esp
  0066d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00672	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00676	8b f4		 mov	 esi, esp
  00678	8d 4d a8	 lea	 ecx, DWORD PTR $T189752[ebp]
  0067b	51		 push	 ecx
  0067c	8d 55 8c	 lea	 edx, DWORD PTR $T189753[ebp]
  0067f	52		 push	 edx
  00680	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LogUserActMsg@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
  00686	83 c4 08	 add	 esp, 8
  00689	3b f4		 cmp	 esi, esp
  0068b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00690	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00694	8b f4		 mov	 esi, esp
  00696	8d 4d 8c	 lea	 ecx, DWORD PTR $T189753[ebp]
  00699	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0069f	3b f4		 cmp	 esi, esp
  006a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  006ad	8b f4		 mov	 esi, esp
  006af	8d 4d a8	 lea	 ecx, DWORD PTR $T189752[ebp]
  006b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  006b8	3b f4		 cmp	 esi, esp
  006ba	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 73   : 		CJudgeFirewall::SetHTTPRes( HTTP_WEB_COMMAND,1 );

  006bf	6a 01		 push	 1
  006c1	6a 00		 push	 0
  006c3	e8 00 00 00 00	 call	 ?SetHTTPRes@CJudgeFirewall@@SAXW4HTTP_REQUEST_TYPE@@H@Z ; CJudgeFirewall::SetHTTPRes
  006c8	83 c4 08	 add	 esp, 8
$L188960:

; 74   : 	}	
; 75   : 
; 76   : 	m_dwStartShowTime = 0;

  006cb	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  006ce	c7 80 f8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+248], 0

; 77   : 	if(strstr(strURL, "skinerror") != 0)

  006d8	8b f4		 mov	 esi, esp
  006da	68 00 00 00 00	 push	 OFFSET FLAT:$SG188967
  006df	8b 4d 08	 mov	 ecx, DWORD PTR _strURL$[ebp]
  006e2	51		 push	 ecx
  006e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strstr
  006e9	83 c4 08	 add	 esp, 8
  006ec	3b f4		 cmp	 esi, esp
  006ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006f3	85 c0		 test	 eax, eax
  006f5	74 0a		 je	 SHORT $L188959

; 78   : 		Refresh2(REFRESH_NORMAL);

  006f7	6a 00		 push	 0
  006f9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006fc	e8 00 00 00 00	 call	 ?Refresh2@CHtmlView@@QAEXH@Z ; CHtmlView::Refresh2
$L188959:

; 79   : }

  00701	52		 push	 edx
  00702	8b cd		 mov	 ecx, ebp
  00704	50		 push	 eax
  00705	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189762
  0070b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00710	58		 pop	 eax
  00711	5a		 pop	 edx
  00712	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00715	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0071c	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0071f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00724	5f		 pop	 edi
  00725	5e		 pop	 esi
  00726	83 c4 74	 add	 esp, 116		; 00000074H
  00729	3b ec		 cmp	 ebp, esp
  0072b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00730	8b e5		 mov	 esp, ebp
  00732	5d		 pop	 ebp
  00733	c2 04 00	 ret	 4
$L189762:
  00736	01 00 00 00	 DD	 1
  0073a	00 00 00 00	 DD	 $L189761
$L189761:
  0073e	c8 ff ff ff	 DD	 -56			; ffffffc8H
  00742	20 00 00 00	 DD	 32			; 00000020H
  00746	00 00 00 00	 DD	 $L189758
$L189758:
  0074a	73		 DB	 115			; 00000073H
  0074b	7a		 DB	 122			; 0000007aH
  0074c	42		 DB	 66			; 00000042H
  0074d	75		 DB	 117			; 00000075H
  0074e	66		 DB	 102			; 00000066H
  0074f	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L189754:
  000f0	8b f4		 mov	 esi, esp
  000f2	8d 4d a8	 lea	 ecx, DWORD PTR $T189752[ebp]
  000f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000fb	3b f4		 cmp	 esi, esp
  000fd	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L189755:
  00102	8b f4		 mov	 esi, esp
  00104	8d 4d 8c	 lea	 ecx, DWORD PTR $T189753[ebp]
  00107	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0010d	3b f4		 cmp	 esi, esp
  0010f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?OnNavigateComplete2@CWebSubWnd@@UAEXPBD@Z:
  00114	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189757
  00119	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnNavigateComplete2@CWebSubWnd@@UAEXPBD@Z ENDP		; CWebSubWnd::OnNavigateComplete2
PUBLIC	?Navigate@CWebSubWnd@@QAEXXZ			; CWebSubWnd::Navigate
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_szurl$ = -272						; size = 260
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?Navigate@CWebSubWnd@@QAEXXZ PROC NEAR			; CWebSubWnd::Navigate
; _this$ = ecx

; 82   : {

  00750	55		 push	 ebp
  00751	8b ec		 mov	 ebp, esp
  00753	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00759	56		 push	 esi
  0075a	57		 push	 edi
  0075b	51		 push	 ecx
  0075c	8d bd ec fe ff
	ff		 lea	 edi, DWORD PTR [ebp-276]
  00762	b9 45 00 00 00	 mov	 ecx, 69			; 00000045H
  00767	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0076c	f3 ab		 rep stosd
  0076e	59		 pop	 ecx
  0076f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00774	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00777	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 83   : 	char szurl[MAX_PATH] = WEBSKIN_RECOMMEND_URL;

  0077a	b9 11 00 00 00	 mov	 ecx, 17			; 00000011H
  0077f	be 00 00 00 00	 mov	 esi, OFFSET FLAT:$SG188972
  00784	8d bd f0 fe ff
	ff		 lea	 edi, DWORD PTR _szurl$[ebp]
  0078a	f3 a5		 rep movsd
  0078c	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00791	33 c0		 xor	 eax, eax
  00793	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR _szurl$[ebp+68]
  00799	f3 ab		 rep stosd

; 84   : 	m_strURL = szurl;

  0079b	8b f4		 mov	 esi, esp
  0079d	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szurl$[ebp]
  007a3	50		 push	 eax
  007a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007a7	81 c1 fc 00 00
	00		 add	 ecx, 252		; 000000fcH
  007ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  007b3	3b f4		 cmp	 esi, esp
  007b5	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 85   : 	m_dwStartShowTime = GetTickCount();

  007ba	8b f4		 mov	 esi, esp
  007bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  007c2	3b f4		 cmp	 esi, esp
  007c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007c9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007cc	89 81 f8 00 00
	00		 mov	 DWORD PTR [ecx+248], eax

; 86   : 	Navigate2(szurl, navNoReadFromCache, NULL);

  007d2	6a 00		 push	 0
  007d4	6a 00		 push	 0
  007d6	6a 00		 push	 0
  007d8	6a 00		 push	 0
  007da	6a 04		 push	 4
  007dc	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _szurl$[ebp]
  007e2	52		 push	 edx
  007e3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007e6	e8 00 00 00 00	 call	 ?Navigate2@CHtmlView@@QAEXPBDK00PAXK@Z ; CHtmlView::Navigate2

; 87   : }

  007eb	52		 push	 edx
  007ec	8b cd		 mov	 ecx, ebp
  007ee	50		 push	 eax
  007ef	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189769
  007f5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  007fa	58		 pop	 eax
  007fb	5a		 pop	 edx
  007fc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007ff	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00804	5f		 pop	 edi
  00805	5e		 pop	 esi
  00806	81 c4 14 01 00
	00		 add	 esp, 276		; 00000114H
  0080c	3b ec		 cmp	 ebp, esp
  0080e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00813	8b e5		 mov	 esp, ebp
  00815	5d		 pop	 ebp
  00816	c3		 ret	 0
$L189769:
  00817	01 00 00 00	 DD	 1
  0081b	00 00 00 00	 DD	 $L189768
$L189768:
  0081f	f0 fe ff ff	 DD	 -272			; fffffef0H
  00823	04 01 00 00	 DD	 260			; 00000104H
  00827	00 00 00 00	 DD	 $L189766
$L189766:
  0082b	73		 DB	 115			; 00000073H
  0082c	7a		 DB	 122			; 0000007aH
  0082d	75		 DB	 117			; 00000075H
  0082e	72		 DB	 114			; 00000072H
  0082f	6c		 DB	 108			; 0000006cH
  00830	00		 DB	 0
?Navigate@CWebSubWnd@@QAEXXZ ENDP			; CWebSubWnd::Navigate
_TEXT	ENDS
EXTRN	__imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z:NEAR
EXTRN	?GetKeyValueStr@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@0@Z:NEAR ; GetKeyValueStr
xdata$x	SEGMENT
$T189784 DD	0ffffffffH
	DD	FLAT:$L189774
	DD	00H
	DD	FLAT:$L189775
	DD	01H
	DD	FLAT:$L189776
	DD	0ffffffffH
	DD	FLAT:$L189776
	DD	03H
	DD	FLAT:$L189775
$T189778 DD	019930520H
	DD	05H
	DD	FLAT:$T189784
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T189773 = -112						; size = 28
$T189772 = -84						; size = 28
_strW$ = -52						; size = 28
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_psz$ = 8						; size = 4
?IWebRefreshOb_Refresh@CWebSubWnd@@UAEXPBD@Z PROC NEAR	; CWebSubWnd::IWebRefreshOb_Refresh
; _this$ = ecx

; 90   : {

  00840	55		 push	 ebp
  00841	8b ec		 mov	 ebp, esp
  00843	6a ff		 push	 -1
  00845	68 00 00 00 00	 push	 __ehhandler$?IWebRefreshOb_Refresh@CWebSubWnd@@UAEXPBD@Z
  0084a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00850	50		 push	 eax
  00851	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00858	83 ec 64	 sub	 esp, 100		; 00000064H
  0085b	56		 push	 esi
  0085c	57		 push	 edi
  0085d	51		 push	 ecx
  0085e	8d 7d 90	 lea	 edi, DWORD PTR [ebp-112]
  00861	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00866	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0086b	f3 ab		 rep stosd
  0086d	59		 pop	 ecx
  0086e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00873	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00876	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 91   : 	string strW = GetKeyValueStr(psz,"w");

  00879	8b f4		 mov	 esi, esp
  0087b	68 00 00 00 00	 push	 OFFSET FLAT:$SG188981
  00880	8d 4d ac	 lea	 ecx, DWORD PTR $T189772[ebp]
  00883	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00889	3b f4		 cmp	 esi, esp
  0088b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00890	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00897	8b f4		 mov	 esi, esp
  00899	8b 45 08	 mov	 eax, DWORD PTR _psz$[ebp]
  0089c	50		 push	 eax
  0089d	8d 4d 90	 lea	 ecx, DWORD PTR $T189773[ebp]
  008a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  008a6	3b f4		 cmp	 esi, esp
  008a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008ad	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  008b1	8d 4d ac	 lea	 ecx, DWORD PTR $T189772[ebp]
  008b4	51		 push	 ecx
  008b5	8d 55 90	 lea	 edx, DWORD PTR $T189773[ebp]
  008b8	52		 push	 edx
  008b9	8d 45 cc	 lea	 eax, DWORD PTR _strW$[ebp]
  008bc	50		 push	 eax
  008bd	e8 00 00 00 00	 call	 ?GetKeyValueStr@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@0@Z ; GetKeyValueStr
  008c2	83 c4 0c	 add	 esp, 12			; 0000000cH
  008c5	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  008c9	8b f4		 mov	 esi, esp
  008cb	8d 4d 90	 lea	 ecx, DWORD PTR $T189773[ebp]
  008ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  008d4	3b f4		 cmp	 esi, esp
  008d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008db	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  008df	8b f4		 mov	 esi, esp
  008e1	8d 4d ac	 lea	 ecx, DWORD PTR $T189772[ebp]
  008e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  008ea	3b f4		 cmp	 esi, esp
  008ec	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 92   : 	if( strW == "skin" )

  008f1	8b f4		 mov	 esi, esp
  008f3	68 00 00 00 00	 push	 OFFSET FLAT:$SG188983
  008f8	8d 4d cc	 lea	 ecx, DWORD PTR _strW$[ebp]
  008fb	51		 push	 ecx
  008fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
  00902	83 c4 08	 add	 esp, 8
  00905	3b f4		 cmp	 esi, esp
  00907	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0090c	0f b6 d0	 movzx	 edx, al
  0090f	85 d2		 test	 edx, edx
  00911	74 38		 je	 SHORT $L188982

; 93   : 	{
; 94   : 		Navigate2((LPCTSTR)m_strURL, navNoReadFromCache, NULL);

  00913	6a 00		 push	 0
  00915	6a 00		 push	 0
  00917	6a 00		 push	 0
  00919	6a 00		 push	 0
  0091b	6a 04		 push	 4
  0091d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00920	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00923	8b f4		 mov	 esi, esp
  00925	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0092b	3b f4		 cmp	 esi, esp
  0092d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00932	50		 push	 eax
  00933	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00936	81 e9 f0 00 00
	00		 sub	 ecx, 240		; 000000f0H
  0093c	e8 00 00 00 00	 call	 ?Navigate2@CHtmlView@@QAEXPBDK00PAXK@Z ; CHtmlView::Navigate2

; 95   : 		m_bSucceed = TRUE;

  00941	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00944	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1
$L188982:

; 96   : 	}
; 97   : }

  0094b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00952	8b f4		 mov	 esi, esp
  00954	8d 4d cc	 lea	 ecx, DWORD PTR _strW$[ebp]
  00957	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0095d	3b f4		 cmp	 esi, esp
  0095f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00964	52		 push	 edx
  00965	8b cd		 mov	 ecx, ebp
  00967	50		 push	 eax
  00968	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189783
  0096e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00973	58		 pop	 eax
  00974	5a		 pop	 edx
  00975	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00978	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0097f	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00982	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00987	5f		 pop	 edi
  00988	5e		 pop	 esi
  00989	83 c4 70	 add	 esp, 112		; 00000070H
  0098c	3b ec		 cmp	 ebp, esp
  0098e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00993	8b e5		 mov	 esp, ebp
  00995	5d		 pop	 ebp
  00996	c2 04 00	 ret	 4
$L189783:
  00999	01 00 00 00	 DD	 1
  0099d	00 00 00 00	 DD	 $L189782
$L189782:
  009a1	cc ff ff ff	 DD	 -52			; ffffffccH
  009a5	1c 00 00 00	 DD	 28			; 0000001cH
  009a9	00 00 00 00	 DD	 $L189779
$L189779:
  009ad	73		 DB	 115			; 00000073H
  009ae	74		 DB	 116			; 00000074H
  009af	72		 DB	 114			; 00000072H
  009b0	57		 DB	 87			; 00000057H
  009b1	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L189774:
  0011e	8b f4		 mov	 esi, esp
  00120	8d 4d ac	 lea	 ecx, DWORD PTR $T189772[ebp]
  00123	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00129	3b f4		 cmp	 esi, esp
  0012b	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L189775:
  00130	8b f4		 mov	 esi, esp
  00132	8d 4d 90	 lea	 ecx, DWORD PTR $T189773[ebp]
  00135	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0013b	3b f4		 cmp	 esi, esp
  0013d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L189776:
  00142	8b f4		 mov	 esi, esp
  00144	8d 4d cc	 lea	 ecx, DWORD PTR _strW$[ebp]
  00147	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0014d	3b f4		 cmp	 esi, esp
  0014f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?IWebRefreshOb_Refresh@CWebSubWnd@@UAEXPBD@Z:
  00154	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189778
  00159	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?IWebRefreshOb_Refresh@CWebSubWnd@@UAEXPBD@Z ENDP	; CWebSubWnd::IWebRefreshOb_Refresh
EXTRN	?OnSize@CHtmlView@@IAEXIHH@Z:NEAR		; CHtmlView::OnSize
EXTRN	?MoveWindow@CWnd@@QAEXHHHHH@Z:NEAR		; CWnd::MoveWindow
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nType$ = 8						; size = 4
_cx$ = 12						; size = 4
_cy$ = 16						; size = 4
?OnSize@CWebSubWnd@@QAEXIHH@Z PROC NEAR			; CWebSubWnd::OnSize
; _this$ = ecx

; 100  : {

  009c0	55		 push	 ebp
  009c1	8b ec		 mov	 ebp, esp
  009c3	51		 push	 ecx
  009c4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  009cb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 101  : 	m_flash.MoveWindow(0,0,cx,cy);

  009ce	6a 01		 push	 1
  009d0	8b 45 10	 mov	 eax, DWORD PTR _cy$[ebp]
  009d3	50		 push	 eax
  009d4	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  009d7	51		 push	 ecx
  009d8	6a 00		 push	 0
  009da	6a 00		 push	 0
  009dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009df	81 c1 00 01 00
	00		 add	 ecx, 256		; 00000100H
  009e5	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow

; 102  : 	__super::OnSize(nType,cx,cy);

  009ea	8b 55 10	 mov	 edx, DWORD PTR _cy$[ebp]
  009ed	52		 push	 edx
  009ee	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  009f1	50		 push	 eax
  009f2	8b 4d 08	 mov	 ecx, DWORD PTR _nType$[ebp]
  009f5	51		 push	 ecx
  009f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009f9	e8 00 00 00 00	 call	 ?OnSize@CHtmlView@@IAEXIHH@Z ; CHtmlView::OnSize

; 103  : }

  009fe	83 c4 04	 add	 esp, 4
  00a01	3b ec		 cmp	 ebp, esp
  00a03	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a08	8b e5		 mov	 esp, ebp
  00a0a	5d		 pop	 ebp
  00a0b	c2 0c 00	 ret	 12			; 0000000cH
?OnSize@CWebSubWnd@@QAEXIHH@Z ENDP			; CWebSubWnd::OnSize
_TEXT	ENDS
EXTRN	?OnDocumentComplete@CHtmlView@@UAEXPBD@Z:NEAR	; CHtmlView::OnDocumentComplete
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszURL$ = 8						; size = 4
?OnDocumentComplete@CWebSubWnd@@UAEXPBD@Z PROC NEAR	; CWebSubWnd::OnDocumentComplete
; _this$ = ecx

; 106  : {

  00a10	55		 push	 ebp
  00a11	8b ec		 mov	 ebp, esp
  00a13	51		 push	 ecx
  00a14	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00a1b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 107  : 	m_flash.ShowWindow(SW_HIDE);

  00a1e	6a 00		 push	 0
  00a20	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a23	81 c1 00 01 00
	00		 add	 ecx, 256		; 00000100H
  00a29	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 108  : 	__super::OnDocumentComplete(lpszURL);

  00a2e	8b 45 08	 mov	 eax, DWORD PTR _lpszURL$[ebp]
  00a31	50		 push	 eax
  00a32	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a35	e8 00 00 00 00	 call	 ?OnDocumentComplete@CHtmlView@@UAEXPBD@Z ; CHtmlView::OnDocumentComplete

; 109  : }

  00a3a	83 c4 04	 add	 esp, 4
  00a3d	3b ec		 cmp	 ebp, esp
  00a3f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a44	8b e5		 mov	 esp, ebp
  00a46	5d		 pop	 ebp
  00a47	c2 04 00	 ret	 4
?OnDocumentComplete@CWebSubWnd@@UAEXPBD@Z ENDP		; CWebSubWnd::OnDocumentComplete
_TEXT	ENDS
EXTRN	__imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z PROC NEAR ; ATL::operator==, COMDAT

; 2087 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2088 : 		return( str1.Compare( psz2 ) == 0 );

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _psz2$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _str1$[ebp]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  00013	3b f4		 cmp	 esi, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001a	f7 d8		 neg	 eax
  0001c	1b c0		 sbb	 eax, eax
  0001e	40		 inc	 eax

; 2089 : 	}

  0001f	5e		 pop	 esi
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ENDP ; ATL::operator==
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??_ECWebSubWnd@@WPA@AEPAXI@Z
_TEXT	SEGMENT
??_ECWebSubWnd@@WPA@AEPAXI@Z PROC NEAR			; [thunk]:CWebSubWnd::`vector deleting destructor', COMDAT
  00000	81 e9 f0 00 00
	00		 sub	 ecx, 240		; 000000f0H
  00006	e9 00 00 00 00	 jmp	 ??_ECWebSubWnd@@UAEPAXI@Z
??_ECWebSubWnd@@WPA@AEPAXI@Z ENDP			; [thunk]:CWebSubWnd::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z	; ATL::_AtlInstallStringThunk
PUBLIC	?GetEnvironmentVariableWFake@ATL@@YGKPB_WPA_WK@Z ; ATL::GetEnvironmentVariableWFake
EXTRN	__imp__GetEnvironmentVariableW@12:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetEnvironmentVariableWThunk@ATL@@YGKPB_WPA_WK@Z
_TEXT	SEGMENT
_pszName$ = 8						; size = 4
_pszBuffer$ = 12					; size = 4
_nSize$ = 16						; size = 4
?GetEnvironmentVariableWThunk@ATL@@YGKPB_WPA_WK@Z PROC NEAR ; ATL::GetEnvironmentVariableWThunk, COMDAT

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 184  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnGetEnvironmentVariableW), 
; 185  : 		GetEnvironmentVariableWFake, ::GetEnvironmentVariableW);

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__GetEnvironmentVariableW@12
  00009	50		 push	 eax
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:?GetEnvironmentVariableWFake@ATL@@YGKPB_WPA_WK@Z ; ATL::GetEnvironmentVariableWFake
  0000f	68 14 00 00 00	 push	 OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+20
  00014	e8 00 00 00 00	 call	 ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 186  : 
; 187  : 	return _strthunks.pfnGetEnvironmentVariableW(pszName, pszBuffer, nSize);

  0001c	8b f4		 mov	 esi, esp
  0001e	8b 4d 10	 mov	 ecx, DWORD PTR _nSize$[ebp]
  00021	51		 push	 ecx
  00022	8b 55 0c	 mov	 edx, DWORD PTR _pszBuffer$[ebp]
  00025	52		 push	 edx
  00026	8b 45 08	 mov	 eax, DWORD PTR _pszName$[ebp]
  00029	50		 push	 eax
  0002a	ff 15 14 00 00
	00		 call	 DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+20
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 188  : }

  00037	5e		 pop	 esi
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	5d		 pop	 ebp
  00040	c2 0c 00	 ret	 12			; 0000000cH
?GetEnvironmentVariableWThunk@ATL@@YGKPB_WPA_WK@Z ENDP	; ATL::GetEnvironmentVariableWThunk
_TEXT	ENDS
PUBLIC	?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
PUBLIC	??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51 ; `ATL::_AtlInstallStringThunk'::`2'::`local static guard'
EXTRN	__imp__GetVersion@0:NEAR
;	COMDAT ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA
_BSS	SEGMENT
?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA DB 01H DUP (?) ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
_BSS	ENDS
;	COMDAT ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
_BSS	SEGMENT
??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51 DD 01H DUP (?) ; `ATL::_AtlInstallStringThunk'::`2'::`local static guard'
; Function compile flags: /Odt /RTCsu
_BSS	ENDS
;	COMDAT ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z
_TEXT	SEGMENT
_pfn$ = -4						; size = 4
_ppThunk$ = 8						; size = 4
_pfnWin9x$ = 12						; size = 4
_pfnNT$ = 16						; size = 4
?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z PROC NEAR	; ATL::_AtlInstallStringThunk, COMDAT

; 115  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 116  : #pragma warning (push)
; 117  : #pragma warning (disable : 4640)	// construction of local static object is not thread-safe
; 118  : 
; 119  : 	static bool s_bWin9x = (::GetVersion()&0x80000000) != 0;

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
  00011	83 e0 01	 and	 eax, 1
  00014	75 2e		 jne	 SHORT $L26217
  00016	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
  0001c	83 c9 01	 or	 ecx, 1
  0001f	89 0d 00 00 00
	00		 mov	 DWORD PTR ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51, ecx
  00025	8b f4		 mov	 esi, esp
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersion@0
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	25 00 00 00 80	 and	 eax, -2147483648	; 80000000H
  00039	f7 d8		 neg	 eax
  0003b	1b c0		 sbb	 eax, eax
  0003d	f7 d8		 neg	 eax
  0003f	a2 00 00 00 00	 mov	 BYTE PTR ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA, al ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
$L26217:

; 120  : 	
; 121  : #pragma warning (pop)
; 122  : 
; 123  : 	void* pfn;
; 124  : 	if (s_bWin9x)

  00044	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
  0004b	85 d2		 test	 edx, edx
  0004d	74 08		 je	 SHORT $L26219

; 125  : 		pfn = pfnWin9x;

  0004f	8b 45 0c	 mov	 eax, DWORD PTR _pfnWin9x$[ebp]
  00052	89 45 fc	 mov	 DWORD PTR _pfn$[ebp], eax

; 126  : 	else

  00055	eb 06		 jmp	 SHORT $L26220
$L26219:

; 127  : 	{
; 128  : #ifdef _CSTRING_ALWAYS_THUNK
; 129  : 		pfn = pfnWin9x;
; 130  : 		(void)pfnNT;
; 131  : #else
; 132  : 		pfn = pfnNT;

  00057	8b 4d 10	 mov	 ecx, DWORD PTR _pfnNT$[ebp]
  0005a	89 4d fc	 mov	 DWORD PTR _pfn$[ebp], ecx
$L26220:

; 133  : #endif
; 134  : 	}
; 135  : 	InterlockedExchangePointer(ppThunk, pfn);

  0005d	8b 55 fc	 mov	 edx, DWORD PTR _pfn$[ebp]
  00060	52		 push	 edx
  00061	8b 45 08	 mov	 eax, DWORD PTR _ppThunk$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 136  : }

  0006a	5e		 pop	 esi
  0006b	83 c4 04	 add	 esp, 4
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ENDP	; ATL::_AtlInstallStringThunk
_TEXT	ENDS
PUBLIC	??_C@_0FH@KDPNIMBO@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ ; `string'
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
PUBLIC	??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
PUBLIC	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
PUBLIC	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
PUBLIC	?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate
PUBLIC	??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z		; ATL::CW2AEX<128>::CW2AEX<128>
PUBLIC	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ			; ATL::CW2AEX<128>::~CW2AEX<128>
PUBLIC	??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ			; ATL::CW2AEX<128>::operator char *
PUBLIC	??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@	; `string'
EXTRN	__imp___CrtDbgReport:NEAR
EXTRN	__imp__MultiByteToWideChar@24:NEAR
EXTRN	__imp__GetEnvironmentVariableA@12:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T189807 DD	0ffffffffH
	DD	FLAT:$L189797
	DD	00H
	DD	FLAT:$L189798
$T189800 DD	019930520H
	DD	02H
	DD	FLAT:$T189807
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@
CONST	SEGMENT
??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@ DB 'nSize >= nSizeW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@KDPNIMBO@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT
??_C@_0FH@KDPNIMBO@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ DB 'D:\Pr'
	DB	'ogram Files (x86)\Microsoft Visual Studio .NET 2003\Vc7\atlmf'
	DB	'c\include\cstringt.h', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetEnvironmentVariableWFake@ATL@@YGKPB_WPA_WK@Z
_TEXT	SEGMENT
$T189796 = -316						; size = 4
$T189794 = -312						; size = 4
$T189793 = -308						; size = 4
_pszNameA$ = -300					; size = 132
_pszBufferA$ = -160					; size = 132
_nSizeW$ = -24						; size = 4
_nSizeA$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pszName$ = 8						; size = 4
_pszBuffer$ = 12					; size = 4
_nSize$ = 16						; size = 4
?GetEnvironmentVariableWFake@ATL@@YGKPB_WPA_WK@Z PROC NEAR ; ATL::GetEnvironmentVariableWFake, COMDAT

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetEnvironmentVariableWFake@ATL@@YGKPB_WPA_WK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	8d bd c4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-316]
  00026	b9 4c 00 00 00	 mov	 ecx, 76			; 0000004cH
  0002b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00030	f3 ab		 rep stosd
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00037	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 160  : 	ULONG nSizeA;
; 161  : 	ULONG nSizeW;
; 162  : 	CTempBuffer<char> pszBufferA;

  0003a	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _pszBufferA$[ebp]
  00040	e8 00 00 00 00	 call	 ??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 163  : 	CW2A pszNameA(pszName);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _pszName$[ebp]
  0004f	50		 push	 eax
  00050	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _pszNameA$[ebp]
  00056	e8 00 00 00 00	 call	 ??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z ; ATL::CW2AEX<128>::CW2AEX<128>
  0005b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 164  : 
; 165  : 	nSizeA = ::GetEnvironmentVariableA(pszNameA, NULL, 0);

  0005f	8b f4		 mov	 esi, esp
  00061	6a 00		 push	 0
  00063	6a 00		 push	 0
  00065	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _pszNameA$[ebp]
  0006b	e8 00 00 00 00	 call	 ??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ ; ATL::CW2AEX<128>::operator char *
  00070	50		 push	 eax
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetEnvironmentVariableA@12
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	89 45 ec	 mov	 DWORD PTR _nSizeA$[ebp], eax

; 166  : 	if (nSizeA == 0)

  00081	83 7d ec 00	 cmp	 DWORD PTR _nSizeA$[ebp], 0
  00085	75 36		 jne	 SHORT $L26322

; 167  : 		return 0;

  00087	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T189793[ebp], 0
  00091	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00095	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _pszNameA$[ebp]
  0009b	e8 00 00 00 00	 call	 ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ ; ATL::CW2AEX<128>::~CW2AEX<128>
  000a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a7	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _pszBufferA$[ebp]
  000ad	e8 00 00 00 00	 call	 ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
  000b2	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR $T189793[ebp]
  000b8	e9 33 01 00 00	 jmp	 $L26263
$L26322:

; 168  : 
; 169  : 	pszBufferA.Allocate(nSizeA*2);

  000bd	8b 4d ec	 mov	 ecx, DWORD PTR _nSizeA$[ebp]
  000c0	d1 e1		 shl	 ecx, 1
  000c2	51		 push	 ecx
  000c3	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _pszBufferA$[ebp]
  000c9	e8 00 00 00 00	 call	 ?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate

; 170  : 	::GetEnvironmentVariableA(pszNameA, pszBufferA, nSizeA);

  000ce	8b f4		 mov	 esi, esp
  000d0	8b 55 ec	 mov	 edx, DWORD PTR _nSizeA$[ebp]
  000d3	52		 push	 edx
  000d4	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _pszBufferA$[ebp]
  000da	e8 00 00 00 00	 call	 ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
  000df	50		 push	 eax
  000e0	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _pszNameA$[ebp]
  000e6	e8 00 00 00 00	 call	 ??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ ; ATL::CW2AEX<128>::operator char *
  000eb	50		 push	 eax
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetEnvironmentVariableA@12
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 171  : 
; 172  : 	nSizeW = ::MultiByteToWideChar(_AtlGetConversionACP(), 0, pszBufferA, -1, NULL, 0);

  000f9	8b f4		 mov	 esi, esp
  000fb	6a 00		 push	 0
  000fd	6a 00		 push	 0
  000ff	6a ff		 push	 -1
  00101	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _pszBufferA$[ebp]
  00107	e8 00 00 00 00	 call	 ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
  0010c	50		 push	 eax
  0010d	6a 00		 push	 0
  0010f	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00114	50		 push	 eax
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  0011b	3b f4		 cmp	 esi, esp
  0011d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00122	89 45 e8	 mov	 DWORD PTR _nSizeW$[ebp], eax

; 173  : 	if (nSize == 0)

  00125	83 7d 10 00	 cmp	 DWORD PTR _nSize$[ebp], 0
  00129	75 35		 jne	 SHORT $L26324

; 174  : 		return nSizeW;

  0012b	8b 45 e8	 mov	 eax, DWORD PTR _nSizeW$[ebp]
  0012e	89 85 c8 fe ff
	ff		 mov	 DWORD PTR $T189794[ebp], eax
  00134	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00138	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _pszNameA$[ebp]
  0013e	e8 00 00 00 00	 call	 ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ ; ATL::CW2AEX<128>::~CW2AEX<128>
  00143	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014a	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _pszBufferA$[ebp]
  00150	e8 00 00 00 00	 call	 ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
  00155	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR $T189794[ebp]
  0015b	e9 90 00 00 00	 jmp	 $L26263
$L26324:

; 175  : 	ATLASSERT(nSize >= nSizeW);

  00160	8b 4d 10	 mov	 ecx, DWORD PTR _nSize$[ebp]
  00163	3b 4d e8	 cmp	 ecx, DWORD PTR _nSizeW$[ebp]
  00166	73 2b		 jae	 SHORT $L189795
  00168	8b f4		 mov	 esi, esp
  0016a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@
  0016f	6a 00		 push	 0
  00171	68 af 00 00 00	 push	 175			; 000000afH
  00176	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FH@KDPNIMBO@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  0017b	6a 02		 push	 2
  0017d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00183	83 c4 14	 add	 esp, 20			; 00000014H
  00186	3b f4		 cmp	 esi, esp
  00188	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018d	83 f8 01	 cmp	 eax, 1
  00190	75 01		 jne	 SHORT $L189795
  00192	cc		 int	 3
$L189795:

; 176  : 	::MultiByteToWideChar(_AtlGetConversionACP(), 0, pszBufferA, -1, pszBuffer, nSizeW);

  00193	8b f4		 mov	 esi, esp
  00195	8b 45 e8	 mov	 eax, DWORD PTR _nSizeW$[ebp]
  00198	50		 push	 eax
  00199	8b 4d 0c	 mov	 ecx, DWORD PTR _pszBuffer$[ebp]
  0019c	51		 push	 ecx
  0019d	6a ff		 push	 -1
  0019f	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _pszBufferA$[ebp]
  001a5	e8 00 00 00 00	 call	 ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
  001aa	50		 push	 eax
  001ab	6a 00		 push	 0
  001ad	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  001b2	50		 push	 eax
  001b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  001b9	3b f4		 cmp	 esi, esp
  001bb	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 177  : 
; 178  : 	return nSizeW;

  001c0	8b 55 e8	 mov	 edx, DWORD PTR _nSizeW$[ebp]
  001c3	89 95 c4 fe ff
	ff		 mov	 DWORD PTR $T189796[ebp], edx
  001c9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001cd	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _pszNameA$[ebp]
  001d3	e8 00 00 00 00	 call	 ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ ; ATL::CW2AEX<128>::~CW2AEX<128>
  001d8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001df	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _pszBufferA$[ebp]
  001e5	e8 00 00 00 00	 call	 ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
  001ea	8b 85 c4 fe ff
	ff		 mov	 eax, DWORD PTR $T189796[ebp]
$L26263:

; 179  : }

  001f0	52		 push	 edx
  001f1	8b cd		 mov	 ecx, ebp
  001f3	50		 push	 eax
  001f4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189806
  001fa	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001ff	58		 pop	 eax
  00200	5a		 pop	 edx
  00201	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00204	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0020b	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00213	5f		 pop	 edi
  00214	5e		 pop	 esi
  00215	81 c4 3c 01 00
	00		 add	 esp, 316		; 0000013cH
  0021b	3b ec		 cmp	 ebp, esp
  0021d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00222	8b e5		 mov	 esp, ebp
  00224	5d		 pop	 ebp
  00225	c2 0c 00	 ret	 12			; 0000000cH
$L189806:
  00228	02 00 00 00	 DD	 2
  0022c	00 00 00 00	 DD	 $L189805
$L189805:
  00230	60 ff ff ff	 DD	 -160			; ffffff60H
  00234	84 00 00 00	 DD	 132			; 00000084H
  00238	00 00 00 00	 DD	 $L189801
  0023c	d4 fe ff ff	 DD	 -300			; fffffed4H
  00240	84 00 00 00	 DD	 132			; 00000084H
  00244	00 00 00 00	 DD	 $L189802
$L189802:
  00248	70		 DB	 112			; 00000070H
  00249	73		 DB	 115			; 00000073H
  0024a	7a		 DB	 122			; 0000007aH
  0024b	4e		 DB	 78			; 0000004eH
  0024c	61		 DB	 97			; 00000061H
  0024d	6d		 DB	 109			; 0000006dH
  0024e	65		 DB	 101			; 00000065H
  0024f	41		 DB	 65			; 00000041H
  00250	00		 DB	 0
$L189801:
  00251	70		 DB	 112			; 00000070H
  00252	73		 DB	 115			; 00000073H
  00253	7a		 DB	 122			; 0000007aH
  00254	42		 DB	 66			; 00000042H
  00255	75		 DB	 117			; 00000075H
  00256	66		 DB	 102			; 00000066H
  00257	66		 DB	 102			; 00000066H
  00258	65		 DB	 101			; 00000065H
  00259	72		 DB	 114			; 00000072H
  0025a	41		 DB	 65			; 00000041H
  0025b	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L189797:
  00000	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _pszBufferA$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
$L189798:
  0000b	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _pszNameA$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ ; ATL::CW2AEX<128>::~CW2AEX<128>
__ehhandler$?GetEnvironmentVariableWFake@ATL@@YGKPB_WPA_WK@Z:
  00016	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189800
  0001b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetEnvironmentVariableWFake@ATL@@YGKPB_WPA_WK@Z ENDP	; ATL::GetEnvironmentVariableWFake
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 158  : 	return( g_pfnGetThreadACP() );

  00004	8b f4		 mov	 esi, esp
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  0000c	3b f4		 cmp	 esi, esp
  0000e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 159  : }

  00013	5e		 pop	 esi
  00014	3b ec		 cmp	 ebp, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
PUBLIC	?CompareStringWFake@ATL@@YGHKKPB_WH0H@Z		; ATL::CompareStringWFake
EXTRN	__imp__CompareStringW@24:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?CompareStringWThunk@ATL@@YGHKKPB_WH0H@Z
_TEXT	SEGMENT
_lcid$ = 8						; size = 4
_dwFlags$ = 12						; size = 4
_pszString1$ = 16					; size = 4
_nLength1$ = 20						; size = 4
_pszString2$ = 24					; size = 4
_nLength2$ = 28						; size = 4
?CompareStringWThunk@ATL@@YGHKKPB_WH0H@Z PROC NEAR	; ATL::CompareStringWThunk, COMDAT

; 216  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 217  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnCompareStringW), CompareStringWFake, ::CompareStringW);

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__CompareStringW@24
  00009	50		 push	 eax
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:?CompareStringWFake@ATL@@YGHKKPB_WH0H@Z ; ATL::CompareStringWFake
  0000f	68 00 00 00 00	 push	 OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A ; ATL::_strthunks
  00014	e8 00 00 00 00	 call	 ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 218  : 
; 219  : 	return _strthunks.pfnCompareStringW(lcid, dwFlags, pszString1, nLength1, pszString2, nLength2);

  0001c	8b f4		 mov	 esi, esp
  0001e	8b 4d 1c	 mov	 ecx, DWORD PTR _nLength2$[ebp]
  00021	51		 push	 ecx
  00022	8b 55 18	 mov	 edx, DWORD PTR _pszString2$[ebp]
  00025	52		 push	 edx
  00026	8b 45 14	 mov	 eax, DWORD PTR _nLength1$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 10	 mov	 ecx, DWORD PTR _pszString1$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 0c	 mov	 edx, DWORD PTR _dwFlags$[ebp]
  00031	52		 push	 edx
  00032	8b 45 08	 mov	 eax, DWORD PTR _lcid$[ebp]
  00035	50		 push	 eax
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 220  : }

  00043	5e		 pop	 esi
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	5d		 pop	 ebp
  0004c	c2 18 00	 ret	 24			; 00000018H
?CompareStringWThunk@ATL@@YGHKKPB_WH0H@Z ENDP		; ATL::CompareStringWThunk
_TEXT	ENDS
PUBLIC	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	?AtlW2AHelper@@YGPADPADPB_WHI@Z			; AtlW2AHelper
PUBLIC	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
EXTRN	__imp__lstrlenW@4:NEAR
EXTRN	__alloca_probe:NEAR
EXTRN	__imp__CompareStringA@24:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T189830 DD	0ffffffffH
	DD	FLAT:$L189822
$T189824 DD	019930520H
	DD	01H
	DD	FLAT:$T189830
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?CompareStringWFake@ATL@@YGHKKPB_WH0H@Z
_TEXT	SEGMENT
tv147 = -76						; size = 4
tv142 = -72						; size = 4
tv149 = -68						; size = 4
tv89 = -64						; size = 4
tv84 = -60						; size = 4
tv91 = -56						; size = 4
$T189821 = -52						; size = 4
_pszAString2$ = -48					; size = 4
_pszAString1$ = -44					; size = 4
__AtlSafeAllocaManager$ = -36				; size = 4
__lpa_ex$ = -28						; size = 4
__lpw_ex$ = -24						; size = 4
__acp_ex$ = -20						; size = 4
__convert_ex$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lcid$ = 8						; size = 4
_dwFlags$ = 12						; size = 4
_pszString1$ = 16					; size = 4
_nLength1$ = 20						; size = 4
_pszString2$ = 24					; size = 4
_nLength2$ = 28						; size = 4
?CompareStringWFake@ATL@@YGHKKPB_WH0H@Z PROC NEAR	; ATL::CompareStringWFake, COMDAT

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CompareStringWFake@ATL@@YGHKKPB_WH0H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 40	 sub	 esp, 64			; 00000040H
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  00020	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd

; 193  : 	USES_CONVERSION_EX;

  0002c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __convert_ex$[ebp], 0
  00033	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00038	89 45 ec	 mov	 DWORD PTR __acp_ex$[ebp], eax
  0003b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR __lpw_ex$[ebp], 0
  00042	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR __lpa_ex$[ebp], 0
  00049	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  0004c	e8 00 00 00 00	 call	 ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 194  : 	
; 195  : 	LPCSTR pszAString1 = NULL;

  00058	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _pszAString1$[ebp], 0

; 196  : 	if(pszString1 != NULL)

  0005f	83 7d 10 00	 cmp	 DWORD PTR _pszString1$[ebp], 0
  00063	0f 84 a1 00 00
	00		 je	 $L26349

; 197  : 	{
; 198  : 		pszAString1 = W2A_EX(pszString1,_ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  00069	8b 45 10	 mov	 eax, DWORD PTR _pszString1$[ebp]
  0006c	89 45 e8	 mov	 DWORD PTR __lpw_ex$[ebp], eax
  0006f	83 7d e8 00	 cmp	 DWORD PTR __lpw_ex$[ebp], 0
  00073	75 09		 jne	 SHORT $L189815
  00075	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
  0007c	eb 76		 jmp	 SHORT $L189816
$L189815:
  0007e	8b f4		 mov	 esi, esp
  00080	8b 4d e8	 mov	 ecx, DWORD PTR __lpw_ex$[ebp]
  00083	51		 push	 ecx
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenW@4
  0008a	3b f4		 cmp	 esi, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	8d 54 00 02	 lea	 edx, DWORD PTR [eax+eax+2]
  00095	89 55 f0	 mov	 DWORD PTR __convert_ex$[ebp], edx
  00098	81 7d f0 00 04
	00 00		 cmp	 DWORD PTR __convert_ex$[ebp], 1024 ; 00000400H
  0009f	7f 2c		 jg	 SHORT $L189813
  000a1	8b 45 f0	 mov	 eax, DWORD PTR __convert_ex$[ebp]
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
  000aa	83 c4 04	 add	 esp, 4
  000ad	0f b6 c8	 movzx	 ecx, al
  000b0	85 c9		 test	 ecx, ecx
  000b2	74 19		 je	 SHORT $L189813
  000b4	8b 45 f0	 mov	 eax, DWORD PTR __convert_ex$[ebp]
  000b7	83 c0 03	 add	 eax, 3
  000ba	83 e0 fc	 and	 eax, -4			; fffffffcH
  000bd	e8 00 00 00 00	 call	 __alloca_probe
  000c2	89 65 c4	 mov	 DWORD PTR tv84[ebp], esp
  000c5	8b 55 c4	 mov	 edx, DWORD PTR tv84[ebp]
  000c8	89 55 c0	 mov	 DWORD PTR tv89[ebp], edx
  000cb	eb 0f		 jmp	 SHORT $L189814
$L189813:
  000cd	8b 45 f0	 mov	 eax, DWORD PTR __convert_ex$[ebp]
  000d0	50		 push	 eax
  000d1	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  000d4	e8 00 00 00 00	 call	 ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
  000d9	89 45 c0	 mov	 DWORD PTR tv89[ebp], eax
$L189814:
  000dc	8b 4d ec	 mov	 ecx, DWORD PTR __acp_ex$[ebp]
  000df	51		 push	 ecx
  000e0	8b 55 f0	 mov	 edx, DWORD PTR __convert_ex$[ebp]
  000e3	52		 push	 edx
  000e4	8b 45 e8	 mov	 eax, DWORD PTR __lpw_ex$[ebp]
  000e7	50		 push	 eax
  000e8	8b 4d c0	 mov	 ecx, DWORD PTR tv89[ebp]
  000eb	51		 push	 ecx
  000ec	e8 00 00 00 00	 call	 ?AtlW2AHelper@@YGPADPADPB_WHI@Z ; AtlW2AHelper
  000f1	89 45 c8	 mov	 DWORD PTR tv91[ebp], eax
$L189816:
  000f4	8b 55 c8	 mov	 edx, DWORD PTR tv91[ebp]
  000f7	89 55 d4	 mov	 DWORD PTR _pszAString1$[ebp], edx

; 199  : 		if(pszAString1 == NULL)

  000fa	83 7d d4 00	 cmp	 DWORD PTR _pszAString1$[ebp], 0
  000fe	75 0a		 jne	 SHORT $L26349

; 200  : 			AtlThrow(E_OUTOFMEMORY);

  00100	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00105	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L26349:

; 201  : 	}
; 202  : 
; 203  : 	LPCSTR pszAString2 = NULL;

  0010a	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pszAString2$[ebp], 0

; 204  : 	if(pszString2 != NULL)

  00111	83 7d 18 00	 cmp	 DWORD PTR _pszString2$[ebp], 0
  00115	0f 84 a1 00 00
	00		 je	 $L26355

; 205  : 	{
; 206  : 		pszAString2 = W2A_EX(pszString2,_ATL_SAFE_ALLOCA_DEF_THRESHOLD);

  0011b	8b 45 18	 mov	 eax, DWORD PTR _pszString2$[ebp]
  0011e	89 45 e8	 mov	 DWORD PTR __lpw_ex$[ebp], eax
  00121	83 7d e8 00	 cmp	 DWORD PTR __lpw_ex$[ebp], 0
  00125	75 09		 jne	 SHORT $L189819
  00127	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv149[ebp], 0
  0012e	eb 76		 jmp	 SHORT $L189820
$L189819:
  00130	8b f4		 mov	 esi, esp
  00132	8b 4d e8	 mov	 ecx, DWORD PTR __lpw_ex$[ebp]
  00135	51		 push	 ecx
  00136	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenW@4
  0013c	3b f4		 cmp	 esi, esp
  0013e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00143	8d 54 00 02	 lea	 edx, DWORD PTR [eax+eax+2]
  00147	89 55 f0	 mov	 DWORD PTR __convert_ex$[ebp], edx
  0014a	81 7d f0 00 04
	00 00		 cmp	 DWORD PTR __convert_ex$[ebp], 1024 ; 00000400H
  00151	7f 2c		 jg	 SHORT $L189817
  00153	8b 45 f0	 mov	 eax, DWORD PTR __convert_ex$[ebp]
  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
  0015c	83 c4 04	 add	 esp, 4
  0015f	0f b6 c8	 movzx	 ecx, al
  00162	85 c9		 test	 ecx, ecx
  00164	74 19		 je	 SHORT $L189817
  00166	8b 45 f0	 mov	 eax, DWORD PTR __convert_ex$[ebp]
  00169	83 c0 03	 add	 eax, 3
  0016c	83 e0 fc	 and	 eax, -4			; fffffffcH
  0016f	e8 00 00 00 00	 call	 __alloca_probe
  00174	89 65 b8	 mov	 DWORD PTR tv142[ebp], esp
  00177	8b 55 b8	 mov	 edx, DWORD PTR tv142[ebp]
  0017a	89 55 b4	 mov	 DWORD PTR tv147[ebp], edx
  0017d	eb 0f		 jmp	 SHORT $L189818
$L189817:
  0017f	8b 45 f0	 mov	 eax, DWORD PTR __convert_ex$[ebp]
  00182	50		 push	 eax
  00183	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00186	e8 00 00 00 00	 call	 ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
  0018b	89 45 b4	 mov	 DWORD PTR tv147[ebp], eax
$L189818:
  0018e	8b 4d ec	 mov	 ecx, DWORD PTR __acp_ex$[ebp]
  00191	51		 push	 ecx
  00192	8b 55 f0	 mov	 edx, DWORD PTR __convert_ex$[ebp]
  00195	52		 push	 edx
  00196	8b 45 e8	 mov	 eax, DWORD PTR __lpw_ex$[ebp]
  00199	50		 push	 eax
  0019a	8b 4d b4	 mov	 ecx, DWORD PTR tv147[ebp]
  0019d	51		 push	 ecx
  0019e	e8 00 00 00 00	 call	 ?AtlW2AHelper@@YGPADPADPB_WHI@Z ; AtlW2AHelper
  001a3	89 45 bc	 mov	 DWORD PTR tv149[ebp], eax
$L189820:
  001a6	8b 55 bc	 mov	 edx, DWORD PTR tv149[ebp]
  001a9	89 55 d0	 mov	 DWORD PTR _pszAString2$[ebp], edx

; 207  : 		if(pszAString2 == NULL)

  001ac	83 7d d0 00	 cmp	 DWORD PTR _pszAString2$[ebp], 0
  001b0	75 0a		 jne	 SHORT $L26355

; 208  : 			AtlThrow(E_OUTOFMEMORY);

  001b2	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  001b7	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L26355:

; 209  : 	}
; 210  : 
; 211  : 	return ::CompareStringA(lcid, dwFlags, pszAString1, nLength1, pszAString2, nLength2);

  001bc	8b f4		 mov	 esi, esp
  001be	8b 45 1c	 mov	 eax, DWORD PTR _nLength2$[ebp]
  001c1	50		 push	 eax
  001c2	8b 4d d0	 mov	 ecx, DWORD PTR _pszAString2$[ebp]
  001c5	51		 push	 ecx
  001c6	8b 55 14	 mov	 edx, DWORD PTR _nLength1$[ebp]
  001c9	52		 push	 edx
  001ca	8b 45 d4	 mov	 eax, DWORD PTR _pszAString1$[ebp]
  001cd	50		 push	 eax
  001ce	8b 4d 0c	 mov	 ecx, DWORD PTR _dwFlags$[ebp]
  001d1	51		 push	 ecx
  001d2	8b 55 08	 mov	 edx, DWORD PTR _lcid$[ebp]
  001d5	52		 push	 edx
  001d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CompareStringA@24
  001dc	3b f4		 cmp	 esi, esp
  001de	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e3	89 45 cc	 mov	 DWORD PTR $T189821[ebp], eax
  001e6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001ed	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  001f0	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  001f5	8b 45 cc	 mov	 eax, DWORD PTR $T189821[ebp]
$L189812:

; 212  : }

  001f8	8d 65 ac	 lea	 esp, DWORD PTR [ebp-84]
  001fb	52		 push	 edx
  001fc	8b cd		 mov	 ecx, ebp
  001fe	50		 push	 eax
  001ff	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189829
  00205	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0020a	58		 pop	 eax
  0020b	5a		 pop	 edx
  0020c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0020f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00216	5f		 pop	 edi
  00217	5e		 pop	 esi
  00218	8b e5		 mov	 esp, ebp
  0021a	5d		 pop	 ebp
  0021b	c2 18 00	 ret	 24			; 00000018H
$L189829:
  0021e	01 00 00 00	 DD	 1
  00222	00 00 00 00	 DD	 $L189828
$L189828:
  00226	dc ff ff ff	 DD	 -36			; ffffffdcH
  0022a	04 00 00 00	 DD	 4
  0022e	00 00 00 00	 DD	 $L189826
$L189826:
  00232	5f		 DB	 95			; 0000005fH
  00233	41		 DB	 65			; 00000041H
  00234	74		 DB	 116			; 00000074H
  00235	6c		 DB	 108			; 0000006cH
  00236	53		 DB	 83			; 00000053H
  00237	61		 DB	 97			; 00000061H
  00238	66		 DB	 102			; 00000066H
  00239	65		 DB	 101			; 00000065H
  0023a	41		 DB	 65			; 00000041H
  0023b	6c		 DB	 108			; 0000006cH
  0023c	6c		 DB	 108			; 0000006cH
  0023d	6f		 DB	 111			; 0000006fH
  0023e	63		 DB	 99			; 00000063H
  0023f	61		 DB	 97			; 00000061H
  00240	4d		 DB	 77			; 0000004dH
  00241	61		 DB	 97			; 00000061H
  00242	6e		 DB	 110			; 0000006eH
  00243	61		 DB	 97			; 00000061H
  00244	67		 DB	 103			; 00000067H
  00245	65		 DB	 101			; 00000065H
  00246	72		 DB	 114			; 00000072H
  00247	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L189822:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?CompareStringWFake@ATL@@YGHKKPB_WH0H@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189824
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CompareStringWFake@ATL@@YGHKKPB_WH0H@Z ENDP		; ATL::CompareStringWFake
EXTRN	__imp___resetstkoflw:NEAR
EXTRN	__except_handler3:NEAR
;	COMDAT CONST
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
CONST	SEGMENT
$T189840 DD	0ffffffffH
	DD	FLAT:$L189835
	DD	FLAT:$L189836
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT
tv65 = -48						; size = 4
$T189839 = -44						; size = 4
_p$24107 = -36						; size = 4
_bStackAvailable$ = -25					; size = 1
__$SEHRec$ = -24					; size = 24
_Size$ = 8						; size = 4
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable, COMDAT

; 331  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 OFFSET FLAT:$T189840
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:__except_handler3
  0000f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00015	50		 push	 eax
  00016	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001d	83 c4 e0	 add	 esp, -32		; ffffffe0H
  00020	53		 push	 ebx
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  0002b	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  0002e	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00031	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00034	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00037	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0003a	89 65 e8	 mov	 DWORD PTR __$SEHRec$[ebp], esp

; 332  :     bool bStackAvailable = true;

  0003d	c6 45 e7 01	 mov	 BYTE PTR _bStackAvailable$[ebp], 1

; 333  : 
; 334  :     __try

  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$SEHRec$[ebp+20], 0

; 335  :     {
; 336  :         PVOID p = _alloca(Size + _ATL_STACK_MARGIN);

  00048	8b 45 08	 mov	 eax, DWORD PTR _Size$[ebp]
  0004b	05 03 20 00 00	 add	 eax, 8195		; 00002003H
  00050	83 e0 fc	 and	 eax, -4			; fffffffcH
  00053	e8 00 00 00 00	 call	 __alloca_probe
  00058	89 65 d0	 mov	 DWORD PTR tv65[ebp], esp
  0005b	89 65 e8	 mov	 DWORD PTR __$SEHRec$[ebp], esp
  0005e	8b 45 d0	 mov	 eax, DWORD PTR tv65[ebp]
  00061	89 45 dc	 mov	 DWORD PTR _p$24107[ebp], eax
  00064	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$SEHRec$[ebp+20], -1
  0006b	eb 35		 jmp	 SHORT $L189838
$L189835:

; 337  :         (p);
; 338  :     }
; 339  :     __except ((EXCEPTION_STACK_OVERFLOW == GetExceptionCode()) ?
; 340  :                    EXCEPTION_EXECUTE_HANDLER :
; 341  :                    EXCEPTION_CONTINUE_SEARCH)

  0006d	8b 4d ec	 mov	 ecx, DWORD PTR __$SEHRec$[ebp+4]
  00070	8b 11		 mov	 edx, DWORD PTR [ecx]
  00072	8b 02		 mov	 eax, DWORD PTR [edx]
  00074	89 45 d4	 mov	 DWORD PTR $T189839[ebp], eax
  00077	8b 45 d4	 mov	 eax, DWORD PTR $T189839[ebp]
  0007a	2d fd 00 00 c0	 sub	 eax, -1073741571	; c00000fdH
  0007f	f7 d8		 neg	 eax
  00081	1b c0		 sbb	 eax, eax
  00083	40		 inc	 eax
$L189837:
  00084	c3		 ret	 0
$L189836:
  00085	8b 65 e8	 mov	 esp, DWORD PTR __$SEHRec$[ebp]

; 342  :     {
; 343  :         bStackAvailable = false;

  00088	c6 45 e7 00	 mov	 BYTE PTR _bStackAvailable$[ebp], 0

; 344  :         _resetstkoflw();

  0008c	8b f4		 mov	 esi, esp
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___resetstkoflw
  00094	3b f4		 cmp	 esi, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$SEHRec$[ebp+20], -1
$L189838:

; 345  :     }
; 346  :     return bStackAvailable;

  000a2	8a 45 e7	 mov	 al, BYTE PTR _bStackAvailable$[ebp]
$L189834:

; 347  : }

  000a5	8d 65 c4	 lea	 esp, DWORD PTR [ebp-60]
  000a8	52		 push	 edx
  000a9	8b cd		 mov	 ecx, ebp
  000ab	50		 push	 eax
  000ac	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189845
  000b2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b7	58		 pop	 eax
  000b8	5a		 pop	 edx
  000b9	8b 4d f0	 mov	 ecx, DWORD PTR __$SEHRec$[ebp+8]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c3		 ret	 0
$L189845:
  000ca	01 00 00 00	 DD	 1
  000ce	00 00 00 00	 DD	 $L189844
$L189844:
  000d2	dc ff ff ff	 DD	 -36			; ffffffdcH
  000d6	04 00 00 00	 DD	 4
  000da	00 00 00 00	 DD	 $L189842
$L189842:
  000de	70		 DB	 112			; 00000070H
  000df	00		 DB	 0
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
_TEXT	ENDS
PUBLIC	??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ ; `string'
PUBLIC	??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
EXTRN	__imp__WideCharToMultiByte@32:NEAR
;	COMDAT ??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
CONST	SEGMENT
??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@ DB 'lpw != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT
??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ DB 'D:\Pr'
	DB	'ogram Files (x86)\Microsoft Visual Studio .NET 2003\Vc7\atlmf'
	DB	'c\include\atlconv.h', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@ DB 'lpa != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPB_WHI@Z
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_lpa$ = 8						; size = 4
_lpw$ = 12						; size = 4
_nChars$ = 16						; size = 4
_acp$ = 20						; size = 4
?AtlW2AHelper@@YGPADPADPB_WHI@Z PROC NEAR		; AtlW2AHelper, COMDAT

; 573  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 574  : 	ATLASSERT(lpw != NULL);

  0000c	83 7d 0c 00	 cmp	 DWORD PTR _lpw$[ebp], 0
  00010	75 2b		 jne	 SHORT $L189849
  00012	8b f4		 mov	 esi, esp
  00014	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
  00019	6a 00		 push	 0
  0001b	68 3e 02 00 00	 push	 574			; 0000023eH
  00020	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  00025	6a 02		 push	 2
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0002d	83 c4 14	 add	 esp, 20			; 00000014H
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	83 f8 01	 cmp	 eax, 1
  0003a	75 01		 jne	 SHORT $L189849
  0003c	cc		 int	 3
$L189849:

; 575  : 	ATLASSERT(lpa != NULL);

  0003d	83 7d 08 00	 cmp	 DWORD PTR _lpa$[ebp], 0
  00041	75 2b		 jne	 SHORT $L189850
  00043	8b f4		 mov	 esi, esp
  00045	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
  0004a	6a 00		 push	 0
  0004c	68 3f 02 00 00	 push	 575			; 0000023fH
  00051	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  00056	6a 02		 push	 2
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0005e	83 c4 14	 add	 esp, 20			; 00000014H
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 01		 jne	 SHORT $L189850
  0006d	cc		 int	 3
$L189850:

; 576  : 	if (lpa == NULL || lpw == NULL)

  0006e	83 7d 08 00	 cmp	 DWORD PTR _lpa$[ebp], 0
  00072	74 06		 je	 SHORT $L24313
  00074	83 7d 0c 00	 cmp	 DWORD PTR _lpw$[ebp], 0
  00078	75 04		 jne	 SHORT $L24312
$L24313:

; 577  : 		return NULL;

  0007a	33 c0		 xor	 eax, eax
  0007c	eb 6c		 jmp	 SHORT $L24309
$L24312:

; 578  : 	// verify that no illegal character present
; 579  : 	// since lpa was allocated based on the size of lpw
; 580  : 	// don't worry about the number of chars
; 581  : 	lpa[0] = '\0';

  0007e	8b 55 08	 mov	 edx, DWORD PTR _lpa$[ebp]
  00081	c6 02 00	 mov	 BYTE PTR [edx], 0

; 582  : 	int ret = WideCharToMultiByte(acp, 0, lpw, -1, lpa, nChars, NULL, NULL);

  00084	8b f4		 mov	 esi, esp
  00086	6a 00		 push	 0
  00088	6a 00		 push	 0
  0008a	8b 45 10	 mov	 eax, DWORD PTR _nChars$[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d 08	 mov	 ecx, DWORD PTR _lpa$[ebp]
  00091	51		 push	 ecx
  00092	6a ff		 push	 -1
  00094	8b 55 0c	 mov	 edx, DWORD PTR _lpw$[ebp]
  00097	52		 push	 edx
  00098	6a 00		 push	 0
  0009a	8b 45 14	 mov	 eax, DWORD PTR _acp$[ebp]
  0009d	50		 push	 eax
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  000a4	3b f4		 cmp	 esi, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 583  : 	if(ret == 0)

  000ae	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  000b2	75 33		 jne	 SHORT $L24315

; 584  : 	{
; 585  : 		ATLASSERT(FALSE);

  000b4	33 c9		 xor	 ecx, ecx
  000b6	75 2b		 jne	 SHORT $L189851
  000b8	8b f4		 mov	 esi, esp
  000ba	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
  000bf	6a 00		 push	 0
  000c1	68 49 02 00 00	 push	 585			; 00000249H
  000c6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  000cb	6a 02		 push	 2
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  000d3	83 c4 14	 add	 esp, 20			; 00000014H
  000d6	3b f4		 cmp	 esi, esp
  000d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dd	83 f8 01	 cmp	 eax, 1
  000e0	75 01		 jne	 SHORT $L189851
  000e2	cc		 int	 3
$L189851:

; 586  : 		return NULL;

  000e3	33 c0		 xor	 eax, eax
  000e5	eb 03		 jmp	 SHORT $L24309
$L24315:

; 587  : 	}
; 588  : 	return lpa;

  000e7	8b 45 08	 mov	 eax, DWORD PTR _lpa$[ebp]
$L24309:

; 589  : }

  000ea	5e		 pop	 esi
  000eb	83 c4 04	 add	 esp, 4
  000ee	3b ec		 cmp	 ebp, esp
  000f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 10 00	 ret	 16			; 00000010H
?AtlW2AHelper@@YGPADPADPB_WHI@Z ENDP			; AtlW2AHelper
_TEXT	ENDS
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ ; `string'
PUBLIC	??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ ; `string'
EXTRN	?atlTraceException@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceException
EXTRN	?AfxThrowMemoryException@@YGXXZ:NEAR		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:NEAR		; AfxThrowOleException
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
CONST	SEGMENT
??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ DB 'AtlThrow: hr '
	DB	'= 0x%x', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT
??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ DB 'D:\Pr'
	DB	'ogram Files (x86)\Microsoft Visual Studio .NET 2003\Vc7\atlmf'
	DB	'c\include\atlexcept.h', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T189853 = -8						; size = 8
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

  00014	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
  0001d	6a 00		 push	 0
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?atlTraceException@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceException
  00024	e8 00 00 00 00	 call	 ??BCTraceCategory@ATL@@QBEKXZ ; ATL::CTraceCategory::operator unsigned long
  00029	50		 push	 eax
  0002a	6a 3e		 push	 62			; 0000003eH
  0002c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  00031	8d 4d f8	 lea	 ecx, DWORD PTR $T189853[ebp]
  00034	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003f	83 c4 14	 add	 esp, 20			; 00000014H

; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )

  00042	81 7d 08 0e 00
	07 80		 cmp	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH
  00049	75 05		 jne	 SHORT $L25222

; 65   : 	{
; 66   : 		AfxThrowMemoryException();

  0004b	e8 00 00 00 00	 call	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException
$L25222:

; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );

  00050	8b 4d 08	 mov	 ecx, DWORD PTR _hr$[ebp]
  00053	51		 push	 ecx
  00054	e8 00 00 00 00	 call	 ?AfxThrowOleException@@YGXJ@Z ; AfxThrowOleException
$L189852:

; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );
; 74   : #endif
; 75   : };

  00059	83 c4 08	 add	 esp, 8
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC NEAR	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 158  : 	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	8b 45 0c	 mov	 eax, DWORD PTR _nLineNo$[ebp]
  0001c	89 42 04	 mov	 DWORD PTR [edx+4], eax
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
; Function compile flags: /Odt /RTCsu
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT
_ptr$ = -4						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 161  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 162  : 		va_list ptr; va_start(ptr, pszFmt);

  0000b	8d 45 18	 lea	 eax, DWORD PTR _pszFmt$[ebp+4]
  0000e	89 45 fc	 mov	 DWORD PTR _ptr$[ebp], eax

; 163  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _ptr$[ebp]
  00014	51		 push	 ecx
  00015	8b 55 14	 mov	 edx, DWORD PTR _pszFmt$[ebp]
  00018	52		 push	 edx
  00019	8b 45 10	 mov	 eax, DWORD PTR _nLevel$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR _dwCategory$[ebp]
  00020	51		 push	 ecx
  00021	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00024	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00027	50		 push	 eax
  00028	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002d	52		 push	 edx
  0002e	68 00 00 00 00	 push	 OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
  00033	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z ; ATL::CTrace::TraceV
  00038	83 c4 1c	 add	 esp, 28			; 0000001cH

; 164  : 		va_end(ptr);

  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _ptr$[ebp], 0

; 165  : 	}

  00042	83 c4 04	 add	 esp, 4
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVA:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z PROC NEAR		; ATL::CTrace::TraceV, COMDAT

; 121  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 122  : 		AtlTraceVA(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

  00003	8b 45 20	 mov	 eax, DWORD PTR _args$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 1c	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 18	 mov	 edx, DWORD PTR _nLevel$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 14	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR _pszFileName$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 _AtlTraceVA
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH

; 123  : 	}

  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC NEAR			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 203  : 	return( m_dwCategory );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 204  : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
_TEXT	ENDS
PUBLIC	?GetStringTypeExWFake@ATL@@YGHKKPB_WHPAG@Z	; ATL::GetStringTypeExWFake
EXTRN	__imp__GetStringTypeExW@20:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?GetStringTypeExWThunk@ATL@@YGHKKPB_WHPAG@Z
_TEXT	SEGMENT
_lcid$ = 8						; size = 4
_dwInfoType$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nLength$ = 20						; size = 4
_pwCharType$ = 24					; size = 4
?GetStringTypeExWThunk@ATL@@YGHKKPB_WHPAG@Z PROC NEAR	; ATL::GetStringTypeExWThunk, COMDAT

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 241  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnGetStringTypeExW), GetStringTypeExWFake, ::GetStringTypeExW);

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__GetStringTypeExW@20
  00009	50		 push	 eax
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:?GetStringTypeExWFake@ATL@@YGHKKPB_WHPAG@Z ; ATL::GetStringTypeExWFake
  0000f	68 04 00 00 00	 push	 OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+4
  00014	e8 00 00 00 00	 call	 ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 242  : 
; 243  : 	return _strthunks.pfnGetStringTypeExW(lcid, dwInfoType, pszSrc, nLength, pwCharType);

  0001c	8b f4		 mov	 esi, esp
  0001e	8b 4d 18	 mov	 ecx, DWORD PTR _pwCharType$[ebp]
  00021	51		 push	 ecx
  00022	8b 55 14	 mov	 edx, DWORD PTR _nLength$[ebp]
  00025	52		 push	 edx
  00026	8b 45 10	 mov	 eax, DWORD PTR _pszSrc$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInfoType$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 08	 mov	 edx, DWORD PTR _lcid$[ebp]
  00031	52		 push	 edx
  00032	ff 15 04 00 00
	00		 call	 DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+4
  00038	3b f4		 cmp	 esi, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 244  : }

  0003f	5e		 pop	 esi
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	5d		 pop	 ebp
  00048	c2 14 00	 ret	 20			; 00000014H
?GetStringTypeExWThunk@ATL@@YGHKKPB_WHPAG@Z ENDP	; ATL::GetStringTypeExWThunk
_TEXT	ENDS
EXTRN	__imp__GetStringTypeExA@20:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T189870 DD	0ffffffffH
	DD	FLAT:$L189862
$T189864 DD	019930520H
	DD	01H
	DD	FLAT:$T189870
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?GetStringTypeExWFake@ATL@@YGHKKPB_WHPAG@Z
_TEXT	SEGMENT
$T189861 = -164						; size = 4
_pszA$ = -156						; size = 132
_nLengthA$ = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lcid$ = 8						; size = 4
_dwInfoType$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nLength$ = 20						; size = 4
_pwCharType$ = 24					; size = 4
?GetStringTypeExWFake@ATL@@YGHKKPB_WHPAG@Z PROC NEAR	; ATL::GetStringTypeExWFake, COMDAT

; 224  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetStringTypeExWFake@ATL@@YGHKKPB_WHPAG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	8d bd 5c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-164]
  00026	b9 26 00 00 00	 mov	 ecx, 38			; 00000026H
  0002b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00030	f3 ab		 rep stosd
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00037	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 225  : 	int nLengthA;
; 226  : 	CTempBuffer<char> pszA;

  0003a	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _pszA$[ebp]
  00040	e8 00 00 00 00	 call	 ??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 227  : 
; 228  : 	nLengthA = ::WideCharToMultiByte(_AtlGetConversionACP(), 0, pszSrc, nLength, NULL, 0, NULL, NULL);

  0004c	8b f4		 mov	 esi, esp
  0004e	6a 00		 push	 0
  00050	6a 00		 push	 0
  00052	6a 00		 push	 0
  00054	6a 00		 push	 0
  00056	8b 45 14	 mov	 eax, DWORD PTR _nLength$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 10	 mov	 ecx, DWORD PTR _pszSrc$[ebp]
  0005d	51		 push	 ecx
  0005e	6a 00		 push	 0
  00060	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00065	50		 push	 eax
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	89 45 ec	 mov	 DWORD PTR _nLengthA$[ebp], eax

; 229  : 	pszA.Allocate(nLengthA);

  00076	8b 55 ec	 mov	 edx, DWORD PTR _nLengthA$[ebp]
  00079	52		 push	 edx
  0007a	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _pszA$[ebp]
  00080	e8 00 00 00 00	 call	 ?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate

; 230  : 	::WideCharToMultiByte(_AtlGetConversionACP(), 0, pszSrc, nLength, pszA, nLengthA, NULL, NULL);

  00085	8b f4		 mov	 esi, esp
  00087	6a 00		 push	 0
  00089	6a 00		 push	 0
  0008b	8b 45 ec	 mov	 eax, DWORD PTR _nLengthA$[ebp]
  0008e	50		 push	 eax
  0008f	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _pszA$[ebp]
  00095	e8 00 00 00 00	 call	 ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
  0009a	50		 push	 eax
  0009b	8b 4d 14	 mov	 ecx, DWORD PTR _nLength$[ebp]
  0009e	51		 push	 ecx
  0009f	8b 55 10	 mov	 edx, DWORD PTR _pszSrc$[ebp]
  000a2	52		 push	 edx
  000a3	6a 00		 push	 0
  000a5	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  000aa	50		 push	 eax
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  000b1	3b f4		 cmp	 esi, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 231  : 
; 232  : 	if (nLength == -1)

  000b8	83 7d 14 ff	 cmp	 DWORD PTR _nLength$[ebp], -1
  000bc	75 07		 jne	 SHORT $L26381

; 233  : 		nLengthA = -1;

  000be	c7 45 ec ff ff
	ff ff		 mov	 DWORD PTR _nLengthA$[ebp], -1
$L26381:

; 234  : 
; 235  : 	return ::GetStringTypeExA(lcid, dwInfoType, pszA, nLengthA, pwCharType);

  000c5	8b f4		 mov	 esi, esp
  000c7	8b 45 18	 mov	 eax, DWORD PTR _pwCharType$[ebp]
  000ca	50		 push	 eax
  000cb	8b 4d ec	 mov	 ecx, DWORD PTR _nLengthA$[ebp]
  000ce	51		 push	 ecx
  000cf	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _pszA$[ebp]
  000d5	e8 00 00 00 00	 call	 ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
  000da	50		 push	 eax
  000db	8b 55 0c	 mov	 edx, DWORD PTR _dwInfoType$[ebp]
  000de	52		 push	 edx
  000df	8b 45 08	 mov	 eax, DWORD PTR _lcid$[ebp]
  000e2	50		 push	 eax
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStringTypeExA@20
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	89 85 5c ff ff
	ff		 mov	 DWORD PTR $T189861[ebp], eax
  000f6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fd	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _pszA$[ebp]
  00103	e8 00 00 00 00	 call	 ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
  00108	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR $T189861[ebp]

; 236  : }

  0010e	52		 push	 edx
  0010f	8b cd		 mov	 ecx, ebp
  00111	50		 push	 eax
  00112	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189869
  00118	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0011d	58		 pop	 eax
  0011e	5a		 pop	 edx
  0011f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00122	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00129	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00131	5f		 pop	 edi
  00132	5e		 pop	 esi
  00133	81 c4 a4 00 00
	00		 add	 esp, 164		; 000000a4H
  00139	3b ec		 cmp	 ebp, esp
  0013b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c2 14 00	 ret	 20			; 00000014H
$L189869:
  00146	01 00 00 00	 DD	 1
  0014a	00 00 00 00	 DD	 $L189868
$L189868:
  0014e	64 ff ff ff	 DD	 -156			; ffffff64H
  00152	84 00 00 00	 DD	 132			; 00000084H
  00156	00 00 00 00	 DD	 $L189865
$L189865:
  0015a	70		 DB	 112			; 00000070H
  0015b	73		 DB	 115			; 00000073H
  0015c	7a		 DB	 122			; 0000007aH
  0015d	41		 DB	 65			; 00000041H
  0015e	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L189862:
  00000	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _pszA$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
__ehhandler$?GetStringTypeExWFake@ATL@@YGHKKPB_WHPAG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189864
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetStringTypeExWFake@ATL@@YGHKKPB_WHPAG@Z ENDP		; ATL::GetStringTypeExWFake
PUBLIC	?lstrcmpiWFake@ATL@@YGHPB_W0@Z			; ATL::lstrcmpiWFake
EXTRN	__imp__lstrcmpiW@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?lstrcmpiWThunk@ATL@@YGHPB_W0@Z
_TEXT	SEGMENT
_psz1$ = 8						; size = 4
_psz2$ = 12						; size = 4
?lstrcmpiWThunk@ATL@@YGHPB_W0@Z PROC NEAR		; ATL::lstrcmpiWThunk, COMDAT

; 254  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 255  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnlstrcmpiW), lstrcmpiWFake, ::lstrcmpiW);

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__lstrcmpiW@8
  00009	50		 push	 eax
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:?lstrcmpiWFake@ATL@@YGHPB_W0@Z ; ATL::lstrcmpiWFake
  0000f	68 08 00 00 00	 push	 OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+8
  00014	e8 00 00 00 00	 call	 ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 256  : 
; 257  : 	return _strthunks.pfnlstrcmpiW(psz1, psz2);

  0001c	8b f4		 mov	 esi, esp
  0001e	8b 4d 0c	 mov	 ecx, DWORD PTR _psz2$[ebp]
  00021	51		 push	 ecx
  00022	8b 55 08	 mov	 edx, DWORD PTR _psz1$[ebp]
  00025	52		 push	 edx
  00026	ff 15 08 00 00
	00		 call	 DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+8
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 258  : }

  00033	5e		 pop	 esi
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?lstrcmpiWThunk@ATL@@YGHPB_W0@Z ENDP			; ATL::lstrcmpiWThunk
_TEXT	ENDS
EXTRN	__imp__lstrcmpiA@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?lstrcmpiWFake@ATL@@YGHPB_W0@Z
_TEXT	SEGMENT
tv91 = -32						; size = 4
tv94 = -28						; size = 4
tv76 = -24						; size = 4
tv79 = -20						; size = 4
__lpa$ = -16						; size = 4
__lpw$ = -12						; size = 4
__acp$ = -8						; size = 4
__convert$ = -4						; size = 4
_psz1$ = 8						; size = 4
_psz2$ = 12						; size = 4
?lstrcmpiWFake@ATL@@YGHPB_W0@Z PROC NEAR		; ATL::lstrcmpiWFake, COMDAT

; 247  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 248  : 	USES_CONVERSION;

  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __convert$[ebp], 0
  0002b	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00030	89 45 f8	 mov	 DWORD PTR __acp$[ebp], eax
  00033	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __lpw$[ebp], 0
  0003a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __lpa$[ebp], 0

; 249  : 
; 250  : 	return ::lstrcmpiA(W2A(psz1), W2A(psz2));

  00041	8b 45 0c	 mov	 eax, DWORD PTR _psz2$[ebp]
  00044	89 45 f4	 mov	 DWORD PTR __lpw$[ebp], eax
  00047	83 7d f4 00	 cmp	 DWORD PTR __lpw$[ebp], 0
  0004b	75 09		 jne	 SHORT $L189875
  0004d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
  00054	eb 43		 jmp	 SHORT $L189876
$L189875:
  00056	8b f4		 mov	 esi, esp
  00058	8b 4d f4	 mov	 ecx, DWORD PTR __lpw$[ebp]
  0005b	51		 push	 ecx
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenW@4
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8d 54 00 02	 lea	 edx, DWORD PTR [eax+eax+2]
  0006d	89 55 fc	 mov	 DWORD PTR __convert$[ebp], edx
  00070	8b 45 fc	 mov	 eax, DWORD PTR __convert$[ebp]
  00073	83 c0 03	 add	 eax, 3
  00076	83 e0 fc	 and	 eax, -4			; fffffffcH
  00079	e8 00 00 00 00	 call	 __alloca_probe
  0007e	89 65 e8	 mov	 DWORD PTR tv76[ebp], esp
  00081	8b 45 f8	 mov	 eax, DWORD PTR __acp$[ebp]
  00084	50		 push	 eax
  00085	8b 4d fc	 mov	 ecx, DWORD PTR __convert$[ebp]
  00088	51		 push	 ecx
  00089	8b 55 f4	 mov	 edx, DWORD PTR __lpw$[ebp]
  0008c	52		 push	 edx
  0008d	8b 45 e8	 mov	 eax, DWORD PTR tv76[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?AtlW2AHelper@@YGPADPADPB_WHI@Z ; AtlW2AHelper
  00096	89 45 ec	 mov	 DWORD PTR tv79[ebp], eax
$L189876:
  00099	8b 4d 08	 mov	 ecx, DWORD PTR _psz1$[ebp]
  0009c	89 4d f4	 mov	 DWORD PTR __lpw$[ebp], ecx
  0009f	83 7d f4 00	 cmp	 DWORD PTR __lpw$[ebp], 0
  000a3	75 09		 jne	 SHORT $L189877
  000a5	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
  000ac	eb 43		 jmp	 SHORT $L189878
$L189877:
  000ae	8b f4		 mov	 esi, esp
  000b0	8b 55 f4	 mov	 edx, DWORD PTR __lpw$[ebp]
  000b3	52		 push	 edx
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenW@4
  000ba	3b f4		 cmp	 esi, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8d 44 00 02	 lea	 eax, DWORD PTR [eax+eax+2]
  000c5	89 45 fc	 mov	 DWORD PTR __convert$[ebp], eax
  000c8	8b 45 fc	 mov	 eax, DWORD PTR __convert$[ebp]
  000cb	83 c0 03	 add	 eax, 3
  000ce	83 e0 fc	 and	 eax, -4			; fffffffcH
  000d1	e8 00 00 00 00	 call	 __alloca_probe
  000d6	89 65 e0	 mov	 DWORD PTR tv91[ebp], esp
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR __acp$[ebp]
  000dc	51		 push	 ecx
  000dd	8b 55 fc	 mov	 edx, DWORD PTR __convert$[ebp]
  000e0	52		 push	 edx
  000e1	8b 45 f4	 mov	 eax, DWORD PTR __lpw$[ebp]
  000e4	50		 push	 eax
  000e5	8b 4d e0	 mov	 ecx, DWORD PTR tv91[ebp]
  000e8	51		 push	 ecx
  000e9	e8 00 00 00 00	 call	 ?AtlW2AHelper@@YGPADPADPB_WHI@Z ; AtlW2AHelper
  000ee	89 45 e4	 mov	 DWORD PTR tv94[ebp], eax
$L189878:
  000f1	8b f4		 mov	 esi, esp
  000f3	8b 55 ec	 mov	 edx, DWORD PTR tv79[ebp]
  000f6	52		 push	 edx
  000f7	8b 45 e4	 mov	 eax, DWORD PTR tv94[ebp]
  000fa	50		 push	 eax
  000fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiA@8
  00101	3b f4		 cmp	 esi, esp
  00103	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 251  : }

  00108	8d 65 dc	 lea	 esp, DWORD PTR [ebp-36]
  0010b	5e		 pop	 esi
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 08 00	 ret	 8
?lstrcmpiWFake@ATL@@YGHPB_W0@Z ENDP			; ATL::lstrcmpiWFake
_TEXT	ENDS
PUBLIC	?CharLowerWFake@ATL@@YGPA_WPA_W@Z		; ATL::CharLowerWFake
EXTRN	__imp__CharLowerW@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CharLowerWThunk@ATL@@YGPA_WPA_W@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?CharLowerWThunk@ATL@@YGPA_WPA_W@Z PROC NEAR		; ATL::CharLowerWThunk, COMDAT

; 273  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 274  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnCharLowerW), CharLowerWFake, ::CharLowerW);

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__CharLowerW@4
  00009	50		 push	 eax
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:?CharLowerWFake@ATL@@YGPA_WPA_W@Z ; ATL::CharLowerWFake
  0000f	68 0c 00 00 00	 push	 OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+12
  00014	e8 00 00 00 00	 call	 ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 275  : 
; 276  : 	return _strthunks.pfnCharLowerW(psz);

  0001c	8b f4		 mov	 esi, esp
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _psz$[ebp]
  00021	51		 push	 ecx
  00022	ff 15 0c 00 00
	00		 call	 DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+12
  00028	3b f4		 cmp	 esi, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 277  : }

  0002f	5e		 pop	 esi
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?CharLowerWThunk@ATL@@YGPA_WPA_W@Z ENDP			; ATL::CharLowerWThunk
_TEXT	ENDS
PUBLIC	?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z		; AtlA2WHelper
EXTRN	__imp__lstrlenA@4:NEAR
EXTRN	__imp__CharLowerA@4:NEAR
EXTRN	__imp__wcscpy:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CharLowerWFake@ATL@@YGPA_WPA_W@Z
_TEXT	SEGMENT
tv90 = -36						; size = 4
tv94 = -32						; size = 4
tv75 = -28						; size = 4
tv78 = -24						; size = 4
_pszA$ = -20						; size = 4
__lpa$ = -16						; size = 4
__lpw$ = -12						; size = 4
__acp$ = -8						; size = 4
__convert$ = -4						; size = 4
_psz$ = 8						; size = 4
?CharLowerWFake@ATL@@YGPA_WPA_W@Z PROC NEAR		; ATL::CharLowerWFake, COMDAT

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 262  : 	USES_CONVERSION;

  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __convert$[ebp], 0
  0002e	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00033	89 45 f8	 mov	 DWORD PTR __acp$[ebp], eax
  00036	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __lpw$[ebp], 0
  0003d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __lpa$[ebp], 0

; 263  : 	LPSTR pszA;
; 264  : 
; 265  : 	pszA = W2A(psz);

  00044	8b 45 08	 mov	 eax, DWORD PTR _psz$[ebp]
  00047	89 45 f4	 mov	 DWORD PTR __lpw$[ebp], eax
  0004a	83 7d f4 00	 cmp	 DWORD PTR __lpw$[ebp], 0
  0004e	75 09		 jne	 SHORT $L189881
  00050	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
  00057	eb 43		 jmp	 SHORT $L189882
$L189881:
  00059	8b f4		 mov	 esi, esp
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __lpw$[ebp]
  0005e	51		 push	 ecx
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenW@4
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	8d 54 00 02	 lea	 edx, DWORD PTR [eax+eax+2]
  00070	89 55 fc	 mov	 DWORD PTR __convert$[ebp], edx
  00073	8b 45 fc	 mov	 eax, DWORD PTR __convert$[ebp]
  00076	83 c0 03	 add	 eax, 3
  00079	83 e0 fc	 and	 eax, -4			; fffffffcH
  0007c	e8 00 00 00 00	 call	 __alloca_probe
  00081	89 65 e4	 mov	 DWORD PTR tv75[ebp], esp
  00084	8b 45 f8	 mov	 eax, DWORD PTR __acp$[ebp]
  00087	50		 push	 eax
  00088	8b 4d fc	 mov	 ecx, DWORD PTR __convert$[ebp]
  0008b	51		 push	 ecx
  0008c	8b 55 f4	 mov	 edx, DWORD PTR __lpw$[ebp]
  0008f	52		 push	 edx
  00090	8b 45 e4	 mov	 eax, DWORD PTR tv75[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?AtlW2AHelper@@YGPADPADPB_WHI@Z ; AtlW2AHelper
  00099	89 45 e8	 mov	 DWORD PTR tv78[ebp], eax
$L189882:
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR tv78[ebp]
  0009f	89 4d ec	 mov	 DWORD PTR _pszA$[ebp], ecx

; 266  : 	::CharLowerA(pszA);

  000a2	8b f4		 mov	 esi, esp
  000a4	8b 55 ec	 mov	 edx, DWORD PTR _pszA$[ebp]
  000a7	52		 push	 edx
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharLowerA@4
  000ae	3b f4		 cmp	 esi, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 267  : 	wcscpy(psz, A2W(pszA));

  000b5	8b 45 ec	 mov	 eax, DWORD PTR _pszA$[ebp]
  000b8	89 45 f0	 mov	 DWORD PTR __lpa$[ebp], eax
  000bb	83 7d f0 00	 cmp	 DWORD PTR __lpa$[ebp], 0
  000bf	75 09		 jne	 SHORT $L189883
  000c1	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
  000c8	eb 44		 jmp	 SHORT $L189884
$L189883:
  000ca	8b f4		 mov	 esi, esp
  000cc	8b 4d f0	 mov	 ecx, DWORD PTR __lpa$[ebp]
  000cf	51		 push	 ecx
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000d6	3b f4		 cmp	 esi, esp
  000d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dd	83 c0 01	 add	 eax, 1
  000e0	89 45 fc	 mov	 DWORD PTR __convert$[ebp], eax
  000e3	8b 45 fc	 mov	 eax, DWORD PTR __convert$[ebp]
  000e6	d1 e0		 shl	 eax, 1
  000e8	83 c0 03	 add	 eax, 3
  000eb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000ee	e8 00 00 00 00	 call	 __alloca_probe
  000f3	89 65 dc	 mov	 DWORD PTR tv90[ebp], esp
  000f6	8b 55 f8	 mov	 edx, DWORD PTR __acp$[ebp]
  000f9	52		 push	 edx
  000fa	8b 45 fc	 mov	 eax, DWORD PTR __convert$[ebp]
  000fd	50		 push	 eax
  000fe	8b 4d f0	 mov	 ecx, DWORD PTR __lpa$[ebp]
  00101	51		 push	 ecx
  00102	8b 55 dc	 mov	 edx, DWORD PTR tv90[ebp]
  00105	52		 push	 edx
  00106	e8 00 00 00 00	 call	 ?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z ; AtlA2WHelper
  0010b	89 45 e0	 mov	 DWORD PTR tv94[ebp], eax
$L189884:
  0010e	8b f4		 mov	 esi, esp
  00110	8b 45 e0	 mov	 eax, DWORD PTR tv94[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _psz$[ebp]
  00117	51		 push	 ecx
  00118	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy
  0011e	83 c4 08	 add	 esp, 8
  00121	3b f4		 cmp	 esi, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 268  : 
; 269  : 	return psz;

  00128	8b 45 08	 mov	 eax, DWORD PTR _psz$[ebp]

; 270  : }

  0012b	8d 65 d8	 lea	 esp, DWORD PTR [ebp-40]
  0012e	5e		 pop	 esi
  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c2 04 00	 ret	 4
?CharLowerWFake@ATL@@YGPA_WPA_W@Z ENDP			; ATL::CharLowerWFake
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_lpw$ = 8						; size = 4
_lpa$ = 12						; size = 4
_nChars$ = 16						; size = 4
_acp$ = 20						; size = 4
?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z PROC NEAR		; AtlA2WHelper, COMDAT

; 554  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 555  : 	ATLASSERT(lpa != NULL);

  0000c	83 7d 0c 00	 cmp	 DWORD PTR _lpa$[ebp], 0
  00010	75 2b		 jne	 SHORT $L189886
  00012	8b f4		 mov	 esi, esp
  00014	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
  00019	6a 00		 push	 0
  0001b	68 2b 02 00 00	 push	 555			; 0000022bH
  00020	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  00025	6a 02		 push	 2
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0002d	83 c4 14	 add	 esp, 20			; 00000014H
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	83 f8 01	 cmp	 eax, 1
  0003a	75 01		 jne	 SHORT $L189886
  0003c	cc		 int	 3
$L189886:

; 556  : 	ATLASSERT(lpw != NULL);

  0003d	83 7d 08 00	 cmp	 DWORD PTR _lpw$[ebp], 0
  00041	75 2b		 jne	 SHORT $L189887
  00043	8b f4		 mov	 esi, esp
  00045	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
  0004a	6a 00		 push	 0
  0004c	68 2c 02 00 00	 push	 556			; 0000022cH
  00051	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  00056	6a 02		 push	 2
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0005e	83 c4 14	 add	 esp, 20			; 00000014H
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 01		 jne	 SHORT $L189887
  0006d	cc		 int	 3
$L189887:

; 557  : 	if (lpw == NULL || lpa == NULL)

  0006e	83 7d 08 00	 cmp	 DWORD PTR _lpw$[ebp], 0
  00072	74 06		 je	 SHORT $L24299
  00074	83 7d 0c 00	 cmp	 DWORD PTR _lpa$[ebp], 0
  00078	75 04		 jne	 SHORT $L24298
$L24299:

; 558  : 		return NULL;

  0007a	33 c0		 xor	 eax, eax
  0007c	eb 6a		 jmp	 SHORT $L24292
$L24298:

; 559  : 	// verify that no illegal character present
; 560  : 	// since lpw was allocated based on the size of lpa
; 561  : 	// don't worry about the number of chars
; 562  : 	lpw[0] = '\0';

  0007e	8b 55 08	 mov	 edx, DWORD PTR _lpw$[ebp]
  00081	66 c7 02 00 00	 mov	 WORD PTR [edx], 0

; 563  : 	int ret = MultiByteToWideChar(acp, 0, lpa, -1, lpw, nChars);

  00086	8b f4		 mov	 esi, esp
  00088	8b 45 10	 mov	 eax, DWORD PTR _nChars$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d 08	 mov	 ecx, DWORD PTR _lpw$[ebp]
  0008f	51		 push	 ecx
  00090	6a ff		 push	 -1
  00092	8b 55 0c	 mov	 edx, DWORD PTR _lpa$[ebp]
  00095	52		 push	 edx
  00096	6a 00		 push	 0
  00098	8b 45 14	 mov	 eax, DWORD PTR _acp$[ebp]
  0009b	50		 push	 eax
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  000a2	3b f4		 cmp	 esi, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	89 45 fc	 mov	 DWORD PTR _ret$[ebp], eax

; 564  : 	if(ret == 0)

  000ac	83 7d fc 00	 cmp	 DWORD PTR _ret$[ebp], 0
  000b0	75 33		 jne	 SHORT $L24301

; 565  : 	{
; 566  : 		ATLASSERT(FALSE);

  000b2	33 c9		 xor	 ecx, ecx
  000b4	75 2b		 jne	 SHORT $L189888
  000b6	8b f4		 mov	 esi, esp
  000b8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
  000bd	6a 00		 push	 0
  000bf	68 36 02 00 00	 push	 566			; 00000236H
  000c4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FG@PFHCBDBK@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  000c9	6a 02		 push	 2
  000cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  000d1	83 c4 14	 add	 esp, 20			; 00000014H
  000d4	3b f4		 cmp	 esi, esp
  000d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000db	83 f8 01	 cmp	 eax, 1
  000de	75 01		 jne	 SHORT $L189888
  000e0	cc		 int	 3
$L189888:

; 567  : 		return NULL;

  000e1	33 c0		 xor	 eax, eax
  000e3	eb 03		 jmp	 SHORT $L24292
$L24301:

; 568  : 	}		
; 569  : 	return lpw;

  000e5	8b 45 08	 mov	 eax, DWORD PTR _lpw$[ebp]
$L24292:

; 570  : }

  000e8	5e		 pop	 esi
  000e9	83 c4 04	 add	 esp, 4
  000ec	3b ec		 cmp	 ebp, esp
  000ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f3	8b e5		 mov	 esp, ebp
  000f5	5d		 pop	 ebp
  000f6	c2 10 00	 ret	 16			; 00000010H
?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z ENDP			; AtlA2WHelper
_TEXT	ENDS
PUBLIC	?CharUpperWFake@ATL@@YGPA_WPA_W@Z		; ATL::CharUpperWFake
EXTRN	__imp__CharUpperW@4:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?CharUpperWThunk@ATL@@YGPA_WPA_W@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?CharUpperWThunk@ATL@@YGPA_WPA_W@Z PROC NEAR		; ATL::CharUpperWThunk, COMDAT

; 292  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 293  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnCharUpperW), CharUpperWFake, ::CharUpperW);

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__CharUpperW@4
  00009	50		 push	 eax
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:?CharUpperWFake@ATL@@YGPA_WPA_W@Z ; ATL::CharUpperWFake
  0000f	68 10 00 00 00	 push	 OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+16
  00014	e8 00 00 00 00	 call	 ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 294  : 
; 295  : 	return _strthunks.pfnCharUpperW(psz);

  0001c	8b f4		 mov	 esi, esp
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _psz$[ebp]
  00021	51		 push	 ecx
  00022	ff 15 10 00 00
	00		 call	 DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+16
  00028	3b f4		 cmp	 esi, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 296  : }

  0002f	5e		 pop	 esi
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?CharUpperWThunk@ATL@@YGPA_WPA_W@Z ENDP			; ATL::CharUpperWThunk
_TEXT	ENDS
EXTRN	__imp__CharUpperA@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CharUpperWFake@ATL@@YGPA_WPA_W@Z
_TEXT	SEGMENT
tv90 = -36						; size = 4
tv94 = -32						; size = 4
tv75 = -28						; size = 4
tv78 = -24						; size = 4
_pszA$ = -20						; size = 4
__lpa$ = -16						; size = 4
__lpw$ = -12						; size = 4
__acp$ = -8						; size = 4
__convert$ = -4						; size = 4
_psz$ = 8						; size = 4
?CharUpperWFake@ATL@@YGPA_WPA_W@Z PROC NEAR		; ATL::CharUpperWFake, COMDAT

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 281  : 	USES_CONVERSION;

  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __convert$[ebp], 0
  0002e	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  00033	89 45 f8	 mov	 DWORD PTR __acp$[ebp], eax
  00036	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __lpw$[ebp], 0
  0003d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __lpa$[ebp], 0

; 282  : 	LPSTR pszA;
; 283  : 
; 284  : 	pszA = W2A(psz);

  00044	8b 45 08	 mov	 eax, DWORD PTR _psz$[ebp]
  00047	89 45 f4	 mov	 DWORD PTR __lpw$[ebp], eax
  0004a	83 7d f4 00	 cmp	 DWORD PTR __lpw$[ebp], 0
  0004e	75 09		 jne	 SHORT $L189891
  00050	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
  00057	eb 43		 jmp	 SHORT $L189892
$L189891:
  00059	8b f4		 mov	 esi, esp
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __lpw$[ebp]
  0005e	51		 push	 ecx
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenW@4
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	8d 54 00 02	 lea	 edx, DWORD PTR [eax+eax+2]
  00070	89 55 fc	 mov	 DWORD PTR __convert$[ebp], edx
  00073	8b 45 fc	 mov	 eax, DWORD PTR __convert$[ebp]
  00076	83 c0 03	 add	 eax, 3
  00079	83 e0 fc	 and	 eax, -4			; fffffffcH
  0007c	e8 00 00 00 00	 call	 __alloca_probe
  00081	89 65 e4	 mov	 DWORD PTR tv75[ebp], esp
  00084	8b 45 f8	 mov	 eax, DWORD PTR __acp$[ebp]
  00087	50		 push	 eax
  00088	8b 4d fc	 mov	 ecx, DWORD PTR __convert$[ebp]
  0008b	51		 push	 ecx
  0008c	8b 55 f4	 mov	 edx, DWORD PTR __lpw$[ebp]
  0008f	52		 push	 edx
  00090	8b 45 e4	 mov	 eax, DWORD PTR tv75[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?AtlW2AHelper@@YGPADPADPB_WHI@Z ; AtlW2AHelper
  00099	89 45 e8	 mov	 DWORD PTR tv78[ebp], eax
$L189892:
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR tv78[ebp]
  0009f	89 4d ec	 mov	 DWORD PTR _pszA$[ebp], ecx

; 285  : 	::CharUpperA(pszA);

  000a2	8b f4		 mov	 esi, esp
  000a4	8b 55 ec	 mov	 edx, DWORD PTR _pszA$[ebp]
  000a7	52		 push	 edx
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CharUpperA@4
  000ae	3b f4		 cmp	 esi, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 286  : 	wcscpy(psz, A2W(pszA));

  000b5	8b 45 ec	 mov	 eax, DWORD PTR _pszA$[ebp]
  000b8	89 45 f0	 mov	 DWORD PTR __lpa$[ebp], eax
  000bb	83 7d f0 00	 cmp	 DWORD PTR __lpa$[ebp], 0
  000bf	75 09		 jne	 SHORT $L189893
  000c1	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
  000c8	eb 44		 jmp	 SHORT $L189894
$L189893:
  000ca	8b f4		 mov	 esi, esp
  000cc	8b 4d f0	 mov	 ecx, DWORD PTR __lpa$[ebp]
  000cf	51		 push	 ecx
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000d6	3b f4		 cmp	 esi, esp
  000d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dd	83 c0 01	 add	 eax, 1
  000e0	89 45 fc	 mov	 DWORD PTR __convert$[ebp], eax
  000e3	8b 45 fc	 mov	 eax, DWORD PTR __convert$[ebp]
  000e6	d1 e0		 shl	 eax, 1
  000e8	83 c0 03	 add	 eax, 3
  000eb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000ee	e8 00 00 00 00	 call	 __alloca_probe
  000f3	89 65 dc	 mov	 DWORD PTR tv90[ebp], esp
  000f6	8b 55 f8	 mov	 edx, DWORD PTR __acp$[ebp]
  000f9	52		 push	 edx
  000fa	8b 45 fc	 mov	 eax, DWORD PTR __convert$[ebp]
  000fd	50		 push	 eax
  000fe	8b 4d f0	 mov	 ecx, DWORD PTR __lpa$[ebp]
  00101	51		 push	 ecx
  00102	8b 55 dc	 mov	 edx, DWORD PTR tv90[ebp]
  00105	52		 push	 edx
  00106	e8 00 00 00 00	 call	 ?AtlA2WHelper@@YGPA_WPA_WPBDHI@Z ; AtlA2WHelper
  0010b	89 45 e0	 mov	 DWORD PTR tv94[ebp], eax
$L189894:
  0010e	8b f4		 mov	 esi, esp
  00110	8b 45 e0	 mov	 eax, DWORD PTR tv94[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _psz$[ebp]
  00117	51		 push	 ecx
  00118	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy
  0011e	83 c4 08	 add	 esp, 8
  00121	3b f4		 cmp	 esi, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 287  : 
; 288  : 	return psz;

  00128	8b 45 08	 mov	 eax, DWORD PTR _psz$[ebp]

; 289  : }

  0012b	8d 65 d8	 lea	 esp, DWORD PTR [ebp-40]
  0012e	5e		 pop	 esi
  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c2 04 00	 ret	 4
?CharUpperWFake@ATL@@YGPA_WPA_W@Z ENDP			; ATL::CharUpperWFake
_TEXT	ENDS
EXTRN	?GetAccessibleChild@CWnd@@QAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::GetAccessibleChild
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\afxext.h
;	COMDAT ?get_accChild@CFormView@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_varChild$ = 8						; size = 16
_ppdispChild$ = 24					; size = 4
?get_accChild@CFormView@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z PROC NEAR ; CFormView::get_accChild, COMDAT
; _this$ = ecx

; 768  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 769  : 		return GetAccessibleChild(varChild, ppdispChild);

  0000e	8b 45 18	 mov	 eax, DWORD PTR _ppdispChild$[ebp]
  00011	50		 push	 eax
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	8b cc		 mov	 ecx, esp
  00017	8b 55 08	 mov	 edx, DWORD PTR _varChild$[ebp]
  0001a	89 11		 mov	 DWORD PTR [ecx], edx
  0001c	8b 45 0c	 mov	 eax, DWORD PTR _varChild$[ebp+4]
  0001f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00022	8b 55 10	 mov	 edx, DWORD PTR _varChild$[ebp+8]
  00025	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00028	8b 45 14	 mov	 eax, DWORD PTR _varChild$[ebp+12]
  0002b	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?GetAccessibleChild@CWnd@@QAEJUtagVARIANT@@PAPAUIDispatch@@@Z ; CWnd::GetAccessibleChild

; 770  : 	}

  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 14 00	 ret	 20			; 00000014H
?get_accChild@CFormView@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z ENDP ; CFormView::get_accChild
_TEXT	ENDS
EXTRN	?GetAccessibleChildCount@CWnd@@QAEJXZ:NEAR	; CWnd::GetAccessibleChildCount
; Function compile flags: /Odt /RTCsu
;	COMDAT ?get_accChildCount@CFormView@@UAEJPAJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pcountChildren$ = 8					; size = 4
?get_accChildCount@CFormView@@UAEJPAJ@Z PROC NEAR	; CFormView::get_accChildCount, COMDAT
; _this$ = ecx

; 773  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 774  : 		(*pcountChildren) = GetAccessibleChildCount();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?GetAccessibleChildCount@CWnd@@QAEJXZ ; CWnd::GetAccessibleChildCount
  00016	8b 4d 08	 mov	 ecx, DWORD PTR _pcountChildren$[ebp]
  00019	89 01		 mov	 DWORD PTR [ecx], eax

; 775  : 		return S_OK;

  0001b	33 c0		 xor	 eax, eax

; 776  : 	}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?get_accChildCount@CFormView@@UAEJPAJ@Z ENDP		; CFormView::get_accChildCount
_TEXT	ENDS
EXTRN	?GetAccessibleName@CWnd@@QAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::GetAccessibleName
; Function compile flags: /Odt /RTCsu
;	COMDAT ?get_accName@CFormView@@UAEJUtagVARIANT@@PAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_varChild$ = 8						; size = 16
_pszName$ = 24						; size = 4
?get_accName@CFormView@@UAEJUtagVARIANT@@PAPA_W@Z PROC NEAR ; CFormView::get_accName, COMDAT
; _this$ = ecx

; 779  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 780  : 		return GetAccessibleName(varChild, pszName);

  0000e	8b 45 18	 mov	 eax, DWORD PTR _pszName$[ebp]
  00011	50		 push	 eax
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	8b cc		 mov	 ecx, esp
  00017	8b 55 08	 mov	 edx, DWORD PTR _varChild$[ebp]
  0001a	89 11		 mov	 DWORD PTR [ecx], edx
  0001c	8b 45 0c	 mov	 eax, DWORD PTR _varChild$[ebp+4]
  0001f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00022	8b 55 10	 mov	 edx, DWORD PTR _varChild$[ebp+8]
  00025	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00028	8b 45 14	 mov	 eax, DWORD PTR _varChild$[ebp+12]
  0002b	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?GetAccessibleName@CWnd@@QAEJUtagVARIANT@@PAPA_W@Z ; CWnd::GetAccessibleName

; 781  : 	}

  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 14 00	 ret	 20			; 00000014H
?get_accName@CFormView@@UAEJUtagVARIANT@@PAPA_W@Z ENDP	; CFormView::get_accName
_TEXT	ENDS
EXTRN	?GetAccessibilityLocation@CWnd@@QAEJUtagVARIANT@@PAJ111@Z:NEAR ; CWnd::GetAccessibilityLocation
; Function compile flags: /Odt /RTCsu
;	COMDAT ?accLocation@CFormView@@UAEJPAJ000UtagVARIANT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pxLeft$ = 8						; size = 4
_pyTop$ = 12						; size = 4
_pcxWidth$ = 16						; size = 4
_pcyHeight$ = 20					; size = 4
_varChild$ = 24						; size = 16
?accLocation@CFormView@@UAEJPAJ000UtagVARIANT@@@Z PROC NEAR ; CFormView::accLocation, COMDAT
; _this$ = ecx

; 784  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 785  : 		return GetAccessibilityLocation(varChild, pxLeft, pyTop, pcxWidth, pcyHeight);

  0000e	8b 45 14	 mov	 eax, DWORD PTR _pcyHeight$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 10	 mov	 ecx, DWORD PTR _pcxWidth$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR _pyTop$[ebp]
  00019	52		 push	 edx
  0001a	8b 45 08	 mov	 eax, DWORD PTR _pxLeft$[ebp]
  0001d	50		 push	 eax
  0001e	83 ec 10	 sub	 esp, 16			; 00000010H
  00021	8b cc		 mov	 ecx, esp
  00023	8b 55 18	 mov	 edx, DWORD PTR _varChild$[ebp]
  00026	89 11		 mov	 DWORD PTR [ecx], edx
  00028	8b 45 1c	 mov	 eax, DWORD PTR _varChild$[ebp+4]
  0002b	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002e	8b 55 20	 mov	 edx, DWORD PTR _varChild$[ebp+8]
  00031	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00034	8b 45 24	 mov	 eax, DWORD PTR _varChild$[ebp+12]
  00037	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?GetAccessibilityLocation@CWnd@@QAEJUtagVARIANT@@PAJ111@Z ; CWnd::GetAccessibilityLocation

; 786  : 	}

  00042	83 c4 04	 add	 esp, 4
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 20 00	 ret	 32			; 00000020H
?accLocation@CFormView@@UAEJPAJ000UtagVARIANT@@@Z ENDP	; CFormView::accLocation
_TEXT	ENDS
EXTRN	?GetAccessibilityHitTest@CWnd@@QAEJJJPAUtagVARIANT@@@Z:NEAR ; CWnd::GetAccessibilityHitTest
; Function compile flags: /Odt /RTCsu
;	COMDAT ?accHitTest@CFormView@@UAEJJJPAUtagVARIANT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_xLeft$ = 8						; size = 4
_yTop$ = 12						; size = 4
_pvarChild$ = 16					; size = 4
?accHitTest@CFormView@@UAEJJJPAUtagVARIANT@@@Z PROC NEAR ; CFormView::accHitTest, COMDAT
; _this$ = ecx

; 789  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 790  : 		return GetAccessibilityHitTest(xLeft, yTop, pvarChild);

  0000e	8b 45 10	 mov	 eax, DWORD PTR _pvarChild$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 0c	 mov	 ecx, DWORD PTR _yTop$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 08	 mov	 edx, DWORD PTR _xLeft$[ebp]
  00019	52		 push	 edx
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?GetAccessibilityHitTest@CWnd@@QAEJJJPAUtagVARIANT@@@Z ; CWnd::GetAccessibilityHitTest

; 791  : 	}

  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?accHitTest@CFormView@@UAEJJJPAUtagVARIANT@@@Z ENDP	; CFormView::accHitTest
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\core\imessageobserver.h
_TEXT	ENDS
;	COMDAT ??1IMessageObserver@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1IMessageObserver@@UAE@XZ PROC NEAR			; IMessageObserver::~IMessageObserver, COMDAT
; _this$ = ecx

; 16   : 	virtual ~IMessageObserver(){};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7IMessageObserver@@6B@
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1IMessageObserver@@UAE@XZ ENDP			; IMessageObserver::~IMessageObserver
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??_GIMessageObserver@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GIMessageObserver@@UAEPAXI@Z PROC NEAR		; IMessageObserver::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1IMessageObserver@@UAE@XZ ; IMessageObserver::~IMessageObserver
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $L99513
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$L99513:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GIMessageObserver@@UAEPAXI@Z ENDP			; IMessageObserver::`scalar deleting destructor'
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 373  : 	CAtlSafeAllocBufferManager() : m_pHead(NULL) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z		; ATL::CCRTAllocator::Allocate
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_nRequestedSize$ = 8					; size = 4
?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 375  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 376  : 		CAtlSafeAllocBufferNode *p = (CAtlSafeAllocBufferNode*)Allocator::Allocate(nRequestedSize + sizeof(CAtlSafeAllocBufferNode));

  00017	8b 45 08	 mov	 eax, DWORD PTR _nRequestedSize$[ebp]
  0001a	83 c0 08	 add	 eax, 8
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ; ATL::CCRTAllocator::Allocate
  00023	83 c4 04	 add	 esp, 4
  00026	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 377  : 		if (p == NULL)

  00029	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  0002d	75 04		 jne	 SHORT $L181568

; 378  : 			return NULL;

  0002f	33 c0		 xor	 eax, eax
  00031	eb 1a		 jmp	 SHORT $L181555
$L181568:

; 379  : 		
; 380  : 		// Add buffer to the list
; 381  : 		p->m_pNext = m_pHead;

  00033	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  00036	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00039	8b 02		 mov	 eax, DWORD PTR [edx]
  0003b	89 01		 mov	 DWORD PTR [ecx], eax

; 382  : 		m_pHead = p;

  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  00043	89 11		 mov	 DWORD PTR [ecx], edx

; 383  : 		
; 384  : 		return p->GetData();

  00045	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  00048	e8 00 00 00 00	 call	 ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
$L181555:

; 385  : 	}

  0004d	83 c4 08	 add	 esp, 8
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
EXTRN	__imp__malloc:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z PROC NEAR		; ATL::CCRTAllocator::Allocate, COMDAT

; 30   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 31   : 		return malloc(nBytes);

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00010	83 c4 04	 add	 esp, 4
  00013	3b f4		 cmp	 esi, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 32   : 	}

  0001a	5e		 pop	 esi
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPAX@Z		; ATL::CCRTAllocator::Free
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$181574 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 387  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$L181572:

; 388  : 		// Walk the list and free the buffers
; 389  : 		while (m_pHead != NULL)

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001d	74 22		 je	 SHORT $L181570

; 390  : 		{
; 391  : 			CAtlSafeAllocBufferNode* p = m_pHead;

  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 f8	 mov	 DWORD PTR _p$181574[ebp], edx

; 392  : 			m_pHead = m_pHead->m_pNext;

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00031	89 02		 mov	 DWORD PTR [edx], eax

; 393  : 			Allocator::Free(p);

  00033	8b 4d f8	 mov	 ecx, DWORD PTR _p$181574[ebp]
  00036	51		 push	 ecx
  00037	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  0003c	83 c4 04	 add	 esp, 4

; 394  : 		}

  0003f	eb d6		 jmp	 SHORT $L181572
$L181570:

; 395  : 	}

  00041	83 c4 08	 add	 esp, 8
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
EXTRN	__imp__free:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC NEAR		; ATL::CCRTAllocator::Free, COMDAT

; 35   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 36   : 		free(p);

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00010	83 c4 04	 add	 esp, 4
  00013	3b f4		 cmp	 esi, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 37   : 	}

  0001a	5e		 pop	 esi
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 216  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 217  : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 225  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 226  : 		if( m_p != reinterpret_cast< T* >( m_abFixedBuffer ) )

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 04	 add	 eax, 4
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	39 01		 cmp	 DWORD PTR [ecx], eax
  00019	74 08		 je	 SHORT $L181578

; 227  : 		{
; 228  : 			FreeHeap();

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap
$L181578:

; 229  : 		}
; 230  : 	}

  00023	83 c4 04	 add	 esp, 4
  00026	3b ec		 cmp	 ebp, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *, COMDAT
; _this$ = ecx

; 233  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 234  : 		return( m_p );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 235  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
_TEXT	ENDS
PUBLIC	?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 243  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 244  : 		return( AllocateBytes( nElements*sizeof( T ) ) );

  0000e	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes

; 245  : 	}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
PUBLIC	?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z		; ATL::CW2AEX<128>::Init
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_psz$ = 8						; size = 4
??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z PROC NEAR		; ATL::CW2AEX<128>::CW2AEX<128>, COMDAT
; _this$ = ecx

; 419  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 04	 add	 eax, 4
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	89 01		 mov	 DWORD PTR [ecx], eax

; 420  : 		Init( psz, _AtlGetConversionACP() );

  00019	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  0001e	50		 push	 eax
  0001f	8b 55 08	 mov	 edx, DWORD PTR _psz$[ebp]
  00022	52		 push	 edx
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z ; ATL::CW2AEX<128>::Init

; 421  : 	}

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z ENDP			; ATL::CW2AEX<128>::CW2AEX<128>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CW2AEX@$0IA@@ATL@@QAE@XZ PROC NEAR			; ATL::CW2AEX<128>::~CW2AEX<128>, COMDAT
; _this$ = ecx

; 428  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 429  : 		if( m_psz != m_szBuffer )

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 c0 04	 add	 eax, 4
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	39 01		 cmp	 DWORD PTR [ecx], eax
  0001a	74 18		 je	 SHORT $L181589

; 430  : 		{
; 431  : 			free( m_psz );

  0001c	8b f4		 mov	 esi, esp
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	8b 02		 mov	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L181589:

; 432  : 		}
; 433  : 	}

  00034	5e		 pop	 esi
  00035	83 c4 04	 add	 esp, 4
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
??1?$CW2AEX@$0IA@@ATL@@QAE@XZ ENDP			; ATL::CW2AEX<128>::~CW2AEX<128>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ PROC NEAR		; ATL::CW2AEX<128>::operator char *, COMDAT
; _this$ = ecx

; 436  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 437  : 		return( m_psz );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 438  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ ENDP			; ATL::CW2AEX<128>::operator char *
_TEXT	ENDS
PUBLIC	??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@		; `string'
PUBLIC	??_C@_0FH@BOCPFCEM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ ; `string'
PUBLIC	?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap
;	COMDAT ??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
CONST	SEGMENT
??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@ DB 'm_p == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@BOCPFCEM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT
??_C@_0FH@BOCPFCEM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@ DB 'D:\Pr'
	DB	'ogram Files (x86)\Microsoft Visual Studio .NET 2003\Vc7\atlmf'
	DB	'c\include\atlalloc.h', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 276  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 277  : 		ATLASSERT( m_p == NULL );

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 2b		 je	 SHORT $L189915
  00017	8b f4		 mov	 esi, esp
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@
  0001e	6a 00		 push	 0
  00020	68 15 01 00 00	 push	 277			; 00000115H
  00025	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FH@BOCPFCEM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	83 f8 01	 cmp	 eax, 1
  0003f	75 01		 jne	 SHORT $L189915
  00041	cc		 int	 3
$L189915:

; 278  : 		if( nBytes > t_nFixedBytes )

  00042	81 7d 08 80 00
	00 00		 cmp	 DWORD PTR _nBytes$[ebp], 128 ; 00000080H
  00049	76 0e		 jbe	 SHORT $L183346

; 279  : 		{
; 280  : 			AllocateHeap( nBytes );

  0004b	8b 55 08	 mov	 edx, DWORD PTR _nBytes$[ebp]
  0004e	52		 push	 edx
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap

; 281  : 		}
; 282  : 		else

  00057	eb 0b		 jmp	 SHORT $L183347
$L183346:

; 283  : 		{
; 284  : 			m_p = reinterpret_cast< T* >( m_abFixedBuffer );

  00059	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	83 c0 04	 add	 eax, 4
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax
$L183347:

; 285  : 		}
; 286  : 
; 287  : 		return( m_p );

  00064	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00067	8b 02		 mov	 eax, DWORD PTR [edx]

; 288  : 	}

  00069	5e		 pop	 esi
  0006a	83 c4 04	 add	 esp, 4
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap, COMDAT
; _this$ = ecx

; 312  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 313  : 		Allocator::Free( m_p );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  00019	83 c4 04	 add	 esp, 4

; 314  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap
_TEXT	ENDS
PUBLIC	?AtlThrowLastWin32@ATL@@YGXXZ			; ATL::AtlThrowLastWin32
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z
_TEXT	SEGMENT
_nLengthA$ = -12					; size = 4
_nLengthW$ = -8						; size = 4
_this$ = -4						; size = 4
_psz$ = 8						; size = 4
_nCodePage$ = 12					; size = 4
?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z PROC NEAR		; ATL::CW2AEX<128>::Init, COMDAT
; _this$ = ecx

; 442  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 443  : 		if (psz == NULL)

  0001f	83 7d 08 00	 cmp	 DWORD PTR _psz$[ebp], 0
  00023	75 0e		 jne	 SHORT $L183353

; 444  : 		{
; 445  : 			m_psz = NULL;

  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 446  : 			return;

  0002e	e9 8b 00 00 00	 jmp	 $L189917
$L183353:

; 447  : 		}
; 448  : 		int nLengthW = lstrlenW( psz )+1;

  00033	8b f4		 mov	 esi, esp
  00035	8b 4d 08	 mov	 ecx, DWORD PTR _psz$[ebp]
  00038	51		 push	 ecx
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenW@4
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	83 c0 01	 add	 eax, 1
  00049	89 45 f8	 mov	 DWORD PTR _nLengthW$[ebp], eax

; 449  : 		int nLengthA = nLengthW*2;

  0004c	8b 55 f8	 mov	 edx, DWORD PTR _nLengthW$[ebp]
  0004f	d1 e2		 shl	 edx, 1
  00051	89 55 f4	 mov	 DWORD PTR _nLengthA$[ebp], edx

; 450  : 
; 451  : 		if( nLengthA > t_nBufferLength )

  00054	81 7d f4 80 00
	00 00		 cmp	 DWORD PTR _nLengthA$[ebp], 128 ; 00000080H
  0005b	7e 2d		 jle	 SHORT $L183356

; 452  : 		{
; 453  : 			m_psz = static_cast< LPSTR >( malloc( nLengthA*sizeof( char ) ) );

  0005d	8b f4		 mov	 esi, esp
  0005f	8b 45 f4	 mov	 eax, DWORD PTR _nLengthA$[ebp]
  00062	50		 push	 eax
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00069	83 c4 04	 add	 esp, 4
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	89 01		 mov	 DWORD PTR [ecx], eax

; 454  : 			if (m_psz == NULL)

  00078	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0007e	75 0a		 jne	 SHORT $L183356

; 455  : 			{
; 456  : 				AtlThrow( E_OUTOFMEMORY );

  00080	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00085	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L183356:

; 457  : 			}
; 458  : 		}
; 459  : 
; 460  : 		if (::WideCharToMultiByte( nCodePage, 0, psz, nLengthW, m_psz, nLengthA, NULL, NULL ) == 0)

  0008a	8b f4		 mov	 esi, esp
  0008c	6a 00		 push	 0
  0008e	6a 00		 push	 0
  00090	8b 45 f4	 mov	 eax, DWORD PTR _nLengthA$[ebp]
  00093	50		 push	 eax
  00094	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	8b 11		 mov	 edx, DWORD PTR [ecx]
  00099	52		 push	 edx
  0009a	8b 45 f8	 mov	 eax, DWORD PTR _nLengthW$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d 08	 mov	 ecx, DWORD PTR _psz$[ebp]
  000a1	51		 push	 ecx
  000a2	6a 00		 push	 0
  000a4	8b 55 0c	 mov	 edx, DWORD PTR _nCodePage$[ebp]
  000a7	52		 push	 edx
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  000ae	3b f4		 cmp	 esi, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b5	85 c0		 test	 eax, eax
  000b7	75 05		 jne	 SHORT $L189917

; 461  : 		{
; 462  : 			AtlThrowLastWin32();

  000b9	e8 00 00 00 00	 call	 ?AtlThrowLastWin32@ATL@@YGXXZ ; ATL::AtlThrowLastWin32
$L189917:

; 463  : 		}
; 464  : 	}

  000be	5e		 pop	 esi
  000bf	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c2	3b ec		 cmp	 ebp, esp
  000c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c2 08 00	 ret	 8
?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z ENDP		; ATL::CW2AEX<128>::Init
_TEXT	ENDS
EXTRN	__imp__GetLastError@0:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrowLastWin32@ATL@@YGXXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_dwError$ = -4						; size = 4
?AtlThrowLastWin32@ATL@@YGXXZ PROC NEAR			; ATL::AtlThrowLastWin32, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 81   : 	DWORD dwError = ::GetLastError();

  00015	8b f4		 mov	 esi, esp
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0001d	3b f4		 cmp	 esi, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	89 45 fc	 mov	 DWORD PTR _dwError$[ebp], eax

; 82   : 	AtlThrow( HRESULT_FROM_WIN32( dwError ) );

  00027	83 7d fc 00	 cmp	 DWORD PTR _dwError$[ebp], 0
  0002b	7f 08		 jg	 SHORT $L189919
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _dwError$[ebp]
  00030	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  00033	eb 18		 jmp	 SHORT $L189920
$L189919:
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _dwError$[ebp]
  00038	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0003e	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00044	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  0004a	89 4d f8	 mov	 DWORD PTR tv69[ebp], ecx
$L189920:
  0004d	8b 55 f8	 mov	 edx, DWORD PTR tv69[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L189918:

; 83   : }

  00056	5e		 pop	 esi
  00057	83 c4 08	 add	 esp, 8
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
?AtlThrowLastWin32@ATL@@YGXXZ ENDP			; ATL::AtlThrowLastWin32
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData, COMDAT
; _this$ = ecx

; 365  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 366  : 			return (this + 1);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 08	 add	 eax, 8

; 367  : 		}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap, COMDAT
; _this$ = ecx

; 292  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 293  : 		T* p = static_cast< T* >( Allocator::Allocate( nBytes ) );

  00017	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ; ATL::CCRTAllocator::Allocate
  00020	83 c4 04	 add	 esp, 4
  00023	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax

; 294  : 		if( p == NULL )

  00026	83 7d f8 00	 cmp	 DWORD PTR _p$[ebp], 0
  0002a	75 0a		 jne	 SHORT $L184832

; 295  : 		{
; 296  : 			AtlThrow( E_OUTOFMEMORY );

  0002c	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00031	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L184832:

; 297  : 		}
; 298  : 		m_p = p;

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  0003c	89 11		 mov	 DWORD PTR [ecx], edx
$L189922:

; 299  : 	}

  0003e	83 c4 08	 add	 esp, 8
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap
_TEXT	ENDS
END
