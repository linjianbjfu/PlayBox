; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\module\TopPanel\CPanelChange_Data.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0EN@IBFBLEEG@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??1IData@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DataAppStart@IData@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DataAppExit@IData@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GIData@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPanelChange@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPanelChange@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IPanelChange@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1IPanelChange@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPanelChange@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GIPanelChange@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEAAPAVIMessageObserver@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_List_val@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVIMessageObserver@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEABQAVIMessageObserver@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAVIMessageObserver@@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_List_ptr@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVIMessageObserver@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0PAVIMessageObserver@@@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0PAVIMessageObserver@@@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3IPanelChange@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3IData@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CPanelChange@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2IPanelChange@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2IData@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CPanelChange@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IData@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IPanelChange@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CPanelChange@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVIData@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVIPanelChange@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCPanelChange@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4IPanelChange@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4IData@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4CPanelChange@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EN@CBMLGOH@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FG@LDNDNCJM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R0?AVIMessageObserver@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVIPanelChangeObserver@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7IPanelChange@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CPanelChange@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IData@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?m_pPanelChange@CPanelChange@@2PAV1@A		; CPanelChange::m_pPanelChange
_BSS	SEGMENT
?m_pPanelChange@CPanelChange@@2PAV1@A DD 01H DUP (?)	; CPanelChange::m_pPanelChange
_BSS	ENDS
CONST	SEGMENT
$SG187155 DB	'DataAppStart', 00H
	ORG $+3
$SG187156 DB	'CPanelChangeData', 00H
	ORG $+3
$SG187157 DB	'main.txt', 00H
	ORG $+3
$SG187160 DB	'DataAppStart--OUT', 00H
	ORG $+2
$SG187161 DB	'CPanelChangeData', 00H
	ORG $+3
$SG187162 DB	'main.txt', 00H
	ORG $+3
$SG187168 DB	'DataAppExit', 00H
$SG187169 DB	'CPanelChangeData', 00H
	ORG $+3
$SG187170 DB	'main.txt', 00H
	ORG $+3
$SG187175 DB	'DataAppExit--out', 00H
	ORG $+3
$SG187176 DB	'CPanelChangeData', 00H
	ORG $+3
$SG187177 DB	'main.txt', 00H
	ORG $+3
$SG187184 DB	'ToFull', 00H
	ORG $+1
$SG187185 DB	'ToFull', 00H
	ORG $+1
$SG187186 DB	'ShowUI.txt', 00H
	ORG $+1
_ID_MESSAGE_PANEL_CHANGE DD 02H
CONST	ENDS
PUBLIC	?GetInstance@CPanelChange@@SAPAVIData@@XZ	; CPanelChange::GetInstance
PUBLIC	??0CPanelChange@@QAE@XZ				; CPanelChange::CPanelChange
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
;	COMDAT rtc$IMZ
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\toppanel\cpanelchange_data.cpp
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCsu
rtc$TMZ	ENDS
_TEXT	SEGMENT
tv70 = -8						; size = 4
$T188392 = -4						; size = 4
?GetInstance@CPanelChange@@SAPAVIData@@XZ PROC NEAR	; CPanelChange::GetInstance

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 9    : 	if( m_pPanelChange == NULL )

  00014	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pPanelChange@CPanelChange@@2PAV1@A, 0 ; CPanelChange::m_pPanelChange
  0001b	75 2f		 jne	 SHORT $L187129

; 10   : 	{
; 11   : 		m_pPanelChange = new CPanelChange();		

  0001d	6a 0c		 push	 12			; 0000000cH
  0001f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00024	83 c4 04	 add	 esp, 4
  00027	89 45 fc	 mov	 DWORD PTR $T188392[ebp], eax
  0002a	83 7d fc 00	 cmp	 DWORD PTR $T188392[ebp], 0
  0002e	74 0d		 je	 SHORT $L188393
  00030	8b 4d fc	 mov	 ecx, DWORD PTR $T188392[ebp]
  00033	e8 00 00 00 00	 call	 ??0CPanelChange@@QAE@XZ
  00038	89 45 f8	 mov	 DWORD PTR tv70[ebp], eax
  0003b	eb 07		 jmp	 SHORT $L188394
$L188393:
  0003d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$L188394:
  00044	8b 45 f8	 mov	 eax, DWORD PTR tv70[ebp]
  00047	a3 00 00 00 00	 mov	 DWORD PTR ?m_pPanelChange@CPanelChange@@2PAV1@A, eax ; CPanelChange::m_pPanelChange
$L187129:

; 12   : 	}
; 13   : 	return m_pPanelChange;

  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pPanelChange@CPanelChange@@2PAV1@A ; CPanelChange::m_pPanelChange

; 14   : }

  00051	83 c4 08	 add	 esp, 8
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
?GetInstance@CPanelChange@@SAPAVIData@@XZ ENDP		; CPanelChange::GetInstance
_TEXT	ENDS
PUBLIC	??_R4CPanelChange@@6B@				; CPanelChange::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPanelChange@@@8			; CPanelChange `RTTI Type Descriptor'
PUBLIC	??_R3CPanelChange@@8				; CPanelChange::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPanelChange@@8				; CPanelChange::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CPanelChange@@8			; CPanelChange::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R1A@?0A@A@IPanelChange@@8			; IPanelChange::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVIPanelChange@@@8			; IPanelChange `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@IData@@8				; IData::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVIData@@@8				; IData `RTTI Type Descriptor'
PUBLIC	??0IPanelChange@@QAE@XZ				; IPanelChange::IPanelChange
PUBLIC	?DataAppStart@CPanelChange@@UAEXXZ		; CPanelChange::DataAppStart
PUBLIC	?DataAppExit@CPanelChange@@UAEXXZ		; CPanelChange::DataAppExit
PUBLIC	?IPanelChange_ToFullScreen@CPanelChange@@UAEXPAVCWnd@@@Z ; CPanelChange::IPanelChange_ToFullScreen
PUBLIC	?IPanelChange_IsFullScreen@CPanelChange@@UAE_NXZ ; CPanelChange::IPanelChange_IsFullScreen
PUBLIC	?IPanelChange_ExitFullScreen@CPanelChange@@UAEXXZ ; CPanelChange::IPanelChange_ExitFullScreen
PUBLIC	?IPanelChange_Max@CPanelChange@@UAE_NXZ		; CPanelChange::IPanelChange_Max
PUBLIC	?IPanelChange_Min@CPanelChange@@UAE_NXZ		; CPanelChange::IPanelChange_Min
PUBLIC	?IPanelChange_Restore@CPanelChange@@UAE_NXZ	; CPanelChange::IPanelChange_Restore
PUBLIC	?IPanelChange_Close@CPanelChange@@UAEXXZ	; CPanelChange::IPanelChange_Close
PUBLIC	??_7CPanelChange@@6B@				; CPanelChange::`vftable'
PUBLIC	??_GCPanelChange@@UAEPAXI@Z			; CPanelChange::`scalar deleting destructor'
EXTRN	??_ECPanelChange@@UAEPAXI@Z:NEAR		; CPanelChange::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_7CPanelChange@@6B@
CONST	SEGMENT
??_7CPanelChange@@6B@ DD FLAT:??_R4CPanelChange@@6B@	; CPanelChange::`vftable'
	DD	FLAT:??_ECPanelChange@@UAEPAXI@Z
	DD	FLAT:?DataAppStart@CPanelChange@@UAEXXZ
	DD	FLAT:?DataAppExit@CPanelChange@@UAEXXZ
	DD	FLAT:?IPanelChange_ToFullScreen@CPanelChange@@UAEXPAVCWnd@@@Z
	DD	FLAT:?IPanelChange_ExitFullScreen@CPanelChange@@UAEXXZ
	DD	FLAT:?IPanelChange_IsFullScreen@CPanelChange@@UAE_NXZ
	DD	FLAT:?IPanelChange_Max@CPanelChange@@UAE_NXZ
	DD	FLAT:?IPanelChange_Min@CPanelChange@@UAE_NXZ
	DD	FLAT:?IPanelChange_Restore@CPanelChange@@UAE_NXZ
	DD	FLAT:?IPanelChange_Close@CPanelChange@@UAEXXZ
CONST	ENDS
;	COMDAT ??_R4CPanelChange@@6B@
rdata$r	SEGMENT
??_R4CPanelChange@@6B@ DD 00H				; CPanelChange::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPanelChange@@@8
	DD	FLAT:??_R3CPanelChange@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPanelChange@@@8
_DATA	SEGMENT
??_R0?AVCPanelChange@@@8 DD FLAT:??_7type_info@@6B@	; CPanelChange `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPanelChange@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CPanelChange@@8
rdata$r	SEGMENT
??_R3CPanelChange@@8 DD 00H				; CPanelChange::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CPanelChange@@8
rdata$r	ENDS
;	COMDAT ??_R2CPanelChange@@8
rdata$r	SEGMENT
??_R2CPanelChange@@8 DD FLAT:??_R1A@?0A@A@CPanelChange@@8 ; CPanelChange::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@IPanelChange@@8
	DD	FLAT:??_R1A@?0A@A@IData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CPanelChange@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CPanelChange@@8 DD FLAT:??_R0?AVCPanelChange@@@8 ; CPanelChange::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IPanelChange@@8
rdata$r	SEGMENT
??_R1A@?0A@A@IPanelChange@@8 DD FLAT:??_R0?AVIPanelChange@@@8 ; IPanelChange::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVIPanelChange@@@8
_DATA	SEGMENT
??_R0?AVIPanelChange@@@8 DD FLAT:??_7type_info@@6B@	; IPanelChange `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIPanelChange@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@IData@@8
rdata$r	SEGMENT
??_R1A@?0A@A@IData@@8 DD FLAT:??_R0?AVIData@@@8		; IData::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVIData@@@8
_DATA	SEGMENT
??_R0?AVIData@@@8 DD FLAT:??_7type_info@@6B@		; IData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIData@@', 00H
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
;	COMDAT ??0CPanelChange@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPanelChange@@QAE@XZ PROC NEAR			; CPanelChange::CPanelChange, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0IPanelChange@@QAE@XZ
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CPanelChange@@6B@
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??0CPanelChange@@QAE@XZ ENDP				; CPanelChange::CPanelChange
_TEXT	ENDS
PUBLIC	??1CPanelChange@@UAE@XZ				; CPanelChange::~CPanelChange
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_GCPanelChange@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCPanelChange@@UAEPAXI@Z PROC NEAR			; CPanelChange::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CPanelChange@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $L187137
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$L187137:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GCPanelChange@@UAEPAXI@Z ENDP			; CPanelChange::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?DataAppStart@IData@@UAEXXZ			; IData::DataAppStart
PUBLIC	?DataAppExit@IData@@UAEXXZ			; IData::DataAppExit
PUBLIC	??0IData@@QAE@XZ				; IData::IData
PUBLIC	??_R4IPanelChange@@6B@				; IPanelChange::`RTTI Complete Object Locator'
PUBLIC	??_R3IPanelChange@@8				; IPanelChange::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IPanelChange@@8				; IPanelChange::`RTTI Base Class Array'
PUBLIC	??_7IPanelChange@@6B@				; IPanelChange::`vftable'
PUBLIC	??_GIPanelChange@@UAEPAXI@Z			; IPanelChange::`scalar deleting destructor'
EXTRN	__purecall:NEAR
EXTRN	??_EIPanelChange@@UAEPAXI@Z:NEAR		; IPanelChange::`vector deleting destructor'
;	COMDAT ??_7IPanelChange@@6B@
CONST	SEGMENT
??_7IPanelChange@@6B@ DD FLAT:??_R4IPanelChange@@6B@	; IPanelChange::`vftable'
	DD	FLAT:??_EIPanelChange@@UAEPAXI@Z
	DD	FLAT:?DataAppStart@IData@@UAEXXZ
	DD	FLAT:?DataAppExit@IData@@UAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R4IPanelChange@@6B@
rdata$r	SEGMENT
??_R4IPanelChange@@6B@ DD 00H				; IPanelChange::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIPanelChange@@@8
	DD	FLAT:??_R3IPanelChange@@8
rdata$r	ENDS
;	COMDAT ??_R3IPanelChange@@8
rdata$r	SEGMENT
??_R3IPanelChange@@8 DD 00H				; IPanelChange::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IPanelChange@@8
rdata$r	ENDS
;	COMDAT ??_R2IPanelChange@@8
rdata$r	SEGMENT
??_R2IPanelChange@@8 DD FLAT:??_R1A@?0A@A@IPanelChange@@8 ; IPanelChange::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@IData@@8
; Function compile flags: /Odt /RTCsu
rdata$r	ENDS
;	COMDAT ??0IPanelChange@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IPanelChange@@QAE@XZ PROC NEAR			; IPanelChange::IPanelChange, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0IData@@QAE@XZ
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7IPanelChange@@6B@
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??0IPanelChange@@QAE@XZ ENDP				; IPanelChange::IPanelChange
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\datainterface\idata.h
_TEXT	ENDS
;	COMDAT ?DataAppStart@IData@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DataAppStart@IData@@UAEXXZ PROC NEAR			; IData::DataAppStart, COMDAT
; _this$ = ecx

; 15   : 	virtual void	DataAppStart(){};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?DataAppStart@IData@@UAEXXZ ENDP			; IData::DataAppStart
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?DataAppExit@IData@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DataAppExit@IData@@UAEXXZ PROC NEAR			; IData::DataAppExit, COMDAT
; _this$ = ecx

; 18   : 	virtual void	DataAppExit(){};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?DataAppExit@IData@@UAEXXZ ENDP				; IData::DataAppExit
_TEXT	ENDS
PUBLIC	??1IPanelChange@@UAE@XZ				; IPanelChange::~IPanelChange
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1CPanelChange@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPanelChange@@UAE@XZ PROC NEAR			; CPanelChange::~CPanelChange, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1IPanelChange@@UAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CPanelChange@@UAE@XZ ENDP				; CPanelChange::~CPanelChange
_TEXT	ENDS
PUBLIC	??1IData@@MAE@XZ				; IData::~IData
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1IPanelChange@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1IPanelChange@@UAE@XZ PROC NEAR			; IPanelChange::~IPanelChange, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1IData@@MAE@XZ	; IData::~IData
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1IPanelChange@@UAE@XZ ENDP				; IPanelChange::~IPanelChange
_TEXT	ENDS
PUBLIC	??_R4IData@@6B@					; IData::`RTTI Complete Object Locator'
PUBLIC	??_R3IData@@8					; IData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IData@@8					; IData::`RTTI Base Class Array'
PUBLIC	??_7IData@@6B@					; IData::`vftable'
PUBLIC	??_GIData@@MAEPAXI@Z				; IData::`scalar deleting destructor'
EXTRN	??_EIData@@MAEPAXI@Z:NEAR			; IData::`vector deleting destructor'
;	COMDAT ??_7IData@@6B@
CONST	SEGMENT
??_7IData@@6B@ DD FLAT:??_R4IData@@6B@			; IData::`vftable'
	DD	FLAT:??_EIData@@MAEPAXI@Z
	DD	FLAT:?DataAppStart@IData@@UAEXXZ
	DD	FLAT:?DataAppExit@IData@@UAEXXZ
CONST	ENDS
;	COMDAT ??_R4IData@@6B@
rdata$r	SEGMENT
??_R4IData@@6B@ DD 00H					; IData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIData@@@8
	DD	FLAT:??_R3IData@@8
rdata$r	ENDS
;	COMDAT ??_R3IData@@8
rdata$r	SEGMENT
??_R3IData@@8 DD 00H					; IData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IData@@8
rdata$r	ENDS
;	COMDAT ??_R2IData@@8
rdata$r	SEGMENT
??_R2IData@@8 DD FLAT:??_R1A@?0A@A@IData@@8		; IData::`RTTI Base Class Array'
; Function compile flags: /Odt /RTCsu
rdata$r	ENDS
;	COMDAT ??1IData@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1IData@@MAE@XZ PROC NEAR				; IData::~IData, COMDAT
; _this$ = ecx

; 10   : 	virtual ~IData(){};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7IData@@6B@
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1IData@@MAE@XZ ENDP					; IData::~IData
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??_GIData@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GIData@@MAEPAXI@Z PROC NEAR				; IData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1IData@@MAE@XZ	; IData::~IData
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $L187040
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$L187040:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GIData@@MAEPAXI@Z ENDP				; IData::`scalar deleting destructor'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??_GIPanelChange@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GIPanelChange@@UAEPAXI@Z PROC NEAR			; IPanelChange::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1IPanelChange@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $L187147
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$L187147:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GIPanelChange@@UAEPAXI@Z ENDP			; IPanelChange::`scalar deleting destructor'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IData@@QAE@XZ PROC NEAR				; IData::IData, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7IData@@6B@
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0IData@@QAE@XZ ENDP					; IData::IData
_TEXT	ENDS
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ:NEAR
xdata$x	SEGMENT
$T188430 DD	0ffffffffH
	DD	FLAT:$L188420
	DD	00H
	DD	FLAT:$L188421
	DD	0ffffffffH
	DD	FLAT:$L188422
	DD	02H
	DD	FLAT:$L188423
$T188427 DD	019930520H
	DD	04H
	DD	FLAT:$T188430
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\toppanel\cpanelchange_data.cpp
xdata$x	ENDS
_TEXT	SEGMENT
$T188419 = -128						; size = 28
$T188418 = -100						; size = 28
$T188417 = -72						; size = 28
$T188416 = -44						; size = 28
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?DataAppStart@CPanelChange@@UAEXXZ PROC NEAR		; CPanelChange::DataAppStart
; _this$ = ecx

; 17   : {

  00060	55		 push	 ebp
  00061	8b ec		 mov	 ebp, esp
  00063	6a ff		 push	 -1
  00065	68 00 00 00 00	 push	 __ehhandler$?DataAppStart@CPanelChange@@UAEXXZ
  0006a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00070	50		 push	 eax
  00071	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00078	83 ec 74	 sub	 esp, 116		; 00000074H
  0007b	56		 push	 esi
  0007c	57		 push	 edi
  0007d	51		 push	 ecx
  0007e	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  00081	b9 1d 00 00 00	 mov	 ecx, 29			; 0000001dH
  00086	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0008b	f3 ab		 rep stosd
  0008d	59		 pop	 ecx
  0008e	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 18   : 	YL_Log( STR_LOG_FILE,LOG_NOTICE,"CPanelChangeData","DataAppStart");

  00091	8b f4		 mov	 esi, esp
  00093	68 00 00 00 00	 push	 OFFSET FLAT:$SG187156
  00098	8d 4d d4	 lea	 ecx, DWORD PTR $T188416[ebp]
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  000a1	3b f4		 cmp	 esi, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000af	8b f4		 mov	 esi, esp
  000b1	68 00 00 00 00	 push	 OFFSET FLAT:$SG187157
  000b6	8d 4d b8	 lea	 ecx, DWORD PTR $T188417[ebp]
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  000bf	3b f4		 cmp	 esi, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000ca	8b f4		 mov	 esi, esp
  000cc	68 00 00 00 00	 push	 OFFSET FLAT:$SG187155
  000d1	8d 45 d4	 lea	 eax, DWORD PTR $T188416[ebp]
  000d4	50		 push	 eax
  000d5	6a 01		 push	 1
  000d7	8d 4d b8	 lea	 ecx, DWORD PTR $T188417[ebp]
  000da	51		 push	 ecx
  000db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  000e1	83 c4 10	 add	 esp, 16			; 00000010H
  000e4	3b f4		 cmp	 esi, esp
  000e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000eb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000ef	8b f4		 mov	 esi, esp
  000f1	8d 4d b8	 lea	 ecx, DWORD PTR $T188417[ebp]
  000f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000fa	3b f4		 cmp	 esi, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00108	8b f4		 mov	 esi, esp
  0010a	8d 4d d4	 lea	 ecx, DWORD PTR $T188416[ebp]
  0010d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00113	3b f4		 cmp	 esi, esp
  00115	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 19   : 	m_bFullScreen = false;

  0011a	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0011d	c6 42 04 00	 mov	 BYTE PTR [edx+4], 0

; 20   : 	pWndFullScreen = NULL;

  00121	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00124	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 21   : 	YL_Log( STR_LOG_FILE,LOG_NOTICE,"CPanelChangeData","DataAppStart--OUT");

  0012b	8b f4		 mov	 esi, esp
  0012d	68 00 00 00 00	 push	 OFFSET FLAT:$SG187161
  00132	8d 4d 9c	 lea	 ecx, DWORD PTR $T188418[ebp]
  00135	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0013b	3b f4		 cmp	 esi, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00142	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00149	8b f4		 mov	 esi, esp
  0014b	68 00 00 00 00	 push	 OFFSET FLAT:$SG187162
  00150	8d 4d 80	 lea	 ecx, DWORD PTR $T188419[ebp]
  00153	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00159	3b f4		 cmp	 esi, esp
  0015b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00160	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00164	8b f4		 mov	 esi, esp
  00166	68 00 00 00 00	 push	 OFFSET FLAT:$SG187160
  0016b	8d 4d 9c	 lea	 ecx, DWORD PTR $T188418[ebp]
  0016e	51		 push	 ecx
  0016f	6a 01		 push	 1
  00171	8d 55 80	 lea	 edx, DWORD PTR $T188419[ebp]
  00174	52		 push	 edx
  00175	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  0017b	83 c4 10	 add	 esp, 16			; 00000010H
  0017e	3b f4		 cmp	 esi, esp
  00180	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00185	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00189	8b f4		 mov	 esi, esp
  0018b	8d 4d 80	 lea	 ecx, DWORD PTR $T188419[ebp]
  0018e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00194	3b f4		 cmp	 esi, esp
  00196	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001a2	8b f4		 mov	 esi, esp
  001a4	8d 4d 9c	 lea	 ecx, DWORD PTR $T188418[ebp]
  001a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  001ad	3b f4		 cmp	 esi, esp
  001af	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 22   : }

  001b4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001b7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001be	5f		 pop	 edi
  001bf	5e		 pop	 esi
  001c0	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  001c6	3b ec		 cmp	 ebp, esp
  001c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001cd	8b e5		 mov	 esp, ebp
  001cf	5d		 pop	 ebp
  001d0	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L188420:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d d4	 lea	 ecx, DWORD PTR $T188416[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188421:
  00012	8b f4		 mov	 esi, esp
  00014	8d 4d b8	 lea	 ecx, DWORD PTR $T188417[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0001d	3b f4		 cmp	 esi, esp
  0001f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188422:
  00024	8b f4		 mov	 esi, esp
  00026	8d 4d 9c	 lea	 ecx, DWORD PTR $T188418[ebp]
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0002f	3b f4		 cmp	 esi, esp
  00031	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188423:
  00036	8b f4		 mov	 esi, esp
  00038	8d 4d 80	 lea	 ecx, DWORD PTR $T188419[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00041	3b f4		 cmp	 esi, esp
  00043	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?DataAppStart@CPanelChange@@UAEXXZ:
  00048	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188427
  0004d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?DataAppStart@CPanelChange@@UAEXXZ ENDP			; CPanelChange::DataAppStart
xdata$x	SEGMENT
$T188448 DD	0ffffffffH
	DD	FLAT:$L188441
	DD	00H
	DD	FLAT:$L188442
	DD	0ffffffffH
	DD	FLAT:$L188443
	DD	02H
	DD	FLAT:$L188444
$T188446 DD	019930520H
	DD	04H
	DD	FLAT:$T188448
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv82 = -140						; size = 4
$T188440 = -136						; size = 28
$T188439 = -108						; size = 28
$T188436 = -80						; size = 4
$T188435 = -76						; size = 4
$T188434 = -72						; size = 28
$T188433 = -44						; size = 28
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?DataAppExit@CPanelChange@@UAEXXZ PROC NEAR		; CPanelChange::DataAppExit
; _this$ = ecx

; 25   : {

  001e0	55		 push	 ebp
  001e1	8b ec		 mov	 ebp, esp
  001e3	6a ff		 push	 -1
  001e5	68 00 00 00 00	 push	 __ehhandler$?DataAppExit@CPanelChange@@UAEXXZ
  001ea	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  001f0	50		 push	 eax
  001f1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  001f8	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  001fe	56		 push	 esi
  001ff	57		 push	 edi
  00200	51		 push	 ecx
  00201	8d bd 74 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-140]
  00207	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0020c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00211	f3 ab		 rep stosd
  00213	59		 pop	 ecx
  00214	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 26   : 	YL_Log( STR_LOG_FILE,LOG_NOTICE,"CPanelChangeData","DataAppExit");

  00217	8b f4		 mov	 esi, esp
  00219	68 00 00 00 00	 push	 OFFSET FLAT:$SG187169
  0021e	8d 4d d4	 lea	 ecx, DWORD PTR $T188433[ebp]
  00221	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00227	3b f4		 cmp	 esi, esp
  00229	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0022e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00235	8b f4		 mov	 esi, esp
  00237	68 00 00 00 00	 push	 OFFSET FLAT:$SG187170
  0023c	8d 4d b8	 lea	 ecx, DWORD PTR $T188434[ebp]
  0023f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00245	3b f4		 cmp	 esi, esp
  00247	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0024c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00250	8b f4		 mov	 esi, esp
  00252	68 00 00 00 00	 push	 OFFSET FLAT:$SG187168
  00257	8d 45 d4	 lea	 eax, DWORD PTR $T188433[ebp]
  0025a	50		 push	 eax
  0025b	6a 01		 push	 1
  0025d	8d 4d b8	 lea	 ecx, DWORD PTR $T188434[ebp]
  00260	51		 push	 ecx
  00261	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  00267	83 c4 10	 add	 esp, 16			; 00000010H
  0026a	3b f4		 cmp	 esi, esp
  0026c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00271	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00275	8b f4		 mov	 esi, esp
  00277	8d 4d b8	 lea	 ecx, DWORD PTR $T188434[ebp]
  0027a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00280	3b f4		 cmp	 esi, esp
  00282	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00287	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0028e	8b f4		 mov	 esi, esp
  00290	8d 4d d4	 lea	 ecx, DWORD PTR $T188433[ebp]
  00293	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00299	3b f4		 cmp	 esi, esp
  0029b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 27   : 	delete this;

  002a0	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  002a3	89 55 b0	 mov	 DWORD PTR $T188436[ebp], edx
  002a6	8b 45 b0	 mov	 eax, DWORD PTR $T188436[ebp]
  002a9	89 45 b4	 mov	 DWORD PTR $T188435[ebp], eax
  002ac	83 7d b4 00	 cmp	 DWORD PTR $T188435[ebp], 0
  002b0	74 1d		 je	 SHORT $L188437
  002b2	8b f4		 mov	 esi, esp
  002b4	6a 01		 push	 1
  002b6	8b 4d b4	 mov	 ecx, DWORD PTR $T188435[ebp]
  002b9	8b 11		 mov	 edx, DWORD PTR [ecx]
  002bb	8b 4d b4	 mov	 ecx, DWORD PTR $T188435[ebp]
  002be	ff 12		 call	 DWORD PTR [edx]
  002c0	3b f4		 cmp	 esi, esp
  002c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002c7	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv82[ebp], eax
  002cd	eb 0a		 jmp	 SHORT $L188438
$L188437:
  002cf	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$L188438:

; 28   : 	YL_Log( STR_LOG_FILE,LOG_NOTICE,"CPanelChangeData","DataAppExit--out");

  002d9	8b f4		 mov	 esi, esp
  002db	68 00 00 00 00	 push	 OFFSET FLAT:$SG187176
  002e0	8d 4d 94	 lea	 ecx, DWORD PTR $T188439[ebp]
  002e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  002e9	3b f4		 cmp	 esi, esp
  002eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f0	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  002f7	8b f4		 mov	 esi, esp
  002f9	68 00 00 00 00	 push	 OFFSET FLAT:$SG187177
  002fe	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T188440[ebp]
  00304	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0030a	3b f4		 cmp	 esi, esp
  0030c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00311	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00315	8b f4		 mov	 esi, esp
  00317	68 00 00 00 00	 push	 OFFSET FLAT:$SG187175
  0031c	8d 45 94	 lea	 eax, DWORD PTR $T188439[ebp]
  0031f	50		 push	 eax
  00320	6a 01		 push	 1
  00322	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T188440[ebp]
  00328	51		 push	 ecx
  00329	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  0032f	83 c4 10	 add	 esp, 16			; 00000010H
  00332	3b f4		 cmp	 esi, esp
  00334	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00339	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0033d	8b f4		 mov	 esi, esp
  0033f	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T188440[ebp]
  00345	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0034b	3b f4		 cmp	 esi, esp
  0034d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00352	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00359	8b f4		 mov	 esi, esp
  0035b	8d 4d 94	 lea	 ecx, DWORD PTR $T188439[ebp]
  0035e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00364	3b f4		 cmp	 esi, esp
  00366	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 29   : }

  0036b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0036e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00375	5f		 pop	 edi
  00376	5e		 pop	 esi
  00377	81 c4 8c 00 00
	00		 add	 esp, 140		; 0000008cH
  0037d	3b ec		 cmp	 ebp, esp
  0037f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00384	8b e5		 mov	 esp, ebp
  00386	5d		 pop	 ebp
  00387	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L188441:
  00052	8b f4		 mov	 esi, esp
  00054	8d 4d d4	 lea	 ecx, DWORD PTR $T188433[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0005d	3b f4		 cmp	 esi, esp
  0005f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188442:
  00064	8b f4		 mov	 esi, esp
  00066	8d 4d b8	 lea	 ecx, DWORD PTR $T188434[ebp]
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0006f	3b f4		 cmp	 esi, esp
  00071	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188443:
  00076	8b f4		 mov	 esi, esp
  00078	8d 4d 94	 lea	 ecx, DWORD PTR $T188439[ebp]
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00081	3b f4		 cmp	 esi, esp
  00083	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188444:
  00088	8b f4		 mov	 esi, esp
  0008a	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T188440[ebp]
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00096	3b f4		 cmp	 esi, esp
  00098	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?DataAppExit@CPanelChange@@UAEXXZ:
  0009d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188446
  000a2	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?DataAppExit@CPanelChange@@UAEXXZ ENDP			; CPanelChange::DataAppExit
PUBLIC	??0?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::list<IMessageObserver *,std::allocator<IMessageObserver *> >
PUBLIC	??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
PUBLIC	?begin@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::begin
PUBLIC	?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end
PUBLIC	??9const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator!=
PUBLIC	??Diterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEAAPAVIMessageObserver@@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator*
PUBLIC	??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AV012@H@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++
PUBLIC	??_R0?AVIPanelChangeObserver@@@8		; IPanelChangeObserver `RTTI Type Descriptor'
PUBLIC	??_R0?AVIMessageObserver@@@8			; IMessageObserver `RTTI Type Descriptor'
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	?AfxGetMessageManager@@YAPAVIMessageManager@@XZ:NEAR ; AfxGetMessageManager
EXTRN	?AfxGetMainWindow@@YAPAVCWnd@@XZ:NEAR		; AfxGetMainWindow
EXTRN	___RTDynamicCast:NEAR
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
xdata$x	SEGMENT
$T188465 DD	0ffffffffH
	DD	FLAT:$L188454
	DD	00H
	DD	FLAT:$L188455
	DD	0ffffffffH
	DD	FLAT:$L188456
$T188458 DD	019930520H
	DD	03H
	DD	FLAT:$T188465
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_R0?AVIPanelChangeObserver@@@8
_DATA	SEGMENT
??_R0?AVIPanelChangeObserver@@@8 DD FLAT:??_7type_info@@6B@ ; IPanelChangeObserver `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIPanelChangeObserver@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVIMessageObserver@@@8
_DATA	SEGMENT
??_R0?AVIMessageObserver@@@8 DD FLAT:??_7type_info@@6B@	; IMessageObserver `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIMessageObserver@@', 00H
	ORG $-31
	DD	FLAT:??_7type_info@@6B@
	DD	00H
	DB	'.?AVIMessageObserver@@', 00H
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
tv86 = -120						; size = 4
$T188453 = -116						; size = 4
$T188452 = -112						; size = 4
$T188451 = -108						; size = 28
$T188450 = -80						; size = 28
_pOb$187688 = -52					; size = 4
_itOb$187681 = -44					; size = 4
_listOb$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
?IPanelChange_ToFullScreen@CPanelChange@@UAEXPAVCWnd@@@Z PROC NEAR ; CPanelChange::IPanelChange_ToFullScreen
; _this$ = ecx

; 32   : {

  00390	55		 push	 ebp
  00391	8b ec		 mov	 ebp, esp
  00393	6a ff		 push	 -1
  00395	68 00 00 00 00	 push	 __ehhandler$?IPanelChange_ToFullScreen@CPanelChange@@UAEXPAVCWnd@@@Z
  0039a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  003a0	50		 push	 eax
  003a1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  003a8	83 ec 6c	 sub	 esp, 108		; 0000006cH
  003ab	56		 push	 esi
  003ac	57		 push	 edi
  003ad	51		 push	 ecx
  003ae	8d 7d 88	 lea	 edi, DWORD PTR [ebp-120]
  003b1	b9 1b 00 00 00	 mov	 ecx, 27			; 0000001bH
  003b6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  003bb	f3 ab		 rep stosd
  003bd	59		 pop	 ecx
  003be	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 33   : 	YL_Log("ShowUI.txt",LOG_DEBUG,"ToFull","ToFull");

  003c1	8b f4		 mov	 esi, esp
  003c3	68 00 00 00 00	 push	 OFFSET FLAT:$SG187185
  003c8	8d 4d b0	 lea	 ecx, DWORD PTR $T188450[ebp]
  003cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  003d1	3b f4		 cmp	 esi, esp
  003d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003d8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  003df	8b f4		 mov	 esi, esp
  003e1	68 00 00 00 00	 push	 OFFSET FLAT:$SG187186
  003e6	8d 4d 94	 lea	 ecx, DWORD PTR $T188451[ebp]
  003e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  003ef	3b f4		 cmp	 esi, esp
  003f1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003f6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  003fa	8b f4		 mov	 esi, esp
  003fc	68 00 00 00 00	 push	 OFFSET FLAT:$SG187184
  00401	8d 45 b0	 lea	 eax, DWORD PTR $T188450[ebp]
  00404	50		 push	 eax
  00405	6a 00		 push	 0
  00407	8d 4d 94	 lea	 ecx, DWORD PTR $T188451[ebp]
  0040a	51		 push	 ecx
  0040b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  00411	83 c4 10	 add	 esp, 16			; 00000010H
  00414	3b f4		 cmp	 esi, esp
  00416	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0041b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0041f	8b f4		 mov	 esi, esp
  00421	8d 4d 94	 lea	 ecx, DWORD PTR $T188451[ebp]
  00424	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0042a	3b f4		 cmp	 esi, esp
  0042c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00431	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00438	8b f4		 mov	 esi, esp
  0043a	8d 4d b0	 lea	 ecx, DWORD PTR $T188450[ebp]
  0043d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00443	3b f4		 cmp	 esi, esp
  00445	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 34   : 	AfxGetMainWindow()->ShowWindow( SW_SHOW );

  0044a	6a 05		 push	 5
  0044c	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00451	8b c8		 mov	 ecx, eax
  00453	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 35   : 	m_bFullScreen = true;

  00458	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0045b	c6 42 04 01	 mov	 BYTE PTR [edx+4], 1

; 36   : 	pWndFullScreen = pWnd;

  0045f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00462	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00465	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 37   : 
; 38   : 	list<IMessageObserver*> listOb;

  00468	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  0046b	e8 00 00 00 00	 call	 ??0?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::list<IMessageObserver *,std::allocator<IMessageObserver *> >
  00470	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2

; 39   : 	AfxGetMessageManager()->QueryObservers( ID_MESSAGE_PANEL_CHANGE,listOb);

  00477	e8 00 00 00 00	 call	 ?AfxGetMessageManager@@YAPAVIMessageManager@@XZ ; AfxGetMessageManager
  0047c	89 45 88	 mov	 DWORD PTR tv86[ebp], eax
  0047f	8b f4		 mov	 esi, esp
  00481	8d 55 e0	 lea	 edx, DWORD PTR _listOb$[ebp]
  00484	52		 push	 edx
  00485	68 00 00 00 00	 push	 OFFSET FLAT:_ID_MESSAGE_PANEL_CHANGE
  0048a	8b 45 88	 mov	 eax, DWORD PTR tv86[ebp]
  0048d	8b 10		 mov	 edx, DWORD PTR [eax]
  0048f	8b 4d 88	 mov	 ecx, DWORD PTR tv86[ebp]
  00492	ff 52 0c	 call	 DWORD PTR [edx+12]
  00495	3b f4		 cmp	 esi, esp
  00497	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 40   : 	for( list<IMessageObserver*>::iterator itOb = listOb.begin();itOb != listOb.end();itOb++ )

  0049c	8d 45 d4	 lea	 eax, DWORD PTR _itOb$187681[ebp]
  0049f	50		 push	 eax
  004a0	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  004a3	e8 00 00 00 00	 call	 ?begin@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::begin
  004a8	eb 0e		 jmp	 SHORT $L187685
$L187686:
  004aa	6a 00		 push	 0
  004ac	8d 4d 90	 lea	 ecx, DWORD PTR $T188452[ebp]
  004af	51		 push	 ecx
  004b0	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187681[ebp]
  004b3	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AV012@H@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++
$L187685:
  004b8	8d 55 8c	 lea	 edx, DWORD PTR $T188453[ebp]
  004bb	52		 push	 edx
  004bc	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  004bf	e8 00 00 00 00	 call	 ?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end
  004c4	50		 push	 eax
  004c5	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187681[ebp]
  004c8	e8 00 00 00 00	 call	 ??9const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator!=
  004cd	0f b6 c0	 movzx	 eax, al
  004d0	85 c0		 test	 eax, eax
  004d2	74 41		 je	 SHORT $L187687

; 41   : 	{
; 42   : 		IPanelChangeObserver * pOb = dynamic_cast<IPanelChangeObserver*>(*itOb);

  004d4	6a 00		 push	 0
  004d6	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIPanelChangeObserver@@@8
  004db	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIMessageObserver@@@8
  004e0	6a 00		 push	 0
  004e2	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187681[ebp]
  004e5	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEAAPAVIMessageObserver@@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator*
  004ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  004ec	51		 push	 ecx
  004ed	e8 00 00 00 00	 call	 ___RTDynamicCast
  004f2	83 c4 14	 add	 esp, 20			; 00000014H
  004f5	89 45 cc	 mov	 DWORD PTR _pOb$187688[ebp], eax

; 43   : 		pOb->IPanelChangeOb_ToFullScreen( pWndFullScreen );

  004f8	8b f4		 mov	 esi, esp
  004fa	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  004fd	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00500	50		 push	 eax
  00501	8b 4d cc	 mov	 ecx, DWORD PTR _pOb$187688[ebp]
  00504	8b 11		 mov	 edx, DWORD PTR [ecx]
  00506	8b 4d cc	 mov	 ecx, DWORD PTR _pOb$187688[ebp]
  00509	ff 52 14	 call	 DWORD PTR [edx+20]
  0050c	3b f4		 cmp	 esi, esp
  0050e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 44   : 	}

  00513	eb 95		 jmp	 SHORT $L187686
$L187687:

; 45   : }

  00515	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0051c	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  0051f	e8 00 00 00 00	 call	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
  00524	52		 push	 edx
  00525	8b cd		 mov	 ecx, ebp
  00527	50		 push	 eax
  00528	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188463
  0052e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00533	58		 pop	 eax
  00534	5a		 pop	 edx
  00535	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00538	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0053f	5f		 pop	 edi
  00540	5e		 pop	 esi
  00541	83 c4 78	 add	 esp, 120		; 00000078H
  00544	3b ec		 cmp	 ebp, esp
  00546	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0054b	8b e5		 mov	 esp, ebp
  0054d	5d		 pop	 ebp
  0054e	c2 04 00	 ret	 4
$L188463:
  00551	02 00 00 00	 DD	 2
  00555	00 00 00 00	 DD	 $L188462
$L188462:
  00559	e0 ff ff ff	 DD	 -32			; ffffffe0H
  0055d	0c 00 00 00	 DD	 12			; 0000000cH
  00561	00 00 00 00	 DD	 $L188459
  00565	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00569	04 00 00 00	 DD	 4
  0056d	00 00 00 00	 DD	 $L188460
$L188460:
  00571	69		 DB	 105			; 00000069H
  00572	74		 DB	 116			; 00000074H
  00573	4f		 DB	 79			; 0000004fH
  00574	62		 DB	 98			; 00000062H
  00575	00		 DB	 0
$L188459:
  00576	6c		 DB	 108			; 0000006cH
  00577	69		 DB	 105			; 00000069H
  00578	73		 DB	 115			; 00000073H
  00579	74		 DB	 116			; 00000074H
  0057a	4f		 DB	 79			; 0000004fH
  0057b	62		 DB	 98			; 00000062H
  0057c	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188454:
  000a7	8b f4		 mov	 esi, esp
  000a9	8d 4d b0	 lea	 ecx, DWORD PTR $T188450[ebp]
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000b2	3b f4		 cmp	 esi, esp
  000b4	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188455:
  000b9	8b f4		 mov	 esi, esp
  000bb	8d 4d 94	 lea	 ecx, DWORD PTR $T188451[ebp]
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000c4	3b f4		 cmp	 esi, esp
  000c6	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188456:
  000cb	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  000ce	e9 00 00 00 00	 jmp	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
__ehhandler$?IPanelChange_ToFullScreen@CPanelChange@@UAEXPAVCWnd@@@Z:
  000d3	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188458
  000d8	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?IPanelChange_ToFullScreen@CPanelChange@@UAEXPAVCWnd@@@Z ENDP ; CPanelChange::IPanelChange_ToFullScreen
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IPanelChange_IsFullScreen@CPanelChange@@UAE_NXZ PROC NEAR ; CPanelChange::IPanelChange_IsFullScreen
; _this$ = ecx

; 48   : {

  00580	55		 push	 ebp
  00581	8b ec		 mov	 ebp, esp
  00583	51		 push	 ecx
  00584	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0058b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 49   : 	return m_bFullScreen;

  0058e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00591	8a 40 04	 mov	 al, BYTE PTR [eax+4]

; 50   : }

  00594	8b e5		 mov	 esp, ebp
  00596	5d		 pop	 ebp
  00597	c3		 ret	 0
?IPanelChange_IsFullScreen@CPanelChange@@UAE_NXZ ENDP	; CPanelChange::IPanelChange_IsFullScreen
_TEXT	ENDS
xdata$x	SEGMENT
$T188478 DD	0ffffffffH
	DD	FLAT:$L188470
$T188472 DD	019930520H
	DD	01H
	DD	FLAT:$T188478
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv70 = -64						; size = 4
$T188469 = -60						; size = 4
$T188468 = -56						; size = 4
_pOb$187707 = -52					; size = 4
_itOb$187700 = -44					; size = 4
_listOb$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?IPanelChange_ExitFullScreen@CPanelChange@@UAEXXZ PROC NEAR ; CPanelChange::IPanelChange_ExitFullScreen
; _this$ = ecx

; 53   : {

  005a0	55		 push	 ebp
  005a1	8b ec		 mov	 ebp, esp
  005a3	6a ff		 push	 -1
  005a5	68 00 00 00 00	 push	 __ehhandler$?IPanelChange_ExitFullScreen@CPanelChange@@UAEXXZ
  005aa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  005b0	50		 push	 eax
  005b1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  005b8	83 ec 34	 sub	 esp, 52			; 00000034H
  005bb	56		 push	 esi
  005bc	57		 push	 edi
  005bd	51		 push	 ecx
  005be	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  005c1	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  005c6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  005cb	f3 ab		 rep stosd
  005cd	59		 pop	 ecx
  005ce	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 54   : 	m_bFullScreen = false;

  005d1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  005d4	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0

; 55   : 
; 56   : 	list<IMessageObserver*> listOb;

  005d8	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  005db	e8 00 00 00 00	 call	 ??0?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::list<IMessageObserver *,std::allocator<IMessageObserver *> >
  005e0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 57   : 	AfxGetMessageManager()->QueryObservers( ID_MESSAGE_PANEL_CHANGE,listOb);

  005e7	e8 00 00 00 00	 call	 ?AfxGetMessageManager@@YAPAVIMessageManager@@XZ ; AfxGetMessageManager
  005ec	89 45 c0	 mov	 DWORD PTR tv70[ebp], eax
  005ef	8b f4		 mov	 esi, esp
  005f1	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  005f4	51		 push	 ecx
  005f5	68 00 00 00 00	 push	 OFFSET FLAT:_ID_MESSAGE_PANEL_CHANGE
  005fa	8b 55 c0	 mov	 edx, DWORD PTR tv70[ebp]
  005fd	8b 02		 mov	 eax, DWORD PTR [edx]
  005ff	8b 4d c0	 mov	 ecx, DWORD PTR tv70[ebp]
  00602	ff 50 0c	 call	 DWORD PTR [eax+12]
  00605	3b f4		 cmp	 esi, esp
  00607	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 58   : 	for( list<IMessageObserver*>::iterator itOb = listOb.begin();itOb != listOb.end();itOb++ )

  0060c	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187700[ebp]
  0060f	51		 push	 ecx
  00610	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00613	e8 00 00 00 00	 call	 ?begin@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::begin
  00618	eb 0e		 jmp	 SHORT $L187704
$L187705:
  0061a	6a 00		 push	 0
  0061c	8d 55 c8	 lea	 edx, DWORD PTR $T188468[ebp]
  0061f	52		 push	 edx
  00620	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187700[ebp]
  00623	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AV012@H@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++
$L187704:
  00628	8d 45 c4	 lea	 eax, DWORD PTR $T188469[ebp]
  0062b	50		 push	 eax
  0062c	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  0062f	e8 00 00 00 00	 call	 ?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end
  00634	50		 push	 eax
  00635	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187700[ebp]
  00638	e8 00 00 00 00	 call	 ??9const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator!=
  0063d	0f b6 c8	 movzx	 ecx, al
  00640	85 c9		 test	 ecx, ecx
  00642	74 41		 je	 SHORT $L187706

; 59   : 	{
; 60   : 		IPanelChangeObserver * pOb = dynamic_cast<IPanelChangeObserver*>(*itOb);

  00644	6a 00		 push	 0
  00646	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIPanelChangeObserver@@@8
  0064b	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIMessageObserver@@@8
  00650	6a 00		 push	 0
  00652	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187700[ebp]
  00655	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEAAPAVIMessageObserver@@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator*
  0065a	8b 10		 mov	 edx, DWORD PTR [eax]
  0065c	52		 push	 edx
  0065d	e8 00 00 00 00	 call	 ___RTDynamicCast
  00662	83 c4 14	 add	 esp, 20			; 00000014H
  00665	89 45 cc	 mov	 DWORD PTR _pOb$187707[ebp], eax

; 61   : 		pOb->IPanelChangeOb_ExitFullScreen( pWndFullScreen );

  00668	8b f4		 mov	 esi, esp
  0066a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0066d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00670	51		 push	 ecx
  00671	8b 55 cc	 mov	 edx, DWORD PTR _pOb$187707[ebp]
  00674	8b 02		 mov	 eax, DWORD PTR [edx]
  00676	8b 4d cc	 mov	 ecx, DWORD PTR _pOb$187707[ebp]
  00679	ff 50 18	 call	 DWORD PTR [eax+24]
  0067c	3b f4		 cmp	 esi, esp
  0067e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 62   : 	}

  00683	eb 95		 jmp	 SHORT $L187705
$L187706:

; 63   : 	pWndFullScreen = NULL;

  00685	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00688	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 64   : }

  0068f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00696	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00699	e8 00 00 00 00	 call	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
  0069e	52		 push	 edx
  0069f	8b cd		 mov	 ecx, ebp
  006a1	50		 push	 eax
  006a2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188477
  006a8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  006ad	58		 pop	 eax
  006ae	5a		 pop	 edx
  006af	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  006b2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  006b9	5f		 pop	 edi
  006ba	5e		 pop	 esi
  006bb	83 c4 40	 add	 esp, 64			; 00000040H
  006be	3b ec		 cmp	 ebp, esp
  006c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006c5	8b e5		 mov	 esp, ebp
  006c7	5d		 pop	 ebp
  006c8	c3		 ret	 0
$L188477:
  006c9	02 00 00 00	 DD	 2
  006cd	00 00 00 00	 DD	 $L188476
$L188476:
  006d1	e0 ff ff ff	 DD	 -32			; ffffffe0H
  006d5	0c 00 00 00	 DD	 12			; 0000000cH
  006d9	00 00 00 00	 DD	 $L188473
  006dd	d4 ff ff ff	 DD	 -44			; ffffffd4H
  006e1	04 00 00 00	 DD	 4
  006e5	00 00 00 00	 DD	 $L188474
$L188474:
  006e9	69		 DB	 105			; 00000069H
  006ea	74		 DB	 116			; 00000074H
  006eb	4f		 DB	 79			; 0000004fH
  006ec	62		 DB	 98			; 00000062H
  006ed	00		 DB	 0
$L188473:
  006ee	6c		 DB	 108			; 0000006cH
  006ef	69		 DB	 105			; 00000069H
  006f0	73		 DB	 115			; 00000073H
  006f1	74		 DB	 116			; 00000074H
  006f2	4f		 DB	 79			; 0000004fH
  006f3	62		 DB	 98			; 00000062H
  006f4	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188470:
  000dd	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  000e0	e9 00 00 00 00	 jmp	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
__ehhandler$?IPanelChange_ExitFullScreen@CPanelChange@@UAEXXZ:
  000e5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188472
  000ea	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?IPanelChange_ExitFullScreen@CPanelChange@@UAEXXZ ENDP	; CPanelChange::IPanelChange_ExitFullScreen
xdata$x	SEGMENT
$T188491 DD	0ffffffffH
	DD	FLAT:$L188483
$T188485 DD	019930520H
	DD	01H
	DD	FLAT:$T188491
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv69 = -68						; size = 4
$T188482 = -61						; size = 1
$T188481 = -60						; size = 4
$T188480 = -56						; size = 4
_pOb$187722 = -52					; size = 4
_itOb$187715 = -44					; size = 4
_listOb$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?IPanelChange_Max@CPanelChange@@UAE_NXZ PROC NEAR	; CPanelChange::IPanelChange_Max
; _this$ = ecx

; 67   : {

  00700	55		 push	 ebp
  00701	8b ec		 mov	 ebp, esp
  00703	6a ff		 push	 -1
  00705	68 00 00 00 00	 push	 __ehhandler$?IPanelChange_Max@CPanelChange@@UAE_NXZ
  0070a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00710	50		 push	 eax
  00711	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00718	83 ec 38	 sub	 esp, 56			; 00000038H
  0071b	56		 push	 esi
  0071c	57		 push	 edi
  0071d	51		 push	 ecx
  0071e	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00721	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00726	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0072b	f3 ab		 rep stosd
  0072d	59		 pop	 ecx
  0072e	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 68   : 	list<IMessageObserver*> listOb;

  00731	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00734	e8 00 00 00 00	 call	 ??0?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::list<IMessageObserver *,std::allocator<IMessageObserver *> >
  00739	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 69   : 	AfxGetMessageManager()->QueryObservers( ID_MESSAGE_PANEL_CHANGE,listOb);

  00740	e8 00 00 00 00	 call	 ?AfxGetMessageManager@@YAPAVIMessageManager@@XZ ; AfxGetMessageManager
  00745	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  00748	8b f4		 mov	 esi, esp
  0074a	8d 45 e0	 lea	 eax, DWORD PTR _listOb$[ebp]
  0074d	50		 push	 eax
  0074e	68 00 00 00 00	 push	 OFFSET FLAT:_ID_MESSAGE_PANEL_CHANGE
  00753	8b 4d bc	 mov	 ecx, DWORD PTR tv69[ebp]
  00756	8b 11		 mov	 edx, DWORD PTR [ecx]
  00758	8b 4d bc	 mov	 ecx, DWORD PTR tv69[ebp]
  0075b	ff 52 0c	 call	 DWORD PTR [edx+12]
  0075e	3b f4		 cmp	 esi, esp
  00760	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 70   : 	for( list<IMessageObserver*>::iterator itOb = listOb.begin();itOb != listOb.end();itOb++ )

  00765	8d 45 d4	 lea	 eax, DWORD PTR _itOb$187715[ebp]
  00768	50		 push	 eax
  00769	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  0076c	e8 00 00 00 00	 call	 ?begin@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::begin
  00771	eb 0e		 jmp	 SHORT $L187719
$L187720:
  00773	6a 00		 push	 0
  00775	8d 4d c8	 lea	 ecx, DWORD PTR $T188480[ebp]
  00778	51		 push	 ecx
  00779	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187715[ebp]
  0077c	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AV012@H@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++
$L187719:
  00781	8d 55 c4	 lea	 edx, DWORD PTR $T188481[ebp]
  00784	52		 push	 edx
  00785	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00788	e8 00 00 00 00	 call	 ?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end
  0078d	50		 push	 eax
  0078e	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187715[ebp]
  00791	e8 00 00 00 00	 call	 ??9const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator!=
  00796	0f b6 c0	 movzx	 eax, al
  00799	85 c0		 test	 eax, eax
  0079b	74 3a		 je	 SHORT $L187721

; 71   : 	{
; 72   : 		IPanelChangeObserver * pOb = dynamic_cast<IPanelChangeObserver*>(*itOb);

  0079d	6a 00		 push	 0
  0079f	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIPanelChangeObserver@@@8
  007a4	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIMessageObserver@@@8
  007a9	6a 00		 push	 0
  007ab	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187715[ebp]
  007ae	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEAAPAVIMessageObserver@@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator*
  007b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  007b5	51		 push	 ecx
  007b6	e8 00 00 00 00	 call	 ___RTDynamicCast
  007bb	83 c4 14	 add	 esp, 20			; 00000014H
  007be	89 45 cc	 mov	 DWORD PTR _pOb$187722[ebp], eax

; 73   : 		pOb->IPanelChangeOb_WindowMax();

  007c1	8b 55 cc	 mov	 edx, DWORD PTR _pOb$187722[ebp]
  007c4	8b 02		 mov	 eax, DWORD PTR [edx]
  007c6	8b f4		 mov	 esi, esp
  007c8	8b 4d cc	 mov	 ecx, DWORD PTR _pOb$187722[ebp]
  007cb	ff 50 04	 call	 DWORD PTR [eax+4]
  007ce	3b f4		 cmp	 esi, esp
  007d0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 74   : 	}

  007d5	eb 9c		 jmp	 SHORT $L187720
$L187721:

; 75   : 	return true;

  007d7	c6 45 c3 01	 mov	 BYTE PTR $T188482[ebp], 1
  007db	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  007e2	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  007e5	e8 00 00 00 00	 call	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
  007ea	8a 45 c3	 mov	 al, BYTE PTR $T188482[ebp]

; 76   : }

  007ed	52		 push	 edx
  007ee	8b cd		 mov	 ecx, ebp
  007f0	50		 push	 eax
  007f1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188490
  007f7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  007fc	58		 pop	 eax
  007fd	5a		 pop	 edx
  007fe	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00801	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00808	5f		 pop	 edi
  00809	5e		 pop	 esi
  0080a	83 c4 44	 add	 esp, 68			; 00000044H
  0080d	3b ec		 cmp	 ebp, esp
  0080f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00814	8b e5		 mov	 esp, ebp
  00816	5d		 pop	 ebp
  00817	c3		 ret	 0
$L188490:
  00818	02 00 00 00	 DD	 2
  0081c	00 00 00 00	 DD	 $L188489
$L188489:
  00820	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00824	0c 00 00 00	 DD	 12			; 0000000cH
  00828	00 00 00 00	 DD	 $L188486
  0082c	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00830	04 00 00 00	 DD	 4
  00834	00 00 00 00	 DD	 $L188487
$L188487:
  00838	69		 DB	 105			; 00000069H
  00839	74		 DB	 116			; 00000074H
  0083a	4f		 DB	 79			; 0000004fH
  0083b	62		 DB	 98			; 00000062H
  0083c	00		 DB	 0
$L188486:
  0083d	6c		 DB	 108			; 0000006cH
  0083e	69		 DB	 105			; 00000069H
  0083f	73		 DB	 115			; 00000073H
  00840	74		 DB	 116			; 00000074H
  00841	4f		 DB	 79			; 0000004fH
  00842	62		 DB	 98			; 00000062H
  00843	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188483:
  000ef	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  000f2	e9 00 00 00 00	 jmp	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
__ehhandler$?IPanelChange_Max@CPanelChange@@UAE_NXZ:
  000f7	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188485
  000fc	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?IPanelChange_Max@CPanelChange@@UAE_NXZ ENDP		; CPanelChange::IPanelChange_Max
xdata$x	SEGMENT
$T188504 DD	0ffffffffH
	DD	FLAT:$L188496
$T188498 DD	019930520H
	DD	01H
	DD	FLAT:$T188504
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv69 = -68						; size = 4
$T188495 = -61						; size = 1
$T188494 = -60						; size = 4
$T188493 = -56						; size = 4
_pOb$187738 = -52					; size = 4
_itOb$187731 = -44					; size = 4
_listOb$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?IPanelChange_Min@CPanelChange@@UAE_NXZ PROC NEAR	; CPanelChange::IPanelChange_Min
; _this$ = ecx

; 79   : {

  00850	55		 push	 ebp
  00851	8b ec		 mov	 ebp, esp
  00853	6a ff		 push	 -1
  00855	68 00 00 00 00	 push	 __ehhandler$?IPanelChange_Min@CPanelChange@@UAE_NXZ
  0085a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00860	50		 push	 eax
  00861	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00868	83 ec 38	 sub	 esp, 56			; 00000038H
  0086b	56		 push	 esi
  0086c	57		 push	 edi
  0086d	51		 push	 ecx
  0086e	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00871	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00876	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0087b	f3 ab		 rep stosd
  0087d	59		 pop	 ecx
  0087e	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : 	list<IMessageObserver*> listOb;

  00881	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00884	e8 00 00 00 00	 call	 ??0?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::list<IMessageObserver *,std::allocator<IMessageObserver *> >
  00889	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 81   : 	AfxGetMessageManager()->QueryObservers( ID_MESSAGE_PANEL_CHANGE,listOb);

  00890	e8 00 00 00 00	 call	 ?AfxGetMessageManager@@YAPAVIMessageManager@@XZ ; AfxGetMessageManager
  00895	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  00898	8b f4		 mov	 esi, esp
  0089a	8d 45 e0	 lea	 eax, DWORD PTR _listOb$[ebp]
  0089d	50		 push	 eax
  0089e	68 00 00 00 00	 push	 OFFSET FLAT:_ID_MESSAGE_PANEL_CHANGE
  008a3	8b 4d bc	 mov	 ecx, DWORD PTR tv69[ebp]
  008a6	8b 11		 mov	 edx, DWORD PTR [ecx]
  008a8	8b 4d bc	 mov	 ecx, DWORD PTR tv69[ebp]
  008ab	ff 52 0c	 call	 DWORD PTR [edx+12]
  008ae	3b f4		 cmp	 esi, esp
  008b0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 82   : 	for( list<IMessageObserver*>::iterator itOb = listOb.begin();itOb != listOb.end();itOb++ )

  008b5	8d 45 d4	 lea	 eax, DWORD PTR _itOb$187731[ebp]
  008b8	50		 push	 eax
  008b9	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  008bc	e8 00 00 00 00	 call	 ?begin@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::begin
  008c1	eb 0e		 jmp	 SHORT $L187735
$L187736:
  008c3	6a 00		 push	 0
  008c5	8d 4d c8	 lea	 ecx, DWORD PTR $T188493[ebp]
  008c8	51		 push	 ecx
  008c9	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187731[ebp]
  008cc	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AV012@H@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++
$L187735:
  008d1	8d 55 c4	 lea	 edx, DWORD PTR $T188494[ebp]
  008d4	52		 push	 edx
  008d5	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  008d8	e8 00 00 00 00	 call	 ?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end
  008dd	50		 push	 eax
  008de	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187731[ebp]
  008e1	e8 00 00 00 00	 call	 ??9const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator!=
  008e6	0f b6 c0	 movzx	 eax, al
  008e9	85 c0		 test	 eax, eax
  008eb	74 3a		 je	 SHORT $L187737

; 83   : 	{
; 84   : 		IPanelChangeObserver * pOb = dynamic_cast<IPanelChangeObserver*>(*itOb);

  008ed	6a 00		 push	 0
  008ef	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIPanelChangeObserver@@@8
  008f4	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIMessageObserver@@@8
  008f9	6a 00		 push	 0
  008fb	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187731[ebp]
  008fe	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEAAPAVIMessageObserver@@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator*
  00903	8b 08		 mov	 ecx, DWORD PTR [eax]
  00905	51		 push	 ecx
  00906	e8 00 00 00 00	 call	 ___RTDynamicCast
  0090b	83 c4 14	 add	 esp, 20			; 00000014H
  0090e	89 45 cc	 mov	 DWORD PTR _pOb$187738[ebp], eax

; 85   : 		pOb->IPanelChangeOb_WindowMin();

  00911	8b 55 cc	 mov	 edx, DWORD PTR _pOb$187738[ebp]
  00914	8b 02		 mov	 eax, DWORD PTR [edx]
  00916	8b f4		 mov	 esi, esp
  00918	8b 4d cc	 mov	 ecx, DWORD PTR _pOb$187738[ebp]
  0091b	ff 50 08	 call	 DWORD PTR [eax+8]
  0091e	3b f4		 cmp	 esi, esp
  00920	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 86   : 	}

  00925	eb 9c		 jmp	 SHORT $L187736
$L187737:

; 87   : 	return true;

  00927	c6 45 c3 01	 mov	 BYTE PTR $T188495[ebp], 1
  0092b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00932	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00935	e8 00 00 00 00	 call	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
  0093a	8a 45 c3	 mov	 al, BYTE PTR $T188495[ebp]

; 88   : }

  0093d	52		 push	 edx
  0093e	8b cd		 mov	 ecx, ebp
  00940	50		 push	 eax
  00941	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188503
  00947	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0094c	58		 pop	 eax
  0094d	5a		 pop	 edx
  0094e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00951	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00958	5f		 pop	 edi
  00959	5e		 pop	 esi
  0095a	83 c4 44	 add	 esp, 68			; 00000044H
  0095d	3b ec		 cmp	 ebp, esp
  0095f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00964	8b e5		 mov	 esp, ebp
  00966	5d		 pop	 ebp
  00967	c3		 ret	 0
$L188503:
  00968	02 00 00 00	 DD	 2
  0096c	00 00 00 00	 DD	 $L188502
$L188502:
  00970	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00974	0c 00 00 00	 DD	 12			; 0000000cH
  00978	00 00 00 00	 DD	 $L188499
  0097c	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00980	04 00 00 00	 DD	 4
  00984	00 00 00 00	 DD	 $L188500
$L188500:
  00988	69		 DB	 105			; 00000069H
  00989	74		 DB	 116			; 00000074H
  0098a	4f		 DB	 79			; 0000004fH
  0098b	62		 DB	 98			; 00000062H
  0098c	00		 DB	 0
$L188499:
  0098d	6c		 DB	 108			; 0000006cH
  0098e	69		 DB	 105			; 00000069H
  0098f	73		 DB	 115			; 00000073H
  00990	74		 DB	 116			; 00000074H
  00991	4f		 DB	 79			; 0000004fH
  00992	62		 DB	 98			; 00000062H
  00993	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188496:
  00101	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00104	e9 00 00 00 00	 jmp	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
__ehhandler$?IPanelChange_Min@CPanelChange@@UAE_NXZ:
  00109	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188498
  0010e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?IPanelChange_Min@CPanelChange@@UAE_NXZ ENDP		; CPanelChange::IPanelChange_Min
xdata$x	SEGMENT
$T188517 DD	0ffffffffH
	DD	FLAT:$L188509
$T188511 DD	019930520H
	DD	01H
	DD	FLAT:$T188517
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv69 = -68						; size = 4
$T188508 = -61						; size = 1
$T188507 = -60						; size = 4
$T188506 = -56						; size = 4
_pOb$187754 = -52					; size = 4
_itOb$187747 = -44					; size = 4
_listOb$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?IPanelChange_Restore@CPanelChange@@UAE_NXZ PROC NEAR	; CPanelChange::IPanelChange_Restore
; _this$ = ecx

; 91   : {

  009a0	55		 push	 ebp
  009a1	8b ec		 mov	 ebp, esp
  009a3	6a ff		 push	 -1
  009a5	68 00 00 00 00	 push	 __ehhandler$?IPanelChange_Restore@CPanelChange@@UAE_NXZ
  009aa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  009b0	50		 push	 eax
  009b1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  009b8	83 ec 38	 sub	 esp, 56			; 00000038H
  009bb	56		 push	 esi
  009bc	57		 push	 edi
  009bd	51		 push	 ecx
  009be	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  009c1	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  009c6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  009cb	f3 ab		 rep stosd
  009cd	59		 pop	 ecx
  009ce	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 92   : 	list<IMessageObserver*> listOb;

  009d1	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  009d4	e8 00 00 00 00	 call	 ??0?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::list<IMessageObserver *,std::allocator<IMessageObserver *> >
  009d9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 93   : 	AfxGetMessageManager()->QueryObservers( ID_MESSAGE_PANEL_CHANGE,listOb);

  009e0	e8 00 00 00 00	 call	 ?AfxGetMessageManager@@YAPAVIMessageManager@@XZ ; AfxGetMessageManager
  009e5	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  009e8	8b f4		 mov	 esi, esp
  009ea	8d 45 e0	 lea	 eax, DWORD PTR _listOb$[ebp]
  009ed	50		 push	 eax
  009ee	68 00 00 00 00	 push	 OFFSET FLAT:_ID_MESSAGE_PANEL_CHANGE
  009f3	8b 4d bc	 mov	 ecx, DWORD PTR tv69[ebp]
  009f6	8b 11		 mov	 edx, DWORD PTR [ecx]
  009f8	8b 4d bc	 mov	 ecx, DWORD PTR tv69[ebp]
  009fb	ff 52 0c	 call	 DWORD PTR [edx+12]
  009fe	3b f4		 cmp	 esi, esp
  00a00	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 94   : 	for( list<IMessageObserver*>::iterator itOb = listOb.begin();itOb != listOb.end();itOb++ )

  00a05	8d 45 d4	 lea	 eax, DWORD PTR _itOb$187747[ebp]
  00a08	50		 push	 eax
  00a09	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00a0c	e8 00 00 00 00	 call	 ?begin@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::begin
  00a11	eb 0e		 jmp	 SHORT $L187751
$L187752:
  00a13	6a 00		 push	 0
  00a15	8d 4d c8	 lea	 ecx, DWORD PTR $T188506[ebp]
  00a18	51		 push	 ecx
  00a19	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187747[ebp]
  00a1c	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AV012@H@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++
$L187751:
  00a21	8d 55 c4	 lea	 edx, DWORD PTR $T188507[ebp]
  00a24	52		 push	 edx
  00a25	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00a28	e8 00 00 00 00	 call	 ?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end
  00a2d	50		 push	 eax
  00a2e	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187747[ebp]
  00a31	e8 00 00 00 00	 call	 ??9const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator!=
  00a36	0f b6 c0	 movzx	 eax, al
  00a39	85 c0		 test	 eax, eax
  00a3b	74 3a		 je	 SHORT $L187753

; 95   : 	{
; 96   : 		IPanelChangeObserver * pOb = dynamic_cast<IPanelChangeObserver*>(*itOb);

  00a3d	6a 00		 push	 0
  00a3f	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIPanelChangeObserver@@@8
  00a44	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIMessageObserver@@@8
  00a49	6a 00		 push	 0
  00a4b	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187747[ebp]
  00a4e	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEAAPAVIMessageObserver@@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator*
  00a53	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a55	51		 push	 ecx
  00a56	e8 00 00 00 00	 call	 ___RTDynamicCast
  00a5b	83 c4 14	 add	 esp, 20			; 00000014H
  00a5e	89 45 cc	 mov	 DWORD PTR _pOb$187754[ebp], eax

; 97   : 		pOb->IPanelChangeOb_WindowRestore();

  00a61	8b 55 cc	 mov	 edx, DWORD PTR _pOb$187754[ebp]
  00a64	8b 02		 mov	 eax, DWORD PTR [edx]
  00a66	8b f4		 mov	 esi, esp
  00a68	8b 4d cc	 mov	 ecx, DWORD PTR _pOb$187754[ebp]
  00a6b	ff 50 0c	 call	 DWORD PTR [eax+12]
  00a6e	3b f4		 cmp	 esi, esp
  00a70	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 98   : 	}

  00a75	eb 9c		 jmp	 SHORT $L187752
$L187753:

; 99   : 	return true;

  00a77	c6 45 c3 01	 mov	 BYTE PTR $T188508[ebp], 1
  00a7b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a82	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00a85	e8 00 00 00 00	 call	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
  00a8a	8a 45 c3	 mov	 al, BYTE PTR $T188508[ebp]

; 100  : }

  00a8d	52		 push	 edx
  00a8e	8b cd		 mov	 ecx, ebp
  00a90	50		 push	 eax
  00a91	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188516
  00a97	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00a9c	58		 pop	 eax
  00a9d	5a		 pop	 edx
  00a9e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00aa1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00aa8	5f		 pop	 edi
  00aa9	5e		 pop	 esi
  00aaa	83 c4 44	 add	 esp, 68			; 00000044H
  00aad	3b ec		 cmp	 ebp, esp
  00aaf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ab4	8b e5		 mov	 esp, ebp
  00ab6	5d		 pop	 ebp
  00ab7	c3		 ret	 0
$L188516:
  00ab8	02 00 00 00	 DD	 2
  00abc	00 00 00 00	 DD	 $L188515
$L188515:
  00ac0	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00ac4	0c 00 00 00	 DD	 12			; 0000000cH
  00ac8	00 00 00 00	 DD	 $L188512
  00acc	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00ad0	04 00 00 00	 DD	 4
  00ad4	00 00 00 00	 DD	 $L188513
$L188513:
  00ad8	69		 DB	 105			; 00000069H
  00ad9	74		 DB	 116			; 00000074H
  00ada	4f		 DB	 79			; 0000004fH
  00adb	62		 DB	 98			; 00000062H
  00adc	00		 DB	 0
$L188512:
  00add	6c		 DB	 108			; 0000006cH
  00ade	69		 DB	 105			; 00000069H
  00adf	73		 DB	 115			; 00000073H
  00ae0	74		 DB	 116			; 00000074H
  00ae1	4f		 DB	 79			; 0000004fH
  00ae2	62		 DB	 98			; 00000062H
  00ae3	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188509:
  00113	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00116	e9 00 00 00 00	 jmp	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
__ehhandler$?IPanelChange_Restore@CPanelChange@@UAE_NXZ:
  0011b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188511
  00120	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?IPanelChange_Restore@CPanelChange@@UAE_NXZ ENDP	; CPanelChange::IPanelChange_Restore
xdata$x	SEGMENT
$T188529 DD	0ffffffffH
	DD	FLAT:$L188521
$T188523 DD	019930520H
	DD	01H
	DD	FLAT:$T188529
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv69 = -64						; size = 4
$T188520 = -60						; size = 4
$T188519 = -56						; size = 4
_pOb$187770 = -52					; size = 4
_itOb$187763 = -44					; size = 4
_listOb$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?IPanelChange_Close@CPanelChange@@UAEXXZ PROC NEAR	; CPanelChange::IPanelChange_Close
; _this$ = ecx

; 103  : {

  00af0	55		 push	 ebp
  00af1	8b ec		 mov	 ebp, esp
  00af3	6a ff		 push	 -1
  00af5	68 00 00 00 00	 push	 __ehhandler$?IPanelChange_Close@CPanelChange@@UAEXXZ
  00afa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00b00	50		 push	 eax
  00b01	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00b08	83 ec 34	 sub	 esp, 52			; 00000034H
  00b0b	56		 push	 esi
  00b0c	57		 push	 edi
  00b0d	51		 push	 ecx
  00b0e	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  00b11	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  00b16	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00b1b	f3 ab		 rep stosd
  00b1d	59		 pop	 ecx
  00b1e	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 104  : 	list<IMessageObserver*> listOb;

  00b21	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00b24	e8 00 00 00 00	 call	 ??0?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::list<IMessageObserver *,std::allocator<IMessageObserver *> >
  00b29	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  : 	AfxGetMessageManager()->QueryObservers( ID_MESSAGE_PANEL_CHANGE,listOb);

  00b30	e8 00 00 00 00	 call	 ?AfxGetMessageManager@@YAPAVIMessageManager@@XZ ; AfxGetMessageManager
  00b35	89 45 c0	 mov	 DWORD PTR tv69[ebp], eax
  00b38	8b f4		 mov	 esi, esp
  00b3a	8d 45 e0	 lea	 eax, DWORD PTR _listOb$[ebp]
  00b3d	50		 push	 eax
  00b3e	68 00 00 00 00	 push	 OFFSET FLAT:_ID_MESSAGE_PANEL_CHANGE
  00b43	8b 4d c0	 mov	 ecx, DWORD PTR tv69[ebp]
  00b46	8b 11		 mov	 edx, DWORD PTR [ecx]
  00b48	8b 4d c0	 mov	 ecx, DWORD PTR tv69[ebp]
  00b4b	ff 52 0c	 call	 DWORD PTR [edx+12]
  00b4e	3b f4		 cmp	 esi, esp
  00b50	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 106  : 	for( list<IMessageObserver*>::iterator itOb = listOb.begin();itOb != listOb.end();itOb++ )

  00b55	8d 45 d4	 lea	 eax, DWORD PTR _itOb$187763[ebp]
  00b58	50		 push	 eax
  00b59	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00b5c	e8 00 00 00 00	 call	 ?begin@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::begin
  00b61	eb 0e		 jmp	 SHORT $L187767
$L187768:
  00b63	6a 00		 push	 0
  00b65	8d 4d c8	 lea	 ecx, DWORD PTR $T188519[ebp]
  00b68	51		 push	 ecx
  00b69	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187763[ebp]
  00b6c	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AV012@H@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++
$L187767:
  00b71	8d 55 c4	 lea	 edx, DWORD PTR $T188520[ebp]
  00b74	52		 push	 edx
  00b75	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00b78	e8 00 00 00 00	 call	 ?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end
  00b7d	50		 push	 eax
  00b7e	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187763[ebp]
  00b81	e8 00 00 00 00	 call	 ??9const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator!=
  00b86	0f b6 c0	 movzx	 eax, al
  00b89	85 c0		 test	 eax, eax
  00b8b	74 3a		 je	 SHORT $L187769

; 107  : 	{
; 108  : 		IPanelChangeObserver * pOb = dynamic_cast<IPanelChangeObserver*>(*itOb);

  00b8d	6a 00		 push	 0
  00b8f	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIPanelChangeObserver@@@8
  00b94	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVIMessageObserver@@@8
  00b99	6a 00		 push	 0
  00b9b	8d 4d d4	 lea	 ecx, DWORD PTR _itOb$187763[ebp]
  00b9e	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEAAPAVIMessageObserver@@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator*
  00ba3	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ba5	51		 push	 ecx
  00ba6	e8 00 00 00 00	 call	 ___RTDynamicCast
  00bab	83 c4 14	 add	 esp, 20			; 00000014H
  00bae	89 45 cc	 mov	 DWORD PTR _pOb$187770[ebp], eax

; 109  : 		pOb->IPanelChangeOb_WindowClose();

  00bb1	8b 55 cc	 mov	 edx, DWORD PTR _pOb$187770[ebp]
  00bb4	8b 02		 mov	 eax, DWORD PTR [edx]
  00bb6	8b f4		 mov	 esi, esp
  00bb8	8b 4d cc	 mov	 ecx, DWORD PTR _pOb$187770[ebp]
  00bbb	ff 50 10	 call	 DWORD PTR [eax+16]
  00bbe	3b f4		 cmp	 esi, esp
  00bc0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 110  : 	}

  00bc5	eb 9c		 jmp	 SHORT $L187768
$L187769:

; 111  : }

  00bc7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00bce	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00bd1	e8 00 00 00 00	 call	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
  00bd6	52		 push	 edx
  00bd7	8b cd		 mov	 ecx, ebp
  00bd9	50		 push	 eax
  00bda	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188528
  00be0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00be5	58		 pop	 eax
  00be6	5a		 pop	 edx
  00be7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00bea	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00bf1	5f		 pop	 edi
  00bf2	5e		 pop	 esi
  00bf3	83 c4 40	 add	 esp, 64			; 00000040H
  00bf6	3b ec		 cmp	 ebp, esp
  00bf8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bfd	8b e5		 mov	 esp, ebp
  00bff	5d		 pop	 ebp
  00c00	c3		 ret	 0
$L188528:
  00c01	02 00 00 00	 DD	 2
  00c05	00 00 00 00	 DD	 $L188527
$L188527:
  00c09	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00c0d	0c 00 00 00	 DD	 12			; 0000000cH
  00c11	00 00 00 00	 DD	 $L188524
  00c15	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00c19	04 00 00 00	 DD	 4
  00c1d	00 00 00 00	 DD	 $L188525
$L188525:
  00c21	69		 DB	 105			; 00000069H
  00c22	74		 DB	 116			; 00000074H
  00c23	4f		 DB	 79			; 0000004fH
  00c24	62		 DB	 98			; 00000062H
  00c25	00		 DB	 0
$L188524:
  00c26	6c		 DB	 108			; 0000006cH
  00c27	69		 DB	 105			; 00000069H
  00c28	73		 DB	 115			; 00000073H
  00c29	74		 DB	 116			; 00000074H
  00c2a	4f		 DB	 79			; 0000004fH
  00c2b	62		 DB	 98			; 00000062H
  00c2c	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188521:
  00125	8d 4d e0	 lea	 ecx, DWORD PTR _listOb$[ebp]
  00128	e9 00 00 00 00	 jmp	 ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
__ehhandler$?IPanelChange_Close@CPanelChange@@UAEXXZ:
  0012d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188523
  00132	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?IPanelChange_Close@CPanelChange@@UAEXXZ ENDP		; CPanelChange::IPanelChange_Close
PUBLIC	??0?$_List_val@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z ; std::_List_val<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_val<IMessageObserver *,std::allocator<IMessageObserver *> >
PUBLIC	?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Buynode
PUBLIC	??0?$allocator@PAVIMessageObserver@@@std@@QAE@XZ ; std::allocator<IMessageObserver *>::allocator<IMessageObserver *>
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
;	COMDAT ??0?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::list<IMessageObserver *,std::allocator<IMessageObserver *> >, COMDAT
; _this$ = ecx

; 280  : 		{	// construct empty list

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	51		 push	 ecx
  00018	8b cc		 mov	 ecx, esp
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@PAVIMessageObserver@@@std@@QAE@XZ ; std::allocator<IMessageObserver *>::allocator<IMessageObserver *>
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ??0?$_List_val@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z ; std::_List_val<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_val<IMessageObserver *,std::allocator<IMessageObserver *> >
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Buynode
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 281  : 		}

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 c4 08	 add	 esp, 8
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
??0?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::list<IMessageObserver *,std::allocator<IMessageObserver *> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXXZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Tidy
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >, COMDAT
; _this$ = ecx

; 364  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 365  : 		_Tidy();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXXZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Tidy

; 366  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@XZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::~list<IMessageObserver *,std::allocator<IMessageObserver *> >
_TEXT	ENDS
PUBLIC	?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
PUBLIC	??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::iterator
; Function compile flags: /Odt /RTCsu
;	COMDAT ?begin@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::begin, COMDAT
; _this$ = ecx

; 376  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 377  : 		return (iterator(_Nextnode(_Myhead)));

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
  0001a	83 c4 04	 add	 esp, 4
  0001d	8b 10		 mov	 edx, DWORD PTR [eax]
  0001f	52		 push	 edx
  00020	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::iterator
  00028	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 378  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?begin@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::begin
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end, COMDAT
; _this$ = ecx

; 386  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 387  : 		return (iterator(_Myhead));

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00014	51		 push	 ecx
  00015	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00018	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::iterator
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 388  : 		}

  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?end@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::end
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEABQAVIMessageObserver@@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator*
; Function compile flags: /Odt /RTCsu
;	COMDAT ??Diterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEAAPAVIMessageObserver@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Diterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEAAPAVIMessageObserver@@XZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 239  : 			{	// return designated value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 240  : 			return ((reference)**(const_iterator *)this);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??Dconst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEABQAVIMessageObserver@@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator*

; 241  : 			}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??Diterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEAAPAVIMessageObserver@@XZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++
; Function compile flags: /Odt /RTCsu
;	COMDAT ??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
__Tmp$ = -12						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++, COMDAT
; _this$ = ecx

; 255  : 			{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 256  : 			iterator _Tmp = *this;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	89 4d f4	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 257  : 			++*this;

  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++

; 258  : 			return (_Tmp);

  0002a	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0002d	8b 45 f4	 mov	 eax, DWORD PTR __Tmp$[ebp]
  00030	89 02		 mov	 DWORD PTR [edx], eax
  00032	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 259  : 			}

  00035	52		 push	 edx
  00036	8b cd		 mov	 ecx, ebp
  00038	50		 push	 eax
  00039	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188539
  0003f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00044	58		 pop	 eax
  00045	5a		 pop	 edx
  00046	83 c4 10	 add	 esp, 16			; 00000010H
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
$L188539:
  00056	01 00 00 00	 DD	 1
  0005a	00 00 00 00	 DD	 $L188538
$L188538:
  0005e	f4 ff ff ff	 DD	 -12			; fffffff4H
  00062	04 00 00 00	 DD	 4
  00066	00 00 00 00	 DD	 $L188537
$L188537:
  0006a	5f		 DB	 95			; 0000005fH
  0006b	54		 DB	 84			; 00000054H
  0006c	6d		 DB	 109			; 0000006dH
  0006d	70		 DB	 112			; 00000070H
  0006e	00		 DB	 0
??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE?AV012@H@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??8const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator==
; Function compile flags: /Odt /RTCsu
;	COMDAT ??9const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 201  : 			{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 202  : 			return (!(*this == _Right));

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??8const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator==
  0001a	0f b6 c0	 movzx	 eax, al
  0001d	f7 d8		 neg	 eax
  0001f	1b c0		 sbb	 eax, eax
  00021	40		 inc	 eax

; 203  : 			}

  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??9const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator!=
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode, COMDAT

; 107  : 		{	// return reference to successor pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 108  : 		return ((_Nodepref)(*_Pnode)._Next);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 109  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
_TEXT	ENDS
PUBLIC	?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::deallocate
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocate
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::construct
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::destroy
EXTRN	__CxxThrowException@8:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T188552 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T188554 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L188545
$T188553 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T188554
$T188547 DD	019930520H
	DD	02H
	DD	FLAT:$T188552
	DD	01H
	DD	FLAT:$T188553
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@XZ
_TEXT	SEGMENT
tv93 = -44						; size = 4
tv92 = -40						; size = 4
__Linkcnt$ = -36					; size = 4
__Pnode$ = -28						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@XZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Buynode, COMDAT
; _this$ = ecx

; 898  : 		{	// allocate a head node and set links

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001c	53		 push	 ebx
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00027	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0002a	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0002d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00030	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00033	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00036	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00039	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 899  : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

  0003f	6a 01		 push	 1
  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocate
  00049	89 45 e4	 mov	 DWORD PTR __Pnode$[ebp], eax

; 900  : 		int _Linkcnt = 0;

  0004c	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR __Linkcnt$[ebp], 0

; 901  : 
; 902  : 		_TRY_BEGIN

  00053	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 903  : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

  0005a	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
  00063	83 c4 04	 add	 esp, 4
  00066	89 45 d8	 mov	 DWORD PTR tv92[ebp], eax
  00069	8d 4d e4	 lea	 ecx, DWORD PTR __Pnode$[ebp]
  0006c	51		 push	 ecx
  0006d	8b 55 d8	 mov	 edx, DWORD PTR tv92[ebp]
  00070	52		 push	 edx
  00071	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	83 c1 01	 add	 ecx, 1
  00077	e8 00 00 00 00	 call	 ?construct@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::construct

; 904  : 		++_Linkcnt;

  0007c	8b 45 dc	 mov	 eax, DWORD PTR __Linkcnt$[ebp]
  0007f	83 c0 01	 add	 eax, 1
  00082	89 45 dc	 mov	 DWORD PTR __Linkcnt$[ebp], eax

; 905  : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

  00085	8b 4d e4	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode
  0008e	83 c4 04	 add	 esp, 4
  00091	89 45 d4	 mov	 DWORD PTR tv93[ebp], eax
  00094	8d 55 e4	 lea	 edx, DWORD PTR __Pnode$[ebp]
  00097	52		 push	 edx
  00098	8b 45 d4	 mov	 eax, DWORD PTR tv93[ebp]
  0009b	50		 push	 eax
  0009c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	83 c1 01	 add	 ecx, 1
  000a2	e8 00 00 00 00	 call	 ?construct@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::construct
  000a7	eb 35		 jmp	 SHORT $L188544
$L188545:

; 906  : 		_CATCH_ALL
; 907  : 		if (0 < _Linkcnt)

  000a9	83 7d dc 00	 cmp	 DWORD PTR __Linkcnt$[ebp], 0
  000ad	7e 18		 jle	 SHORT $L187885

; 908  : 			this->_Alptr.destroy(&_Nextnode(_Pnode));

  000af	8b 4d e4	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000b2	51		 push	 ecx
  000b3	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
  000b8	83 c4 04	 add	 esp, 4
  000bb	50		 push	 eax
  000bc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	83 c1 01	 add	 ecx, 1
  000c2	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::destroy
$L187885:

; 909  : 		this->_Alnod.deallocate(_Pnode, 1);

  000c7	6a 01		 push	 1
  000c9	8b 55 e4	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000cc	52		 push	 edx
  000cd	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::deallocate

; 910  : 		_RERAISE;

  000d5	6a 00		 push	 0
  000d7	6a 00		 push	 0
  000d9	e8 00 00 00 00	 call	 __CxxThrowException@8
$L188544:

; 911  : 		_CATCH_END

  000de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 912  : 		return (_Pnode);

  000e5	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
$L188542:

; 913  : 		}

  000e8	52		 push	 edx
  000e9	8b cd		 mov	 ecx, ebp
  000eb	50		 push	 eax
  000ec	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188551
  000f2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f7	58		 pop	 eax
  000f8	5a		 pop	 edx
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00103	5f		 pop	 edi
  00104	5e		 pop	 esi
  00105	5b		 pop	 ebx
  00106	83 c4 2c	 add	 esp, 44			; 0000002cH
  00109	3b ec		 cmp	 ebp, esp
  0010b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c3		 ret	 0
$L188551:
  00114	01 00 00 00	 DD	 1
  00118	00 00 00 00	 DD	 $L188550
$L188550:
  0011c	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00120	04 00 00 00	 DD	 4
  00124	00 00 00 00	 DD	 $L188548
$L188548:
  00128	5f		 DB	 95			; 0000005fH
  00129	50		 DB	 80			; 00000050H
  0012a	6e		 DB	 110			; 0000006eH
  0012b	6f		 DB	 111			; 0000006fH
  0012c	64		 DB	 100			; 00000064H
  0012d	65		 DB	 101			; 00000065H
  0012e	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@XZ:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188547
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Buynode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@XZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Buynode
PUBLIC	?clear@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXXZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::clear
; Function compile flags: /Odt /RTCsu
;	COMDAT ?_Tidy@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXXZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Tidy, COMDAT
; _this$ = ecx

; 929  : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 930  : 		clear();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?clear@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXXZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::clear

; 931  : 		this->_Alptr.destroy(&_Nextnode(_Myhead));

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
  00022	83 c4 04	 add	 esp, 4
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 01	 add	 ecx, 1
  0002c	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::destroy

; 932  : 		this->_Alptr.destroy(&_Prevnode(_Myhead));

  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode
  0003d	83 c4 04	 add	 esp, 4
  00040	50		 push	 eax
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	83 c1 01	 add	 ecx, 1
  00047	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::destroy

; 933  : 		this->_Alnod.deallocate(_Myhead, 1);

  0004c	6a 01		 push	 1
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00054	52		 push	 edx
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::deallocate

; 934  : 		_Myhead = 0;

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 935  : 		}

  00067	83 c4 04	 add	 esp, 4
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
?_Tidy@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAEXXZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVIMessageObserver@@@std@@QAE@ABV01@@Z ; std::allocator<IMessageObserver *>::allocator<IMessageObserver *>
PUBLIC	??0?$_List_ptr@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z ; std::_List_ptr<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_ptr<IMessageObserver *,std::allocator<IMessageObserver *> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$_List_val@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_List_val@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z PROC NEAR ; std::_List_val<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_val<IMessageObserver *,std::allocator<IMessageObserver *> >, COMDAT
; _this$ = ecx

; 82   : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	51		 push	 ecx
  00018	8b cc		 mov	 ecx, esp
  0001a	8d 45 08	 lea	 eax, DWORD PTR __Al$[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??0?$allocator@PAVIMessageObserver@@@std@@QAE@ABV01@@Z ; std::allocator<IMessageObserver *>::allocator<IMessageObserver *>
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_List_ptr@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z ; std::_List_ptr<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_ptr<IMessageObserver *,std::allocator<IMessageObserver *> >
  0002b	8d 4d 08	 lea	 ecx, DWORD PTR __Al$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 02	 add	 ecx, 2
  00035	e8 00 00 00 00	 call	 ??0?$allocator@PAVIMessageObserver@@@std@@QAE@ABV01@@Z ; std::allocator<IMessageObserver *>::allocator<IMessageObserver *>

; 83   : 		}

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??0?$_List_val@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z ENDP ; std::_List_val<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_val<IMessageObserver *,std::allocator<IMessageObserver *> >
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVIMessageObserver@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVIMessageObserver@@@std@@QAE@XZ PROC NEAR ; std::allocator<IMessageObserver *>::allocator<IMessageObserver *>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@PAVIMessageObserver@@@std@@QAE@XZ ENDP	; std::allocator<IMessageObserver *>::allocator<IMessageObserver *>
_TEXT	ENDS
PUBLIC	??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::const_iterator
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
;	COMDAT ??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 235  : 			{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::const_iterator

; 236  : 			}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator++
; Function compile flags: /Odt /RTCsu
;	COMDAT ??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++, COMDAT
; _this$ = ecx

; 249  : 			{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 250  : 			++(*(const_iterator *)this);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??Econst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator++

; 251  : 			return (*this);

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 252  : 			}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??Eiterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Myval@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAVIMessageObserver@@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Myval
; Function compile flags: /Odt /RTCsu
;	COMDAT ??Dconst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEABQAVIMessageObserver@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Dconst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEABQAVIMessageObserver@@XZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 160  : 			{	// return designated value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 161  : 			return (_Myval(_Ptr));

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?_Myval@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAVIMessageObserver@@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Myval
  00019	83 c4 04	 add	 esp, 4

; 162  : 			}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??Dconst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBEABQAVIMessageObserver@@XZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator*
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 196  : 			{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 197  : 			return (_Ptr == _Right._Ptr);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00014	8b 00		 mov	 eax, DWORD PTR [eax]
  00016	2b 01		 sub	 eax, DWORD PTR [ecx]
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax

; 198  : 			}

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??8const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator==
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode, COMDAT

; 112  : 		{	// return reference to predecessor pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 113  : 		return ((_Nodepref)(*_Pnode)._Prev);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 114  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAVIMessageObserver@@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAVIMessageObserver@@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Myval, COMDAT

; 117  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 118  : 		return ((_Vref)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 119  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAVIMessageObserver@@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Myval
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::destroy
; Function compile flags: /Odt /RTCsu
;	COMDAT ?clear@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnode$ = -12						; size = 4
__Pnext$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXXZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::clear, COMDAT
; _this$ = ecx

; 610  : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 611  : 		_Nodeptr _Pnext;
; 612  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00024	51		 push	 ecx
  00025	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
  0002a	83 c4 04	 add	 esp, 4
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	89 55 f4	 mov	 DWORD PTR __Pnode$[ebp], edx

; 613  : 		_Nextnode(_Myhead) = _Myhead;

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00047	89 08		 mov	 DWORD PTR [eax], ecx

; 614  : 		_Prevnode(_Myhead) = _Myhead;

  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?_Prevnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Prevnode
  00055	83 c4 04	 add	 esp, 4
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0005e	89 10		 mov	 DWORD PTR [eax], edx

; 615  : 		_Mysize = 0;

  00060	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00063	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 616  : 
; 617  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

  0006a	eb 06		 jmp	 SHORT $L187950
$L187951:
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0006f	89 4d f4	 mov	 DWORD PTR __Pnode$[ebp], ecx
$L187950:
  00072	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00075	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00078	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  0007b	74 2d		 je	 SHORT $L187947

; 618  : 			{	// delete an element
; 619  : 			_Pnext = _Nextnode(_Pnode);

  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00080	51		 push	 ecx
  00081	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
  00086	83 c4 04	 add	 esp, 4
  00089	8b 10		 mov	 edx, DWORD PTR [eax]
  0008b	89 55 f8	 mov	 DWORD PTR __Pnext$[ebp], edx

; 620  : 			this->_Alnod.destroy(_Pnode);

  0008e	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00091	50		 push	 eax
  00092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	e8 00 00 00 00	 call	 ?destroy@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::destroy

; 621  : 			this->_Alnod.deallocate(_Pnode, 1);

  0009a	6a 01		 push	 1
  0009c	8b 4d f4	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0009f	51		 push	 ecx
  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::deallocate

; 622  : 			}

  000a8	eb c2		 jmp	 SHORT $L187951
$L187947:

; 623  : 		}

  000aa	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ad	3b ec		 cmp	 ebp, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?clear@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEXXZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::clear
_TEXT	ENDS
PUBLIC	??$?0PAVIMessageObserver@@@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *><IMessageObserver *>
PUBLIC	??0?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z ; std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$_List_ptr@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_List_ptr@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z PROC NEAR ; std::_List_ptr<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_ptr<IMessageObserver *,std::allocator<IMessageObserver *> >, COMDAT
; _this$ = ecx

; 64   : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	51		 push	 ecx
  00018	8b cc		 mov	 ecx, esp
  0001a	8d 45 08	 lea	 eax, DWORD PTR __Al$[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??0?$allocator@PAVIMessageObserver@@@std@@QAE@ABV01@@Z ; std::allocator<IMessageObserver *>::allocator<IMessageObserver *>
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z ; std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >
  0002b	8d 4d 08	 lea	 ecx, DWORD PTR __Al$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 01	 add	 ecx, 1
  00035	e8 00 00 00 00	 call	 ??$?0PAVIMessageObserver@@@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *><IMessageObserver *>

; 65   : 		}

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??0?$_List_ptr@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z ENDP ; std::_List_ptr<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_ptr<IMessageObserver *,std::allocator<IMessageObserver *> >
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVIMessageObserver@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAVIMessageObserver@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<IMessageObserver *>::allocator<IMessageObserver *>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
??0?$allocator@PAVIMessageObserver@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<IMessageObserver *>::allocator<IMessageObserver *>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 131  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 132  : 		operator delete(_Ptr);

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4

; 133  : 		}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>
; Function compile flags: /Odt /RTCsu
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 136  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>
  00019	83 c4 08	 add	 esp, 8

; 138  : 		}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *,std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>
; Function compile flags: /Odt /RTCsu
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 146  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 147  : 		_Construct(_Ptr, _Val);

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$_Construct@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *,std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>
  0001b	83 c4 08	 add	 esp, 8

; 148  : 		}

  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>
; Function compile flags: /Odt /RTCsu
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z PROC NEAR ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 151  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 152  : 		_Destroy(_Ptr);

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$_Destroy@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>
  00017	83 c4 04	 add	 esp, 4

; 153  : 		}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::destroy
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\list
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 156  : 			{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx

; 157  : 			}

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??0const_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::const_iterator
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Econst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 170  : 			{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 			_Ptr = _Nextnode(_Ptr);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?_Nextnode@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@PAU342@@Z ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::_Nextnode
  00019	83 c4 04	 add	 esp, 4
  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	8b 00		 mov	 eax, DWORD PTR [eax]
  00021	89 02		 mov	 DWORD PTR [edx], eax

; 172  : 			return (*this);

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 173  : 			}

  00026	83 c4 04	 add	 esp, 4
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
??Econst_iterator@?$list@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<IMessageObserver *,std::allocator<IMessageObserver *> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??$?0PAVIMessageObserver@@@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node><IMessageObserver *>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z PROC NEAR ; std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >, COMDAT
; _this$ = ecx

; 44   : 		{	// construct allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8d 45 08	 lea	 eax, DWORD PTR __Al$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??$?0PAVIMessageObserver@@@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node><IMessageObserver *>

; 45   : 		}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@IAE@V?$allocator@PAVIMessageObserver@@@1@@Z ENDP ; std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z PROC NEAR ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 151  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 152  : 		_Destroy(_Ptr);

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$_Destroy@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>
  00017	83 c4 04	 add	 esp, 4

; 153  : 		}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::destroy
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??$?0PAVIMessageObserver@@@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0PAVIMessageObserver@@@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z PROC NEAR ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *><IMessageObserver *>, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
??$?0PAVIMessageObserver@@@?$allocator@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z ENDP ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *><IMessageObserver *>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>, COMDAT

; 33   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	6b c0 0c	 imul	 eax, 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000f	83 c4 04	 add	 esp, 4

; 35   : 	}

  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??$_Allocate@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Odt /RTCsu
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
$T188582 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *,std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>, COMDAT

; 41   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00014	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00017	50		 push	 eax
  00018	6a 04		 push	 4
  0001a	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0001f	83 c4 08	 add	 esp, 8
  00022	89 45 fc	 mov	 DWORD PTR $T188582[ebp], eax
  00025	83 7d fc 00	 cmp	 DWORD PTR $T188582[ebp], 0
  00029	74 12		 je	 SHORT $L188583
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR $T188582[ebp]
  0002e	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  00031	8b 02		 mov	 eax, DWORD PTR [edx]
  00033	89 01		 mov	 DWORD PTR [ecx], eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR $T188582[ebp]
  00038	89 4d f8	 mov	 DWORD PTR tv68[ebp], ecx
  0003b	eb 07		 jmp	 SHORT $L188025
$L188583:
  0003d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$L188025:

; 43   : 	}

  00044	83 c4 08	 add	 esp, 8
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
??$_Construct@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *,std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\new.h
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__P$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 109  :         {return (_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>, COMDAT

; 48   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy@PAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node *>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??$?0PAVIMessageObserver@@@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0PAVIMessageObserver@@@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z PROC NEAR ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node><IMessageObserver *>, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
??$?0PAVIMessageObserver@@@?$allocator@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVIMessageObserver@@@1@@Z ENDP ; std::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>::allocator<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node><IMessageObserver *>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>, COMDAT

; 48   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy@U_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVIMessageObserver@@V?$allocator@PAVIMessageObserver@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<IMessageObserver *,std::allocator<IMessageObserver *> >::_Node>
_TEXT	ENDS
END
