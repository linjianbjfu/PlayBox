; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\LayoutMgr\CreateControlFactory.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_04JAADICNI@?5?$DN?1?$FL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@GJIJNDEK@ISO?98859?91?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02PGHGPEOM@?91?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LJDDIHIK@?4bmp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DC@KJIHKHDE@?$CInCount?5?$DN?$DN?50?$CJ?5?$HM?$HM?5?$CI?$CIiFirst?$CLnCount@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EN@IBFBLEEG@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@GIMJKKKN@AtlIsValidString?$CI?5psz?5?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FH@BMBEKJNI@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??0CMarkup@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMarkup@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddElem@CMarkup@@QAE_NPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddChildElem@CMarkup@@QAE_NPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAttrib@CMarkup@@QAE_NPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ElemPos@CMarkup@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@ElemPos@CMarkup@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@TokenPos@CMarkup@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?x_SetPos@CMarkup@@IAEXHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMarkup@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddElem@CMarkupArchive@@UAE_NPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddChildElem@CMarkupArchive@@UAE_NPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindElem@CMarkupArchive@@UAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindChildElem@CMarkupArchive@@UAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMarkupArchive@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1IData@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DataAppStart@IData@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DataAppExit@IData@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GIData@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiPlusBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@CGdiPlusBitmap@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Load@CGdiPlusBitmap@@QAE_NPB_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiPlusBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MYLIST_COLUMN_IMAGE@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1DIBINFO@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GDIBINFO@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiPlusBitmap@CSkinButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@CGdiPlusBitmap@CSkinButton@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Load@CGdiPlusBitmap@CSkinButton@@QAE_NPB_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiPlusBitmap@CSkinButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1HTTPObserver@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownStart@HTTPObserver@@UAEXPBD0I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownFinish@HTTPObserver@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownFailed@HTTPObserver@@UAEXPBDW4HTTP_DOWN_FAILED_REASON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownProgress@HTTPObserver@@UAEXPBDII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HTTPOb_DownloadPause@HTTPObserver@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GHTTPObserver@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1P2PObserver@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_DownStart@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_DownFinish@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_DownFailed@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4P2P_DOWN_FAILED_REASON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_DownProgress@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_DownPause@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?P2POb_SigChange@P2PObserver@@UAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GP2PObserver@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSubPane@PaneBase@ETSLayoutMgr@@UAE?AVCPaneBase@2@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1PaneBase@ETSLayoutMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?showPane@PaneBase@ETSLayoutMgr@@UAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@CPaneBase@ETSLayoutMgr@@QAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRect@ETSLayoutMgr@@UAE?AVCRect@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateLayout@ETSLayoutMgr@@UAEXVCPane@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GPaneBase@ETSLayoutMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GETSLayoutMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@QAE@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABQAVCDibBitmap@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@QBE_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@ABU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@SAABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@ABU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??MATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAAAU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CArray@UElemPos@CMarkup@@AAU12@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CArray@UElemPos@CMarkup@@AAU12@@@QAEAAUElemPos@CMarkup@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CArray@UElemPos@CMarkup@@AAU12@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CArray@UElemPos@CMarkup@@AAU12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@?$CArray@UElemPos@CMarkup@@AAU12@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@?$CArray@UElemPos@CMarkup@@AAU12@@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CArray@MM@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CArray@MM@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CArray@MM@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@?$CArray@MM@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@?$CArray@MM@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@U?$less@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@std@@V?$allocator@U?$pair@$$CBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVCDibBitmap@@@std@@@5@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CArray@UElemPos@CMarkup@@AAU12@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CArray@MM@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPaneBase@ETSLayoutMgr@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSize@?$CArray@UElemPos@CMarkup@@AAU12@@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@?$CArray@UElemPos@CMarkup@@AAU12@@@QAEAAUElemPos@CMarkup@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$SerializeElements@UElemPos@CMarkup@@@@YGXAAVCArchive@@PAUElemPos@CMarkup@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$DumpElements@UElemPos@CMarkup@@@@YGXAAVCDumpContext@@PBUElemPos@CMarkup@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSize@?$CArray@MM@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$SerializeElements@M@@YGXAAVCArchive@@PAMH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$DumpElements@M@@YGXAAVCDumpContext@@PBMH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSize@?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$SerializeElements@VCPaneBase@ETSLayoutMgr@@@@YGXAAVCArchive@@PAVCPaneBase@ETSLayoutMgr@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$DumpElements@VCPaneBase@ETSLayoutMgr@@@@YGXAAVCDumpContext@@PBVCPaneBase@ETSLayoutMgr@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAt@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAEXPBDVCPaneBase@ETSLayoutMgr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStartPosition@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextAssoc@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QBEXAAPAU__POSITION@@AAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAVCPaneBase@ETSLayoutMgr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$DumpElements@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@@YGXAAVCDumpContext@@PBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAssoc@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPair@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAEAAVCPaneBase@ETSLayoutMgr@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitHashTable@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAEXIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?NewAssoc@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@IAEPAVCAssoc@1@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAssocAt@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@IBEPAVCAssoc@1@PBDAAI1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAssoc@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPair@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@IAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$CompareElements@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@@YGHPBV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBQBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3HTTPObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CMarkup@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CGdiPlusBitmap@CSkinButton@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3IData@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$CArray@MM@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3PaneBase@ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CGdiPlusBitmap@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3P2PObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3CMarkupArchive@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$CArray@UElemPos@CMarkup@@AAU12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3DIBINFO@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2HTTPObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CMarkup@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CGdiPlusBitmap@CSkinButton@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2IData@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$CArray@MM@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2PaneBase@ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CGdiPlusBitmap@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2P2PObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CMarkupArchive@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$CArray@UElemPos@CMarkup@@AAU12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2DIBINFO@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@HTTPObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CGdiPlusBitmap@CSkinButton@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@IData@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$CArray@MM@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@PaneBase@ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CGdiPlusBitmap@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@P2PObserver@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CMarkup@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CMarkupArchive@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$CArray@UElemPos@CMarkup@@AAU12@@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@DIBINFO@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ETSLayoutMgr@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVHTTPObserver@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCGdiPlusBitmap@CSkinButton@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVIData@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$CArray@MM@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVPaneBase@ETSLayoutMgr@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCGdiPlusBitmap@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVP2PObserver@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCMarkup@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCMarkupArchive@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$CArray@UElemPos@CMarkup@@AAU12@@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVDIBINFO@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVETSLayoutMgr@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4HTTPObserver@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4CMarkup@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4CGdiPlusBitmap@CSkinButton@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4IData@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4?$CArray@MM@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4PaneBase@ETSLayoutMgr@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4CGdiPlusBitmap@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4P2PObserver@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4CMarkupArchive@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4?$CArray@UElemPos@CMarkup@@AAU12@@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4DIBINFO@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R4ETSLayoutMgr@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ?data@CPlex@@QAEPAXXZ
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
;	COMDAT ??_C@_0EN@CBMLGOH@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMap@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBDVCPaneBase@ETSLayoutMgr@@V34@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CArray@VCPaneBase@ETSLayoutMgr@@V12@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CArray@MM@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CArray@UElemPos@CMarkup@@AAU12@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FG@LDNDNCJM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FJ@DMHPDOJC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@length_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@logic_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@exception@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BO@OBIGOAOM@AtlIsValidString?$CI?5pszFormat?5?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlIsValidString@ATL@@YAHPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FH@KDPNIMBO@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVCxSkinButton@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCSkinButton2@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ETSLayoutMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7PaneBase@ETSLayoutMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?clsid@?1??GetClsid@CShockwaveFlash@@QAEABU_GUID@@XZ@4U3@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7P2PObserver@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7HTTPObserver@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CJ@FJEKGMMD@Warning?3?5implicit?5LoadString?$CI?$CFu?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CGdiPlusBitmap@CSkinButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7DIBINFO@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLastStatus@Image@Gdiplus@@QBE?AW4Status@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromFile@Bitmap@Gdiplus@@SAPAV12@PB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2GdiplusBase@Gdiplus@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3GdiplusBase@Gdiplus@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@Gdiplus@@QAE@PB_WH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Image@Gdiplus@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7Image@Gdiplus@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4Image@Gdiplus@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVImage@Gdiplus@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3Image@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2Image@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@Image@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R13?0A@A@GdiplusBase@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVGdiplusBase@Gdiplus@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_GImage@Gdiplus@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clone@Image@Gdiplus@@UAEPAV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Image@Gdiplus@@IAE@PAVGpImage@1@W4Status@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Image@Gdiplus@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7Bitmap@Gdiplus@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4Bitmap@Gdiplus@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVBitmap@Gdiplus@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3Bitmap@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2Bitmap@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@Bitmap@Gdiplus@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_GBitmap@Gdiplus@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Bitmap@Gdiplus@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetNativeImage@Image@Gdiplus@@IAEXPAVGpImage@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CGdiPlusBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IData@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMarkupArchive@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __tcschr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsnccmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMarkup@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
CONST	SEGMENT
$SG196437 DB	'type', 00H
	ORG $+3
$SG196439 DB	'BtnTree', 00H
$SG196445 DB	'type', 00H
	ORG $+3
$SG196447 DB	'list', 00H
	ORG $+3
$SG196454 DB	'static', 00H
	ORG $+1
$SG196455 DB	'type', 00H
	ORG $+3
$SG196466 DB	'background_color', 00H
	ORG $+3
$SG196469 DB	'text_color', 00H
	ORG $+1
$SG196472 DB	'single_line', 00H
$SG196475 DB	'under_line', 00H
	ORG $+1
$SG196479 DB	'enable_click', 00H
	ORG $+3
$SG196483 DB	'font_face', 00H
	ORG $+2
$SG196485 DB	'font_size', 00H
$SG196497 DB	00H
	ORG $+1
$SG196501 DB	'normal', 00H
	ORG $+1
$SG196507 DB	'down', 00H
	ORG $+3
$SG196513 DB	'over', 00H
	ORG $+3
$SG196521 DB	'disable', 00H
$SG196527 DB	'mask', 00H
	ORG $+3
$SG196541 DB	'tooltip', 00H
$SG196543 DB	00H
	ORG $+3
$SG196547 DB	'text', 00H
$SG196550 DB	00H
	ORG $+2
$SG196554 DB	'bmp', 00H
$SG196572 DB	'tooltip', 00H
$SG196575 DB	'dont_change_color', 00H
	ORG $+2
$SG196580 DB	'bmp', 00H
$SG196582 DB	00H
	ORG $+3
$SG196586 DB	'normal', 00H
	ORG $+1
$SG196590 DB	'normal', 00H
	ORG $+1
$SG196596 DB	'down', 00H
	ORG $+3
$SG196600 DB	'down', 00H
	ORG $+3
$SG196606 DB	'over', 00H
	ORG $+3
$SG196610 DB	'over', 00H
	ORG $+3
$SG196618 DB	'disable', 00H
$SG196622 DB	'disable', 00H
$SG196628 DB	'mask', 00H
	ORG $+3
$SG196632 DB	'mask', 00H
	ORG $+3
$SG196635 DB	'normal', 00H
	ORG $+1
$SG196638 DB	'over', 00H
	ORG $+3
$SG196641 DB	'down', 00H
	ORG $+3
$SG196644 DB	'disable', 00H
$SG196649 DB	'0', 00H
	ORG $+2
$SG196650 DB	'x_delta', 00H
$SG196651 DB	'%d', 00H
	ORG $+1
$SG196652 DB	'x_delta', 00H
$SG196656 DB	'0', 00H
	ORG $+2
$SG196657 DB	'y_delta', 00H
$SG196658 DB	'%d', 00H
	ORG $+1
$SG196659 DB	'y_delta', 00H
$SG196666 DB	00H
	ORG $+3
$SG196671 DB	'textcolor_normal', 00H
$SG196673 DB	00H
	ORG $+2
$SG196676 DB	'textcolor_over', 00H
$SG196678 DB	00H
$SG196683 DB	'textcolor_down', 00H
$SG196685 DB	00H
$SG196690 DB	'textcolor_disable', 00H
$SG196692 DB	00H
	ORG $+1
$SG196705 DB	'vert', 00H
	ORG $+3
$SG196708 DB	'horz', 00H
	ORG $+3
$SG196711 DB	'btn_down', 00H
	ORG $+3
$SG196714 DB	'btn_up', 00H
	ORG $+1
$SG196717 DB	'btn_right', 00H
	ORG $+2
$SG196720 DB	'btn_left', 00H
	ORG $+3
$SG196723 DB	'btn_down_over', 00H
	ORG $+2
$SG196726 DB	'btn_up_over', 00H
$SG196729 DB	'btn_right_over', 00H
	ORG $+1
$SG196732 DB	'btn_left_over', 00H
	ORG $+2
$SG196734 DB	'SpliterVertBK', 00H
	ORG $+2
$SG196735 DB	'SpliterHorzBK', 00H
	ORG $+2
$SG196736 DB	'SpliterBarDown', 00H
	ORG $+1
$SG196737 DB	'SpliterBarUp', 00H
	ORG $+3
$SG196738 DB	'SpliterBarRight', 00H
$SG196739 DB	'SpliterBarLeft', 00H
	ORG $+1
$SG196740 DB	'SpliterBarDownOver', 00H
	ORG $+1
$SG196741 DB	'SpliterBarUpOver', 00H
	ORG $+3
$SG196742 DB	'SpliterBarRightOver', 00H
$SG196743 DB	'SpliterBarLeftOver', 00H
	ORG $+1
$SG196746 DB	'hide-closebtn', 00H
	ORG $+2
$SG196748 DB	'1', 00H
	ORG $+2
$SG196763 DB	'btnbmp', 00H
	ORG $+1
$SG196767 DB	'normal', 00H
	ORG $+1
$SG196771 DB	'normal', 00H
	ORG $+1
$SG196776 DB	'down', 00H
	ORG $+3
$SG196780 DB	'down', 00H
	ORG $+3
$SG196785 DB	'over', 00H
	ORG $+3
$SG196789 DB	'over', 00H
	ORG $+3
$SG196794 DB	'nortext', 00H
$SG196797 DB	'selbk', 00H
	ORG $+2
$SG196800 DB	'seltext', 00H
$SG196803 DB	'bk', 00H
	ORG $+1
$SG196804 DB	'ScrollHorz', 00H
	ORG $+1
$SG196805 DB	'ScrollVert', 00H
	ORG $+1
$SG196815 DB	'0', 00H
	ORG $+2
$SG196818 DB	'0', 00H
	ORG $+2
$SG196821 DB	'0', 00H
	ORG $+2
$SG196825 DB	'%x', 00H
	ORG $+1
$SG196826 DB	'%x', 00H
	ORG $+1
$SG196827 DB	'%x', 00H
	ORG $+1
$SG196855 DB	'seltext', 00H
$SG196856 DB	'selbk', 00H
	ORG $+2
$SG196857 DB	'nortext', 00H
$SG196858 DB	'evenbk', 00H
	ORG $+1
$SG196859 DB	'oddbk', 00H
	ORG $+2
$SG196862 DB	'playbk', 00H
	ORG $+1
$SG196865 DB	'scrollH', 00H
$SG196867 DB	'ScrollHorz', 00H
	ORG $+1
$SG196870 DB	'scrollV', 00H
$SG196872 DB	'ScrollVert', 00H
	ORG $+1
$SG196883 DB	'nortext', 00H
$SG196886 DB	'selbk', 00H
	ORG $+2
$SG196889 DB	'seltext', 00H
$SG196892 DB	'bk', 00H
	ORG $+1
$SG196893 DB	'ScrollHorz', 00H
	ORG $+1
$SG196894 DB	'ScrollVert', 00H
	ORG $+5
$SG197306 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197320 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197336 DB	'with ', 00H
	ORG $+2
$SG197337 DB	' elements', 00H
	ORG $+2
$SG197339 DB	0aH, 00H
	ORG $+2
$SG197346 DB	0aH, 00H
	ORG $+6
$SG197354 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197356 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197359 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197361 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197363 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197366 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197377 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197391 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197407 DB	'with ', 00H
	ORG $+2
$SG197408 DB	' elements', 00H
	ORG $+2
$SG197410 DB	0aH, 00H
	ORG $+2
$SG197417 DB	0aH, 00H
	ORG $+6
$SG197425 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197427 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197430 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197432 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197434 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197437 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197443 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197457 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197473 DB	'with ', 00H
	ORG $+2
$SG197474 DB	' elements', 00H
	ORG $+2
$SG197476 DB	0aH, 00H
	ORG $+2
$SG197483 DB	0aH, 00H
	ORG $+6
$SG197491 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197493 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197496 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197498 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197500 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197503 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197512 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197521 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197525 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197587 DB	'with ', 00H
	ORG $+2
$SG197588 DB	' elements', 00H
	ORG $+2
$SG197602 DB	0aH, 09H, '[', 00H
$SG197609 DB	'] = ', 00H
	ORG $+3
$SG197610 DB	0aH, 00H
	ORG $+6
$SG197619 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197621 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197663 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197665 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197680 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197687 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197729 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197733 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197743 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197772 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197797 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197805 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197807 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197822 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197829 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197865 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197869 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197879 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197896 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197921 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197929 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197931 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197946 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197953 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197995 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG197999 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198009 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198029 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198054 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198071 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198100 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198102 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198106 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198116 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198119 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198132 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198145 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198160 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198162 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198164 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198189 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198194 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198229 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
	ORG $+1
$SG198232 DB	'D:\Program Files (x86)\Microsoft Visual Studio .NET 2003'
	DB	'\Vc7\atlmfc\include\afxtempl.h', 00H
CONST	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__GetVersionExA@4:NEAR
;	COMDAT rtc$IMZ
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCsu
rtc$TMZ	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -164				; size = 4
_ver$ = -156						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 5c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-164]
  00011	b9 29 00 00 00	 mov	 ecx, 41			; 00000029H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

  00025	c7 85 64 ff ff
	ff 94 00 00 00	 mov	 DWORD PTR _ver$[ebp], 148 ; 00000094H

; 139  : 	::GetVersionEx( &ver );

  0002f	8b f4		 mov	 esi, esp
  00031	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _ver$[ebp]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00045	83 bd 74 ff ff
	ff 02		 cmp	 DWORD PTR _ver$[ebp+16], 2
  0004c	75 15		 jne	 SHORT $L24163
  0004e	83 bd 68 ff ff
	ff 05		 cmp	 DWORD PTR _ver$[ebp+4], 5
  00055	72 0c		 jb	 SHORT $L24163

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  00057	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

  00061	eb 0a		 jmp	 SHORT $L24164
$L24163:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00063	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L24164:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  0006d	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _pfnGetThreadACP$[ebp]
  00073	51		 push	 ecx
  00074	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00079	e8 00 00 00 00	 call	 ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  0007e	8b f4		 mov	 esi, esp
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 152  : }

  0008d	52		 push	 edx
  0008e	8b cd		 mov	 ecx, ebp
  00090	50		 push	 eax
  00091	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L199011
  00097	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009c	58		 pop	 eax
  0009d	5a		 pop	 edx
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	81 c4 a4 00 00
	00		 add	 esp, 164		; 000000a4H
  000ae	3b ec		 cmp	 ebp, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
$L199011:
  000b9	01 00 00 00	 DD	 1
  000bd	00 00 00 00	 DD	 $L199010
$L199010:
  000c1	64 ff ff ff	 DD	 -156			; ffffff64H
  000c5	94 00 00 00	 DD	 148			; 00000094H
  000c9	00 00 00 00	 DD	 $L199007
$L199007:
  000cd	76		 DB	 118			; 00000076H
  000ce	65		 DB	 101			; 00000065H
  000cf	72		 DB	 114			; 00000072H
  000d0	00		 DB	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _pNew$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8
  00014	3b f4		 cmp	 esi, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 93   : }

  0001b	5e		 pop	 esi
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$24151 = -32					; size = 4
_szACP$ = -24						; size = 7
_lcidThread$ = -12					; size = 4
_nACP$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  00033	8b f4		 mov	 esi, esp
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	89 45 f4	 mov	 DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  00045	8b f4		 mov	 esi, esp
  00047	6a 07		 push	 7
  00049	8d 45 e8	 lea	 eax, DWORD PTR _szACP$[ebp]
  0004c	50		 push	 eax
  0004d	68 04 10 00 00	 push	 4100			; 00001004H
  00052	8b 4d f4	 mov	 ecx, DWORD PTR _lcidThread$[ebp]
  00055	51		 push	 ecx
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	85 c0		 test	 eax, eax
  00065	74 34		 je	 SHORT $L24150

; 111  : 	{
; 112  : 		char* pch = szACP;

  00067	8d 55 e8	 lea	 edx, DWORD PTR _szACP$[ebp]
  0006a	89 55 e0	 mov	 DWORD PTR _pch$24151[ebp], edx
$L24153:

; 113  : 		while (*pch != '\0')

  0006d	8b 45 e0	 mov	 eax, DWORD PTR _pch$24151[ebp]
  00070	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00073	85 c9		 test	 ecx, ecx
  00075	74 24		 je	 SHORT $L24150

; 114  : 		{
; 115  : 			nACP *= 10;

  00077	8b 55 f8	 mov	 edx, DWORD PTR _nACP$[ebp]
  0007a	6b d2 0a	 imul	 edx, 10			; 0000000aH
  0007d	89 55 f8	 mov	 DWORD PTR _nACP$[ebp], edx

; 116  : 			nACP += *pch++ - '0';

  00080	8b 45 e0	 mov	 eax, DWORD PTR _pch$24151[ebp]
  00083	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00086	8b 55 f8	 mov	 edx, DWORD PTR _nACP$[ebp]
  00089	8d 44 0a d0	 lea	 eax, DWORD PTR [edx+ecx-48]
  0008d	89 45 f8	 mov	 DWORD PTR _nACP$[ebp], eax
  00090	8b 4d e0	 mov	 ecx, DWORD PTR _pch$24151[ebp]
  00093	83 c1 01	 add	 ecx, 1
  00096	89 4d e0	 mov	 DWORD PTR _pch$24151[ebp], ecx

; 117  : 		}

  00099	eb d2		 jmp	 SHORT $L24153
$L24150:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  0009b	83 7d f8 00	 cmp	 DWORD PTR _nACP$[ebp], 0
  0009f	75 12		 jne	 SHORT $L24155

; 121  : 		nACP = ::GetACP();

  000a1	8b f4		 mov	 esi, esp
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	89 45 f8	 mov	 DWORD PTR _nACP$[ebp], eax
$L24155:

; 122  : 
; 123  : 	return nACP;

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _nACP$[ebp]

; 124  : }

  000b6	52		 push	 edx
  000b7	8b cd		 mov	 ecx, ebp
  000b9	50		 push	 eax
  000ba	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L199022
  000c0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c5	58		 pop	 eax
  000c6	5a		 pop	 edx
  000c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ca	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cf	5e		 pop	 esi
  000d0	83 c4 20	 add	 esp, 32			; 00000020H
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
$L199022:
  000de	01 00 00 00	 DD	 1
  000e2	00 00 00 00	 DD	 $L199021
$L199021:
  000e6	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000ea	07 00 00 00	 DD	 7
  000ee	00 00 00 00	 DD	 $L199019
$L199019:
  000f2	73		 DB	 115			; 00000073H
  000f3	7a		 DB	 122			; 0000007aH
  000f4	41		 DB	 65			; 00000041H
  000f5	43		 DB	 67			; 00000043H
  000f6	50		 DB	 80			; 00000050H
  000f7	00		 DB	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  : 	return( CP_THREAD_ACP );

  00003	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	??0CreateControlFactory@@QAE@XZ			; CreateControlFactory::CreateControlFactory
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\createcontrolfactory.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CreateControlFactory@@QAE@XZ PROC NEAR		; CreateControlFactory::CreateControlFactory
; _this$ = ecx

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 14   : }

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0CreateControlFactory@@QAE@XZ ENDP			; CreateControlFactory::CreateControlFactory
_TEXT	ENDS
PUBLIC	??1CreateControlFactory@@QAE@XZ			; CreateControlFactory::~CreateControlFactory
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CreateControlFactory@@QAE@XZ PROC NEAR		; CreateControlFactory::~CreateControlFactory
; _this$ = ecx

; 17   : {

  00020	55		 push	 ebp
  00021	8b ec		 mov	 ebp, esp
  00023	51		 push	 ecx
  00024	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0002b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 18   : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??1CreateControlFactory@@QAE@XZ ENDP			; CreateControlFactory::~CreateControlFactory
_TEXT	ENDS
PUBLIC	?CreateControl@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateControl
PUBLIC	?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateStatic
PUBLIC	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
PUBLIC	?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateButton
PUBLIC	?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateButton2
PUBLIC	?CreateTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateTree
PUBLIC	?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateBtnTree
PUBLIC	?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateList
PUBLIC	?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z ; CreateControlFactory::CreateSplitter
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
PUBLIC	??_R0?AVCSkinButton2@@@8			; CSkinButton2 `RTTI Type Descriptor'
PUBLIC	??_R0?AVCxSkinButton@@@8			; CxSkinButton `RTTI Type Descriptor'
EXTRN	___RTDynamicCast:NEAR
EXTRN	__imp__IsWindow@4:NEAR
EXTRN	?GetThisClass@ETSSplitter@@SGPAUCRuntimeClass@@XZ:NEAR ; ETSSplitter::GetThisClass
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z:NEAR ; CObject::IsKindOf
EXTRN	?GetThisClass@CMyTreeCtrl@@SGPAUCRuntimeClass@@XZ:NEAR ; CMyTreeCtrl::GetThisClass
EXTRN	?GetThisClass@CListCtrl@@SGPAUCRuntimeClass@@XZ:NEAR ; CListCtrl::GetThisClass
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
xdata$x	SEGMENT
$T199042 DD	0ffffffffH
	DD	FLAT:$L199029
	DD	0ffffffffH
	DD	FLAT:$L199030
$T199035 DD	019930520H
	DD	02H
	DD	FLAT:$T199042
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_R0?AVCSkinButton2@@@8
_DATA	SEGMENT
??_R0?AVCSkinButton2@@@8 DD FLAT:??_7type_info@@6B@	; CSkinButton2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSkinButton2@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
	ORG $-19
	DD	FLAT:??_7type_info@@6B@
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVCxSkinButton@@@8
_DATA	SEGMENT
??_R0?AVCxSkinButton@@@8 DD FLAT:??_7type_info@@6B@	; CxSkinButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCxSkinButton@@', 00H
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
tv191 = -48						; size = 4
$T199028 = -44						; size = 4
$T199027 = -37						; size = 1
_strType$196443 = -32					; size = 4
_strType$196435 = -20					; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateControl@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateControl

; 21   : {

  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	6a ff		 push	 -1
  00045	68 00 00 00 00	 push	 __ehhandler$?CreateControl@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  0004a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00050	50		 push	 eax
  00051	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00058	83 ec 24	 sub	 esp, 36			; 00000024H
  0005b	56		 push	 esi
  0005c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00061	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  00064	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00067	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0006a	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0006d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00070	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00073	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00076	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00079	89 45 f0	 mov	 DWORD PTR [ebp-16], eax

; 22   : 	if(!::IsWindow(pWnd->m_hWnd) || pSkin == NULL)

  0007c	8b f4		 mov	 esi, esp
  0007e	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  00081	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00084	51		 push	 ecx
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  0008b	3b f4		 cmp	 esi, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	85 c0		 test	 eax, eax
  00094	74 06		 je	 SHORT $L196425
  00096	83 7d 10 00	 cmp	 DWORD PTR _pSkin$[ebp], 0
  0009a	75 05		 jne	 SHORT $L196424
$L196425:

; 23   : 		return;

  0009c	e9 06 02 00 00	 jmp	 $L196423
$L196424:

; 24   : 
; 25   : //	if( pWnd->IsKindOf(RUNTIME_CLASS(CxSkinButton)))
; 26   : 	if( dynamic_cast<CSkinButton2*>(pWnd) )

  000a1	6a 00		 push	 0
  000a3	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVCSkinButton2@@@8
  000a8	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVCWnd@@@8
  000ad	6a 00		 push	 0
  000af	8b 55 08	 mov	 edx, DWORD PTR _pWnd$[ebp]
  000b2	52		 push	 edx
  000b3	e8 00 00 00 00	 call	 ___RTDynamicCast
  000b8	83 c4 14	 add	 esp, 20			; 00000014H
  000bb	85 c0		 test	 eax, eax
  000bd	74 1d		 je	 SHORT $L196428

; 27   : 	{
; 28   : 		CreateButton2( pWnd,pXml,pSkin,m_mgrPanes);

  000bf	8b 45 14	 mov	 eax, DWORD PTR _m_mgrPanes$[ebp]
  000c2	50		 push	 eax
  000c3	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  000c6	51		 push	 ecx
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _pXml$[ebp]
  000ca	52		 push	 edx
  000cb	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateButton2
  000d4	83 c4 10	 add	 esp, 16			; 00000010H

; 29   : 	}else 

  000d7	e9 cb 01 00 00	 jmp	 $L196423
$L196428:

; 30   : 	if( dynamic_cast<CxSkinButton*>(pWnd) )

  000dc	6a 00		 push	 0
  000de	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVCxSkinButton@@@8
  000e3	68 00 00 00 00	 push	 OFFSET FLAT:??_R0?AVCWnd@@@8
  000e8	6a 00		 push	 0
  000ea	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  000ed	51		 push	 ecx
  000ee	e8 00 00 00 00	 call	 ___RTDynamicCast
  000f3	83 c4 14	 add	 esp, 20			; 00000014H
  000f6	85 c0		 test	 eax, eax
  000f8	74 1d		 je	 SHORT $L196432

; 31   : 	{
; 32   : 		CreateButton( pWnd,pXml,pSkin,m_mgrPanes );

  000fa	8b 55 14	 mov	 edx, DWORD PTR _m_mgrPanes$[ebp]
  000fd	52		 push	 edx
  000fe	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  00101	50		 push	 eax
  00102	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00105	51		 push	 ecx
  00106	8b 55 08	 mov	 edx, DWORD PTR _pWnd$[ebp]
  00109	52		 push	 edx
  0010a	e8 00 00 00 00	 call	 ?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateButton
  0010f	83 c4 10	 add	 esp, 16			; 00000010H

; 33   : 	}else

  00112	e9 90 01 00 00	 jmp	 $L196423
$L196432:

; 34   : 	if( pWnd->IsKindOf( RUNTIME_CLASS(CMyTreeCtrl) ) )

  00117	e8 00 00 00 00	 call	 ?GetThisClass@CMyTreeCtrl@@SGPAUCRuntimeClass@@XZ ; CMyTreeCtrl::GetThisClass
  0011c	50		 push	 eax
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00120	e8 00 00 00 00	 call	 ?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z ; CObject::IsKindOf
  00125	85 c0		 test	 eax, eax
  00127	0f 84 80 00 00
	00		 je	 $L196434

; 35   : 	{
; 36   : 		CString strType = pXml->GetAttrib("type");

  0012d	68 00 00 00 00	 push	 OFFSET FLAT:$SG196437
  00132	8d 45 ec	 lea	 eax, DWORD PTR _strType$196435[ebp]
  00135	50		 push	 eax
  00136	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00139	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  0013e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 37   : 
; 38   : 		if( strType == "BtnTree")

  00145	68 00 00 00 00	 push	 OFFSET FLAT:$SG196439
  0014a	8d 4d ec	 lea	 ecx, DWORD PTR _strType$196435[ebp]
  0014d	51		 push	 ecx
  0014e	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  00153	83 c4 08	 add	 esp, 8
  00156	0f b6 d0	 movzx	 edx, al
  00159	85 d2		 test	 edx, edx
  0015b	74 1a		 je	 SHORT $L196438

; 39   : 		{
; 40   : 			CreateBtnTree( pWnd,pXml,pSkin,m_mgrPanes);

  0015d	8b 45 14	 mov	 eax, DWORD PTR _m_mgrPanes$[ebp]
  00160	50		 push	 eax
  00161	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00164	51		 push	 ecx
  00165	8b 55 0c	 mov	 edx, DWORD PTR _pXml$[ebp]
  00168	52		 push	 edx
  00169	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateBtnTree
  00172	83 c4 10	 add	 esp, 16			; 00000010H

; 41   : 		}
; 42   : 		else

  00175	eb 18		 jmp	 SHORT $L196440
$L196438:

; 43   : 		{
; 44   : 			CreateTree( pWnd,pXml,pSkin,m_mgrPanes);

  00177	8b 4d 14	 mov	 ecx, DWORD PTR _m_mgrPanes$[ebp]
  0017a	51		 push	 ecx
  0017b	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  0017e	52		 push	 edx
  0017f	8b 45 0c	 mov	 eax, DWORD PTR _pXml$[ebp]
  00182	50		 push	 eax
  00183	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00186	51		 push	 ecx
  00187	e8 00 00 00 00	 call	 ?CreateTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateTree
  0018c	83 c4 10	 add	 esp, 16			; 00000010H
$L196440:

; 45   : 		}
; 46   : 	}

  0018f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00196	8b f4		 mov	 esi, esp
  00198	8d 4d ec	 lea	 ecx, DWORD PTR _strType$196435[ebp]
  0019b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001a1	3b f4		 cmp	 esi, esp
  001a3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 47   : 	else if( pWnd->IsKindOf( RUNTIME_CLASS(CMyListCtrl)) ) 

  001a8	e9 fa 00 00 00	 jmp	 $L196423
$L196434:
  001ad	e8 00 00 00 00	 call	 ?GetThisClass@CListCtrl@@SGPAUCRuntimeClass@@XZ ; CListCtrl::GetThisClass
  001b2	50		 push	 eax
  001b3	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  001b6	e8 00 00 00 00	 call	 ?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z ; CObject::IsKindOf
  001bb	85 c0		 test	 eax, eax
  001bd	74 66		 je	 SHORT $L196442

; 48   : 	{
; 49   : 		CString strType = pXml->GetAttrib("type");

  001bf	68 00 00 00 00	 push	 OFFSET FLAT:$SG196445
  001c4	8d 55 e0	 lea	 edx, DWORD PTR _strType$196443[ebp]
  001c7	52		 push	 edx
  001c8	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  001cb	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  001d0	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 50   : 		if( strType == "list" )

  001d7	68 00 00 00 00	 push	 OFFSET FLAT:$SG196447
  001dc	8d 45 e0	 lea	 eax, DWORD PTR _strType$196443[ebp]
  001df	50		 push	 eax
  001e0	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  001e5	83 c4 08	 add	 esp, 8
  001e8	0f b6 c8	 movzx	 ecx, al
  001eb	85 c9		 test	 ecx, ecx
  001ed	74 18		 je	 SHORT $L196446

; 51   : 		{
; 52   : 			CreateList( pWnd,pXml,pSkin,m_mgrPanes );

  001ef	8b 55 14	 mov	 edx, DWORD PTR _m_mgrPanes$[ebp]
  001f2	52		 push	 edx
  001f3	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  001f6	50		 push	 eax
  001f7	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  001fa	51		 push	 ecx
  001fb	8b 55 08	 mov	 edx, DWORD PTR _pWnd$[ebp]
  001fe	52		 push	 edx
  001ff	e8 00 00 00 00	 call	 ?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateList
  00204	83 c4 10	 add	 esp, 16			; 00000010H
$L196446:

; 53   : 		}
; 54   : 	}

  00207	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0020e	8b f4		 mov	 esi, esp
  00210	8d 4d e0	 lea	 ecx, DWORD PTR _strType$196443[ebp]
  00213	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00219	3b f4		 cmp	 esi, esp
  0021b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 55   : 	else if(pWnd->IsKindOf(RUNTIME_CLASS(ETSSplitter) ) )

  00220	e9 82 00 00 00	 jmp	 $L196423
$L196442:
  00225	e8 00 00 00 00	 call	 ?GetThisClass@ETSSplitter@@SGPAUCRuntimeClass@@XZ ; ETSSplitter::GetThisClass
  0022a	50		 push	 eax
  0022b	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  0022e	e8 00 00 00 00	 call	 ?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z ; CObject::IsKindOf
  00233	85 c0		 test	 eax, eax
  00235	74 16		 je	 SHORT $L196449

; 56   : 	{
; 57   : 		//((ETSSplitter*)pWnd)->LoadSkin(pSkin);
; 58   : 		CreateSplitter(pWnd, pXml, pSkin);

  00237	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  0023a	50		 push	 eax
  0023b	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0023e	51		 push	 ecx
  0023f	8b 55 08	 mov	 edx, DWORD PTR _pWnd$[ebp]
  00242	52		 push	 edx
  00243	e8 00 00 00 00	 call	 ?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z ; CreateControlFactory::CreateSplitter
  00248	83 c4 0c	 add	 esp, 12			; 0000000cH

; 59   : 	}
; 60   : 	else if (pXml->GetAttrib("type") == "static")

  0024b	eb 5a		 jmp	 SHORT $L196423
$L196449:
  0024d	68 00 00 00 00	 push	 OFFSET FLAT:$SG196455
  00252	8d 45 d4	 lea	 eax, DWORD PTR $T199028[ebp]
  00255	50		 push	 eax
  00256	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00259	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  0025e	89 45 d0	 mov	 DWORD PTR tv191[ebp], eax
  00261	68 00 00 00 00	 push	 OFFSET FLAT:$SG196454
  00266	8b 4d d0	 mov	 ecx, DWORD PTR tv191[ebp]
  00269	51		 push	 ecx
  0026a	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  0026f	83 c4 08	 add	 esp, 8
  00272	88 45 db	 mov	 BYTE PTR $T199027[ebp], al
  00275	8b f4		 mov	 esi, esp
  00277	8d 4d d4	 lea	 ecx, DWORD PTR $T199028[ebp]
  0027a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00280	3b f4		 cmp	 esi, esp
  00282	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00287	0f b6 55 db	 movzx	 edx, BYTE PTR $T199027[ebp]
  0028b	85 d2		 test	 edx, edx
  0028d	74 18		 je	 SHORT $L196423

; 61   : 	{
; 62   : 		CreateStatic(pWnd, pXml, pSkin,m_mgrPanes);

  0028f	8b 45 14	 mov	 eax, DWORD PTR _m_mgrPanes$[ebp]
  00292	50		 push	 eax
  00293	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00296	51		 push	 ecx
  00297	8b 55 0c	 mov	 edx, DWORD PTR _pXml$[ebp]
  0029a	52		 push	 edx
  0029b	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  0029e	50		 push	 eax
  0029f	e8 00 00 00 00	 call	 ?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ; CreateControlFactory::CreateStatic
  002a4	83 c4 10	 add	 esp, 16			; 00000010H
$L196423:

; 63   : 	}
; 64   : }

  002a7	52		 push	 edx
  002a8	8b cd		 mov	 ecx, ebp
  002aa	50		 push	 eax
  002ab	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L199041
  002b1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002b6	58		 pop	 eax
  002b7	5a		 pop	 edx
  002b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002c2	5e		 pop	 esi
  002c3	83 c4 30	 add	 esp, 48			; 00000030H
  002c6	3b ec		 cmp	 ebp, esp
  002c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002cd	8b e5		 mov	 esp, ebp
  002cf	5d		 pop	 ebp
  002d0	c3		 ret	 0
$L199041:
  002d1	02 00 00 00	 DD	 2
  002d5	00 00 00 00	 DD	 $L199040
$L199040:
  002d9	ec ff ff ff	 DD	 -20			; ffffffecH
  002dd	04 00 00 00	 DD	 4
  002e1	00 00 00 00	 DD	 $L199036
  002e5	e0 ff ff ff	 DD	 -32			; ffffffe0H
  002e9	04 00 00 00	 DD	 4
  002ed	00 00 00 00	 DD	 $L199037
$L199037:
  002f1	73		 DB	 115			; 00000073H
  002f2	74		 DB	 116			; 00000074H
  002f3	72		 DB	 114			; 00000072H
  002f4	54		 DB	 84			; 00000054H
  002f5	79		 DB	 121			; 00000079H
  002f6	70		 DB	 112			; 00000070H
  002f7	65		 DB	 101			; 00000065H
  002f8	00		 DB	 0
$L199036:
  002f9	73		 DB	 115			; 00000073H
  002fa	74		 DB	 116			; 00000074H
  002fb	72		 DB	 114			; 00000072H
  002fc	54		 DB	 84			; 00000054H
  002fd	79		 DB	 121			; 00000079H
  002fe	70		 DB	 112			; 00000070H
  002ff	65		 DB	 101			; 00000065H
  00300	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L199029:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d ec	 lea	 ecx, DWORD PTR _strType$196435[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199030:
  00012	8b f4		 mov	 esi, esp
  00014	8d 4d e0	 lea	 ecx, DWORD PTR _strType$196443[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0001d	3b f4		 cmp	 esi, esp
  0001f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?CreateControl@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  00024	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199035
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateControl@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateControl
EXTRN	?x_GetAttrib@CMarkup@@IBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@HPBD@Z:NEAR ; CMarkup::x_GetAttrib
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\util\markup.h
;	COMDAT ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z
_TEXT	SEGMENT
$T199046 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_szAttrib$ = 12						; size = 4
?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z PROC NEAR ; CMarkup::GetAttrib, COMDAT
; _this$ = ecx

; 58   : 	CString GetAttrib( LPCTSTR szAttrib ) const { return x_GetAttrib(m_iPos,szAttrib); };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T199046[ebp], 0
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _szAttrib$[ebp]
  00021	50		 push	 eax
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00028	52		 push	 edx
  00029	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?x_GetAttrib@CMarkup@@IBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@HPBD@Z ; CMarkup::x_GetAttrib
  00035	8b 4d f8	 mov	 ecx, DWORD PTR $T199046[ebp]
  00038	83 c9 01	 or	 ecx, 1
  0003b	89 4d f8	 mov	 DWORD PTR $T199046[ebp], ecx
  0003e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00041	83 c4 08	 add	 esp, 8
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 08 00	 ret	 8
?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ENDP ; CMarkup::GetAttrib
_TEXT	ENDS
PUBLIC	?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
EXTRN	?SetTextColor@CxStaticText@@QAEKK@Z:NEAR	; CxStaticText::SetTextColor
EXTRN	?SetBackgroundColor@CxStaticText@@QAEKK@Z:NEAR	; CxStaticText::SetBackgroundColor
EXTRN	?SetSingleLine@CxStaticText@@QAEX_N@Z:NEAR	; CxStaticText::SetSingleLine
EXTRN	?SetUnderLine@CxStaticText@@QAEX_N@Z:NEAR	; CxStaticText::SetUnderLine
EXTRN	?SetFontFace@CxStaticText@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CxStaticText::SetFontFace
EXTRN	?SetFontSize@CxStaticText@@QAEXI@Z:NEAR		; CxStaticText::SetFontSize
EXTRN	?EnableClick@CxStaticText@@QAEX_N@Z:NEAR	; CxStaticText::EnableClick
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:NEAR
EXTRN	__imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ:NEAR
EXTRN	__imp__atoi:NEAR
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:NEAR
xdata$x	SEGMENT
$T199068 DD	0ffffffffH
	DD	FLAT:$L199057
	DD	0ffffffffH
	DD	FLAT:$L199058
	DD	01H
	DD	FLAT:$L199059
	DD	01H
	DD	FLAT:$L199060
	DD	01H
	DD	FLAT:$L199061
$T199063 DD	019930520H
	DD	05H
	DD	FLAT:$T199068
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\createcontrolfactory.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv227 = -100						; size = 4
tv238 = -96						; size = 4
tv225 = -92						; size = 4
tv235 = -88						; size = 4
tv223 = -84						; size = 4
tv232 = -80						; size = 4
tv220 = -76						; size = 4
tv228 = -72						; size = 4
tv218 = -68						; size = 4
tv217 = -64						; size = 4
tv214 = -60						; size = 4
tv213 = -56						; size = 4
$T199054 = -52						; size = 4
$T199053 = -48						; size = 4
$T199052 = -44						; size = 4
$T199051 = -40						; size = 4
$T199050 = -36						; size = 4
$T199049 = -32						; size = 4
_strTemp$ = -24						; size = 4
_pStatic$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateStatic

; 67   : {

  00310	55		 push	 ebp
  00311	8b ec		 mov	 ebp, esp
  00313	6a ff		 push	 -1
  00315	68 00 00 00 00	 push	 __ehhandler$?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  0031a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00320	50		 push	 eax
  00321	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00328	83 ec 58	 sub	 esp, 88			; 00000058H
  0032b	56		 push	 esi
  0032c	57		 push	 edi
  0032d	8d 7d 9c	 lea	 edi, DWORD PTR [ebp-100]
  00330	b9 16 00 00 00	 mov	 ecx, 22			; 00000016H
  00335	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0033a	f3 ab		 rep stosd

; 68   : 	CxStaticText *pStatic = (CxStaticText*) pWnd;

  0033c	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  0033f	89 45 f0	 mov	 DWORD PTR _pStatic$[ebp], eax

; 69   : 
; 70   : 	//int top = atoi(pXml->GetAttrib("start_y_top"));
; 71   : 	//int left = atoi(pXml->GetAttrib("start_x_left"));
; 72   : 	//int width = atoi(pXml->GetAttrib("x_delta"));
; 73   : 	//int height = atoi(pXml->GetAttrib("y_delta"));
; 74   : 
; 75   : 	//pStatic->MoveWindow(left,top,width,height);
; 76   : 	//
; 77   : 	pStatic->SetBackgroundColor(StringToRGB(pXml->GetAttrib("background_color")));

  00342	6a 01		 push	 1
  00344	51		 push	 ecx
  00345	8b cc		 mov	 ecx, esp
  00347	89 65 e0	 mov	 DWORD PTR $T199049[ebp], esp
  0034a	68 00 00 00 00	 push	 OFFSET FLAT:$SG196466
  0034f	51		 push	 ecx
  00350	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00353	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00358	89 45 c8	 mov	 DWORD PTR tv213[ebp], eax
  0035b	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  00360	83 c4 08	 add	 esp, 8
  00363	89 45 c4	 mov	 DWORD PTR tv214[ebp], eax
  00366	8b 55 c4	 mov	 edx, DWORD PTR tv214[ebp]
  00369	52		 push	 edx
  0036a	8b 4d f0	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  0036d	e8 00 00 00 00	 call	 ?SetBackgroundColor@CxStaticText@@QAEKK@Z ; CxStaticText::SetBackgroundColor

; 78   : 
; 79   : 	//if(pStatic->IsEnableClick())
; 80   : 		pStatic->SetTextColor(StringToRGB( pXml->GetAttrib("text_color")));

  00372	6a 01		 push	 1
  00374	51		 push	 ecx
  00375	8b c4		 mov	 eax, esp
  00377	89 65 dc	 mov	 DWORD PTR $T199050[ebp], esp
  0037a	68 00 00 00 00	 push	 OFFSET FLAT:$SG196469
  0037f	50		 push	 eax
  00380	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00383	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00388	89 45 c0	 mov	 DWORD PTR tv217[ebp], eax
  0038b	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  00390	83 c4 08	 add	 esp, 8
  00393	89 45 bc	 mov	 DWORD PTR tv218[ebp], eax
  00396	8b 4d bc	 mov	 ecx, DWORD PTR tv218[ebp]
  00399	51		 push	 ecx
  0039a	8b 4d f0	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  0039d	e8 00 00 00 00	 call	 ?SetTextColor@CxStaticText@@QAEKK@Z ; CxStaticText::SetTextColor

; 81   : 
; 82   : 	pStatic->SetSingleLine((bool)(atoi(pXml->GetAttrib("single_line"))));

  003a2	68 00 00 00 00	 push	 OFFSET FLAT:$SG196472
  003a7	8d 55 d8	 lea	 edx, DWORD PTR $T199051[ebp]
  003aa	52		 push	 edx
  003ab	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  003ae	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  003b3	89 45 b8	 mov	 DWORD PTR tv228[ebp], eax
  003b6	8b 45 b8	 mov	 eax, DWORD PTR tv228[ebp]
  003b9	89 45 b4	 mov	 DWORD PTR tv220[ebp], eax
  003bc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  003c3	8b f4		 mov	 esi, esp
  003c5	8b 4d b4	 mov	 ecx, DWORD PTR tv220[ebp]
  003c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  003ce	3b f4		 cmp	 esi, esp
  003d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003d5	8b f4		 mov	 esi, esp
  003d7	50		 push	 eax
  003d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  003de	83 c4 04	 add	 esp, 4
  003e1	3b f4		 cmp	 esi, esp
  003e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003e8	85 c0		 test	 eax, eax
  003ea	0f 95 c1	 setne	 cl
  003ed	51		 push	 ecx
  003ee	8b 4d f0	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  003f1	e8 00 00 00 00	 call	 ?SetSingleLine@CxStaticText@@QAEX_N@Z ; CxStaticText::SetSingleLine
  003f6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  003fd	8b f4		 mov	 esi, esp
  003ff	8d 4d d8	 lea	 ecx, DWORD PTR $T199051[ebp]
  00402	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00408	3b f4		 cmp	 esi, esp
  0040a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 83   : 	CString strTemp = pXml->GetAttrib("under_line");

  0040f	68 00 00 00 00	 push	 OFFSET FLAT:$SG196475
  00414	8d 55 e8	 lea	 edx, DWORD PTR _strTemp$[ebp]
  00417	52		 push	 edx
  00418	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0041b	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00420	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 84   : 	if(!strTemp.IsEmpty())

  00427	8b f4		 mov	 esi, esp
  00429	8d 4d e8	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  0042c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  00432	3b f4		 cmp	 esi, esp
  00434	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00439	0f b6 c0	 movzx	 eax, al
  0043c	85 c0		 test	 eax, eax
  0043e	75 33		 jne	 SHORT $L196476

; 85   : 		pStatic->SetUnderLine((bool)(atoi(strTemp)));

  00440	8b f4		 mov	 esi, esp
  00442	8d 4d e8	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  00445	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0044b	3b f4		 cmp	 esi, esp
  0044d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00452	8b f4		 mov	 esi, esp
  00454	50		 push	 eax
  00455	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0045b	83 c4 04	 add	 esp, 4
  0045e	3b f4		 cmp	 esi, esp
  00460	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00465	85 c0		 test	 eax, eax
  00467	0f 95 c1	 setne	 cl
  0046a	51		 push	 ecx
  0046b	8b 4d f0	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  0046e	e8 00 00 00 00	 call	 ?SetUnderLine@CxStaticText@@QAEX_N@Z ; CxStaticText::SetUnderLine
$L196476:

; 86   : 	strTemp = pXml->GetAttrib("enable_click");

  00473	68 00 00 00 00	 push	 OFFSET FLAT:$SG196479
  00478	8d 55 d4	 lea	 edx, DWORD PTR $T199052[ebp]
  0047b	52		 push	 edx
  0047c	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0047f	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00484	89 45 b0	 mov	 DWORD PTR tv232[ebp], eax
  00487	8b 45 b0	 mov	 eax, DWORD PTR tv232[ebp]
  0048a	89 45 ac	 mov	 DWORD PTR tv223[ebp], eax
  0048d	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00491	8b f4		 mov	 esi, esp
  00493	8b 4d ac	 mov	 ecx, DWORD PTR tv223[ebp]
  00496	51		 push	 ecx
  00497	8d 4d e8	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  0049a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  004a0	3b f4		 cmp	 esi, esp
  004a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004a7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  004ab	8b f4		 mov	 esi, esp
  004ad	8d 4d d4	 lea	 ecx, DWORD PTR $T199052[ebp]
  004b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  004b6	3b f4		 cmp	 esi, esp
  004b8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 87   : 	if(!strTemp.IsEmpty() && !m_mgrPanes->IsChangeColor())

  004bd	8b f4		 mov	 esi, esp
  004bf	8d 4d e8	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  004c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  004c8	3b f4		 cmp	 esi, esp
  004ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004cf	0f b6 d0	 movzx	 edx, al
  004d2	85 d2		 test	 edx, edx
  004d4	75 51		 jne	 SHORT $L196480
  004d6	8b 45 14	 mov	 eax, DWORD PTR _m_mgrPanes$[ebp]
  004d9	8b 10		 mov	 edx, DWORD PTR [eax]
  004db	8b f4		 mov	 esi, esp
  004dd	8b 4d 14	 mov	 ecx, DWORD PTR _m_mgrPanes$[ebp]
  004e0	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]
  004e6	3b f4		 cmp	 esi, esp
  004e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004ed	0f b6 c0	 movzx	 eax, al
  004f0	85 c0		 test	 eax, eax
  004f2	75 33		 jne	 SHORT $L196480

; 88   : 		pStatic->EnableClick((bool)(atoi(strTemp)));

  004f4	8b f4		 mov	 esi, esp
  004f6	8d 4d e8	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  004f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  004ff	3b f4		 cmp	 esi, esp
  00501	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00506	8b f4		 mov	 esi, esp
  00508	50		 push	 eax
  00509	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0050f	83 c4 04	 add	 esp, 4
  00512	3b f4		 cmp	 esi, esp
  00514	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00519	85 c0		 test	 eax, eax
  0051b	0f 95 c1	 setne	 cl
  0051e	51		 push	 ecx
  0051f	8b 4d f0	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  00522	e8 00 00 00 00	 call	 ?EnableClick@CxStaticText@@QAEX_N@Z ; CxStaticText::EnableClick
$L196480:

; 89   : 
; 90   : 	pStatic->SetFontFace(pXml->GetAttrib("font_face"));

  00527	68 00 00 00 00	 push	 OFFSET FLAT:$SG196483
  0052c	8d 55 d0	 lea	 edx, DWORD PTR $T199053[ebp]
  0052f	52		 push	 edx
  00530	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00533	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00538	89 45 a8	 mov	 DWORD PTR tv235[ebp], eax
  0053b	8b 45 a8	 mov	 eax, DWORD PTR tv235[ebp]
  0053e	89 45 a4	 mov	 DWORD PTR tv225[ebp], eax
  00541	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00545	8b 4d a4	 mov	 ecx, DWORD PTR tv225[ebp]
  00548	51		 push	 ecx
  00549	8b 4d f0	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  0054c	e8 00 00 00 00	 call	 ?SetFontFace@CxStaticText@@QAEXABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CxStaticText::SetFontFace
  00551	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00555	8b f4		 mov	 esi, esp
  00557	8d 4d d0	 lea	 ecx, DWORD PTR $T199053[ebp]
  0055a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00560	3b f4		 cmp	 esi, esp
  00562	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 91   : 	pStatic->SetFontSize(atoi(pXml->GetAttrib("font_size")));

  00567	68 00 00 00 00	 push	 OFFSET FLAT:$SG196485
  0056c	8d 55 cc	 lea	 edx, DWORD PTR $T199054[ebp]
  0056f	52		 push	 edx
  00570	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00573	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00578	89 45 a0	 mov	 DWORD PTR tv238[ebp], eax
  0057b	8b 45 a0	 mov	 eax, DWORD PTR tv238[ebp]
  0057e	89 45 9c	 mov	 DWORD PTR tv227[ebp], eax
  00581	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00585	8b f4		 mov	 esi, esp
  00587	8b 4d 9c	 mov	 ecx, DWORD PTR tv227[ebp]
  0058a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00590	3b f4		 cmp	 esi, esp
  00592	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00597	8b f4		 mov	 esi, esp
  00599	50		 push	 eax
  0059a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  005a0	83 c4 04	 add	 esp, 4
  005a3	3b f4		 cmp	 esi, esp
  005a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005aa	50		 push	 eax
  005ab	8b 4d f0	 mov	 ecx, DWORD PTR _pStatic$[ebp]
  005ae	e8 00 00 00 00	 call	 ?SetFontSize@CxStaticText@@QAEXI@Z ; CxStaticText::SetFontSize
  005b3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  005b7	8b f4		 mov	 esi, esp
  005b9	8d 4d cc	 lea	 ecx, DWORD PTR $T199054[ebp]
  005bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  005c2	3b f4		 cmp	 esi, esp
  005c4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 92   : 
; 93   : }

  005c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005d0	8b f4		 mov	 esi, esp
  005d2	8d 4d e8	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  005d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  005db	3b f4		 cmp	 esi, esp
  005dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005e2	52		 push	 edx
  005e3	8b cd		 mov	 ecx, ebp
  005e5	50		 push	 eax
  005e6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L199067
  005ec	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  005f1	58		 pop	 eax
  005f2	5a		 pop	 edx
  005f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  005f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  005fd	5f		 pop	 edi
  005fe	5e		 pop	 esi
  005ff	83 c4 64	 add	 esp, 100		; 00000064H
  00602	3b ec		 cmp	 ebp, esp
  00604	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00609	8b e5		 mov	 esp, ebp
  0060b	5d		 pop	 ebp
  0060c	c3		 ret	 0
$L199067:
  0060d	01 00 00 00	 DD	 1
  00611	00 00 00 00	 DD	 $L199066
$L199066:
  00615	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00619	04 00 00 00	 DD	 4
  0061d	00 00 00 00	 DD	 $L199064
$L199064:
  00621	73		 DB	 115			; 00000073H
  00622	74		 DB	 116			; 00000074H
  00623	72		 DB	 114			; 00000072H
  00624	54		 DB	 84			; 00000054H
  00625	65		 DB	 101			; 00000065H
  00626	6d		 DB	 109			; 0000006dH
  00627	70		 DB	 112			; 00000070H
  00628	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L199057:
  0002e	8b f4		 mov	 esi, esp
  00030	8d 4d d8	 lea	 ecx, DWORD PTR $T199051[ebp]
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00039	3b f4		 cmp	 esi, esp
  0003b	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199058:
  00040	8b f4		 mov	 esi, esp
  00042	8d 4d e8	 lea	 ecx, DWORD PTR _strTemp$[ebp]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0004b	3b f4		 cmp	 esi, esp
  0004d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199059:
  00052	8b f4		 mov	 esi, esp
  00054	8d 4d d4	 lea	 ecx, DWORD PTR $T199052[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0005d	3b f4		 cmp	 esi, esp
  0005f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199060:
  00064	8b f4		 mov	 esi, esp
  00066	8d 4d d0	 lea	 ecx, DWORD PTR $T199053[ebp]
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0006f	3b f4		 cmp	 esi, esp
  00071	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199061:
  00076	8b f4		 mov	 esi, esp
  00078	8d 4d cc	 lea	 ecx, DWORD PTR $T199054[ebp]
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00081	3b f4		 cmp	 esi, esp
  00083	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  00088	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199063
  0008d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateStatic@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateStatic
PUBLIC	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
PUBLIC	?SetButtonSkin@CreateControlFactory@@SAXPAVCxSkinButton@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVISkinMgr@@@Z ; CreateControlFactory::SetButtonSkin
EXTRN	?SetSkin@CxSkinButton@@QAEXPAVCDibBitmap@@00000FFF_N@Z:NEAR ; CxSkinButton::SetSkin
xdata$x	SEGMENT
$T199089 DD	0ffffffffH
	DD	FLAT:$L199080
	DD	00H
	DD	FLAT:$L199081
	DD	00H
	DD	FLAT:$L199082
	DD	00H
	DD	FLAT:$L199083
	DD	00H
	DD	FLAT:$L199084
	DD	00H
	DD	FLAT:$L199085
$T199087 DD	019930520H
	DD	06H
	DD	FLAT:$T199089
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv251 = -112						; size = 4
tv267 = -108						; size = 4
tv249 = -104						; size = 4
tv264 = -100						; size = 4
tv247 = -96						; size = 4
tv261 = -92						; size = 4
tv245 = -88						; size = 4
tv258 = -84						; size = 4
tv242 = -80						; size = 4
tv255 = -76						; size = 4
$T199079 = -72						; size = 4
$T199078 = -65						; size = 1
$T199077 = -64						; size = 4
$T199076 = -57						; size = 1
$T199075 = -56						; size = 4
$T199074 = -49						; size = 1
$T199073 = -48						; size = 4
$T199072 = -41						; size = 1
$T199071 = -40						; size = 4
$T199070 = -33						; size = 1
_pDibMask$ = -32					; size = 4
_pDibDisable$ = -28					; size = 4
_pDibOver$ = -24					; size = 4
_pDibDown$ = -20					; size = 4
_pDibNormal$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pBtn$ = 8						; size = 4
_name$ = 12						; size = 4
_pSkin$ = 16						; size = 4
?SetButtonSkin@CreateControlFactory@@SAXPAVCxSkinButton@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVISkinMgr@@@Z PROC NEAR ; CreateControlFactory::SetButtonSkin

; 95   : {

  00630	55		 push	 ebp
  00631	8b ec		 mov	 ebp, esp
  00633	6a ff		 push	 -1
  00635	68 00 00 00 00	 push	 __ehhandler$?SetButtonSkin@CreateControlFactory@@SAXPAVCxSkinButton@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVISkinMgr@@@Z
  0063a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00640	50		 push	 eax
  00641	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00648	83 ec 64	 sub	 esp, 100		; 00000064H
  0064b	56		 push	 esi
  0064c	57		 push	 edi
  0064d	8d 7d 90	 lea	 edi, DWORD PTR [ebp-112]
  00650	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00655	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0065a	f3 ab		 rep stosd
  0065c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 96   : 	CDibBitmap *pDibNormal, *pDibDown, *pDibOver, *pDibDisable, *pDibMask;
; 97   : 
; 98   : 	if(name == "")

  00663	68 00 00 00 00	 push	 OFFSET FLAT:$SG196497
  00668	8d 45 0c	 lea	 eax, DWORD PTR _name$[ebp]
  0066b	50		 push	 eax
  0066c	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  00671	83 c4 08	 add	 esp, 8
  00674	0f b6 c8	 movzx	 ecx, al
  00677	85 c9		 test	 ecx, ecx
  00679	74 1e		 je	 SHORT $L196496

; 99   : 		return;

  0067b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00682	8b f4		 mov	 esi, esp
  00684	8d 4d 0c	 lea	 ecx, DWORD PTR _name$[ebp]
  00687	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0068d	3b f4		 cmp	 esi, esp
  0068f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00694	e9 3a 03 00 00	 jmp	 $L196490
$L196496:

; 100  : 	if((pDibNormal = pSkin->GetDibBmp(name + "normal")) == NULL)

  00699	68 00 00 00 00	 push	 OFFSET FLAT:$SG196501
  0069e	8d 55 0c	 lea	 edx, DWORD PTR _name$[ebp]
  006a1	52		 push	 edx
  006a2	8d 45 d8	 lea	 eax, DWORD PTR $T199071[ebp]
  006a5	50		 push	 eax
  006a6	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  006ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  006ae	89 45 b4	 mov	 DWORD PTR tv255[ebp], eax
  006b1	8b 4d b4	 mov	 ecx, DWORD PTR tv255[ebp]
  006b4	89 4d b0	 mov	 DWORD PTR tv242[ebp], ecx
  006b7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  006bb	8b f4		 mov	 esi, esp
  006bd	8b 4d b0	 mov	 ecx, DWORD PTR tv242[ebp]
  006c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  006c6	3b f4		 cmp	 esi, esp
  006c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006cd	8b f4		 mov	 esi, esp
  006cf	50		 push	 eax
  006d0	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  006d3	8b 02		 mov	 eax, DWORD PTR [edx]
  006d5	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  006d8	ff 50 04	 call	 DWORD PTR [eax+4]
  006db	3b f4		 cmp	 esi, esp
  006dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006e2	89 45 f0	 mov	 DWORD PTR _pDibNormal$[ebp], eax
  006e5	33 c9		 xor	 ecx, ecx
  006e7	83 7d f0 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  006eb	0f 94 c1	 sete	 cl
  006ee	88 4d df	 mov	 BYTE PTR $T199070[ebp], cl
  006f1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  006f5	8b f4		 mov	 esi, esp
  006f7	8d 4d d8	 lea	 ecx, DWORD PTR $T199071[ebp]
  006fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00700	3b f4		 cmp	 esi, esp
  00702	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 101  : 		;//pDibNormal = pSkin->PutDibBmp(name + "normal", pSkin->m_strSkinPath);
; 102  : 
; 103  : 	if(pDibNormal == NULL || !pDibNormal->is_Loaded)

  00707	83 7d f0 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  0070b	74 0b		 je	 SHORT $L196503
  0070d	8b 45 f0	 mov	 eax, DWORD PTR _pDibNormal$[ebp]
  00710	0f b6 48 5c	 movzx	 ecx, BYTE PTR [eax+92]
  00714	85 c9		 test	 ecx, ecx
  00716	75 1e		 jne	 SHORT $L196502
$L196503:

; 104  : 		return;

  00718	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0071f	8b f4		 mov	 esi, esp
  00721	8d 4d 0c	 lea	 ecx, DWORD PTR _name$[ebp]
  00724	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0072a	3b f4		 cmp	 esi, esp
  0072c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00731	e9 9d 02 00 00	 jmp	 $L196490
$L196502:

; 105  : 
; 106  : 	if((pDibDown = pSkin->GetDibBmp(name + "down", false)) == NULL){

  00736	68 00 00 00 00	 push	 OFFSET FLAT:$SG196507
  0073b	8d 55 0c	 lea	 edx, DWORD PTR _name$[ebp]
  0073e	52		 push	 edx
  0073f	8d 45 d0	 lea	 eax, DWORD PTR $T199073[ebp]
  00742	50		 push	 eax
  00743	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00748	83 c4 0c	 add	 esp, 12			; 0000000cH
  0074b	89 45 ac	 mov	 DWORD PTR tv258[ebp], eax
  0074e	8b 4d ac	 mov	 ecx, DWORD PTR tv258[ebp]
  00751	89 4d a8	 mov	 DWORD PTR tv245[ebp], ecx
  00754	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00758	8b f4		 mov	 esi, esp
  0075a	6a 00		 push	 0
  0075c	8b fc		 mov	 edi, esp
  0075e	8b 4d a8	 mov	 ecx, DWORD PTR tv245[ebp]
  00761	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00767	3b fc		 cmp	 edi, esp
  00769	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0076e	50		 push	 eax
  0076f	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00772	8b 02		 mov	 eax, DWORD PTR [edx]
  00774	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00777	ff 10		 call	 DWORD PTR [eax]
  00779	3b f4		 cmp	 esi, esp
  0077b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00780	89 45 ec	 mov	 DWORD PTR _pDibDown$[ebp], eax
  00783	33 c9		 xor	 ecx, ecx
  00785	83 7d ec 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  00789	0f 94 c1	 sete	 cl
  0078c	88 4d d7	 mov	 BYTE PTR $T199072[ebp], cl
  0078f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00793	8b f4		 mov	 esi, esp
  00795	8d 4d d0	 lea	 ecx, DWORD PTR $T199073[ebp]
  00798	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0079e	3b f4		 cmp	 esi, esp
  007a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007a5	0f b6 55 d7	 movzx	 edx, BYTE PTR $T199072[ebp]
  007a9	85 d2		 test	 edx, edx
  007ab	74 17		 je	 SHORT $L196505

; 107  : 		;//pDibDown = pSkin->PutDibBmp(name + "down", pSkin->m_strSkinPath);
; 108  : 		if(pDibDown == NULL || !pDibDown->is_Loaded)

  007ad	83 7d ec 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  007b1	74 0b		 je	 SHORT $L196509
  007b3	8b 45 ec	 mov	 eax, DWORD PTR _pDibDown$[ebp]
  007b6	0f b6 48 5c	 movzx	 ecx, BYTE PTR [eax+92]
  007ba	85 c9		 test	 ecx, ecx
  007bc	75 06		 jne	 SHORT $L196505
$L196509:

; 109  : 			pDibDown = pDibNormal;

  007be	8b 55 f0	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  007c1	89 55 ec	 mov	 DWORD PTR _pDibDown$[ebp], edx
$L196505:

; 110  : 	}
; 111  : 
; 112  : 	if((pDibOver = pSkin->GetDibBmp(name + "over", false)) == NULL){

  007c4	68 00 00 00 00	 push	 OFFSET FLAT:$SG196513
  007c9	8d 45 0c	 lea	 eax, DWORD PTR _name$[ebp]
  007cc	50		 push	 eax
  007cd	8d 4d c8	 lea	 ecx, DWORD PTR $T199075[ebp]
  007d0	51		 push	 ecx
  007d1	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  007d6	83 c4 0c	 add	 esp, 12			; 0000000cH
  007d9	89 45 a4	 mov	 DWORD PTR tv261[ebp], eax
  007dc	8b 55 a4	 mov	 edx, DWORD PTR tv261[ebp]
  007df	89 55 a0	 mov	 DWORD PTR tv247[ebp], edx
  007e2	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  007e6	8b f4		 mov	 esi, esp
  007e8	6a 00		 push	 0
  007ea	8b fc		 mov	 edi, esp
  007ec	8b 4d a0	 mov	 ecx, DWORD PTR tv247[ebp]
  007ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  007f5	3b fc		 cmp	 edi, esp
  007f7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007fc	50		 push	 eax
  007fd	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  00800	8b 10		 mov	 edx, DWORD PTR [eax]
  00802	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00805	ff 12		 call	 DWORD PTR [edx]
  00807	3b f4		 cmp	 esi, esp
  00809	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0080e	89 45 e8	 mov	 DWORD PTR _pDibOver$[ebp], eax
  00811	33 c0		 xor	 eax, eax
  00813	83 7d e8 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  00817	0f 94 c0	 sete	 al
  0081a	88 45 cf	 mov	 BYTE PTR $T199074[ebp], al
  0081d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00821	8b f4		 mov	 esi, esp
  00823	8d 4d c8	 lea	 ecx, DWORD PTR $T199075[ebp]
  00826	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0082c	3b f4		 cmp	 esi, esp
  0082e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00833	0f b6 4d cf	 movzx	 ecx, BYTE PTR $T199074[ebp]
  00837	85 c9		 test	 ecx, ecx
  00839	74 25		 je	 SHORT $L196511

; 113  : 		;//pDibOver = pSkin->PutDibBmp(name + "over", pSkin->m_strSkinPath);
; 114  : 		if(pDibOver == NULL || !pDibOver->is_Loaded)

  0083b	83 7d e8 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  0083f	74 0b		 je	 SHORT $L196515
  00841	8b 55 e8	 mov	 edx, DWORD PTR _pDibOver$[ebp]
  00844	0f b6 42 5c	 movzx	 eax, BYTE PTR [edx+92]
  00848	85 c0		 test	 eax, eax
  0084a	75 08		 jne	 SHORT $L196514
$L196515:

; 115  : 			pDibOver = pDibDown;

  0084c	8b 4d ec	 mov	 ecx, DWORD PTR _pDibDown$[ebp]
  0084f	89 4d e8	 mov	 DWORD PTR _pDibOver$[ebp], ecx

; 116  : 		else if(pDibOver == NULL)

  00852	eb 0c		 jmp	 SHORT $L196511
$L196514:
  00854	83 7d e8 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  00858	75 06		 jne	 SHORT $L196511

; 117  : 			pDibOver = pDibNormal;

  0085a	8b 55 f0	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  0085d	89 55 e8	 mov	 DWORD PTR _pDibOver$[ebp], edx
$L196511:

; 118  : 	}
; 119  : 
; 120  : 	if((pDibDisable = pSkin->GetDibBmp(name + "disable", false)) == NULL){

  00860	68 00 00 00 00	 push	 OFFSET FLAT:$SG196521
  00865	8d 45 0c	 lea	 eax, DWORD PTR _name$[ebp]
  00868	50		 push	 eax
  00869	8d 4d c0	 lea	 ecx, DWORD PTR $T199077[ebp]
  0086c	51		 push	 ecx
  0086d	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00872	83 c4 0c	 add	 esp, 12			; 0000000cH
  00875	89 45 9c	 mov	 DWORD PTR tv264[ebp], eax
  00878	8b 55 9c	 mov	 edx, DWORD PTR tv264[ebp]
  0087b	89 55 98	 mov	 DWORD PTR tv249[ebp], edx
  0087e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00882	8b f4		 mov	 esi, esp
  00884	6a 00		 push	 0
  00886	8b fc		 mov	 edi, esp
  00888	8b 4d 98	 mov	 ecx, DWORD PTR tv249[ebp]
  0088b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00891	3b fc		 cmp	 edi, esp
  00893	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00898	50		 push	 eax
  00899	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  0089c	8b 10		 mov	 edx, DWORD PTR [eax]
  0089e	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  008a1	ff 12		 call	 DWORD PTR [edx]
  008a3	3b f4		 cmp	 esi, esp
  008a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008aa	89 45 e4	 mov	 DWORD PTR _pDibDisable$[ebp], eax
  008ad	33 c0		 xor	 eax, eax
  008af	83 7d e4 00	 cmp	 DWORD PTR _pDibDisable$[ebp], 0
  008b3	0f 94 c0	 sete	 al
  008b6	88 45 c7	 mov	 BYTE PTR $T199076[ebp], al
  008b9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  008bd	8b f4		 mov	 esi, esp
  008bf	8d 4d c0	 lea	 ecx, DWORD PTR $T199077[ebp]
  008c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  008c8	3b f4		 cmp	 esi, esp
  008ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008cf	0f b6 4d c7	 movzx	 ecx, BYTE PTR $T199076[ebp]
  008d3	85 c9		 test	 ecx, ecx
  008d5	74 17		 je	 SHORT $L196519

; 121  : 		;//pDibDisable = pSkin->PutDibBmp(name + "disable", pSkin->m_strSkinPath);
; 122  : 		if(pDibDisable == NULL || !pDibDisable->is_Loaded)

  008d7	83 7d e4 00	 cmp	 DWORD PTR _pDibDisable$[ebp], 0
  008db	74 0b		 je	 SHORT $L196523
  008dd	8b 55 e4	 mov	 edx, DWORD PTR _pDibDisable$[ebp]
  008e0	0f b6 42 5c	 movzx	 eax, BYTE PTR [edx+92]
  008e4	85 c0		 test	 eax, eax
  008e6	75 06		 jne	 SHORT $L196519
$L196523:

; 123  : 			pDibDisable = pDibNormal;

  008e8	8b 4d f0	 mov	 ecx, DWORD PTR _pDibNormal$[ebp]
  008eb	89 4d e4	 mov	 DWORD PTR _pDibDisable$[ebp], ecx
$L196519:

; 124  : 	}
; 125  : 
; 126  : 	if((pDibMask = pSkin->GetDibBmp(name + "mask",false)) == NULL){

  008ee	68 00 00 00 00	 push	 OFFSET FLAT:$SG196527
  008f3	8d 55 0c	 lea	 edx, DWORD PTR _name$[ebp]
  008f6	52		 push	 edx
  008f7	8d 45 b8	 lea	 eax, DWORD PTR $T199079[ebp]
  008fa	50		 push	 eax
  008fb	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00900	83 c4 0c	 add	 esp, 12			; 0000000cH
  00903	89 45 94	 mov	 DWORD PTR tv267[ebp], eax
  00906	8b 4d 94	 mov	 ecx, DWORD PTR tv267[ebp]
  00909	89 4d 90	 mov	 DWORD PTR tv251[ebp], ecx
  0090c	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00910	8b f4		 mov	 esi, esp
  00912	6a 00		 push	 0
  00914	8b fc		 mov	 edi, esp
  00916	8b 4d 90	 mov	 ecx, DWORD PTR tv251[ebp]
  00919	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0091f	3b fc		 cmp	 edi, esp
  00921	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00926	50		 push	 eax
  00927	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  0092a	8b 02		 mov	 eax, DWORD PTR [edx]
  0092c	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0092f	ff 10		 call	 DWORD PTR [eax]
  00931	3b f4		 cmp	 esi, esp
  00933	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00938	89 45 e0	 mov	 DWORD PTR _pDibMask$[ebp], eax
  0093b	33 c9		 xor	 ecx, ecx
  0093d	83 7d e0 00	 cmp	 DWORD PTR _pDibMask$[ebp], 0
  00941	0f 94 c1	 sete	 cl
  00944	88 4d bf	 mov	 BYTE PTR $T199078[ebp], cl
  00947	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0094b	8b f4		 mov	 esi, esp
  0094d	8d 4d b8	 lea	 ecx, DWORD PTR $T199079[ebp]
  00950	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00956	3b f4		 cmp	 esi, esp
  00958	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 127  : 		;//pDibMask = pSkin->PutDibBmp(name + "mask", pSkin->m_strSkinPath);
; 128  : 	}
; 129  : 
; 130  : 	if(pDibMask == NULL ||pDibMask->is_Loaded)

  0095d	83 7d e0 00	 cmp	 DWORD PTR _pDibMask$[ebp], 0
  00961	74 0b		 je	 SHORT $L196529
  00963	8b 45 e0	 mov	 eax, DWORD PTR _pDibMask$[ebp]
  00966	0f b6 48 5c	 movzx	 ecx, BYTE PTR [eax+92]
  0096a	85 c9		 test	 ecx, ecx
  0096c	74 26		 je	 SHORT $L196528
$L196529:

; 131  : 		pBtn->SetSkin(pDibNormal, pDibDown, pDibOver, pDibDisable,0,0,0,0,0);

  0096e	6a 00		 push	 0
  00970	6a 00		 push	 0
  00972	6a 00		 push	 0
  00974	6a 00		 push	 0
  00976	6a 00		 push	 0
  00978	6a 00		 push	 0
  0097a	8b 55 e4	 mov	 edx, DWORD PTR _pDibDisable$[ebp]
  0097d	52		 push	 edx
  0097e	8b 45 e8	 mov	 eax, DWORD PTR _pDibOver$[ebp]
  00981	50		 push	 eax
  00982	8b 4d ec	 mov	 ecx, DWORD PTR _pDibDown$[ebp]
  00985	51		 push	 ecx
  00986	8b 55 f0	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  00989	52		 push	 edx
  0098a	8b 4d 08	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  0098d	e8 00 00 00 00	 call	 ?SetSkin@CxSkinButton@@QAEXPAVCDibBitmap@@00000FFF_N@Z ; CxSkinButton::SetSkin

; 132  : 	else

  00992	eb 26		 jmp	 SHORT $L196530
$L196528:

; 133  : 		pBtn->SetSkin(pDibNormal, pDibDown, pDibOver, pDibDisable,0,pDibMask,0,0,0);

  00994	6a 00		 push	 0
  00996	6a 00		 push	 0
  00998	6a 00		 push	 0
  0099a	6a 00		 push	 0
  0099c	8b 45 e0	 mov	 eax, DWORD PTR _pDibMask$[ebp]
  0099f	50		 push	 eax
  009a0	6a 00		 push	 0
  009a2	8b 4d e4	 mov	 ecx, DWORD PTR _pDibDisable$[ebp]
  009a5	51		 push	 ecx
  009a6	8b 55 e8	 mov	 edx, DWORD PTR _pDibOver$[ebp]
  009a9	52		 push	 edx
  009aa	8b 45 ec	 mov	 eax, DWORD PTR _pDibDown$[ebp]
  009ad	50		 push	 eax
  009ae	8b 4d f0	 mov	 ecx, DWORD PTR _pDibNormal$[ebp]
  009b1	51		 push	 ecx
  009b2	8b 4d 08	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  009b5	e8 00 00 00 00	 call	 ?SetSkin@CxSkinButton@@QAEXPAVCDibBitmap@@00000FFF_N@Z ; CxSkinButton::SetSkin
$L196530:

; 134  : }

  009ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  009c1	8b f4		 mov	 esi, esp
  009c3	8d 4d 0c	 lea	 ecx, DWORD PTR _name$[ebp]
  009c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  009cc	3b f4		 cmp	 esi, esp
  009ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L196490:
  009d3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  009d6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  009dd	5f		 pop	 edi
  009de	5e		 pop	 esi
  009df	83 c4 70	 add	 esp, 112		; 00000070H
  009e2	3b ec		 cmp	 ebp, esp
  009e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009e9	8b e5		 mov	 esp, ebp
  009eb	5d		 pop	 ebp
  009ec	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L199080:
  00092	8b f4		 mov	 esi, esp
  00094	8d 4d 0c	 lea	 ecx, DWORD PTR _name$[ebp]
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0009d	3b f4		 cmp	 esi, esp
  0009f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199081:
  000a4	8b f4		 mov	 esi, esp
  000a6	8d 4d d8	 lea	 ecx, DWORD PTR $T199071[ebp]
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000af	3b f4		 cmp	 esi, esp
  000b1	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199082:
  000b6	8b f4		 mov	 esi, esp
  000b8	8d 4d d0	 lea	 ecx, DWORD PTR $T199073[ebp]
  000bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000c1	3b f4		 cmp	 esi, esp
  000c3	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199083:
  000c8	8b f4		 mov	 esi, esp
  000ca	8d 4d c8	 lea	 ecx, DWORD PTR $T199075[ebp]
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000d3	3b f4		 cmp	 esi, esp
  000d5	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199084:
  000da	8b f4		 mov	 esi, esp
  000dc	8d 4d c0	 lea	 ecx, DWORD PTR $T199077[ebp]
  000df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000e5	3b f4		 cmp	 esi, esp
  000e7	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199085:
  000ec	8b f4		 mov	 esi, esp
  000ee	8d 4d b8	 lea	 ecx, DWORD PTR $T199079[ebp]
  000f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000f7	3b f4		 cmp	 esi, esp
  000f9	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?SetButtonSkin@CreateControlFactory@@SAXPAVCxSkinButton@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVISkinMgr@@@Z:
  000fe	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199087
  00103	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetButtonSkin@CreateControlFactory@@SAXPAVCxSkinButton@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PAVISkinMgr@@@Z ENDP ; CreateControlFactory::SetButtonSkin
PUBLIC	??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
EXTRN	?SetWindowsText@CSkinButton2@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CSkinButton2::SetWindowsText
EXTRN	?SetToolTipText@CSkinButton2@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:NEAR ; CSkinButton2::SetToolTipText
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CWnd::GetWindowTextA
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:NEAR
xdata$x	SEGMENT
$T199114 DD	0ffffffffH
	DD	FLAT:$L199095
	DD	00H
	DD	FLAT:$L199097
	DD	01H
	DD	FLAT:$L199098
	DD	02H
	DD	FLAT:$L199100
	DD	03H
	DD	FLAT:$L199101
$T199104 DD	019930520H
	DD	05H
	DD	FLAT:$T199114
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv182 = -132						; size = 4
tv187 = -128						; size = 4
tv179 = -124						; size = 4
tv175 = -120						; size = 4
$T199094 = -116						; size = 4
$T199093 = -112						; size = 4
$T199092 = -108						; size = 4
_skinPath$ = -100					; size = 28
_bmpPath$ = -64						; size = 4
_strToolText$ = -52					; size = 4
_strText$ = -40						; size = 4
_tooltip$ = -28						; size = 4
_pSkinBtn2$ = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateButton2

; 137  : {

  009f0	55		 push	 ebp
  009f1	8b ec		 mov	 ebp, esp
  009f3	6a ff		 push	 -1
  009f5	68 00 00 00 00	 push	 __ehhandler$?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  009fa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00a00	50		 push	 eax
  00a01	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00a08	83 ec 78	 sub	 esp, 120		; 00000078H
  00a0b	56		 push	 esi
  00a0c	57		 push	 edi
  00a0d	8d bd 7c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-132]
  00a13	b9 1e 00 00 00	 mov	 ecx, 30			; 0000001eH
  00a18	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00a1d	f3 ab		 rep stosd
  00a1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00a24	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 138  : 	CSkinButton2* pSkinBtn2 = (CSkinButton2*)pWnd;

  00a27	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  00a2a	89 45 ec	 mov	 DWORD PTR _pSkinBtn2$[ebp], eax

; 139  : 	CString tooltip = pXml->GetAttrib("tooltip"); 

  00a2d	68 00 00 00 00	 push	 OFFSET FLAT:$SG196541
  00a32	8d 4d e4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  00a35	51		 push	 ecx
  00a36	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00a39	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00a3e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 140  : 	
; 141  : 	if(tooltip != "")

  00a45	68 00 00 00 00	 push	 OFFSET FLAT:$SG196543
  00a4a	8d 55 e4	 lea	 edx, DWORD PTR _tooltip$[ebp]
  00a4d	52		 push	 edx
  00a4e	e8 00 00 00 00	 call	 ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
  00a53	83 c4 08	 add	 esp, 8
  00a56	0f b6 c0	 movzx	 eax, al
  00a59	85 c0		 test	 eax, eax
  00a5b	74 26		 je	 SHORT $L196542

; 142  : 		pSkinBtn2->SetToolTipText(tooltip);

  00a5d	6a 01		 push	 1
  00a5f	51		 push	 ecx
  00a60	8b cc		 mov	 ecx, esp
  00a62	89 65 94	 mov	 DWORD PTR $T199092[ebp], esp
  00a65	8b f4		 mov	 esi, esp
  00a67	8d 55 e4	 lea	 edx, DWORD PTR _tooltip$[ebp]
  00a6a	52		 push	 edx
  00a6b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00a71	3b f4		 cmp	 esi, esp
  00a73	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a78	89 45 88	 mov	 DWORD PTR tv175[ebp], eax
  00a7b	8b 4d ec	 mov	 ecx, DWORD PTR _pSkinBtn2$[ebp]
  00a7e	e8 00 00 00 00	 call	 ?SetToolTipText@CSkinButton2@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CSkinButton2::SetToolTipText
$L196542:

; 143  : 
; 144  : 	CString strText = pXml->GetAttrib("text");

  00a83	68 00 00 00 00	 push	 OFFSET FLAT:$SG196547
  00a88	8d 45 d8	 lea	 eax, DWORD PTR _strText$[ebp]
  00a8b	50		 push	 eax
  00a8c	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00a8f	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00a94	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 145  : 	
; 146  : 	CString strToolText;

  00a98	8b f4		 mov	 esi, esp
  00a9a	8d 4d cc	 lea	 ecx, DWORD PTR _strToolText$[ebp]
  00a9d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00aa3	3b f4		 cmp	 esi, esp
  00aa5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00aaa	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 147  : 	pSkinBtn2->GetWindowText(strToolText);

  00aae	8d 4d cc	 lea	 ecx, DWORD PTR _strToolText$[ebp]
  00ab1	51		 push	 ecx
  00ab2	8b 4d ec	 mov	 ecx, DWORD PTR _pSkinBtn2$[ebp]
  00ab5	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CWnd::GetWindowTextA

; 148  : 	if(strToolText == "")

  00aba	68 00 00 00 00	 push	 OFFSET FLAT:$SG196550
  00abf	8d 55 cc	 lea	 edx, DWORD PTR _strToolText$[ebp]
  00ac2	52		 push	 edx
  00ac3	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  00ac8	83 c4 08	 add	 esp, 8
  00acb	0f b6 c0	 movzx	 eax, al
  00ace	85 c0		 test	 eax, eax
  00ad0	74 24		 je	 SHORT $L196549

; 149  : 		pSkinBtn2->SetWindowsText(strText);

  00ad2	51		 push	 ecx
  00ad3	8b cc		 mov	 ecx, esp
  00ad5	89 65 90	 mov	 DWORD PTR $T199093[ebp], esp
  00ad8	8b f4		 mov	 esi, esp
  00ada	8d 55 d8	 lea	 edx, DWORD PTR _strText$[ebp]
  00add	52		 push	 edx
  00ade	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00ae4	3b f4		 cmp	 esi, esp
  00ae6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00aeb	89 45 84	 mov	 DWORD PTR tv179[ebp], eax
  00aee	8b 4d ec	 mov	 ecx, DWORD PTR _pSkinBtn2$[ebp]
  00af1	e8 00 00 00 00	 call	 ?SetWindowsText@CSkinButton2@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CSkinButton2::SetWindowsText
$L196549:

; 150  : 
; 151  : 	CString bmpPath = pXml->GetAttrib("bmp");

  00af6	68 00 00 00 00	 push	 OFFSET FLAT:$SG196554
  00afb	8d 45 c0	 lea	 eax, DWORD PTR _bmpPath$[ebp]
  00afe	50		 push	 eax
  00aff	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00b02	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00b07	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 152  : 	string  skinPath = pSkin->GetSkinPath();

  00b0b	8b f4		 mov	 esi, esp
  00b0d	8d 4d 8c	 lea	 ecx, DWORD PTR $T199094[ebp]
  00b10	51		 push	 ecx
  00b11	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00b14	83 c1 04	 add	 ecx, 4
  00b17	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00b1a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00b1d	ff 50 40	 call	 DWORD PTR [eax+64]
  00b20	3b f4		 cmp	 esi, esp
  00b22	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b27	89 45 80	 mov	 DWORD PTR tv187[ebp], eax
  00b2a	8b 4d 80	 mov	 ecx, DWORD PTR tv187[ebp]
  00b2d	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv182[ebp], ecx
  00b33	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00b37	8b f4		 mov	 esi, esp
  00b39	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv182[ebp]
  00b3f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00b45	3b f4		 cmp	 esi, esp
  00b47	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b4c	8b f4		 mov	 esi, esp
  00b4e	50		 push	 eax
  00b4f	8d 4d 9c	 lea	 ecx, DWORD PTR _skinPath$[ebp]
  00b52	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00b58	3b f4		 cmp	 esi, esp
  00b5a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b5f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00b63	8b f4		 mov	 esi, esp
  00b65	8d 4d 8c	 lea	 ecx, DWORD PTR $T199094[ebp]
  00b68	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00b6e	3b f4		 cmp	 esi, esp
  00b70	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 153  : }

  00b75	8b f4		 mov	 esi, esp
  00b77	8d 4d 9c	 lea	 ecx, DWORD PTR _skinPath$[ebp]
  00b7a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00b80	3b f4		 cmp	 esi, esp
  00b82	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b87	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00b8b	8b f4		 mov	 esi, esp
  00b8d	8d 4d c0	 lea	 ecx, DWORD PTR _bmpPath$[ebp]
  00b90	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00b96	3b f4		 cmp	 esi, esp
  00b98	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b9d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00ba1	8b f4		 mov	 esi, esp
  00ba3	8d 4d cc	 lea	 ecx, DWORD PTR _strToolText$[ebp]
  00ba6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00bac	3b f4		 cmp	 esi, esp
  00bae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bb3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00bb7	8b f4		 mov	 esi, esp
  00bb9	8d 4d d8	 lea	 ecx, DWORD PTR _strText$[ebp]
  00bbc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00bc2	3b f4		 cmp	 esi, esp
  00bc4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bc9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00bd0	8b f4		 mov	 esi, esp
  00bd2	8d 4d e4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  00bd5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00bdb	3b f4		 cmp	 esi, esp
  00bdd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00be2	52		 push	 edx
  00be3	8b cd		 mov	 ecx, ebp
  00be5	50		 push	 eax
  00be6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L199113
  00bec	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00bf1	58		 pop	 eax
  00bf2	5a		 pop	 edx
  00bf3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00bf6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00bfd	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c00	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c05	5f		 pop	 edi
  00c06	5e		 pop	 esi
  00c07	81 c4 84 00 00
	00		 add	 esp, 132		; 00000084H
  00c0d	3b ec		 cmp	 ebp, esp
  00c0f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c14	8b e5		 mov	 esp, ebp
  00c16	5d		 pop	 ebp
  00c17	c3		 ret	 0
$L199113:
  00c18	05 00 00 00	 DD	 5
  00c1c	00 00 00 00	 DD	 $L199112
$L199112:
  00c20	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00c24	04 00 00 00	 DD	 4
  00c28	00 00 00 00	 DD	 $L199105
  00c2c	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00c30	04 00 00 00	 DD	 4
  00c34	00 00 00 00	 DD	 $L199106
  00c38	cc ff ff ff	 DD	 -52			; ffffffccH
  00c3c	04 00 00 00	 DD	 4
  00c40	00 00 00 00	 DD	 $L199107
  00c44	c0 ff ff ff	 DD	 -64			; ffffffc0H
  00c48	04 00 00 00	 DD	 4
  00c4c	00 00 00 00	 DD	 $L199108
  00c50	9c ff ff ff	 DD	 -100			; ffffff9cH
  00c54	1c 00 00 00	 DD	 28			; 0000001cH
  00c58	00 00 00 00	 DD	 $L199109
$L199109:
  00c5c	73		 DB	 115			; 00000073H
  00c5d	6b		 DB	 107			; 0000006bH
  00c5e	69		 DB	 105			; 00000069H
  00c5f	6e		 DB	 110			; 0000006eH
  00c60	50		 DB	 80			; 00000050H
  00c61	61		 DB	 97			; 00000061H
  00c62	74		 DB	 116			; 00000074H
  00c63	68		 DB	 104			; 00000068H
  00c64	00		 DB	 0
$L199108:
  00c65	62		 DB	 98			; 00000062H
  00c66	6d		 DB	 109			; 0000006dH
  00c67	70		 DB	 112			; 00000070H
  00c68	50		 DB	 80			; 00000050H
  00c69	61		 DB	 97			; 00000061H
  00c6a	74		 DB	 116			; 00000074H
  00c6b	68		 DB	 104			; 00000068H
  00c6c	00		 DB	 0
$L199107:
  00c6d	73		 DB	 115			; 00000073H
  00c6e	74		 DB	 116			; 00000074H
  00c6f	72		 DB	 114			; 00000072H
  00c70	54		 DB	 84			; 00000054H
  00c71	6f		 DB	 111			; 0000006fH
  00c72	6f		 DB	 111			; 0000006fH
  00c73	6c		 DB	 108			; 0000006cH
  00c74	54		 DB	 84			; 00000054H
  00c75	65		 DB	 101			; 00000065H
  00c76	78		 DB	 120			; 00000078H
  00c77	74		 DB	 116			; 00000074H
  00c78	00		 DB	 0
$L199106:
  00c79	73		 DB	 115			; 00000073H
  00c7a	74		 DB	 116			; 00000074H
  00c7b	72		 DB	 114			; 00000072H
  00c7c	54		 DB	 84			; 00000054H
  00c7d	65		 DB	 101			; 00000065H
  00c7e	78		 DB	 120			; 00000078H
  00c7f	74		 DB	 116			; 00000074H
  00c80	00		 DB	 0
$L199105:
  00c81	74		 DB	 116			; 00000074H
  00c82	6f		 DB	 111			; 0000006fH
  00c83	6f		 DB	 111			; 0000006fH
  00c84	6c		 DB	 108			; 0000006cH
  00c85	74		 DB	 116			; 00000074H
  00c86	69		 DB	 105			; 00000069H
  00c87	70		 DB	 112			; 00000070H
  00c88	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L199095:
  00108	8b f4		 mov	 esi, esp
  0010a	8d 4d e4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  0010d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00113	3b f4		 cmp	 esi, esp
  00115	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199097:
  0011a	8b f4		 mov	 esi, esp
  0011c	8d 4d d8	 lea	 ecx, DWORD PTR _strText$[ebp]
  0011f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00125	3b f4		 cmp	 esi, esp
  00127	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199098:
  0012c	8b f4		 mov	 esi, esp
  0012e	8d 4d cc	 lea	 ecx, DWORD PTR _strToolText$[ebp]
  00131	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00137	3b f4		 cmp	 esi, esp
  00139	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199100:
  0013e	8b f4		 mov	 esi, esp
  00140	8d 4d c0	 lea	 ecx, DWORD PTR _bmpPath$[ebp]
  00143	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00149	3b f4		 cmp	 esi, esp
  0014b	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199101:
  00150	8b f4		 mov	 esi, esp
  00152	8d 4d 8c	 lea	 ecx, DWORD PTR $T199094[ebp]
  00155	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0015b	3b f4		 cmp	 esi, esp
  0015d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  00162	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199104
  00167	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateButton2@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateButton2
PUBLIC	?SetAttrib@CMarkup@@QAE_NPBD0@Z			; CMarkup::SetAttrib
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:NEAR
EXTRN	?GetToolTipText@CxSkinButton@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:NEAR ; CxSkinButton::GetToolTipText
EXTRN	?SetToolTipText@CxSkinButton@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CxSkinButton::SetToolTipText
EXTRN	?SetNormalTextColor@CxSkinButton@@QAEKK@Z:NEAR	; CxSkinButton::SetNormalTextColor
EXTRN	?SetDownTextColor@CxSkinButton@@QAEKK@Z:NEAR	; CxSkinButton::SetDownTextColor
EXTRN	?SetOverTextColor@CxSkinButton@@QAEKK@Z:NEAR	; CxSkinButton::SetOverTextColor
EXTRN	?SetDisableTextColor@CxSkinButton@@QAEKK@Z:NEAR	; CxSkinButton::SetDisableTextColor
EXTRN	?GetWidth@CDibBitmap@@QAEHXZ:NEAR		; CDibBitmap::GetWidth
EXTRN	?GetHeight@CDibBitmap@@QAEHXZ:NEAR		; CDibBitmap::GetHeight
EXTRN	?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z:NEAR ; CSkinMgr::PutDibBmp
EXTRN	?SetChangeColorSign@CSkinMgr@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:NEAR ; CSkinMgr::SetChangeColorSign
xdata$x	SEGMENT
$T199208 DD	0ffffffffH
	DD	FLAT:$L199157
	DD	00H
	DD	FLAT:$L199159
	DD	01H
	DD	FLAT:$L199160
	DD	01H
	DD	FLAT:$L199161
	DD	01H
	DD	FLAT:$L199163
	DD	01H
	DD	FLAT:$L199164
	DD	01H
	DD	FLAT:$L199166
	DD	01H
	DD	FLAT:$L199167
	DD	01H
	DD	FLAT:$L199169
	DD	01H
	DD	FLAT:$L199170
	DD	01H
	DD	FLAT:$L199172
	DD	01H
	DD	FLAT:$L199173
	DD	01H
	DD	FLAT:$L199179
	DD	0cH
	DD	FLAT:$L199182
	DD	0dH
	DD	FLAT:$L199184
	DD	0eH
	DD	FLAT:$L199185
	DD	0fH
	DD	FLAT:$L199186
	DD	0fH
	DD	FLAT:$L199188
	DD	0fH
	DD	FLAT:$L199191
	DD	0fH
	DD	FLAT:$L199194
$T199198 DD	019930520H
	DD	014H
	DD	FLAT:$T199208
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv924 = -520						; size = 4
tv923 = -516						; size = 4
tv920 = -512						; size = 4
tv919 = -508						; size = 4
tv916 = -504						; size = 4
tv970 = -500						; size = 4
tv914 = -496						; size = 4
tv913 = -492						; size = 4
tv910 = -488						; size = 4
tv909 = -484						; size = 4
tv906 = -480						; size = 4
tv967 = -476						; size = 4
tv904 = -472						; size = 4
tv903 = -468						; size = 4
tv900 = -464						; size = 4
tv899 = -460						; size = 4
tv896 = -456						; size = 4
tv964 = -452						; size = 4
tv894 = -448						; size = 4
tv893 = -444						; size = 4
tv890 = -440						; size = 4
tv961 = -436						; size = 4
tv886 = -432						; size = 4
tv883 = -428						; size = 4
tv881 = -424						; size = 4
tv878 = -420						; size = 4
tv875 = -416						; size = 4
tv872 = -412						; size = 4
tv869 = -408						; size = 4
tv863 = -404						; size = 4
tv866 = -400						; size = 4
tv862 = -396						; size = 4
tv954 = -392						; size = 4
tv860 = -388						; size = 4
tv951 = -384						; size = 4
tv855 = -380						; size = 4
tv858 = -376						; size = 4
tv854 = -372						; size = 4
tv948 = -368						; size = 4
tv852 = -364						; size = 4
tv945 = -360						; size = 4
tv847 = -356						; size = 4
tv850 = -352						; size = 4
tv846 = -348						; size = 4
tv942 = -344						; size = 4
tv844 = -340						; size = 4
tv939 = -336						; size = 4
tv839 = -332						; size = 4
tv842 = -328						; size = 4
tv838 = -324						; size = 4
tv936 = -320						; size = 4
tv836 = -316						; size = 4
tv933 = -312						; size = 4
tv829 = -308						; size = 4
tv832 = -304						; size = 4
tv828 = -300						; size = 4
tv930 = -296						; size = 4
tv826 = -292						; size = 4
tv927 = -288						; size = 4
tv821 = -284						; size = 4
$T199156 = -280						; size = 4
$T199155 = -276						; size = 4
$T199154 = -272						; size = 4
$T199153 = -268						; size = 4
$T199152 = -264						; size = 4
$T199151 = -260						; size = 4
$T199150 = -256						; size = 4
$T199149 = -252						; size = 4
$T199148 = -248						; size = 4
$T199147 = -244						; size = 4
$T199146 = -240						; size = 4
$T199145 = -236						; size = 4
$T199144 = -232						; size = 4
$T199143 = -225						; size = 1
$T199142 = -224						; size = 4
$T199141 = -217						; size = 1
$T199140 = -216						; size = 4
$T199139 = -212						; size = 4
$T199138 = -208						; size = 4
$T199137 = -204						; size = 4
$T199136 = -200						; size = 4
$T199135 = -196						; size = 4
$T199134 = -192						; size = 4
$T199133 = -185						; size = 1
$T199132 = -184						; size = 4
$T199131 = -180						; size = 4
$T199130 = -176						; size = 4
$T199129 = -169						; size = 1
$T199128 = -168						; size = 4
$T199127 = -164						; size = 4
$T199126 = -160						; size = 4
$T199125 = -153						; size = 1
$T199124 = -152						; size = 4
$T199123 = -148						; size = 4
$T199122 = -144						; size = 4
$T199121 = -137						; size = 1
$T199120 = -136						; size = 4
$T199119 = -132						; size = 4
$T199118 = -128						; size = 4
$T199117 = -121						; size = 1
$T199116 = -120						; size = 4
_strNormalColor$ = -112					; size = 4
_strColor$ = -100					; size = 4
_strTooltip$ = -88					; size = 4
_value$ = -76						; size = 4
_name$ = -64						; size = 4
_i$196577 = -56						; size = 4
_bDontChangeColor$ = -49				; size = 1
_tooltip$ = -44						; size = 4
_pDibMask$ = -36					; size = 4
_pDibDisable$ = -32					; size = 4
_pDibOver$ = -28					; size = 4
_pDibDown$ = -24					; size = 4
_pDibNormal$ = -20					; size = 4
_pBtn$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateButton

; 156  : {

  00c90	55		 push	 ebp
  00c91	8b ec		 mov	 ebp, esp
  00c93	6a ff		 push	 -1
  00c95	68 00 00 00 00	 push	 __ehhandler$?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  00c9a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00ca0	50		 push	 eax
  00ca1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ca8	81 ec fc 01 00
	00		 sub	 esp, 508		; 000001fcH
  00cae	56		 push	 esi
  00caf	57		 push	 edi
  00cb0	8d bd f8 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-520]
  00cb6	b9 7f 00 00 00	 mov	 ecx, 127		; 0000007fH
  00cbb	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00cc0	f3 ab		 rep stosd

; 157  : 	CxSkinButton *pBtn = (CxSkinButton*) pWnd;

  00cc2	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  00cc5	89 45 f0	 mov	 DWORD PTR _pBtn$[ebp], eax

; 158  : 	CDibBitmap *pDibNormal, *pDibDown, *pDibOver, *pDibDisable, *pDibMask;
; 159  : 
; 160  : 	CString tooltip = pXml->GetAttrib("tooltip"); 

  00cc8	68 00 00 00 00	 push	 OFFSET FLAT:$SG196572
  00ccd	8d 4d d4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  00cd0	51		 push	 ecx
  00cd1	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00cd4	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00cd9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 161  : 
; 162  : 	bool bDontChangeColor = atoi(pXml->GetAttrib("dont_change_color")) == 1;

  00ce0	68 00 00 00 00	 push	 OFFSET FLAT:$SG196575
  00ce5	8d 55 88	 lea	 edx, DWORD PTR $T199116[ebp]
  00ce8	52		 push	 edx
  00ce9	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00cec	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00cf1	89 85 e4 fe ff
	ff		 mov	 DWORD PTR tv821[ebp], eax
  00cf7	8b f4		 mov	 esi, esp
  00cf9	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR tv821[ebp]
  00cff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00d05	3b f4		 cmp	 esi, esp
  00d07	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d0c	8b f4		 mov	 esi, esp
  00d0e	50		 push	 eax
  00d0f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00d15	83 c4 04	 add	 esp, 4
  00d18	3b f4		 cmp	 esi, esp
  00d1a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d1f	83 e8 01	 sub	 eax, 1
  00d22	f7 d8		 neg	 eax
  00d24	1b c0		 sbb	 eax, eax
  00d26	40		 inc	 eax
  00d27	88 45 cf	 mov	 BYTE PTR _bDontChangeColor$[ebp], al
  00d2a	8b f4		 mov	 esi, esp
  00d2c	8d 4d 88	 lea	 ecx, DWORD PTR $T199116[ebp]
  00d2f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00d35	3b f4		 cmp	 esi, esp
  00d37	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 163  : 	if(bDontChangeColor == true)

  00d3c	0f b6 45 cf	 movzx	 eax, BYTE PTR _bDontChangeColor$[ebp]
  00d40	83 f8 01	 cmp	 eax, 1
  00d43	75 07		 jne	 SHORT $L196576

; 164  : 		int i = 0;

  00d45	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _i$196577[ebp], 0
$L196576:

; 165  : 	CString name = pXml->GetAttrib("bmp");

  00d4c	68 00 00 00 00	 push	 OFFSET FLAT:$SG196580
  00d51	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  00d54	51		 push	 ecx
  00d55	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  00d58	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  00d5d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 166  : 
; 167  : 	if(name == "")

  00d61	68 00 00 00 00	 push	 OFFSET FLAT:$SG196582
  00d66	8d 55 c0	 lea	 edx, DWORD PTR _name$[ebp]
  00d69	52		 push	 edx
  00d6a	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  00d6f	83 c4 08	 add	 esp, 8
  00d72	0f b6 c0	 movzx	 eax, al
  00d75	85 c0		 test	 eax, eax
  00d77	74 34		 je	 SHORT $L196581

; 168  : 		return;

  00d79	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00d7d	8b f4		 mov	 esi, esp
  00d7f	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  00d82	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00d88	3b f4		 cmp	 esi, esp
  00d8a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d8f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00d96	8b f4		 mov	 esi, esp
  00d98	8d 4d d4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  00d9b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00da1	3b f4		 cmp	 esi, esp
  00da3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00da8	e9 be 0c 00 00	 jmp	 $L196562
$L196581:

; 169  : 	if((pDibNormal = pSkin->GetDibBmp(name + "normal")) == NULL)

  00dad	68 00 00 00 00	 push	 OFFSET FLAT:$SG196586
  00db2	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  00db5	51		 push	 ecx
  00db6	8d 55 80	 lea	 edx, DWORD PTR $T199118[ebp]
  00db9	52		 push	 edx
  00dba	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00dbf	83 c4 0c	 add	 esp, 12			; 0000000cH
  00dc2	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv927[ebp], eax
  00dc8	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv927[ebp]
  00dce	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv826[ebp], eax
  00dd4	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00dd8	8b f4		 mov	 esi, esp
  00dda	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv826[ebp]
  00de0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00de6	3b f4		 cmp	 esi, esp
  00de8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ded	8b f4		 mov	 esi, esp
  00def	50		 push	 eax
  00df0	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00df3	83 c1 04	 add	 ecx, 4
  00df6	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00df9	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00dfc	ff 50 04	 call	 DWORD PTR [eax+4]
  00dff	3b f4		 cmp	 esi, esp
  00e01	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e06	89 45 ec	 mov	 DWORD PTR _pDibNormal$[ebp], eax
  00e09	33 c9		 xor	 ecx, ecx
  00e0b	83 7d ec 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  00e0f	0f 94 c1	 sete	 cl
  00e12	88 4d 87	 mov	 BYTE PTR $T199117[ebp], cl
  00e15	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00e19	8b f4		 mov	 esi, esp
  00e1b	8d 4d 80	 lea	 ecx, DWORD PTR $T199118[ebp]
  00e1e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00e24	3b f4		 cmp	 esi, esp
  00e26	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e2b	0f b6 55 87	 movzx	 edx, BYTE PTR $T199117[ebp]
  00e2f	85 d2		 test	 edx, edx
  00e31	74 71		 je	 SHORT $L196584

; 170  : 		pDibNormal = pSkin->PutDibBmp(name + "normal", pSkin->m_strSkinPath);

  00e33	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  00e36	83 c0 08	 add	 eax, 8
  00e39	51		 push	 ecx
  00e3a	8b cc		 mov	 ecx, esp
  00e3c	89 a5 7c ff ff
	ff		 mov	 DWORD PTR $T199119[ebp], esp
  00e42	8b f4		 mov	 esi, esp
  00e44	50		 push	 eax
  00e45	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00e4b	3b f4		 cmp	 esi, esp
  00e4d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e52	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv930[ebp], eax
  00e58	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv930[ebp]
  00e5e	89 8d d4 fe ff
	ff		 mov	 DWORD PTR tv828[ebp], ecx
  00e64	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00e68	51		 push	 ecx
  00e69	8b d4		 mov	 edx, esp
  00e6b	89 a5 78 ff ff
	ff		 mov	 DWORD PTR $T199120[ebp], esp
  00e71	68 00 00 00 00	 push	 OFFSET FLAT:$SG196590
  00e76	8d 45 c0	 lea	 eax, DWORD PTR _name$[ebp]
  00e79	50		 push	 eax
  00e7a	52		 push	 edx
  00e7b	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00e80	83 c4 0c	 add	 esp, 12			; 0000000cH
  00e83	89 85 d0 fe ff
	ff		 mov	 DWORD PTR tv832[ebp], eax
  00e89	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00e8d	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00e90	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  00e95	89 85 cc fe ff
	ff		 mov	 DWORD PTR tv829[ebp], eax
  00e9b	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR tv829[ebp]
  00ea1	89 4d ec	 mov	 DWORD PTR _pDibNormal$[ebp], ecx
$L196584:

; 171  : 
; 172  : 	if(pDibNormal == NULL || !pDibNormal->is_Loaded)

  00ea4	83 7d ec 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  00ea8	74 0b		 je	 SHORT $L196592
  00eaa	8b 55 ec	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  00ead	0f b6 42 5c	 movzx	 eax, BYTE PTR [edx+92]
  00eb1	85 c0		 test	 eax, eax
  00eb3	75 34		 jne	 SHORT $L196591
$L196592:

; 173  : 		return;

  00eb5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00eb9	8b f4		 mov	 esi, esp
  00ebb	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  00ebe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00ec4	3b f4		 cmp	 esi, esp
  00ec6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ecb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00ed2	8b f4		 mov	 esi, esp
  00ed4	8d 4d d4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  00ed7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00edd	3b f4		 cmp	 esi, esp
  00edf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ee4	e9 82 0b 00 00	 jmp	 $L196562
$L196591:

; 174  : 
; 175  : 	if((pDibDown = pSkin->GetDibBmp(name + "down", false)) == NULL){

  00ee9	68 00 00 00 00	 push	 OFFSET FLAT:$SG196596
  00eee	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  00ef1	51		 push	 ecx
  00ef2	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR $T199122[ebp]
  00ef8	52		 push	 edx
  00ef9	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00efe	83 c4 0c	 add	 esp, 12			; 0000000cH
  00f01	89 85 c8 fe ff
	ff		 mov	 DWORD PTR tv933[ebp], eax
  00f07	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR tv933[ebp]
  00f0d	89 85 c4 fe ff
	ff		 mov	 DWORD PTR tv836[ebp], eax
  00f13	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00f17	8b f4		 mov	 esi, esp
  00f19	6a 00		 push	 0
  00f1b	8b fc		 mov	 edi, esp
  00f1d	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR tv836[ebp]
  00f23	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00f29	3b fc		 cmp	 edi, esp
  00f2b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f30	50		 push	 eax
  00f31	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00f34	83 c1 04	 add	 ecx, 4
  00f37	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  00f3a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00f3d	ff 10		 call	 DWORD PTR [eax]
  00f3f	3b f4		 cmp	 esi, esp
  00f41	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f46	89 45 e8	 mov	 DWORD PTR _pDibDown$[ebp], eax
  00f49	33 c9		 xor	 ecx, ecx
  00f4b	83 7d e8 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  00f4f	0f 94 c1	 sete	 cl
  00f52	88 8d 77 ff ff
	ff		 mov	 BYTE PTR $T199121[ebp], cl
  00f58	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00f5c	8b f4		 mov	 esi, esp
  00f5e	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T199122[ebp]
  00f64	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00f6a	3b f4		 cmp	 esi, esp
  00f6c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f71	0f b6 95 77 ff
	ff ff		 movzx	 edx, BYTE PTR $T199121[ebp]
  00f78	85 d2		 test	 edx, edx
  00f7a	0f 84 88 00 00
	00		 je	 $L196594

; 176  : 		pDibDown = pSkin->PutDibBmp(name + "down", pSkin->m_strSkinPath);

  00f80	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  00f83	83 c0 08	 add	 eax, 8
  00f86	51		 push	 ecx
  00f87	8b cc		 mov	 ecx, esp
  00f89	89 a5 6c ff ff
	ff		 mov	 DWORD PTR $T199123[ebp], esp
  00f8f	8b f4		 mov	 esi, esp
  00f91	50		 push	 eax
  00f92	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00f98	3b f4		 cmp	 esi, esp
  00f9a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f9f	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv936[ebp], eax
  00fa5	8b 8d c0 fe ff
	ff		 mov	 ecx, DWORD PTR tv936[ebp]
  00fab	89 8d bc fe ff
	ff		 mov	 DWORD PTR tv838[ebp], ecx
  00fb1	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00fb5	51		 push	 ecx
  00fb6	8b d4		 mov	 edx, esp
  00fb8	89 a5 68 ff ff
	ff		 mov	 DWORD PTR $T199124[ebp], esp
  00fbe	68 00 00 00 00	 push	 OFFSET FLAT:$SG196600
  00fc3	8d 45 c0	 lea	 eax, DWORD PTR _name$[ebp]
  00fc6	50		 push	 eax
  00fc7	52		 push	 edx
  00fc8	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00fcd	83 c4 0c	 add	 esp, 12			; 0000000cH
  00fd0	89 85 b8 fe ff
	ff		 mov	 DWORD PTR tv842[ebp], eax
  00fd6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00fda	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  00fdd	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  00fe2	89 85 b4 fe ff
	ff		 mov	 DWORD PTR tv839[ebp], eax
  00fe8	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR tv839[ebp]
  00fee	89 4d e8	 mov	 DWORD PTR _pDibDown$[ebp], ecx

; 177  : 		if(pDibDown == NULL || !pDibDown->is_Loaded)

  00ff1	83 7d e8 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  00ff5	74 0b		 je	 SHORT $L196602
  00ff7	8b 55 e8	 mov	 edx, DWORD PTR _pDibDown$[ebp]
  00ffa	0f b6 42 5c	 movzx	 eax, BYTE PTR [edx+92]
  00ffe	85 c0		 test	 eax, eax
  01000	75 06		 jne	 SHORT $L196594
$L196602:

; 178  : 			pDibDown = pDibNormal;

  01002	8b 4d ec	 mov	 ecx, DWORD PTR _pDibNormal$[ebp]
  01005	89 4d e8	 mov	 DWORD PTR _pDibDown$[ebp], ecx
$L196594:

; 179  : 	}
; 180  : 
; 181  : 	if((pDibOver = pSkin->GetDibBmp(name + "over", false)) == NULL){

  01008	68 00 00 00 00	 push	 OFFSET FLAT:$SG196606
  0100d	8d 55 c0	 lea	 edx, DWORD PTR _name$[ebp]
  01010	52		 push	 edx
  01011	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR $T199126[ebp]
  01017	50		 push	 eax
  01018	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  0101d	83 c4 0c	 add	 esp, 12			; 0000000cH
  01020	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv939[ebp], eax
  01026	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR tv939[ebp]
  0102c	89 8d ac fe ff
	ff		 mov	 DWORD PTR tv844[ebp], ecx
  01032	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  01036	8b f4		 mov	 esi, esp
  01038	6a 00		 push	 0
  0103a	8b fc		 mov	 edi, esp
  0103c	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR tv844[ebp]
  01042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01048	3b fc		 cmp	 edi, esp
  0104a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0104f	50		 push	 eax
  01050	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01053	83 c1 04	 add	 ecx, 4
  01056	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01059	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0105c	ff 10		 call	 DWORD PTR [eax]
  0105e	3b f4		 cmp	 esi, esp
  01060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01065	89 45 e4	 mov	 DWORD PTR _pDibOver$[ebp], eax
  01068	33 c9		 xor	 ecx, ecx
  0106a	83 7d e4 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  0106e	0f 94 c1	 sete	 cl
  01071	88 8d 67 ff ff
	ff		 mov	 BYTE PTR $T199125[ebp], cl
  01077	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0107b	8b f4		 mov	 esi, esp
  0107d	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T199126[ebp]
  01083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01089	3b f4		 cmp	 esi, esp
  0108b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01090	0f b6 95 67 ff
	ff ff		 movzx	 edx, BYTE PTR $T199125[ebp]
  01097	85 d2		 test	 edx, edx
  01099	0f 84 96 00 00
	00		 je	 $L196604

; 182  : 		pDibOver = pSkin->PutDibBmp(name + "over", pSkin->m_strSkinPath);

  0109f	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  010a2	83 c0 08	 add	 eax, 8
  010a5	51		 push	 ecx
  010a6	8b cc		 mov	 ecx, esp
  010a8	89 a5 5c ff ff
	ff		 mov	 DWORD PTR $T199127[ebp], esp
  010ae	8b f4		 mov	 esi, esp
  010b0	50		 push	 eax
  010b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  010b7	3b f4		 cmp	 esi, esp
  010b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  010be	89 85 a8 fe ff
	ff		 mov	 DWORD PTR tv942[ebp], eax
  010c4	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR tv942[ebp]
  010ca	89 8d a4 fe ff
	ff		 mov	 DWORD PTR tv846[ebp], ecx
  010d0	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  010d4	51		 push	 ecx
  010d5	8b d4		 mov	 edx, esp
  010d7	89 a5 58 ff ff
	ff		 mov	 DWORD PTR $T199128[ebp], esp
  010dd	68 00 00 00 00	 push	 OFFSET FLAT:$SG196610
  010e2	8d 45 c0	 lea	 eax, DWORD PTR _name$[ebp]
  010e5	50		 push	 eax
  010e6	52		 push	 edx
  010e7	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  010ec	83 c4 0c	 add	 esp, 12			; 0000000cH
  010ef	89 85 a0 fe ff
	ff		 mov	 DWORD PTR tv850[ebp], eax
  010f5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  010f9	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  010fc	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  01101	89 85 9c fe ff
	ff		 mov	 DWORD PTR tv847[ebp], eax
  01107	8b 8d 9c fe ff
	ff		 mov	 ecx, DWORD PTR tv847[ebp]
  0110d	89 4d e4	 mov	 DWORD PTR _pDibOver$[ebp], ecx

; 183  : 		if(pDibOver == NULL || !pDibOver->is_Loaded)

  01110	83 7d e4 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  01114	74 0b		 je	 SHORT $L196612
  01116	8b 55 e4	 mov	 edx, DWORD PTR _pDibOver$[ebp]
  01119	0f b6 42 5c	 movzx	 eax, BYTE PTR [edx+92]
  0111d	85 c0		 test	 eax, eax
  0111f	75 08		 jne	 SHORT $L196611
$L196612:

; 184  : 			pDibOver = pDibDown;

  01121	8b 4d e8	 mov	 ecx, DWORD PTR _pDibDown$[ebp]
  01124	89 4d e4	 mov	 DWORD PTR _pDibOver$[ebp], ecx

; 185  : 		else if(pDibOver == NULL)

  01127	eb 0c		 jmp	 SHORT $L196604
$L196611:
  01129	83 7d e4 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  0112d	75 06		 jne	 SHORT $L196604

; 186  : 			pDibOver = pDibNormal;

  0112f	8b 55 ec	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  01132	89 55 e4	 mov	 DWORD PTR _pDibOver$[ebp], edx
$L196604:

; 187  : 	}
; 188  : 
; 189  : 	if((pDibDisable = pSkin->GetDibBmp(name + "disable", false)) == NULL){

  01135	68 00 00 00 00	 push	 OFFSET FLAT:$SG196618
  0113a	8d 45 c0	 lea	 eax, DWORD PTR _name$[ebp]
  0113d	50		 push	 eax
  0113e	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T199130[ebp]
  01144	51		 push	 ecx
  01145	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  0114a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0114d	89 85 98 fe ff
	ff		 mov	 DWORD PTR tv945[ebp], eax
  01153	8b 95 98 fe ff
	ff		 mov	 edx, DWORD PTR tv945[ebp]
  01159	89 95 94 fe ff
	ff		 mov	 DWORD PTR tv852[ebp], edx
  0115f	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  01163	8b f4		 mov	 esi, esp
  01165	6a 00		 push	 0
  01167	8b fc		 mov	 edi, esp
  01169	8b 8d 94 fe ff
	ff		 mov	 ecx, DWORD PTR tv852[ebp]
  0116f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01175	3b fc		 cmp	 edi, esp
  01177	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0117c	50		 push	 eax
  0117d	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01180	83 c1 04	 add	 ecx, 4
  01183	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  01186	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  01189	ff 12		 call	 DWORD PTR [edx]
  0118b	3b f4		 cmp	 esi, esp
  0118d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01192	89 45 e0	 mov	 DWORD PTR _pDibDisable$[ebp], eax
  01195	33 c0		 xor	 eax, eax
  01197	83 7d e0 00	 cmp	 DWORD PTR _pDibDisable$[ebp], 0
  0119b	0f 94 c0	 sete	 al
  0119e	88 85 57 ff ff
	ff		 mov	 BYTE PTR $T199129[ebp], al
  011a4	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  011a8	8b f4		 mov	 esi, esp
  011aa	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T199130[ebp]
  011b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  011b6	3b f4		 cmp	 esi, esp
  011b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011bd	0f b6 8d 57 ff
	ff ff		 movzx	 ecx, BYTE PTR $T199129[ebp]
  011c4	85 c9		 test	 ecx, ecx
  011c6	0f 84 88 00 00
	00		 je	 $L196616

; 190  : 		pDibDisable = pSkin->PutDibBmp(name + "disable", pSkin->m_strSkinPath);

  011cc	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  011cf	83 c2 08	 add	 edx, 8
  011d2	51		 push	 ecx
  011d3	8b cc		 mov	 ecx, esp
  011d5	89 a5 4c ff ff
	ff		 mov	 DWORD PTR $T199131[ebp], esp
  011db	8b f4		 mov	 esi, esp
  011dd	52		 push	 edx
  011de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  011e4	3b f4		 cmp	 esi, esp
  011e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011eb	89 85 90 fe ff
	ff		 mov	 DWORD PTR tv948[ebp], eax
  011f1	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR tv948[ebp]
  011f7	89 85 8c fe ff
	ff		 mov	 DWORD PTR tv854[ebp], eax
  011fd	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  01201	51		 push	 ecx
  01202	8b cc		 mov	 ecx, esp
  01204	89 a5 48 ff ff
	ff		 mov	 DWORD PTR $T199132[ebp], esp
  0120a	68 00 00 00 00	 push	 OFFSET FLAT:$SG196622
  0120f	8d 55 c0	 lea	 edx, DWORD PTR _name$[ebp]
  01212	52		 push	 edx
  01213	51		 push	 ecx
  01214	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  01219	83 c4 0c	 add	 esp, 12			; 0000000cH
  0121c	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv858[ebp], eax
  01222	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01226	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01229	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  0122e	89 85 84 fe ff
	ff		 mov	 DWORD PTR tv855[ebp], eax
  01234	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR tv855[ebp]
  0123a	89 45 e0	 mov	 DWORD PTR _pDibDisable$[ebp], eax

; 191  : 		if(pDibDisable == NULL || !pDibDisable->is_Loaded)

  0123d	83 7d e0 00	 cmp	 DWORD PTR _pDibDisable$[ebp], 0
  01241	74 0b		 je	 SHORT $L196624
  01243	8b 4d e0	 mov	 ecx, DWORD PTR _pDibDisable$[ebp]
  01246	0f b6 51 5c	 movzx	 edx, BYTE PTR [ecx+92]
  0124a	85 d2		 test	 edx, edx
  0124c	75 06		 jne	 SHORT $L196616
$L196624:

; 192  : 			pDibDisable = pDibNormal;

  0124e	8b 45 ec	 mov	 eax, DWORD PTR _pDibNormal$[ebp]
  01251	89 45 e0	 mov	 DWORD PTR _pDibDisable$[ebp], eax
$L196616:

; 193  : 	}
; 194  : 
; 195  : 	if((pDibMask = pSkin->GetDibBmp(name + "mask",false)) == NULL){

  01254	68 00 00 00 00	 push	 OFFSET FLAT:$SG196628
  01259	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  0125c	51		 push	 ecx
  0125d	8d 95 40 ff ff
	ff		 lea	 edx, DWORD PTR $T199134[ebp]
  01263	52		 push	 edx
  01264	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  01269	83 c4 0c	 add	 esp, 12			; 0000000cH
  0126c	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv951[ebp], eax
  01272	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR tv951[ebp]
  01278	89 85 7c fe ff
	ff		 mov	 DWORD PTR tv860[ebp], eax
  0127e	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  01282	8b f4		 mov	 esi, esp
  01284	6a 00		 push	 0
  01286	8b fc		 mov	 edi, esp
  01288	8b 8d 7c fe ff
	ff		 mov	 ecx, DWORD PTR tv860[ebp]
  0128e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01294	3b fc		 cmp	 edi, esp
  01296	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0129b	50		 push	 eax
  0129c	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0129f	83 c1 04	 add	 ecx, 4
  012a2	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  012a5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  012a8	ff 10		 call	 DWORD PTR [eax]
  012aa	3b f4		 cmp	 esi, esp
  012ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012b1	89 45 dc	 mov	 DWORD PTR _pDibMask$[ebp], eax
  012b4	33 c9		 xor	 ecx, ecx
  012b6	83 7d dc 00	 cmp	 DWORD PTR _pDibMask$[ebp], 0
  012ba	0f 94 c1	 sete	 cl
  012bd	88 8d 47 ff ff
	ff		 mov	 BYTE PTR $T199133[ebp], cl
  012c3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  012c7	8b f4		 mov	 esi, esp
  012c9	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T199134[ebp]
  012cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  012d5	3b f4		 cmp	 esi, esp
  012d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012dc	0f b6 95 47 ff
	ff ff		 movzx	 edx, BYTE PTR $T199133[ebp]
  012e3	85 d2		 test	 edx, edx
  012e5	74 71		 je	 SHORT $L196626

; 196  : 		pDibMask = pSkin->PutDibBmp(name + "mask", pSkin->m_strSkinPath);

  012e7	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  012ea	83 c0 08	 add	 eax, 8
  012ed	51		 push	 ecx
  012ee	8b cc		 mov	 ecx, esp
  012f0	89 a5 3c ff ff
	ff		 mov	 DWORD PTR $T199135[ebp], esp
  012f6	8b f4		 mov	 esi, esp
  012f8	50		 push	 eax
  012f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  012ff	3b f4		 cmp	 esi, esp
  01301	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01306	89 85 78 fe ff
	ff		 mov	 DWORD PTR tv954[ebp], eax
  0130c	8b 8d 78 fe ff
	ff		 mov	 ecx, DWORD PTR tv954[ebp]
  01312	89 8d 74 fe ff
	ff		 mov	 DWORD PTR tv862[ebp], ecx
  01318	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  0131c	51		 push	 ecx
  0131d	8b d4		 mov	 edx, esp
  0131f	89 a5 38 ff ff
	ff		 mov	 DWORD PTR $T199136[ebp], esp
  01325	68 00 00 00 00	 push	 OFFSET FLAT:$SG196632
  0132a	8d 45 c0	 lea	 eax, DWORD PTR _name$[ebp]
  0132d	50		 push	 eax
  0132e	52		 push	 edx
  0132f	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  01334	83 c4 0c	 add	 esp, 12			; 0000000cH
  01337	89 85 70 fe ff
	ff		 mov	 DWORD PTR tv866[ebp], eax
  0133d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01341	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01344	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  01349	89 85 6c fe ff
	ff		 mov	 DWORD PTR tv863[ebp], eax
  0134f	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR tv863[ebp]
  01355	89 4d dc	 mov	 DWORD PTR _pDibMask$[ebp], ecx
$L196626:

; 197  : 	}
; 198  : 
; 199  : 	pSkin->SetChangeColorSign(name+"normal", bDontChangeColor);

  01358	0f b6 55 cf	 movzx	 edx, BYTE PTR _bDontChangeColor$[ebp]
  0135c	52		 push	 edx
  0135d	51		 push	 ecx
  0135e	8b c4		 mov	 eax, esp
  01360	89 a5 34 ff ff
	ff		 mov	 DWORD PTR $T199137[ebp], esp
  01366	68 00 00 00 00	 push	 OFFSET FLAT:$SG196635
  0136b	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  0136e	51		 push	 ecx
  0136f	50		 push	 eax
  01370	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  01375	83 c4 0c	 add	 esp, 12			; 0000000cH
  01378	89 85 68 fe ff
	ff		 mov	 DWORD PTR tv869[ebp], eax
  0137e	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01381	e8 00 00 00 00	 call	 ?SetChangeColorSign@CSkinMgr@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CSkinMgr::SetChangeColorSign

; 200  : 	pSkin->SetChangeColorSign(name+"over", bDontChangeColor);

  01386	0f b6 55 cf	 movzx	 edx, BYTE PTR _bDontChangeColor$[ebp]
  0138a	52		 push	 edx
  0138b	51		 push	 ecx
  0138c	8b c4		 mov	 eax, esp
  0138e	89 a5 30 ff ff
	ff		 mov	 DWORD PTR $T199138[ebp], esp
  01394	68 00 00 00 00	 push	 OFFSET FLAT:$SG196638
  01399	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  0139c	51		 push	 ecx
  0139d	50		 push	 eax
  0139e	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  013a3	83 c4 0c	 add	 esp, 12			; 0000000cH
  013a6	89 85 64 fe ff
	ff		 mov	 DWORD PTR tv872[ebp], eax
  013ac	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  013af	e8 00 00 00 00	 call	 ?SetChangeColorSign@CSkinMgr@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CSkinMgr::SetChangeColorSign

; 201  : 	pSkin->SetChangeColorSign(name+"down", bDontChangeColor);

  013b4	0f b6 55 cf	 movzx	 edx, BYTE PTR _bDontChangeColor$[ebp]
  013b8	52		 push	 edx
  013b9	51		 push	 ecx
  013ba	8b c4		 mov	 eax, esp
  013bc	89 a5 2c ff ff
	ff		 mov	 DWORD PTR $T199139[ebp], esp
  013c2	68 00 00 00 00	 push	 OFFSET FLAT:$SG196641
  013c7	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  013ca	51		 push	 ecx
  013cb	50		 push	 eax
  013cc	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  013d1	83 c4 0c	 add	 esp, 12			; 0000000cH
  013d4	89 85 60 fe ff
	ff		 mov	 DWORD PTR tv875[ebp], eax
  013da	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  013dd	e8 00 00 00 00	 call	 ?SetChangeColorSign@CSkinMgr@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CSkinMgr::SetChangeColorSign

; 202  : 	pSkin->SetChangeColorSign(name+"disable", bDontChangeColor);

  013e2	0f b6 55 cf	 movzx	 edx, BYTE PTR _bDontChangeColor$[ebp]
  013e6	52		 push	 edx
  013e7	51		 push	 ecx
  013e8	8b c4		 mov	 eax, esp
  013ea	89 a5 28 ff ff
	ff		 mov	 DWORD PTR $T199140[ebp], esp
  013f0	68 00 00 00 00	 push	 OFFSET FLAT:$SG196644
  013f5	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  013f8	51		 push	 ecx
  013f9	50		 push	 eax
  013fa	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  013ff	83 c4 0c	 add	 esp, 12			; 0000000cH
  01402	89 85 5c fe ff
	ff		 mov	 DWORD PTR tv878[ebp], eax
  01408	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0140b	e8 00 00 00 00	 call	 ?SetChangeColorSign@CSkinMgr@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CSkinMgr::SetChangeColorSign

; 203  : 
; 204  : 	CString value;

  01410	8b f4		 mov	 esi, esp
  01412	8d 4d b4	 lea	 ecx, DWORD PTR _value$[ebp]
  01415	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0141b	3b f4		 cmp	 esi, esp
  0141d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01422	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH

; 205  : 	if(pXml->GetAttrib("x_delta") == "0")

  01426	68 00 00 00 00	 push	 OFFSET FLAT:$SG196650
  0142b	8d 95 20 ff ff
	ff		 lea	 edx, DWORD PTR $T199142[ebp]
  01431	52		 push	 edx
  01432	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01435	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  0143a	89 85 58 fe ff
	ff		 mov	 DWORD PTR tv881[ebp], eax
  01440	68 00 00 00 00	 push	 OFFSET FLAT:$SG196649
  01445	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR tv881[ebp]
  0144b	50		 push	 eax
  0144c	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  01451	83 c4 08	 add	 esp, 8
  01454	88 85 27 ff ff
	ff		 mov	 BYTE PTR $T199141[ebp], al
  0145a	8b f4		 mov	 esi, esp
  0145c	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR $T199142[ebp]
  01462	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01468	3b f4		 cmp	 esi, esp
  0146a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0146f	0f b6 8d 27 ff
	ff ff		 movzx	 ecx, BYTE PTR $T199141[ebp]
  01476	85 c9		 test	 ecx, ecx
  01478	74 44		 je	 SHORT $L196647

; 206  : 	{
; 207  : 		value.Format("%d", pDibNormal->GetWidth());

  0147a	8b 4d ec	 mov	 ecx, DWORD PTR _pDibNormal$[ebp]
  0147d	e8 00 00 00 00	 call	 ?GetWidth@CDibBitmap@@QAEHXZ ; CDibBitmap::GetWidth
  01482	8b f4		 mov	 esi, esp
  01484	50		 push	 eax
  01485	68 00 00 00 00	 push	 OFFSET FLAT:$SG196651
  0148a	8d 55 b4	 lea	 edx, DWORD PTR _value$[ebp]
  0148d	52		 push	 edx
  0148e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  01494	83 c4 0c	 add	 esp, 12			; 0000000cH
  01497	3b f4		 cmp	 esi, esp
  01499	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 208  : 		pXml->SetAttrib("x_delta", value);

  0149e	8b f4		 mov	 esi, esp
  014a0	8d 4d b4	 lea	 ecx, DWORD PTR _value$[ebp]
  014a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  014a9	3b f4		 cmp	 esi, esp
  014ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014b0	50		 push	 eax
  014b1	68 00 00 00 00	 push	 OFFSET FLAT:$SG196652
  014b6	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  014b9	e8 00 00 00 00	 call	 ?SetAttrib@CMarkup@@QAE_NPBD0@Z ; CMarkup::SetAttrib
$L196647:

; 209  : 	}
; 210  : 	if(pXml->GetAttrib("y_delta") == "0")

  014be	68 00 00 00 00	 push	 OFFSET FLAT:$SG196657
  014c3	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR $T199144[ebp]
  014c9	50		 push	 eax
  014ca	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  014cd	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  014d2	89 85 54 fe ff
	ff		 mov	 DWORD PTR tv883[ebp], eax
  014d8	68 00 00 00 00	 push	 OFFSET FLAT:$SG196656
  014dd	8b 8d 54 fe ff
	ff		 mov	 ecx, DWORD PTR tv883[ebp]
  014e3	51		 push	 ecx
  014e4	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  014e9	83 c4 08	 add	 esp, 8
  014ec	88 85 1f ff ff
	ff		 mov	 BYTE PTR $T199143[ebp], al
  014f2	8b f4		 mov	 esi, esp
  014f4	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T199144[ebp]
  014fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01500	3b f4		 cmp	 esi, esp
  01502	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01507	0f b6 95 1f ff
	ff ff		 movzx	 edx, BYTE PTR $T199143[ebp]
  0150e	85 d2		 test	 edx, edx
  01510	74 44		 je	 SHORT $L196654

; 211  : 	{
; 212  : 		value.Format("%d", pDibNormal->GetHeight());

  01512	8b 4d ec	 mov	 ecx, DWORD PTR _pDibNormal$[ebp]
  01515	e8 00 00 00 00	 call	 ?GetHeight@CDibBitmap@@QAEHXZ ; CDibBitmap::GetHeight
  0151a	8b f4		 mov	 esi, esp
  0151c	50		 push	 eax
  0151d	68 00 00 00 00	 push	 OFFSET FLAT:$SG196658
  01522	8d 45 b4	 lea	 eax, DWORD PTR _value$[ebp]
  01525	50		 push	 eax
  01526	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  0152c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0152f	3b f4		 cmp	 esi, esp
  01531	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 213  : 		pXml->SetAttrib("y_delta", value);

  01536	8b f4		 mov	 esi, esp
  01538	8d 4d b4	 lea	 ecx, DWORD PTR _value$[ebp]
  0153b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01541	3b f4		 cmp	 esi, esp
  01543	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01548	50		 push	 eax
  01549	68 00 00 00 00	 push	 OFFSET FLAT:$SG196659
  0154e	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01551	e8 00 00 00 00	 call	 ?SetAttrib@CMarkup@@QAE_NPBD0@Z ; CMarkup::SetAttrib
$L196654:

; 214  : 	}
; 215  : 
; 216  : 	if(pDibMask == NULL ||pDibMask->is_Loaded)

  01556	83 7d dc 00	 cmp	 DWORD PTR _pDibMask$[ebp], 0
  0155a	74 0b		 je	 SHORT $L196661
  0155c	8b 4d dc	 mov	 ecx, DWORD PTR _pDibMask$[ebp]
  0155f	0f b6 51 5c	 movzx	 edx, BYTE PTR [ecx+92]
  01563	85 d2		 test	 edx, edx
  01565	74 26		 je	 SHORT $L196660
$L196661:

; 217  : 		pBtn->SetSkin(pDibNormal, pDibDown, pDibOver, pDibDisable,0,0,0,0,0);

  01567	6a 00		 push	 0
  01569	6a 00		 push	 0
  0156b	6a 00		 push	 0
  0156d	6a 00		 push	 0
  0156f	6a 00		 push	 0
  01571	6a 00		 push	 0
  01573	8b 45 e0	 mov	 eax, DWORD PTR _pDibDisable$[ebp]
  01576	50		 push	 eax
  01577	8b 4d e4	 mov	 ecx, DWORD PTR _pDibOver$[ebp]
  0157a	51		 push	 ecx
  0157b	8b 55 e8	 mov	 edx, DWORD PTR _pDibDown$[ebp]
  0157e	52		 push	 edx
  0157f	8b 45 ec	 mov	 eax, DWORD PTR _pDibNormal$[ebp]
  01582	50		 push	 eax
  01583	8b 4d f0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  01586	e8 00 00 00 00	 call	 ?SetSkin@CxSkinButton@@QAEXPAVCDibBitmap@@00000FFF_N@Z ; CxSkinButton::SetSkin

; 218  : 	else

  0158b	eb 26		 jmp	 SHORT $L196662
$L196660:

; 219  : 		pBtn->SetSkin(pDibNormal, pDibDown, pDibOver, pDibDisable,0,pDibMask,0,0,0);

  0158d	6a 00		 push	 0
  0158f	6a 00		 push	 0
  01591	6a 00		 push	 0
  01593	6a 00		 push	 0
  01595	8b 4d dc	 mov	 ecx, DWORD PTR _pDibMask$[ebp]
  01598	51		 push	 ecx
  01599	6a 00		 push	 0
  0159b	8b 55 e0	 mov	 edx, DWORD PTR _pDibDisable$[ebp]
  0159e	52		 push	 edx
  0159f	8b 45 e4	 mov	 eax, DWORD PTR _pDibOver$[ebp]
  015a2	50		 push	 eax
  015a3	8b 4d e8	 mov	 ecx, DWORD PTR _pDibDown$[ebp]
  015a6	51		 push	 ecx
  015a7	8b 55 ec	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  015aa	52		 push	 edx
  015ab	8b 4d f0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  015ae	e8 00 00 00 00	 call	 ?SetSkin@CxSkinButton@@QAEXPAVCDibBitmap@@00000FFF_N@Z ; CxSkinButton::SetSkin
$L196662:

; 220  : 
; 221  : 	CString strTooltip = pBtn->GetToolTipText();

  015b3	8d 45 a8	 lea	 eax, DWORD PTR _strTooltip$[ebp]
  015b6	50		 push	 eax
  015b7	8b 4d f0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  015ba	e8 00 00 00 00	 call	 ?GetToolTipText@CxSkinButton@@QAE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CxSkinButton::GetToolTipText
  015bf	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH

; 222  : 	if(strTooltip == "")

  015c3	68 00 00 00 00	 push	 OFFSET FLAT:$SG196666
  015c8	8d 4d a8	 lea	 ecx, DWORD PTR _strTooltip$[ebp]
  015cb	51		 push	 ecx
  015cc	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  015d1	83 c4 08	 add	 esp, 8
  015d4	0f b6 d0	 movzx	 edx, al
  015d7	85 d2		 test	 edx, edx
  015d9	74 2a		 je	 SHORT $L196665

; 223  : 		pBtn->SetToolTipText(tooltip);

  015db	51		 push	 ecx
  015dc	8b cc		 mov	 ecx, esp
  015de	89 a5 14 ff ff
	ff		 mov	 DWORD PTR $T199145[ebp], esp
  015e4	8b f4		 mov	 esi, esp
  015e6	8d 45 d4	 lea	 eax, DWORD PTR _tooltip$[ebp]
  015e9	50		 push	 eax
  015ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  015f0	3b f4		 cmp	 esi, esp
  015f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015f7	89 85 50 fe ff
	ff		 mov	 DWORD PTR tv886[ebp], eax
  015fd	8b 4d f0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  01600	e8 00 00 00 00	 call	 ?SetToolTipText@CxSkinButton@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CxSkinButton::SetToolTipText
$L196665:

; 224  : 
; 225  : 	CString strColor;

  01605	8b f4		 mov	 esi, esp
  01607	8d 4d 9c	 lea	 ecx, DWORD PTR _strColor$[ebp]
  0160a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01610	3b f4		 cmp	 esi, esp
  01612	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01617	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH

; 226  : 	CString strNormalColor;

  0161b	8b f4		 mov	 esi, esp
  0161d	8d 4d 90	 lea	 ecx, DWORD PTR _strNormalColor$[ebp]
  01620	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01626	3b f4		 cmp	 esi, esp
  01628	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0162d	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH

; 227  : 	strColor = pXml->GetAttrib("textcolor_normal");

  01631	68 00 00 00 00	 push	 OFFSET FLAT:$SG196671
  01636	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR $T199146[ebp]
  0163c	51		 push	 ecx
  0163d	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01640	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01645	89 85 4c fe ff
	ff		 mov	 DWORD PTR tv961[ebp], eax
  0164b	8b 95 4c fe ff
	ff		 mov	 edx, DWORD PTR tv961[ebp]
  01651	89 95 48 fe ff
	ff		 mov	 DWORD PTR tv890[ebp], edx
  01657	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  0165b	8b f4		 mov	 esi, esp
  0165d	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR tv890[ebp]
  01663	50		 push	 eax
  01664	8d 4d 9c	 lea	 ecx, DWORD PTR _strColor$[ebp]
  01667	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  0166d	3b f4		 cmp	 esi, esp
  0166f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01674	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  01678	8b f4		 mov	 esi, esp
  0167a	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR $T199146[ebp]
  01680	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01686	3b f4		 cmp	 esi, esp
  01688	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 228  : 	strNormalColor = strColor;

  0168d	8b f4		 mov	 esi, esp
  0168f	8d 4d 9c	 lea	 ecx, DWORD PTR _strColor$[ebp]
  01692	51		 push	 ecx
  01693	8d 4d 90	 lea	 ecx, DWORD PTR _strNormalColor$[ebp]
  01696	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  0169c	3b f4		 cmp	 esi, esp
  0169e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 229  : 	if( strColor != "" )

  016a3	68 00 00 00 00	 push	 OFFSET FLAT:$SG196673
  016a8	8d 55 9c	 lea	 edx, DWORD PTR _strColor$[ebp]
  016ab	52		 push	 edx
  016ac	e8 00 00 00 00	 call	 ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
  016b1	83 c4 08	 add	 esp, 8
  016b4	0f b6 c0	 movzx	 eax, al
  016b7	85 c0		 test	 eax, eax
  016b9	74 41		 je	 SHORT $L196672

; 230  : 	{
; 231  : 		pBtn->SetNormalTextColor( StringToRGB(strColor) );

  016bb	6a 01		 push	 1
  016bd	51		 push	 ecx
  016be	8b cc		 mov	 ecx, esp
  016c0	89 a5 0c ff ff
	ff		 mov	 DWORD PTR $T199147[ebp], esp
  016c6	8b f4		 mov	 esi, esp
  016c8	8d 55 9c	 lea	 edx, DWORD PTR _strColor$[ebp]
  016cb	52		 push	 edx
  016cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  016d2	3b f4		 cmp	 esi, esp
  016d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  016d9	89 85 44 fe ff
	ff		 mov	 DWORD PTR tv893[ebp], eax
  016df	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  016e4	83 c4 08	 add	 esp, 8
  016e7	89 85 40 fe ff
	ff		 mov	 DWORD PTR tv894[ebp], eax
  016ed	8b 85 40 fe ff
	ff		 mov	 eax, DWORD PTR tv894[ebp]
  016f3	50		 push	 eax
  016f4	8b 4d f0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  016f7	e8 00 00 00 00	 call	 ?SetNormalTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetNormalTextColor
$L196672:

; 232  : 	}
; 233  : 
; 234  : 	strColor = pXml->GetAttrib("textcolor_over");

  016fc	68 00 00 00 00	 push	 OFFSET FLAT:$SG196676
  01701	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR $T199148[ebp]
  01707	51		 push	 ecx
  01708	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  0170b	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01710	89 85 3c fe ff
	ff		 mov	 DWORD PTR tv964[ebp], eax
  01716	8b 95 3c fe ff
	ff		 mov	 edx, DWORD PTR tv964[ebp]
  0171c	89 95 38 fe ff
	ff		 mov	 DWORD PTR tv896[ebp], edx
  01722	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  01726	8b f4		 mov	 esi, esp
  01728	8b 85 38 fe ff
	ff		 mov	 eax, DWORD PTR tv896[ebp]
  0172e	50		 push	 eax
  0172f	8d 4d 9c	 lea	 ecx, DWORD PTR _strColor$[ebp]
  01732	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  01738	3b f4		 cmp	 esi, esp
  0173a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0173f	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  01743	8b f4		 mov	 esi, esp
  01745	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR $T199148[ebp]
  0174b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01751	3b f4		 cmp	 esi, esp
  01753	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 235  : 	if( strColor != "" )

  01758	68 00 00 00 00	 push	 OFFSET FLAT:$SG196678
  0175d	8d 4d 9c	 lea	 ecx, DWORD PTR _strColor$[ebp]
  01760	51		 push	 ecx
  01761	e8 00 00 00 00	 call	 ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
  01766	83 c4 08	 add	 esp, 8
  01769	0f b6 d0	 movzx	 edx, al
  0176c	85 d2		 test	 edx, edx
  0176e	74 43		 je	 SHORT $L196677

; 236  : 	{
; 237  : 		pBtn->SetOverTextColor( StringToRGB(strColor) );

  01770	6a 01		 push	 1
  01772	51		 push	 ecx
  01773	8b cc		 mov	 ecx, esp
  01775	89 a5 04 ff ff
	ff		 mov	 DWORD PTR $T199149[ebp], esp
  0177b	8b f4		 mov	 esi, esp
  0177d	8d 45 9c	 lea	 eax, DWORD PTR _strColor$[ebp]
  01780	50		 push	 eax
  01781	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01787	3b f4		 cmp	 esi, esp
  01789	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0178e	89 85 34 fe ff
	ff		 mov	 DWORD PTR tv899[ebp], eax
  01794	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  01799	83 c4 08	 add	 esp, 8
  0179c	89 85 30 fe ff
	ff		 mov	 DWORD PTR tv900[ebp], eax
  017a2	8b 8d 30 fe ff
	ff		 mov	 ecx, DWORD PTR tv900[ebp]
  017a8	51		 push	 ecx
  017a9	8b 4d f0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  017ac	e8 00 00 00 00	 call	 ?SetOverTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetOverTextColor

; 238  : 	}
; 239  : 	else

  017b1	eb 41		 jmp	 SHORT $L196680
$L196677:

; 240  : 	{
; 241  : 		pBtn->SetOverTextColor( StringToRGB(strNormalColor) );

  017b3	6a 01		 push	 1
  017b5	51		 push	 ecx
  017b6	8b cc		 mov	 ecx, esp
  017b8	89 a5 00 ff ff
	ff		 mov	 DWORD PTR $T199150[ebp], esp
  017be	8b f4		 mov	 esi, esp
  017c0	8d 55 90	 lea	 edx, DWORD PTR _strNormalColor$[ebp]
  017c3	52		 push	 edx
  017c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  017ca	3b f4		 cmp	 esi, esp
  017cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  017d1	89 85 2c fe ff
	ff		 mov	 DWORD PTR tv903[ebp], eax
  017d7	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  017dc	83 c4 08	 add	 esp, 8
  017df	89 85 28 fe ff
	ff		 mov	 DWORD PTR tv904[ebp], eax
  017e5	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv904[ebp]
  017eb	50		 push	 eax
  017ec	8b 4d f0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  017ef	e8 00 00 00 00	 call	 ?SetOverTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetOverTextColor
$L196680:

; 242  : 	}
; 243  : 
; 244  : 
; 245  : 	strColor = pXml->GetAttrib("textcolor_down");

  017f4	68 00 00 00 00	 push	 OFFSET FLAT:$SG196683
  017f9	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR $T199151[ebp]
  017ff	51		 push	 ecx
  01800	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01803	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01808	89 85 24 fe ff
	ff		 mov	 DWORD PTR tv967[ebp], eax
  0180e	8b 95 24 fe ff
	ff		 mov	 edx, DWORD PTR tv967[ebp]
  01814	89 95 20 fe ff
	ff		 mov	 DWORD PTR tv906[ebp], edx
  0181a	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0181e	8b f4		 mov	 esi, esp
  01820	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR tv906[ebp]
  01826	50		 push	 eax
  01827	8d 4d 9c	 lea	 ecx, DWORD PTR _strColor$[ebp]
  0182a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  01830	3b f4		 cmp	 esi, esp
  01832	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01837	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  0183b	8b f4		 mov	 esi, esp
  0183d	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR $T199151[ebp]
  01843	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01849	3b f4		 cmp	 esi, esp
  0184b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 246  : 	if( strColor != "" )

  01850	68 00 00 00 00	 push	 OFFSET FLAT:$SG196685
  01855	8d 4d 9c	 lea	 ecx, DWORD PTR _strColor$[ebp]
  01858	51		 push	 ecx
  01859	e8 00 00 00 00	 call	 ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
  0185e	83 c4 08	 add	 esp, 8
  01861	0f b6 d0	 movzx	 edx, al
  01864	85 d2		 test	 edx, edx
  01866	74 43		 je	 SHORT $L196684

; 247  : 	{
; 248  : 		pBtn->SetDownTextColor( StringToRGB(strColor) );

  01868	6a 01		 push	 1
  0186a	51		 push	 ecx
  0186b	8b cc		 mov	 ecx, esp
  0186d	89 a5 f8 fe ff
	ff		 mov	 DWORD PTR $T199152[ebp], esp
  01873	8b f4		 mov	 esi, esp
  01875	8d 45 9c	 lea	 eax, DWORD PTR _strColor$[ebp]
  01878	50		 push	 eax
  01879	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  0187f	3b f4		 cmp	 esi, esp
  01881	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01886	89 85 1c fe ff
	ff		 mov	 DWORD PTR tv909[ebp], eax
  0188c	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  01891	83 c4 08	 add	 esp, 8
  01894	89 85 18 fe ff
	ff		 mov	 DWORD PTR tv910[ebp], eax
  0189a	8b 8d 18 fe ff
	ff		 mov	 ecx, DWORD PTR tv910[ebp]
  018a0	51		 push	 ecx
  018a1	8b 4d f0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  018a4	e8 00 00 00 00	 call	 ?SetDownTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetDownTextColor

; 249  : 	}
; 250  : 	else

  018a9	eb 41		 jmp	 SHORT $L196687
$L196684:

; 251  : 	{
; 252  : 		pBtn->SetDownTextColor( StringToRGB(strNormalColor) );

  018ab	6a 01		 push	 1
  018ad	51		 push	 ecx
  018ae	8b cc		 mov	 ecx, esp
  018b0	89 a5 f4 fe ff
	ff		 mov	 DWORD PTR $T199153[ebp], esp
  018b6	8b f4		 mov	 esi, esp
  018b8	8d 55 90	 lea	 edx, DWORD PTR _strNormalColor$[ebp]
  018bb	52		 push	 edx
  018bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  018c2	3b f4		 cmp	 esi, esp
  018c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  018c9	89 85 14 fe ff
	ff		 mov	 DWORD PTR tv913[ebp], eax
  018cf	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  018d4	83 c4 08	 add	 esp, 8
  018d7	89 85 10 fe ff
	ff		 mov	 DWORD PTR tv914[ebp], eax
  018dd	8b 85 10 fe ff
	ff		 mov	 eax, DWORD PTR tv914[ebp]
  018e3	50		 push	 eax
  018e4	8b 4d f0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  018e7	e8 00 00 00 00	 call	 ?SetDownTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetDownTextColor
$L196687:

; 253  : 	}
; 254  : 
; 255  : 	strColor = pXml->GetAttrib("textcolor_disable");

  018ec	68 00 00 00 00	 push	 OFFSET FLAT:$SG196690
  018f1	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR $T199154[ebp]
  018f7	51		 push	 ecx
  018f8	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  018fb	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01900	89 85 0c fe ff
	ff		 mov	 DWORD PTR tv970[ebp], eax
  01906	8b 95 0c fe ff
	ff		 mov	 edx, DWORD PTR tv970[ebp]
  0190c	89 95 08 fe ff
	ff		 mov	 DWORD PTR tv916[ebp], edx
  01912	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  01916	8b f4		 mov	 esi, esp
  01918	8b 85 08 fe ff
	ff		 mov	 eax, DWORD PTR tv916[ebp]
  0191e	50		 push	 eax
  0191f	8d 4d 9c	 lea	 ecx, DWORD PTR _strColor$[ebp]
  01922	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  01928	3b f4		 cmp	 esi, esp
  0192a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0192f	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  01933	8b f4		 mov	 esi, esp
  01935	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR $T199154[ebp]
  0193b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01941	3b f4		 cmp	 esi, esp
  01943	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 256  : 	if( strColor != "" )

  01948	68 00 00 00 00	 push	 OFFSET FLAT:$SG196692
  0194d	8d 4d 9c	 lea	 ecx, DWORD PTR _strColor$[ebp]
  01950	51		 push	 ecx
  01951	e8 00 00 00 00	 call	 ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
  01956	83 c4 08	 add	 esp, 8
  01959	0f b6 d0	 movzx	 edx, al
  0195c	85 d2		 test	 edx, edx
  0195e	74 43		 je	 SHORT $L196691

; 257  : 	{
; 258  : 		pBtn->SetDisableTextColor( StringToRGB(strColor) );

  01960	6a 01		 push	 1
  01962	51		 push	 ecx
  01963	8b cc		 mov	 ecx, esp
  01965	89 a5 ec fe ff
	ff		 mov	 DWORD PTR $T199155[ebp], esp
  0196b	8b f4		 mov	 esi, esp
  0196d	8d 45 9c	 lea	 eax, DWORD PTR _strColor$[ebp]
  01970	50		 push	 eax
  01971	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  01977	3b f4		 cmp	 esi, esp
  01979	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0197e	89 85 04 fe ff
	ff		 mov	 DWORD PTR tv919[ebp], eax
  01984	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  01989	83 c4 08	 add	 esp, 8
  0198c	89 85 00 fe ff
	ff		 mov	 DWORD PTR tv920[ebp], eax
  01992	8b 8d 00 fe ff
	ff		 mov	 ecx, DWORD PTR tv920[ebp]
  01998	51		 push	 ecx
  01999	8b 4d f0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  0199c	e8 00 00 00 00	 call	 ?SetDisableTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetDisableTextColor

; 259  : 	}
; 260  : 	else

  019a1	eb 41		 jmp	 SHORT $L196694
$L196691:

; 261  : 	{
; 262  : 		pBtn->SetDisableTextColor( StringToRGB(strNormalColor) );

  019a3	6a 01		 push	 1
  019a5	51		 push	 ecx
  019a6	8b cc		 mov	 ecx, esp
  019a8	89 a5 e8 fe ff
	ff		 mov	 DWORD PTR $T199156[ebp], esp
  019ae	8b f4		 mov	 esi, esp
  019b0	8d 55 90	 lea	 edx, DWORD PTR _strNormalColor$[ebp]
  019b3	52		 push	 edx
  019b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  019ba	3b f4		 cmp	 esi, esp
  019bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  019c1	89 85 fc fd ff
	ff		 mov	 DWORD PTR tv923[ebp], eax
  019c7	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  019cc	83 c4 08	 add	 esp, 8
  019cf	89 85 f8 fd ff
	ff		 mov	 DWORD PTR tv924[ebp], eax
  019d5	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR tv924[ebp]
  019db	50		 push	 eax
  019dc	8b 4d f0	 mov	 ecx, DWORD PTR _pBtn$[ebp]
  019df	e8 00 00 00 00	 call	 ?SetDisableTextColor@CxSkinButton@@QAEKK@Z ; CxSkinButton::SetDisableTextColor
$L196694:

; 263  : 	}
; 264  : 
; 265  : }

  019e4	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  019e8	8b f4		 mov	 esi, esp
  019ea	8d 4d 90	 lea	 ecx, DWORD PTR _strNormalColor$[ebp]
  019ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  019f3	3b f4		 cmp	 esi, esp
  019f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  019fa	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  019fe	8b f4		 mov	 esi, esp
  01a00	8d 4d 9c	 lea	 ecx, DWORD PTR _strColor$[ebp]
  01a03	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01a09	3b f4		 cmp	 esi, esp
  01a0b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a10	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  01a14	8b f4		 mov	 esi, esp
  01a16	8d 4d a8	 lea	 ecx, DWORD PTR _strTooltip$[ebp]
  01a19	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01a1f	3b f4		 cmp	 esi, esp
  01a21	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a26	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01a2a	8b f4		 mov	 esi, esp
  01a2c	8d 4d b4	 lea	 ecx, DWORD PTR _value$[ebp]
  01a2f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01a35	3b f4		 cmp	 esi, esp
  01a37	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a3c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01a40	8b f4		 mov	 esi, esp
  01a42	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  01a45	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01a4b	3b f4		 cmp	 esi, esp
  01a4d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a52	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01a59	8b f4		 mov	 esi, esp
  01a5b	8d 4d d4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  01a5e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01a64	3b f4		 cmp	 esi, esp
  01a66	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L196562:
  01a6b	52		 push	 edx
  01a6c	8b cd		 mov	 ecx, ebp
  01a6e	50		 push	 eax
  01a6f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L199207
  01a75	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01a7a	58		 pop	 eax
  01a7b	5a		 pop	 edx
  01a7c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01a7f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01a86	5f		 pop	 edi
  01a87	5e		 pop	 esi
  01a88	81 c4 08 02 00
	00		 add	 esp, 520		; 00000208H
  01a8e	3b ec		 cmp	 ebp, esp
  01a90	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a95	8b e5		 mov	 esp, ebp
  01a97	5d		 pop	 ebp
  01a98	c3		 ret	 0
$L199207:
  01a99	06 00 00 00	 DD	 6
  01a9d	00 00 00 00	 DD	 $L199206
$L199206:
  01aa1	d4 ff ff ff	 DD	 -44			; ffffffd4H
  01aa5	04 00 00 00	 DD	 4
  01aa9	00 00 00 00	 DD	 $L199199
  01aad	c0 ff ff ff	 DD	 -64			; ffffffc0H
  01ab1	04 00 00 00	 DD	 4
  01ab5	00 00 00 00	 DD	 $L199200
  01ab9	b4 ff ff ff	 DD	 -76			; ffffffb4H
  01abd	04 00 00 00	 DD	 4
  01ac1	00 00 00 00	 DD	 $L199201
  01ac5	a8 ff ff ff	 DD	 -88			; ffffffa8H
  01ac9	04 00 00 00	 DD	 4
  01acd	00 00 00 00	 DD	 $L199202
  01ad1	9c ff ff ff	 DD	 -100			; ffffff9cH
  01ad5	04 00 00 00	 DD	 4
  01ad9	00 00 00 00	 DD	 $L199203
  01add	90 ff ff ff	 DD	 -112			; ffffff90H
  01ae1	04 00 00 00	 DD	 4
  01ae5	00 00 00 00	 DD	 $L199204
$L199204:
  01ae9	73		 DB	 115			; 00000073H
  01aea	74		 DB	 116			; 00000074H
  01aeb	72		 DB	 114			; 00000072H
  01aec	4e		 DB	 78			; 0000004eH
  01aed	6f		 DB	 111			; 0000006fH
  01aee	72		 DB	 114			; 00000072H
  01aef	6d		 DB	 109			; 0000006dH
  01af0	61		 DB	 97			; 00000061H
  01af1	6c		 DB	 108			; 0000006cH
  01af2	43		 DB	 67			; 00000043H
  01af3	6f		 DB	 111			; 0000006fH
  01af4	6c		 DB	 108			; 0000006cH
  01af5	6f		 DB	 111			; 0000006fH
  01af6	72		 DB	 114			; 00000072H
  01af7	00		 DB	 0
$L199203:
  01af8	73		 DB	 115			; 00000073H
  01af9	74		 DB	 116			; 00000074H
  01afa	72		 DB	 114			; 00000072H
  01afb	43		 DB	 67			; 00000043H
  01afc	6f		 DB	 111			; 0000006fH
  01afd	6c		 DB	 108			; 0000006cH
  01afe	6f		 DB	 111			; 0000006fH
  01aff	72		 DB	 114			; 00000072H
  01b00	00		 DB	 0
$L199202:
  01b01	73		 DB	 115			; 00000073H
  01b02	74		 DB	 116			; 00000074H
  01b03	72		 DB	 114			; 00000072H
  01b04	54		 DB	 84			; 00000054H
  01b05	6f		 DB	 111			; 0000006fH
  01b06	6f		 DB	 111			; 0000006fH
  01b07	6c		 DB	 108			; 0000006cH
  01b08	74		 DB	 116			; 00000074H
  01b09	69		 DB	 105			; 00000069H
  01b0a	70		 DB	 112			; 00000070H
  01b0b	00		 DB	 0
$L199201:
  01b0c	76		 DB	 118			; 00000076H
  01b0d	61		 DB	 97			; 00000061H
  01b0e	6c		 DB	 108			; 0000006cH
  01b0f	75		 DB	 117			; 00000075H
  01b10	65		 DB	 101			; 00000065H
  01b11	00		 DB	 0
$L199200:
  01b12	6e		 DB	 110			; 0000006eH
  01b13	61		 DB	 97			; 00000061H
  01b14	6d		 DB	 109			; 0000006dH
  01b15	65		 DB	 101			; 00000065H
  01b16	00		 DB	 0
$L199199:
  01b17	74		 DB	 116			; 00000074H
  01b18	6f		 DB	 111			; 0000006fH
  01b19	6f		 DB	 111			; 0000006fH
  01b1a	6c		 DB	 108			; 0000006cH
  01b1b	74		 DB	 116			; 00000074H
  01b1c	69		 DB	 105			; 00000069H
  01b1d	70		 DB	 112			; 00000070H
  01b1e	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L199157:
  0016c	8b f4		 mov	 esi, esp
  0016e	8d 4d d4	 lea	 ecx, DWORD PTR _tooltip$[ebp]
  00171	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00177	3b f4		 cmp	 esi, esp
  00179	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199159:
  0017e	8b f4		 mov	 esi, esp
  00180	8d 4d c0	 lea	 ecx, DWORD PTR _name$[ebp]
  00183	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00189	3b f4		 cmp	 esi, esp
  0018b	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199160:
  00190	8b f4		 mov	 esi, esp
  00192	8d 4d 80	 lea	 ecx, DWORD PTR $T199118[ebp]
  00195	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0019b	3b f4		 cmp	 esi, esp
  0019d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199161:
  001a2	8b f4		 mov	 esi, esp
  001a4	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR $T199119[ebp]
  001aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001b0	3b f4		 cmp	 esi, esp
  001b2	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199163:
  001b7	8b f4		 mov	 esi, esp
  001b9	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T199122[ebp]
  001bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001c5	3b f4		 cmp	 esi, esp
  001c7	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199164:
  001cc	8b f4		 mov	 esi, esp
  001ce	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR $T199123[ebp]
  001d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001da	3b f4		 cmp	 esi, esp
  001dc	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199166:
  001e1	8b f4		 mov	 esi, esp
  001e3	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T199126[ebp]
  001e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001ef	3b f4		 cmp	 esi, esp
  001f1	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199167:
  001f6	8b f4		 mov	 esi, esp
  001f8	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR $T199127[ebp]
  001fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00204	3b f4		 cmp	 esi, esp
  00206	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199169:
  0020b	8b f4		 mov	 esi, esp
  0020d	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T199130[ebp]
  00213	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00219	3b f4		 cmp	 esi, esp
  0021b	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199170:
  00220	8b f4		 mov	 esi, esp
  00222	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR $T199131[ebp]
  00228	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0022e	3b f4		 cmp	 esi, esp
  00230	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199172:
  00235	8b f4		 mov	 esi, esp
  00237	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T199134[ebp]
  0023d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00243	3b f4		 cmp	 esi, esp
  00245	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199173:
  0024a	8b f4		 mov	 esi, esp
  0024c	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR $T199135[ebp]
  00252	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00258	3b f4		 cmp	 esi, esp
  0025a	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199179:
  0025f	8b f4		 mov	 esi, esp
  00261	8d 4d b4	 lea	 ecx, DWORD PTR _value$[ebp]
  00264	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0026a	3b f4		 cmp	 esi, esp
  0026c	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199182:
  00271	8b f4		 mov	 esi, esp
  00273	8d 4d a8	 lea	 ecx, DWORD PTR _strTooltip$[ebp]
  00276	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0027c	3b f4		 cmp	 esi, esp
  0027e	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199184:
  00283	8b f4		 mov	 esi, esp
  00285	8d 4d 9c	 lea	 ecx, DWORD PTR _strColor$[ebp]
  00288	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0028e	3b f4		 cmp	 esi, esp
  00290	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199185:
  00295	8b f4		 mov	 esi, esp
  00297	8d 4d 90	 lea	 ecx, DWORD PTR _strNormalColor$[ebp]
  0029a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002a0	3b f4		 cmp	 esi, esp
  002a2	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199186:
  002a7	8b f4		 mov	 esi, esp
  002a9	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR $T199146[ebp]
  002af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002b5	3b f4		 cmp	 esi, esp
  002b7	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199188:
  002bc	8b f4		 mov	 esi, esp
  002be	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR $T199148[ebp]
  002c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002ca	3b f4		 cmp	 esi, esp
  002cc	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199191:
  002d1	8b f4		 mov	 esi, esp
  002d3	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR $T199151[ebp]
  002d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002df	3b f4		 cmp	 esi, esp
  002e1	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199194:
  002e6	8b f4		 mov	 esi, esp
  002e8	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR $T199154[ebp]
  002ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002f4	3b f4		 cmp	 esi, esp
  002f6	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  002fb	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199198
  00300	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateButton@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateButton
EXTRN	?x_SetAttrib@CMarkup@@IAE_NHPBD0@Z:NEAR		; CMarkup::x_SetAttrib
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\util\markup.h
;	COMDAT ?SetAttrib@CMarkup@@QAE_NPBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_szAttrib$ = 8						; size = 4
_szValue$ = 12						; size = 4
?SetAttrib@CMarkup@@QAE_NPBD0@Z PROC NEAR		; CMarkup::SetAttrib, COMDAT
; _this$ = ecx

; 41   : 	bool SetAttrib( LPCTSTR szAttrib, LPCTSTR szValue ) { return x_SetAttrib(m_iPos,szAttrib,szValue); };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _szValue$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _szAttrib$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?x_SetAttrib@CMarkup@@IAE_NHPBD0@Z ; CMarkup::x_SetAttrib
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?SetAttrib@CMarkup@@QAE_NPBD0@Z ENDP			; CMarkup::SetAttrib
_TEXT	ENDS
EXTRN	?SetBitmap@ETSSplitter@@QAEXPAVCDibBitmap@@000000000@Z:NEAR ; ETSSplitter::SetBitmap
xdata$x	SEGMENT
$T199238 DD	0ffffffffH
	DD	FLAT:$L199221
	DD	0ffffffffH
	DD	FLAT:$L199222
	DD	0ffffffffH
	DD	FLAT:$L199223
	DD	0ffffffffH
	DD	FLAT:$L199224
	DD	0ffffffffH
	DD	FLAT:$L199225
	DD	0ffffffffH
	DD	FLAT:$L199226
	DD	0ffffffffH
	DD	FLAT:$L199227
	DD	0ffffffffH
	DD	FLAT:$L199228
	DD	0ffffffffH
	DD	FLAT:$L199229
	DD	0ffffffffH
	DD	FLAT:$L199230
	DD	0ffffffffH
	DD	FLAT:$L199231
$T199233 DD	019930520H
	DD	0bH
	DD	FLAT:$T199238
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\createcontrolfactory.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv380 = -188						; size = 4
tv409 = -184						; size = 4
tv378 = -180						; size = 4
tv406 = -176						; size = 4
tv376 = -172						; size = 4
tv403 = -168						; size = 4
tv374 = -164						; size = 4
tv400 = -160						; size = 4
tv372 = -156						; size = 4
tv397 = -152						; size = 4
tv370 = -148						; size = 4
tv394 = -144						; size = 4
tv368 = -140						; size = 4
tv391 = -136						; size = 4
tv366 = -132						; size = 4
tv388 = -128						; size = 4
tv364 = -124						; size = 4
tv385 = -120						; size = 4
tv362 = -116						; size = 4
tv382 = -112						; size = 4
$T199220 = -108						; size = 4
$T199219 = -104						; size = 4
$T199218 = -100						; size = 4
$T199217 = -96						; size = 4
$T199216 = -92						; size = 4
$T199215 = -88						; size = 4
$T199214 = -84						; size = 4
$T199213 = -80						; size = 4
$T199212 = -76						; size = 4
$T199211 = -72						; size = 4
_hide_btn$ = -64					; size = 4
_left_over$ = -56					; size = 4
_right_over$ = -52					; size = 4
_up_over$ = -48						; size = 4
_down_over$ = -44					; size = 4
_left$ = -40						; size = 4
_right$ = -36						; size = 4
_up$ = -32						; size = 4
_down$ = -28						; size = 4
_horz$ = -24						; size = 4
_vert$ = -20						; size = 4
_pSpl$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z PROC NEAR ; CreateControlFactory::CreateSplitter

; 270  : {

  01b20	55		 push	 ebp
  01b21	8b ec		 mov	 ebp, esp
  01b23	6a ff		 push	 -1
  01b25	68 00 00 00 00	 push	 __ehhandler$?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z
  01b2a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01b30	50		 push	 eax
  01b31	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01b38	81 ec b0 00 00
	00		 sub	 esp, 176		; 000000b0H
  01b3e	56		 push	 esi
  01b3f	57		 push	 edi
  01b40	8d bd 44 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-188]
  01b46	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  01b4b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  01b50	f3 ab		 rep stosd

; 271  : 	ETSSplitter * pSpl = (ETSSplitter *) pWnd;

  01b52	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  01b55	89 45 f0	 mov	 DWORD PTR _pSpl$[ebp], eax

; 272  : 
; 273  : 	CDibBitmap * vert = pSkin->GetDibBmp(pXml->GetAttrib("vert"), false);

  01b58	68 00 00 00 00	 push	 OFFSET FLAT:$SG196705
  01b5d	8d 4d b8	 lea	 ecx, DWORD PTR $T199211[ebp]
  01b60	51		 push	 ecx
  01b61	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01b64	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01b69	89 45 90	 mov	 DWORD PTR tv382[ebp], eax
  01b6c	8b 55 90	 mov	 edx, DWORD PTR tv382[ebp]
  01b6f	89 55 8c	 mov	 DWORD PTR tv362[ebp], edx
  01b72	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01b79	8b f4		 mov	 esi, esp
  01b7b	6a 00		 push	 0
  01b7d	8b fc		 mov	 edi, esp
  01b7f	8b 4d 8c	 mov	 ecx, DWORD PTR tv362[ebp]
  01b82	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01b88	3b fc		 cmp	 edi, esp
  01b8a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01b8f	50		 push	 eax
  01b90	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01b93	83 c1 04	 add	 ecx, 4
  01b96	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  01b99	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  01b9c	ff 12		 call	 DWORD PTR [edx]
  01b9e	3b f4		 cmp	 esi, esp
  01ba0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01ba5	89 45 ec	 mov	 DWORD PTR _vert$[ebp], eax
  01ba8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01baf	8b f4		 mov	 esi, esp
  01bb1	8d 4d b8	 lea	 ecx, DWORD PTR $T199211[ebp]
  01bb4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01bba	3b f4		 cmp	 esi, esp
  01bbc	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 274  : 	CDibBitmap * horz = pSkin->GetDibBmp(pXml->GetAttrib("horz"), false);

  01bc1	68 00 00 00 00	 push	 OFFSET FLAT:$SG196708
  01bc6	8d 45 b4	 lea	 eax, DWORD PTR $T199212[ebp]
  01bc9	50		 push	 eax
  01bca	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01bcd	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01bd2	89 45 88	 mov	 DWORD PTR tv385[ebp], eax
  01bd5	8b 4d 88	 mov	 ecx, DWORD PTR tv385[ebp]
  01bd8	89 4d 84	 mov	 DWORD PTR tv364[ebp], ecx
  01bdb	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  01be2	8b f4		 mov	 esi, esp
  01be4	6a 00		 push	 0
  01be6	8b fc		 mov	 edi, esp
  01be8	8b 4d 84	 mov	 ecx, DWORD PTR tv364[ebp]
  01beb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01bf1	3b fc		 cmp	 edi, esp
  01bf3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01bf8	50		 push	 eax
  01bf9	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01bfc	83 c1 04	 add	 ecx, 4
  01bff	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01c02	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01c05	ff 10		 call	 DWORD PTR [eax]
  01c07	3b f4		 cmp	 esi, esp
  01c09	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01c0e	89 45 e8	 mov	 DWORD PTR _horz$[ebp], eax
  01c11	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01c18	8b f4		 mov	 esi, esp
  01c1a	8d 4d b4	 lea	 ecx, DWORD PTR $T199212[ebp]
  01c1d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01c23	3b f4		 cmp	 esi, esp
  01c25	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 275  : 	CDibBitmap * down = pSkin->GetDibBmp(pXml->GetAttrib("btn_down"), false);

  01c2a	68 00 00 00 00	 push	 OFFSET FLAT:$SG196711
  01c2f	8d 4d b0	 lea	 ecx, DWORD PTR $T199213[ebp]
  01c32	51		 push	 ecx
  01c33	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01c36	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01c3b	89 45 80	 mov	 DWORD PTR tv388[ebp], eax
  01c3e	8b 55 80	 mov	 edx, DWORD PTR tv388[ebp]
  01c41	89 95 7c ff ff
	ff		 mov	 DWORD PTR tv366[ebp], edx
  01c47	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  01c4e	8b f4		 mov	 esi, esp
  01c50	6a 00		 push	 0
  01c52	8b fc		 mov	 edi, esp
  01c54	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv366[ebp]
  01c5a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01c60	3b fc		 cmp	 edi, esp
  01c62	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01c67	50		 push	 eax
  01c68	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01c6b	83 c1 04	 add	 ecx, 4
  01c6e	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  01c71	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  01c74	ff 12		 call	 DWORD PTR [edx]
  01c76	3b f4		 cmp	 esi, esp
  01c78	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01c7d	89 45 e4	 mov	 DWORD PTR _down$[ebp], eax
  01c80	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01c87	8b f4		 mov	 esi, esp
  01c89	8d 4d b0	 lea	 ecx, DWORD PTR $T199213[ebp]
  01c8c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01c92	3b f4		 cmp	 esi, esp
  01c94	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 276  : 	CDibBitmap * up = pSkin->GetDibBmp(pXml->GetAttrib("btn_up"), false);

  01c99	68 00 00 00 00	 push	 OFFSET FLAT:$SG196714
  01c9e	8d 45 ac	 lea	 eax, DWORD PTR $T199214[ebp]
  01ca1	50		 push	 eax
  01ca2	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01ca5	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01caa	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv391[ebp], eax
  01cb0	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv391[ebp]
  01cb6	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv368[ebp], ecx
  01cbc	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  01cc3	8b f4		 mov	 esi, esp
  01cc5	6a 00		 push	 0
  01cc7	8b fc		 mov	 edi, esp
  01cc9	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv368[ebp]
  01ccf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01cd5	3b fc		 cmp	 edi, esp
  01cd7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01cdc	50		 push	 eax
  01cdd	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01ce0	83 c1 04	 add	 ecx, 4
  01ce3	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01ce6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01ce9	ff 10		 call	 DWORD PTR [eax]
  01ceb	3b f4		 cmp	 esi, esp
  01ced	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01cf2	89 45 e0	 mov	 DWORD PTR _up$[ebp], eax
  01cf5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01cfc	8b f4		 mov	 esi, esp
  01cfe	8d 4d ac	 lea	 ecx, DWORD PTR $T199214[ebp]
  01d01	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01d07	3b f4		 cmp	 esi, esp
  01d09	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 277  : 	CDibBitmap * right = pSkin->GetDibBmp(pXml->GetAttrib("btn_right"), false);

  01d0e	68 00 00 00 00	 push	 OFFSET FLAT:$SG196717
  01d13	8d 4d a8	 lea	 ecx, DWORD PTR $T199215[ebp]
  01d16	51		 push	 ecx
  01d17	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01d1a	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01d1f	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv394[ebp], eax
  01d25	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR tv394[ebp]
  01d2b	89 95 6c ff ff
	ff		 mov	 DWORD PTR tv370[ebp], edx
  01d31	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  01d38	8b f4		 mov	 esi, esp
  01d3a	6a 00		 push	 0
  01d3c	8b fc		 mov	 edi, esp
  01d3e	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv370[ebp]
  01d44	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01d4a	3b fc		 cmp	 edi, esp
  01d4c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01d51	50		 push	 eax
  01d52	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01d55	83 c1 04	 add	 ecx, 4
  01d58	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  01d5b	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  01d5e	ff 12		 call	 DWORD PTR [edx]
  01d60	3b f4		 cmp	 esi, esp
  01d62	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01d67	89 45 dc	 mov	 DWORD PTR _right$[ebp], eax
  01d6a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01d71	8b f4		 mov	 esi, esp
  01d73	8d 4d a8	 lea	 ecx, DWORD PTR $T199215[ebp]
  01d76	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01d7c	3b f4		 cmp	 esi, esp
  01d7e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 278  : 	CDibBitmap * left = pSkin->GetDibBmp(pXml->GetAttrib("btn_left"), false);

  01d83	68 00 00 00 00	 push	 OFFSET FLAT:$SG196720
  01d88	8d 45 a4	 lea	 eax, DWORD PTR $T199216[ebp]
  01d8b	50		 push	 eax
  01d8c	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01d8f	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01d94	89 85 68 ff ff
	ff		 mov	 DWORD PTR tv397[ebp], eax
  01d9a	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv397[ebp]
  01da0	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv372[ebp], ecx
  01da6	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  01dad	8b f4		 mov	 esi, esp
  01daf	6a 00		 push	 0
  01db1	8b fc		 mov	 edi, esp
  01db3	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv372[ebp]
  01db9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01dbf	3b fc		 cmp	 edi, esp
  01dc1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01dc6	50		 push	 eax
  01dc7	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01dca	83 c1 04	 add	 ecx, 4
  01dcd	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01dd0	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01dd3	ff 10		 call	 DWORD PTR [eax]
  01dd5	3b f4		 cmp	 esi, esp
  01dd7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01ddc	89 45 d8	 mov	 DWORD PTR _left$[ebp], eax
  01ddf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01de6	8b f4		 mov	 esi, esp
  01de8	8d 4d a4	 lea	 ecx, DWORD PTR $T199216[ebp]
  01deb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01df1	3b f4		 cmp	 esi, esp
  01df3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 279  : 	CDibBitmap * down_over = pSkin->GetDibBmp(pXml->GetAttrib("btn_down_over"), false);

  01df8	68 00 00 00 00	 push	 OFFSET FLAT:$SG196723
  01dfd	8d 4d a0	 lea	 ecx, DWORD PTR $T199217[ebp]
  01e00	51		 push	 ecx
  01e01	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01e04	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01e09	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv400[ebp], eax
  01e0f	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv400[ebp]
  01e15	89 95 5c ff ff
	ff		 mov	 DWORD PTR tv374[ebp], edx
  01e1b	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 6
  01e22	8b f4		 mov	 esi, esp
  01e24	6a 00		 push	 0
  01e26	8b fc		 mov	 edi, esp
  01e28	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv374[ebp]
  01e2e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01e34	3b fc		 cmp	 edi, esp
  01e36	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01e3b	50		 push	 eax
  01e3c	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01e3f	83 c1 04	 add	 ecx, 4
  01e42	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  01e45	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  01e48	ff 12		 call	 DWORD PTR [edx]
  01e4a	3b f4		 cmp	 esi, esp
  01e4c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01e51	89 45 d4	 mov	 DWORD PTR _down_over$[ebp], eax
  01e54	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01e5b	8b f4		 mov	 esi, esp
  01e5d	8d 4d a0	 lea	 ecx, DWORD PTR $T199217[ebp]
  01e60	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01e66	3b f4		 cmp	 esi, esp
  01e68	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 280  : 	CDibBitmap * up_over = pSkin->GetDibBmp(pXml->GetAttrib("btn_up_over"), false);

  01e6d	68 00 00 00 00	 push	 OFFSET FLAT:$SG196726
  01e72	8d 45 9c	 lea	 eax, DWORD PTR $T199218[ebp]
  01e75	50		 push	 eax
  01e76	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01e79	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01e7e	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv403[ebp], eax
  01e84	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR tv403[ebp]
  01e8a	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv376[ebp], ecx
  01e90	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
  01e97	8b f4		 mov	 esi, esp
  01e99	6a 00		 push	 0
  01e9b	8b fc		 mov	 edi, esp
  01e9d	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv376[ebp]
  01ea3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01ea9	3b fc		 cmp	 edi, esp
  01eab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01eb0	50		 push	 eax
  01eb1	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01eb4	83 c1 04	 add	 ecx, 4
  01eb7	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01eba	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01ebd	ff 10		 call	 DWORD PTR [eax]
  01ebf	3b f4		 cmp	 esi, esp
  01ec1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01ec6	89 45 d0	 mov	 DWORD PTR _up_over$[ebp], eax
  01ec9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01ed0	8b f4		 mov	 esi, esp
  01ed2	8d 4d 9c	 lea	 ecx, DWORD PTR $T199218[ebp]
  01ed5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01edb	3b f4		 cmp	 esi, esp
  01edd	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 281  : 	CDibBitmap * right_over = pSkin->GetDibBmp(pXml->GetAttrib("btn_right_over"), false);

  01ee2	68 00 00 00 00	 push	 OFFSET FLAT:$SG196729
  01ee7	8d 4d 98	 lea	 ecx, DWORD PTR $T199219[ebp]
  01eea	51		 push	 ecx
  01eeb	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01eee	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01ef3	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv406[ebp], eax
  01ef9	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR tv406[ebp]
  01eff	89 95 4c ff ff
	ff		 mov	 DWORD PTR tv378[ebp], edx
  01f05	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
  01f0c	8b f4		 mov	 esi, esp
  01f0e	6a 00		 push	 0
  01f10	8b fc		 mov	 edi, esp
  01f12	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv378[ebp]
  01f18	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01f1e	3b fc		 cmp	 edi, esp
  01f20	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01f25	50		 push	 eax
  01f26	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01f29	83 c1 04	 add	 ecx, 4
  01f2c	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  01f2f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  01f32	ff 12		 call	 DWORD PTR [edx]
  01f34	3b f4		 cmp	 esi, esp
  01f36	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01f3b	89 45 cc	 mov	 DWORD PTR _right_over$[ebp], eax
  01f3e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01f45	8b f4		 mov	 esi, esp
  01f47	8d 4d 98	 lea	 ecx, DWORD PTR $T199219[ebp]
  01f4a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01f50	3b f4		 cmp	 esi, esp
  01f52	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 282  : 	CDibBitmap * left_over = pSkin->GetDibBmp(pXml->GetAttrib("btn_left_over"), false);

  01f57	68 00 00 00 00	 push	 OFFSET FLAT:$SG196732
  01f5c	8d 45 94	 lea	 eax, DWORD PTR $T199220[ebp]
  01f5f	50		 push	 eax
  01f60	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  01f63	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  01f68	89 85 48 ff ff
	ff		 mov	 DWORD PTR tv409[ebp], eax
  01f6e	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv409[ebp]
  01f74	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv380[ebp], ecx
  01f7a	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
  01f81	8b f4		 mov	 esi, esp
  01f83	6a 00		 push	 0
  01f85	8b fc		 mov	 edi, esp
  01f87	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR tv380[ebp]
  01f8d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01f93	3b fc		 cmp	 edi, esp
  01f95	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01f9a	50		 push	 eax
  01f9b	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01f9e	83 c1 04	 add	 ecx, 4
  01fa1	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01fa4	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01fa7	ff 10		 call	 DWORD PTR [eax]
  01fa9	3b f4		 cmp	 esi, esp
  01fab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01fb0	89 45 c8	 mov	 DWORD PTR _left_over$[ebp], eax
  01fb3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01fba	8b f4		 mov	 esi, esp
  01fbc	8d 4d 94	 lea	 ecx, DWORD PTR $T199220[ebp]
  01fbf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01fc5	3b f4		 cmp	 esi, esp
  01fc7	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 283  : 
; 284  : 	if(vert == NULL && horz == NULL)

  01fcc	83 7d ec 00	 cmp	 DWORD PTR _vert$[ebp], 0
  01fd0	0f 85 54 01 00
	00		 jne	 $L196733
  01fd6	83 7d e8 00	 cmp	 DWORD PTR _horz$[ebp], 0
  01fda	0f 85 4a 01 00
	00		 jne	 $L196733

; 285  : 	{
; 286  : 		vert = pSkin->GetDibBmp("SpliterVertBK", false);

  01fe0	8b f4		 mov	 esi, esp
  01fe2	6a 00		 push	 0
  01fe4	68 00 00 00 00	 push	 OFFSET FLAT:$SG196734
  01fe9	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  01fec	83 c1 04	 add	 ecx, 4
  01fef	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  01ff2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01ff5	ff 10		 call	 DWORD PTR [eax]
  01ff7	3b f4		 cmp	 esi, esp
  01ff9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01ffe	89 45 ec	 mov	 DWORD PTR _vert$[ebp], eax

; 287  : 		horz = pSkin->GetDibBmp("SpliterHorzBK", false);

  02001	8b f4		 mov	 esi, esp
  02003	6a 00		 push	 0
  02005	68 00 00 00 00	 push	 OFFSET FLAT:$SG196735
  0200a	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0200d	83 c1 04	 add	 ecx, 4
  02010	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  02013	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  02016	ff 10		 call	 DWORD PTR [eax]
  02018	3b f4		 cmp	 esi, esp
  0201a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0201f	89 45 e8	 mov	 DWORD PTR _horz$[ebp], eax

; 288  : 		down = pSkin->GetDibBmp("SpliterBarDown", false);

  02022	8b f4		 mov	 esi, esp
  02024	6a 00		 push	 0
  02026	68 00 00 00 00	 push	 OFFSET FLAT:$SG196736
  0202b	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0202e	83 c1 04	 add	 ecx, 4
  02031	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  02034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  02037	ff 10		 call	 DWORD PTR [eax]
  02039	3b f4		 cmp	 esi, esp
  0203b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02040	89 45 e4	 mov	 DWORD PTR _down$[ebp], eax

; 289  : 		up = pSkin->GetDibBmp("SpliterBarUp", false);

  02043	8b f4		 mov	 esi, esp
  02045	6a 00		 push	 0
  02047	68 00 00 00 00	 push	 OFFSET FLAT:$SG196737
  0204c	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0204f	83 c1 04	 add	 ecx, 4
  02052	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  02055	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  02058	ff 10		 call	 DWORD PTR [eax]
  0205a	3b f4		 cmp	 esi, esp
  0205c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02061	89 45 e0	 mov	 DWORD PTR _up$[ebp], eax

; 290  : 		right = pSkin->GetDibBmp("SpliterBarRight", false);

  02064	8b f4		 mov	 esi, esp
  02066	6a 00		 push	 0
  02068	68 00 00 00 00	 push	 OFFSET FLAT:$SG196738
  0206d	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02070	83 c1 04	 add	 ecx, 4
  02073	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  02076	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  02079	ff 10		 call	 DWORD PTR [eax]
  0207b	3b f4		 cmp	 esi, esp
  0207d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02082	89 45 dc	 mov	 DWORD PTR _right$[ebp], eax

; 291  : 		left = pSkin->GetDibBmp("SpliterBarLeft", false);

  02085	8b f4		 mov	 esi, esp
  02087	6a 00		 push	 0
  02089	68 00 00 00 00	 push	 OFFSET FLAT:$SG196739
  0208e	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02091	83 c1 04	 add	 ecx, 4
  02094	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  02097	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0209a	ff 10		 call	 DWORD PTR [eax]
  0209c	3b f4		 cmp	 esi, esp
  0209e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  020a3	89 45 d8	 mov	 DWORD PTR _left$[ebp], eax

; 292  : 		down_over = pSkin->GetDibBmp("SpliterBarDownOver", false);

  020a6	8b f4		 mov	 esi, esp
  020a8	6a 00		 push	 0
  020aa	68 00 00 00 00	 push	 OFFSET FLAT:$SG196740
  020af	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  020b2	83 c1 04	 add	 ecx, 4
  020b5	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  020b8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  020bb	ff 10		 call	 DWORD PTR [eax]
  020bd	3b f4		 cmp	 esi, esp
  020bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  020c4	89 45 d4	 mov	 DWORD PTR _down_over$[ebp], eax

; 293  : 		up_over = pSkin->GetDibBmp("SpliterBarUpOver", false);

  020c7	8b f4		 mov	 esi, esp
  020c9	6a 00		 push	 0
  020cb	68 00 00 00 00	 push	 OFFSET FLAT:$SG196741
  020d0	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  020d3	83 c1 04	 add	 ecx, 4
  020d6	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  020d9	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  020dc	ff 10		 call	 DWORD PTR [eax]
  020de	3b f4		 cmp	 esi, esp
  020e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  020e5	89 45 d0	 mov	 DWORD PTR _up_over$[ebp], eax

; 294  : 		right_over = pSkin->GetDibBmp("SpliterBarRightOver", false);

  020e8	8b f4		 mov	 esi, esp
  020ea	6a 00		 push	 0
  020ec	68 00 00 00 00	 push	 OFFSET FLAT:$SG196742
  020f1	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  020f4	83 c1 04	 add	 ecx, 4
  020f7	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  020fa	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  020fd	ff 10		 call	 DWORD PTR [eax]
  020ff	3b f4		 cmp	 esi, esp
  02101	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02106	89 45 cc	 mov	 DWORD PTR _right_over$[ebp], eax

; 295  : 		left_over = pSkin->GetDibBmp("SpliterBarLeftOver", false);

  02109	8b f4		 mov	 esi, esp
  0210b	6a 00		 push	 0
  0210d	68 00 00 00 00	 push	 OFFSET FLAT:$SG196743
  02112	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02115	83 c1 04	 add	 ecx, 4
  02118	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  0211b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0211e	ff 10		 call	 DWORD PTR [eax]
  02120	3b f4		 cmp	 esi, esp
  02122	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02127	89 45 c8	 mov	 DWORD PTR _left_over$[ebp], eax
$L196733:

; 296  : 	}
; 297  : 
; 298  : 	CString hide_btn = pXml->GetAttrib("hide-closebtn");

  0212a	68 00 00 00 00	 push	 OFFSET FLAT:$SG196746
  0212f	8d 4d c0	 lea	 ecx, DWORD PTR _hide_btn$[ebp]
  02132	51		 push	 ecx
  02133	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02136	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  0213b	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 10 ; 0000000aH

; 299  : 
; 300  : 	if(hide_btn == "1")

  02142	68 00 00 00 00	 push	 OFFSET FLAT:$SG196748
  02147	8d 55 c0	 lea	 edx, DWORD PTR _hide_btn$[ebp]
  0214a	52		 push	 edx
  0214b	e8 00 00 00 00	 call	 ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
  02150	83 c4 08	 add	 esp, 8
  02153	0f b6 c0	 movzx	 eax, al
  02156	85 c0		 test	 eax, eax
  02158	74 09		 je	 SHORT $L196747

; 301  : 		pSpl->m_bHideCloseBtn = true;

  0215a	8b 4d f0	 mov	 ecx, DWORD PTR _pSpl$[ebp]
  0215d	c6 41 60 01	 mov	 BYTE PTR [ecx+96], 1

; 302  : 	else

  02161	eb 07		 jmp	 SHORT $L196749
$L196747:

; 303  : 		pSpl->m_bHideCloseBtn = false;

  02163	8b 55 f0	 mov	 edx, DWORD PTR _pSpl$[ebp]
  02166	c6 42 60 00	 mov	 BYTE PTR [edx+96], 0
$L196749:

; 304  : 
; 305  : 	pSpl->SetBitmap( vert,  horz, right, left, up, down, right_over, left_over, up_over, down_over);

  0216a	8b 45 d4	 mov	 eax, DWORD PTR _down_over$[ebp]
  0216d	50		 push	 eax
  0216e	8b 4d d0	 mov	 ecx, DWORD PTR _up_over$[ebp]
  02171	51		 push	 ecx
  02172	8b 55 c8	 mov	 edx, DWORD PTR _left_over$[ebp]
  02175	52		 push	 edx
  02176	8b 45 cc	 mov	 eax, DWORD PTR _right_over$[ebp]
  02179	50		 push	 eax
  0217a	8b 4d e4	 mov	 ecx, DWORD PTR _down$[ebp]
  0217d	51		 push	 ecx
  0217e	8b 55 e0	 mov	 edx, DWORD PTR _up$[ebp]
  02181	52		 push	 edx
  02182	8b 45 d8	 mov	 eax, DWORD PTR _left$[ebp]
  02185	50		 push	 eax
  02186	8b 4d dc	 mov	 ecx, DWORD PTR _right$[ebp]
  02189	51		 push	 ecx
  0218a	8b 55 e8	 mov	 edx, DWORD PTR _horz$[ebp]
  0218d	52		 push	 edx
  0218e	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  02191	50		 push	 eax
  02192	8b 4d f0	 mov	 ecx, DWORD PTR _pSpl$[ebp]
  02195	e8 00 00 00 00	 call	 ?SetBitmap@ETSSplitter@@QAEXPAVCDibBitmap@@000000000@Z ; ETSSplitter::SetBitmap

; 306  : }

  0219a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  021a1	8b f4		 mov	 esi, esp
  021a3	8d 4d c0	 lea	 ecx, DWORD PTR _hide_btn$[ebp]
  021a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  021ac	3b f4		 cmp	 esi, esp
  021ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  021b3	52		 push	 edx
  021b4	8b cd		 mov	 ecx, ebp
  021b6	50		 push	 eax
  021b7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L199237
  021bd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  021c2	58		 pop	 eax
  021c3	5a		 pop	 edx
  021c4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  021c7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  021ce	5f		 pop	 edi
  021cf	5e		 pop	 esi
  021d0	81 c4 bc 00 00
	00		 add	 esp, 188		; 000000bcH
  021d6	3b ec		 cmp	 ebp, esp
  021d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  021dd	8b e5		 mov	 esp, ebp
  021df	5d		 pop	 ebp
  021e0	c3		 ret	 0
$L199237:
  021e1	01 00 00 00	 DD	 1
  021e5	00 00 00 00	 DD	 $L199236
$L199236:
  021e9	c0 ff ff ff	 DD	 -64			; ffffffc0H
  021ed	04 00 00 00	 DD	 4
  021f1	00 00 00 00	 DD	 $L199234
$L199234:
  021f5	68		 DB	 104			; 00000068H
  021f6	69		 DB	 105			; 00000069H
  021f7	64		 DB	 100			; 00000064H
  021f8	65		 DB	 101			; 00000065H
  021f9	5f		 DB	 95			; 0000005fH
  021fa	62		 DB	 98			; 00000062H
  021fb	74		 DB	 116			; 00000074H
  021fc	6e		 DB	 110			; 0000006eH
  021fd	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L199221:
  00305	8b f4		 mov	 esi, esp
  00307	8d 4d b8	 lea	 ecx, DWORD PTR $T199211[ebp]
  0030a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00310	3b f4		 cmp	 esi, esp
  00312	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199222:
  00317	8b f4		 mov	 esi, esp
  00319	8d 4d b4	 lea	 ecx, DWORD PTR $T199212[ebp]
  0031c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00322	3b f4		 cmp	 esi, esp
  00324	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199223:
  00329	8b f4		 mov	 esi, esp
  0032b	8d 4d b0	 lea	 ecx, DWORD PTR $T199213[ebp]
  0032e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00334	3b f4		 cmp	 esi, esp
  00336	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199224:
  0033b	8b f4		 mov	 esi, esp
  0033d	8d 4d ac	 lea	 ecx, DWORD PTR $T199214[ebp]
  00340	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00346	3b f4		 cmp	 esi, esp
  00348	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199225:
  0034d	8b f4		 mov	 esi, esp
  0034f	8d 4d a8	 lea	 ecx, DWORD PTR $T199215[ebp]
  00352	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00358	3b f4		 cmp	 esi, esp
  0035a	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199226:
  0035f	8b f4		 mov	 esi, esp
  00361	8d 4d a4	 lea	 ecx, DWORD PTR $T199216[ebp]
  00364	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0036a	3b f4		 cmp	 esi, esp
  0036c	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199227:
  00371	8b f4		 mov	 esi, esp
  00373	8d 4d a0	 lea	 ecx, DWORD PTR $T199217[ebp]
  00376	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0037c	3b f4		 cmp	 esi, esp
  0037e	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199228:
  00383	8b f4		 mov	 esi, esp
  00385	8d 4d 9c	 lea	 ecx, DWORD PTR $T199218[ebp]
  00388	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0038e	3b f4		 cmp	 esi, esp
  00390	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199229:
  00395	8b f4		 mov	 esi, esp
  00397	8d 4d 98	 lea	 ecx, DWORD PTR $T199219[ebp]
  0039a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  003a0	3b f4		 cmp	 esi, esp
  003a2	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199230:
  003a7	8b f4		 mov	 esi, esp
  003a9	8d 4d 94	 lea	 ecx, DWORD PTR $T199220[ebp]
  003ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  003b2	3b f4		 cmp	 esi, esp
  003b4	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199231:
  003b9	8b f4		 mov	 esi, esp
  003bb	8d 4d c0	 lea	 ecx, DWORD PTR _hide_btn$[ebp]
  003be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  003c4	3b f4		 cmp	 esi, esp
  003c6	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z:
  003cb	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199233
  003d0	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateSplitter@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@@Z ENDP ; CreateControlFactory::CreateSplitter
EXTRN	?SetButtonBitmap@CMyBtnTreeCtrl@@QAEXPAVCDibBitmap@@00@Z:NEAR ; CMyBtnTreeCtrl::SetButtonBitmap
EXTRN	?SetSelectItemBKColor@CMyTreeCtrl@@QAEXK@Z:NEAR	; CMyTreeCtrl::SetSelectItemBKColor
EXTRN	?SetSelectItemTextColor@CMyTreeCtrl@@QAEXK@Z:NEAR ; CMyTreeCtrl::SetSelectItemTextColor
EXTRN	?SetNormalItemTextColor@CMyTreeCtrl@@QAEXK@Z:NEAR ; CMyTreeCtrl::SetNormalItemTextColor
EXTRN	?SetBackColor@CMyTreeCtrl@@QAEXK@Z:NEAR		; CMyTreeCtrl::SetBackColor
EXTRN	?SetScrollBitmap@CMyTreeCtrl@@QAEXPAVCDibBitmap@@0@Z:NEAR ; CMyTreeCtrl::SetScrollBitmap
xdata$x	SEGMENT
$T199276 DD	0ffffffffH
	DD	FLAT:$L199256
	DD	00H
	DD	FLAT:$L199257
	DD	00H
	DD	FLAT:$L199258
	DD	00H
	DD	FLAT:$L199260
	DD	00H
	DD	FLAT:$L199261
	DD	00H
	DD	FLAT:$L199263
	DD	00H
	DD	FLAT:$L199264
$T199271 DD	019930520H
	DD	07H
	DD	FLAT:$T199276
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv396 = -208						; size = 4
tv395 = -204						; size = 4
tv392 = -200						; size = 4
tv391 = -196						; size = 4
tv388 = -192						; size = 4
tv387 = -188						; size = 4
tv384 = -184						; size = 4
tv383 = -180						; size = 4
tv377 = -176						; size = 4
tv380 = -172						; size = 4
tv376 = -168						; size = 4
tv413 = -164						; size = 4
tv374 = -160						; size = 4
tv410 = -156						; size = 4
tv369 = -152						; size = 4
tv372 = -148						; size = 4
tv368 = -144						; size = 4
tv407 = -140						; size = 4
tv366 = -136						; size = 4
tv404 = -132						; size = 4
tv360 = -128						; size = 4
tv363 = -124						; size = 4
tv359 = -120						; size = 4
tv401 = -116						; size = 4
tv357 = -112						; size = 4
tv398 = -108						; size = 4
$T199255 = -104						; size = 4
$T199254 = -100						; size = 4
$T199253 = -96						; size = 4
$T199252 = -92						; size = 4
$T199251 = -88						; size = 4
$T199250 = -84						; size = 4
$T199249 = -80						; size = 4
$T199248 = -73						; size = 1
$T199247 = -72						; size = 4
$T199246 = -68						; size = 4
$T199245 = -64						; size = 4
$T199244 = -57						; size = 1
$T199243 = -56						; size = 4
$T199242 = -52						; size = 4
$T199241 = -48						; size = 4
$T199240 = -41						; size = 1
_name$ = -36						; size = 4
_pDibDown$ = -28					; size = 4
_pDibNormal$ = -24					; size = 4
_pDibOver$ = -20					; size = 4
_pTree$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateBtnTree

; 309  : {

  02200	55		 push	 ebp
  02201	8b ec		 mov	 ebp, esp
  02203	6a ff		 push	 -1
  02205	68 00 00 00 00	 push	 __ehhandler$?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  0220a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02210	50		 push	 eax
  02211	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02218	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  0221e	56		 push	 esi
  0221f	57		 push	 edi
  02220	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  02226	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  0222b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  02230	f3 ab		 rep stosd

; 310  : 	CMyBtnTreeCtrl *pTree = (CMyBtnTreeCtrl*) pWnd;

  02232	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  02235	89 45 f0	 mov	 DWORD PTR _pTree$[ebp], eax

; 311  : 	CDibBitmap *pDibOver,*pDibNormal,*pDibDown;
; 312  : 
; 313  : 	CString name = pXml->GetAttrib("btnbmp");

  02238	68 00 00 00 00	 push	 OFFSET FLAT:$SG196763
  0223d	8d 4d dc	 lea	 ecx, DWORD PTR _name$[ebp]
  02240	51		 push	 ecx
  02241	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02244	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02249	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 314  : 
; 315  : 	if((pDibNormal = pSkin->GetDibBmp(name + "normal")) == NULL)

  02250	68 00 00 00 00	 push	 OFFSET FLAT:$SG196767
  02255	8d 55 dc	 lea	 edx, DWORD PTR _name$[ebp]
  02258	52		 push	 edx
  02259	8d 45 d0	 lea	 eax, DWORD PTR $T199241[ebp]
  0225c	50		 push	 eax
  0225d	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  02262	83 c4 0c	 add	 esp, 12			; 0000000cH
  02265	89 45 94	 mov	 DWORD PTR tv398[ebp], eax
  02268	8b 4d 94	 mov	 ecx, DWORD PTR tv398[ebp]
  0226b	89 4d 90	 mov	 DWORD PTR tv357[ebp], ecx
  0226e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02272	8b f4		 mov	 esi, esp
  02274	8b 4d 90	 mov	 ecx, DWORD PTR tv357[ebp]
  02277	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0227d	3b f4		 cmp	 esi, esp
  0227f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02284	8b f4		 mov	 esi, esp
  02286	50		 push	 eax
  02287	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0228a	83 c1 04	 add	 ecx, 4
  0228d	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  02290	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  02293	ff 50 04	 call	 DWORD PTR [eax+4]
  02296	3b f4		 cmp	 esi, esp
  02298	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0229d	89 45 e8	 mov	 DWORD PTR _pDibNormal$[ebp], eax
  022a0	33 c9		 xor	 ecx, ecx
  022a2	83 7d e8 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  022a6	0f 94 c1	 sete	 cl
  022a9	88 4d d7	 mov	 BYTE PTR $T199240[ebp], cl
  022ac	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  022b0	8b f4		 mov	 esi, esp
  022b2	8d 4d d0	 lea	 ecx, DWORD PTR $T199241[ebp]
  022b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  022bb	3b f4		 cmp	 esi, esp
  022bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  022c2	0f b6 55 d7	 movzx	 edx, BYTE PTR $T199240[ebp]
  022c6	85 d2		 test	 edx, edx
  022c8	74 59		 je	 SHORT $L196765

; 316  : 		pDibNormal = pSkin->PutDibBmp(name + "normal", pSkin->m_strSkinPath);

  022ca	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  022cd	83 c0 08	 add	 eax, 8
  022d0	51		 push	 ecx
  022d1	8b cc		 mov	 ecx, esp
  022d3	89 65 cc	 mov	 DWORD PTR $T199242[ebp], esp
  022d6	8b f4		 mov	 esi, esp
  022d8	50		 push	 eax
  022d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  022df	3b f4		 cmp	 esi, esp
  022e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  022e6	89 45 8c	 mov	 DWORD PTR tv401[ebp], eax
  022e9	8b 4d 8c	 mov	 ecx, DWORD PTR tv401[ebp]
  022ec	89 4d 88	 mov	 DWORD PTR tv359[ebp], ecx
  022ef	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  022f3	51		 push	 ecx
  022f4	8b d4		 mov	 edx, esp
  022f6	89 65 c8	 mov	 DWORD PTR $T199243[ebp], esp
  022f9	68 00 00 00 00	 push	 OFFSET FLAT:$SG196771
  022fe	8d 45 dc	 lea	 eax, DWORD PTR _name$[ebp]
  02301	50		 push	 eax
  02302	52		 push	 edx
  02303	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  02308	83 c4 0c	 add	 esp, 12			; 0000000cH
  0230b	89 45 84	 mov	 DWORD PTR tv363[ebp], eax
  0230e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02312	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02315	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  0231a	89 45 80	 mov	 DWORD PTR tv360[ebp], eax
  0231d	8b 4d 80	 mov	 ecx, DWORD PTR tv360[ebp]
  02320	89 4d e8	 mov	 DWORD PTR _pDibNormal$[ebp], ecx
$L196765:

; 317  : 
; 318  : 	if(pDibNormal == NULL)

  02323	83 7d e8 00	 cmp	 DWORD PTR _pDibNormal$[ebp], 0
  02327	75 1e		 jne	 SHORT $L196772

; 319  : 		return;

  02329	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02330	8b f4		 mov	 esi, esp
  02332	8d 4d dc	 lea	 ecx, DWORD PTR _name$[ebp]
  02335	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0233b	3b f4		 cmp	 esi, esp
  0233d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02342	e9 5f 03 00 00	 jmp	 $L196755
$L196772:

; 320  : 
; 321  : 	if((pDibDown = pSkin->GetDibBmp(name + "down")) == NULL){

  02347	68 00 00 00 00	 push	 OFFSET FLAT:$SG196776
  0234c	8d 55 dc	 lea	 edx, DWORD PTR _name$[ebp]
  0234f	52		 push	 edx
  02350	8d 45 c0	 lea	 eax, DWORD PTR $T199245[ebp]
  02353	50		 push	 eax
  02354	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  02359	83 c4 0c	 add	 esp, 12			; 0000000cH
  0235c	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv404[ebp], eax
  02362	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv404[ebp]
  02368	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv366[ebp], ecx
  0236e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  02372	8b f4		 mov	 esi, esp
  02374	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv366[ebp]
  0237a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  02380	3b f4		 cmp	 esi, esp
  02382	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02387	8b f4		 mov	 esi, esp
  02389	50		 push	 eax
  0238a	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0238d	83 c1 04	 add	 ecx, 4
  02390	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  02393	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  02396	ff 50 04	 call	 DWORD PTR [eax+4]
  02399	3b f4		 cmp	 esi, esp
  0239b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  023a0	89 45 e4	 mov	 DWORD PTR _pDibDown$[ebp], eax
  023a3	33 c9		 xor	 ecx, ecx
  023a5	83 7d e4 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  023a9	0f 94 c1	 sete	 cl
  023ac	88 4d c7	 mov	 BYTE PTR $T199244[ebp], cl
  023af	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  023b3	8b f4		 mov	 esi, esp
  023b5	8d 4d c0	 lea	 ecx, DWORD PTR $T199245[ebp]
  023b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  023be	3b f4		 cmp	 esi, esp
  023c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  023c5	0f b6 55 c7	 movzx	 edx, BYTE PTR $T199244[ebp]
  023c9	85 d2		 test	 edx, edx
  023cb	74 77		 je	 SHORT $L196774

; 322  : 		pDibDown = pSkin->PutDibBmp(name + "down", pSkin->m_strSkinPath);

  023cd	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  023d0	83 c0 08	 add	 eax, 8
  023d3	51		 push	 ecx
  023d4	8b cc		 mov	 ecx, esp
  023d6	89 65 bc	 mov	 DWORD PTR $T199246[ebp], esp
  023d9	8b f4		 mov	 esi, esp
  023db	50		 push	 eax
  023dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  023e2	3b f4		 cmp	 esi, esp
  023e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  023e9	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv407[ebp], eax
  023ef	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv407[ebp]
  023f5	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv368[ebp], ecx
  023fb	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  023ff	51		 push	 ecx
  02400	8b d4		 mov	 edx, esp
  02402	89 65 b8	 mov	 DWORD PTR $T199247[ebp], esp
  02405	68 00 00 00 00	 push	 OFFSET FLAT:$SG196780
  0240a	8d 45 dc	 lea	 eax, DWORD PTR _name$[ebp]
  0240d	50		 push	 eax
  0240e	52		 push	 edx
  0240f	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  02414	83 c4 0c	 add	 esp, 12			; 0000000cH
  02417	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv372[ebp], eax
  0241d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02421	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02424	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  02429	89 85 68 ff ff
	ff		 mov	 DWORD PTR tv369[ebp], eax
  0242f	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv369[ebp]
  02435	89 4d e4	 mov	 DWORD PTR _pDibDown$[ebp], ecx

; 323  : 		if(pDibDown == NULL)

  02438	83 7d e4 00	 cmp	 DWORD PTR _pDibDown$[ebp], 0
  0243c	75 06		 jne	 SHORT $L196774

; 324  : 			pDibDown = pDibNormal;

  0243e	8b 55 e8	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  02441	89 55 e4	 mov	 DWORD PTR _pDibDown$[ebp], edx
$L196774:

; 325  : 	}
; 326  : 
; 327  : 	if((pDibOver = pSkin->GetDibBmp(name + "over")) == NULL){

  02444	68 00 00 00 00	 push	 OFFSET FLAT:$SG196785
  02449	8d 45 dc	 lea	 eax, DWORD PTR _name$[ebp]
  0244c	50		 push	 eax
  0244d	8d 4d b0	 lea	 ecx, DWORD PTR $T199249[ebp]
  02450	51		 push	 ecx
  02451	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  02456	83 c4 0c	 add	 esp, 12			; 0000000cH
  02459	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv410[ebp], eax
  0245f	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR tv410[ebp]
  02465	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv374[ebp], edx
  0246b	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0246f	8b f4		 mov	 esi, esp
  02471	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv374[ebp]
  02477	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0247d	3b f4		 cmp	 esi, esp
  0247f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02484	8b f4		 mov	 esi, esp
  02486	50		 push	 eax
  02487	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  0248a	83 c1 04	 add	 ecx, 4
  0248d	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  02490	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  02493	ff 52 04	 call	 DWORD PTR [edx+4]
  02496	3b f4		 cmp	 esi, esp
  02498	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0249d	89 45 ec	 mov	 DWORD PTR _pDibOver$[ebp], eax
  024a0	33 c0		 xor	 eax, eax
  024a2	83 7d ec 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  024a6	0f 94 c0	 sete	 al
  024a9	88 45 b7	 mov	 BYTE PTR $T199248[ebp], al
  024ac	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  024b0	8b f4		 mov	 esi, esp
  024b2	8d 4d b0	 lea	 ecx, DWORD PTR $T199249[ebp]
  024b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  024bb	3b f4		 cmp	 esi, esp
  024bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  024c2	0f b6 4d b7	 movzx	 ecx, BYTE PTR $T199248[ebp]
  024c6	85 c9		 test	 ecx, ecx
  024c8	0f 84 83 00 00
	00		 je	 $L196783

; 328  : 		pDibOver = pSkin->PutDibBmp(name + "over", pSkin->m_strSkinPath);

  024ce	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  024d1	83 c2 08	 add	 edx, 8
  024d4	51		 push	 ecx
  024d5	8b cc		 mov	 ecx, esp
  024d7	89 65 ac	 mov	 DWORD PTR $T199250[ebp], esp
  024da	8b f4		 mov	 esi, esp
  024dc	52		 push	 edx
  024dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  024e3	3b f4		 cmp	 esi, esp
  024e5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  024ea	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv413[ebp], eax
  024f0	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv413[ebp]
  024f6	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv376[ebp], eax
  024fc	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  02500	51		 push	 ecx
  02501	8b cc		 mov	 ecx, esp
  02503	89 65 a8	 mov	 DWORD PTR $T199251[ebp], esp
  02506	68 00 00 00 00	 push	 OFFSET FLAT:$SG196789
  0250b	8d 55 dc	 lea	 edx, DWORD PTR _name$[ebp]
  0250e	52		 push	 edx
  0250f	51		 push	 ecx
  02510	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  02515	83 c4 0c	 add	 esp, 12			; 0000000cH
  02518	89 85 54 ff ff
	ff		 mov	 DWORD PTR tv380[ebp], eax
  0251e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02522	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02525	e8 00 00 00 00	 call	 ?PutDibBmp@CSkinMgr@@QAEPAVCDibBitmap@@V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0@Z ; CSkinMgr::PutDibBmp
  0252a	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv377[ebp], eax
  02530	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv377[ebp]
  02536	89 45 ec	 mov	 DWORD PTR _pDibOver$[ebp], eax

; 329  : 		if(pDibOver == NULL)

  02539	83 7d ec 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  0253d	75 06		 jne	 SHORT $L196790

; 330  : 			pDibOver = pDibDown;

  0253f	8b 4d e4	 mov	 ecx, DWORD PTR _pDibDown$[ebp]
  02542	89 4d ec	 mov	 DWORD PTR _pDibOver$[ebp], ecx
$L196790:

; 331  : 		if(pDibOver == NULL)

  02545	83 7d ec 00	 cmp	 DWORD PTR _pDibOver$[ebp], 0
  02549	75 06		 jne	 SHORT $L196783

; 332  : 			pDibOver = pDibNormal;

  0254b	8b 55 e8	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  0254e	89 55 ec	 mov	 DWORD PTR _pDibOver$[ebp], edx
$L196783:

; 333  : 	}
; 334  : 
; 335  : 	pTree->SetButtonBitmap(pDibNormal,pDibOver,pDibDown);	

  02551	8b 45 e4	 mov	 eax, DWORD PTR _pDibDown$[ebp]
  02554	50		 push	 eax
  02555	8b 4d ec	 mov	 ecx, DWORD PTR _pDibOver$[ebp]
  02558	51		 push	 ecx
  02559	8b 55 e8	 mov	 edx, DWORD PTR _pDibNormal$[ebp]
  0255c	52		 push	 edx
  0255d	8b 4d f0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02560	e8 00 00 00 00	 call	 ?SetButtonBitmap@CMyBtnTreeCtrl@@QAEXPAVCDibBitmap@@00@Z ; CMyBtnTreeCtrl::SetButtonBitmap

; 336  : 
; 337  : 	pTree->SetNormalItemTextColor( StringToRGB(pXml->GetAttrib("nortext")) );

  02565	6a 01		 push	 1
  02567	51		 push	 ecx
  02568	8b c4		 mov	 eax, esp
  0256a	89 65 a4	 mov	 DWORD PTR $T199252[ebp], esp
  0256d	68 00 00 00 00	 push	 OFFSET FLAT:$SG196794
  02572	50		 push	 eax
  02573	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02576	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  0257b	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv383[ebp], eax
  02581	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02586	83 c4 08	 add	 esp, 8
  02589	89 85 48 ff ff
	ff		 mov	 DWORD PTR tv384[ebp], eax
  0258f	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv384[ebp]
  02595	51		 push	 ecx
  02596	8b 4d f0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02599	e8 00 00 00 00	 call	 ?SetNormalItemTextColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetNormalItemTextColor

; 338  : 	pTree->SetSelectItemBKColor( StringToRGB(pXml->GetAttrib("selbk")) );

  0259e	6a 01		 push	 1
  025a0	51		 push	 ecx
  025a1	8b d4		 mov	 edx, esp
  025a3	89 65 a0	 mov	 DWORD PTR $T199253[ebp], esp
  025a6	68 00 00 00 00	 push	 OFFSET FLAT:$SG196797
  025ab	52		 push	 edx
  025ac	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  025af	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  025b4	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv387[ebp], eax
  025ba	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  025bf	83 c4 08	 add	 esp, 8
  025c2	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv388[ebp], eax
  025c8	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv388[ebp]
  025ce	50		 push	 eax
  025cf	8b 4d f0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  025d2	e8 00 00 00 00	 call	 ?SetSelectItemBKColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetSelectItemBKColor

; 339  : 	pTree->SetSelectItemTextColor( StringToRGB( pXml->GetAttrib("seltext")) );

  025d7	6a 01		 push	 1
  025d9	51		 push	 ecx
  025da	8b cc		 mov	 ecx, esp
  025dc	89 65 9c	 mov	 DWORD PTR $T199254[ebp], esp
  025df	68 00 00 00 00	 push	 OFFSET FLAT:$SG196800
  025e4	51		 push	 ecx
  025e5	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  025e8	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  025ed	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv391[ebp], eax
  025f3	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  025f8	83 c4 08	 add	 esp, 8
  025fb	89 85 38 ff ff
	ff		 mov	 DWORD PTR tv392[ebp], eax
  02601	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR tv392[ebp]
  02607	52		 push	 edx
  02608	8b 4d f0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  0260b	e8 00 00 00 00	 call	 ?SetSelectItemTextColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetSelectItemTextColor

; 340  : 	pTree->SetBackColor( StringToRGB(pXml->GetAttrib("bk")) );

  02610	6a 01		 push	 1
  02612	51		 push	 ecx
  02613	8b c4		 mov	 eax, esp
  02615	89 65 98	 mov	 DWORD PTR $T199255[ebp], esp
  02618	68 00 00 00 00	 push	 OFFSET FLAT:$SG196803
  0261d	50		 push	 eax
  0261e	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02621	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02626	89 85 34 ff ff
	ff		 mov	 DWORD PTR tv395[ebp], eax
  0262c	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02631	83 c4 08	 add	 esp, 8
  02634	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv396[ebp], eax
  0263a	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv396[ebp]
  02640	51		 push	 ecx
  02641	8b 4d f0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02644	e8 00 00 00 00	 call	 ?SetBackColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetBackColor

; 341  : 	pTree->SetScrollBitmap(pSkin->GetDibBmp("ScrollVert"), pSkin->GetDibBmp("ScrollHorz"));

  02649	8b f4		 mov	 esi, esp
  0264b	68 00 00 00 00	 push	 OFFSET FLAT:$SG196804
  02650	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02653	83 c1 04	 add	 ecx, 4
  02656	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  02659	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0265c	ff 50 04	 call	 DWORD PTR [eax+4]
  0265f	3b f4		 cmp	 esi, esp
  02661	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02666	50		 push	 eax
  02667	8b f4		 mov	 esi, esp
  02669	68 00 00 00 00	 push	 OFFSET FLAT:$SG196805
  0266e	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02671	83 c1 04	 add	 ecx, 4
  02674	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  02677	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0267a	ff 50 04	 call	 DWORD PTR [eax+4]
  0267d	3b f4		 cmp	 esi, esp
  0267f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02684	50		 push	 eax
  02685	8b 4d f0	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02688	e8 00 00 00 00	 call	 ?SetScrollBitmap@CMyTreeCtrl@@QAEXPAVCDibBitmap@@0@Z ; CMyTreeCtrl::SetScrollBitmap

; 342  : }

  0268d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02694	8b f4		 mov	 esi, esp
  02696	8d 4d dc	 lea	 ecx, DWORD PTR _name$[ebp]
  02699	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0269f	3b f4		 cmp	 esi, esp
  026a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L196755:
  026a6	52		 push	 edx
  026a7	8b cd		 mov	 ecx, ebp
  026a9	50		 push	 eax
  026aa	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L199275
  026b0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  026b5	58		 pop	 eax
  026b6	5a		 pop	 edx
  026b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  026ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  026c1	5f		 pop	 edi
  026c2	5e		 pop	 esi
  026c3	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  026c9	3b ec		 cmp	 ebp, esp
  026cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  026d0	8b e5		 mov	 esp, ebp
  026d2	5d		 pop	 ebp
  026d3	c3		 ret	 0
$L199275:
  026d4	01 00 00 00	 DD	 1
  026d8	00 00 00 00	 DD	 $L199274
$L199274:
  026dc	dc ff ff ff	 DD	 -36			; ffffffdcH
  026e0	04 00 00 00	 DD	 4
  026e4	00 00 00 00	 DD	 $L199272
$L199272:
  026e8	6e		 DB	 110			; 0000006eH
  026e9	61		 DB	 97			; 00000061H
  026ea	6d		 DB	 109			; 0000006dH
  026eb	65		 DB	 101			; 00000065H
  026ec	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L199256:
  003d5	8b f4		 mov	 esi, esp
  003d7	8d 4d dc	 lea	 ecx, DWORD PTR _name$[ebp]
  003da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  003e0	3b f4		 cmp	 esi, esp
  003e2	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199257:
  003e7	8b f4		 mov	 esi, esp
  003e9	8d 4d d0	 lea	 ecx, DWORD PTR $T199241[ebp]
  003ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  003f2	3b f4		 cmp	 esi, esp
  003f4	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199258:
  003f9	8b f4		 mov	 esi, esp
  003fb	8b 4d cc	 mov	 ecx, DWORD PTR $T199242[ebp]
  003fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00404	3b f4		 cmp	 esi, esp
  00406	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199260:
  0040b	8b f4		 mov	 esi, esp
  0040d	8d 4d c0	 lea	 ecx, DWORD PTR $T199245[ebp]
  00410	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00416	3b f4		 cmp	 esi, esp
  00418	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199261:
  0041d	8b f4		 mov	 esi, esp
  0041f	8b 4d bc	 mov	 ecx, DWORD PTR $T199246[ebp]
  00422	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00428	3b f4		 cmp	 esi, esp
  0042a	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199263:
  0042f	8b f4		 mov	 esi, esp
  00431	8d 4d b0	 lea	 ecx, DWORD PTR $T199249[ebp]
  00434	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0043a	3b f4		 cmp	 esi, esp
  0043c	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199264:
  00441	8b f4		 mov	 esi, esp
  00443	8b 4d ac	 mov	 ecx, DWORD PTR $T199250[ebp]
  00446	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0044c	3b f4		 cmp	 esi, esp
  0044e	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  00453	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199271
  00458	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateBtnTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateBtnTree
PUBLIC	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
EXTRN	__imp_?Mid@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z:NEAR
EXTRN	?AfxGetUIManager@@YAPAVIUIManager@@XZ:NEAR	; AfxGetUIManager
EXTRN	__imp__sscanf:NEAR
EXTRN	__imp_?GetBuffer@?$CSimpleStringT@D$00@ATL@@QAEPADH@Z:NEAR
EXTRN	__imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ:NEAR
xdata$x	SEGMENT
$T199307 DD	0ffffffffH
	DD	FLAT:$L199285
	DD	00H
	DD	FLAT:$L199286
	DD	01H
	DD	FLAT:$L199287
	DD	02H
	DD	FLAT:$L199288
	DD	03H
	DD	FLAT:$L199289
	DD	04H
	DD	FLAT:$L199290
	DD	03H
	DD	FLAT:$L199291
	DD	06H
	DD	FLAT:$L199292
	DD	03H
	DD	FLAT:$L199293
	DD	08H
	DD	FLAT:$L199294
$T199296 DD	019930520H
	DD	0aH
	DD	FLAT:$T199307
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv190 = -180						; size = 4
tv185 = -176						; size = 4
tv209 = -172						; size = 4
tv234 = -168						; size = 4
tv207 = -164						; size = 4
tv231 = -160						; size = 4
tv205 = -156						; size = 4
tv228 = -152						; size = 4
tv203 = -148						; size = 4
tv225 = -144						; size = 4
tv201 = -140						; size = 4
tv222 = -136						; size = 4
tv199 = -132						; size = 4
tv219 = -128						; size = 4
$T199284 = -124						; size = 4
$T199283 = -120						; size = 4
$T199282 = -116						; size = 4
$T199281 = -112						; size = 4
$T199280 = -108						; size = 4
$T199279 = -104						; size = 4
$T199278 = -100						; size = 4
_color$ = -92						; size = 4
_nb$ = -80						; size = 4
_ng$ = -68						; size = 4
_nr$ = -56						; size = 4
_b$ = -44						; size = 4
_g$ = -32						; size = 4
_r$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
_bChangeColor$ = 12					; size = 4
?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC NEAR ; CreateControlFactory::StringToRGB

; 346  : {

  026f0	55		 push	 ebp
  026f1	8b ec		 mov	 ebp, esp
  026f3	6a ff		 push	 -1
  026f5	68 00 00 00 00	 push	 __ehhandler$?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
  026fa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02700	50		 push	 eax
  02701	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02708	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  0270e	56		 push	 esi
  0270f	57		 push	 edi
  02710	8d bd 4c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-180]
  02716	b9 2a 00 00 00	 mov	 ecx, 42			; 0000002aH
  0271b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  02720	f3 ab		 rep stosd
  02722	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 347  : 	CString r,g,b;	

  02729	8b f4		 mov	 esi, esp
  0272b	8d 4d ec	 lea	 ecx, DWORD PTR _r$[ebp]
  0272e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02734	3b f4		 cmp	 esi, esp
  02736	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0273b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0273f	8b f4		 mov	 esi, esp
  02741	8d 4d e0	 lea	 ecx, DWORD PTR _g$[ebp]
  02744	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0274a	3b f4		 cmp	 esi, esp
  0274c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02751	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  02755	8b f4		 mov	 esi, esp
  02757	8d 4d d4	 lea	 ecx, DWORD PTR _b$[ebp]
  0275a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02760	3b f4		 cmp	 esi, esp
  02762	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02767	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 348  : 	r = "0"+str.Mid(0,2);

  0276b	8b f4		 mov	 esi, esp
  0276d	6a 02		 push	 2
  0276f	6a 00		 push	 0
  02771	8d 45 9c	 lea	 eax, DWORD PTR $T199278[ebp]
  02774	50		 push	 eax
  02775	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  02778	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Mid@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z
  0277e	3b f4		 cmp	 esi, esp
  02780	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02785	89 45 80	 mov	 DWORD PTR tv219[ebp], eax
  02788	8b 4d 80	 mov	 ecx, DWORD PTR tv219[ebp]
  0278b	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv199[ebp], ecx
  02791	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  02795	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR tv199[ebp]
  0279b	52		 push	 edx
  0279c	68 00 00 00 00	 push	 OFFSET FLAT:$SG196815
  027a1	8d 45 98	 lea	 eax, DWORD PTR $T199279[ebp]
  027a4	50		 push	 eax
  027a5	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
  027aa	83 c4 0c	 add	 esp, 12			; 0000000cH
  027ad	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv222[ebp], eax
  027b3	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv222[ebp]
  027b9	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv201[ebp], ecx
  027bf	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  027c3	8b f4		 mov	 esi, esp
  027c5	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv201[ebp]
  027cb	52		 push	 edx
  027cc	8d 4d ec	 lea	 ecx, DWORD PTR _r$[ebp]
  027cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  027d5	3b f4		 cmp	 esi, esp
  027d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  027dc	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  027e0	8b f4		 mov	 esi, esp
  027e2	8d 4d 98	 lea	 ecx, DWORD PTR $T199279[ebp]
  027e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  027eb	3b f4		 cmp	 esi, esp
  027ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  027f2	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  027f6	8b f4		 mov	 esi, esp
  027f8	8d 4d 9c	 lea	 ecx, DWORD PTR $T199278[ebp]
  027fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02801	3b f4		 cmp	 esi, esp
  02803	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 349  : 	g = "0"+str.Mid(2,2);

  02808	8b f4		 mov	 esi, esp
  0280a	6a 02		 push	 2
  0280c	6a 02		 push	 2
  0280e	8d 45 94	 lea	 eax, DWORD PTR $T199280[ebp]
  02811	50		 push	 eax
  02812	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  02815	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Mid@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z
  0281b	3b f4		 cmp	 esi, esp
  0281d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02822	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv225[ebp], eax
  02828	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv225[ebp]
  0282e	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv203[ebp], ecx
  02834	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  02838	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR tv203[ebp]
  0283e	52		 push	 edx
  0283f	68 00 00 00 00	 push	 OFFSET FLAT:$SG196818
  02844	8d 45 90	 lea	 eax, DWORD PTR $T199281[ebp]
  02847	50		 push	 eax
  02848	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
  0284d	83 c4 0c	 add	 esp, 12			; 0000000cH
  02850	89 85 68 ff ff
	ff		 mov	 DWORD PTR tv228[ebp], eax
  02856	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv228[ebp]
  0285c	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv205[ebp], ecx
  02862	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  02866	8b f4		 mov	 esi, esp
  02868	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR tv205[ebp]
  0286e	52		 push	 edx
  0286f	8d 4d e0	 lea	 ecx, DWORD PTR _g$[ebp]
  02872	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  02878	3b f4		 cmp	 esi, esp
  0287a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0287f	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  02883	8b f4		 mov	 esi, esp
  02885	8d 4d 90	 lea	 ecx, DWORD PTR $T199281[ebp]
  02888	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0288e	3b f4		 cmp	 esi, esp
  02890	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02895	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  02899	8b f4		 mov	 esi, esp
  0289b	8d 4d 94	 lea	 ecx, DWORD PTR $T199280[ebp]
  0289e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  028a4	3b f4		 cmp	 esi, esp
  028a6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 350  : 	b = "0"+str.Mid(4,2);

  028ab	8b f4		 mov	 esi, esp
  028ad	6a 02		 push	 2
  028af	6a 04		 push	 4
  028b1	8d 45 8c	 lea	 eax, DWORD PTR $T199282[ebp]
  028b4	50		 push	 eax
  028b5	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  028b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Mid@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z
  028be	3b f4		 cmp	 esi, esp
  028c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  028c5	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv231[ebp], eax
  028cb	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv231[ebp]
  028d1	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv207[ebp], ecx
  028d7	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  028db	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR tv207[ebp]
  028e1	52		 push	 edx
  028e2	68 00 00 00 00	 push	 OFFSET FLAT:$SG196821
  028e7	8d 45 88	 lea	 eax, DWORD PTR $T199283[ebp]
  028ea	50		 push	 eax
  028eb	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
  028f0	83 c4 0c	 add	 esp, 12			; 0000000cH
  028f3	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv234[ebp], eax
  028f9	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR tv234[ebp]
  028ff	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv209[ebp], ecx
  02905	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  02909	8b f4		 mov	 esi, esp
  0290b	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR tv209[ebp]
  02911	52		 push	 edx
  02912	8d 4d d4	 lea	 ecx, DWORD PTR _b$[ebp]
  02915	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  0291b	3b f4		 cmp	 esi, esp
  0291d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02922	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  02926	8b f4		 mov	 esi, esp
  02928	8d 4d 88	 lea	 ecx, DWORD PTR $T199283[ebp]
  0292b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02931	3b f4		 cmp	 esi, esp
  02933	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02938	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0293c	8b f4		 mov	 esi, esp
  0293e	8d 4d 8c	 lea	 ecx, DWORD PTR $T199282[ebp]
  02941	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02947	3b f4		 cmp	 esi, esp
  02949	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 351  : 	int nr,ng,nb;
; 352  : 	sscanf(r.GetBuffer(r.GetLength()),"%x",&nr);

  0294e	8b f4		 mov	 esi, esp
  02950	8d 45 c8	 lea	 eax, DWORD PTR _nr$[ebp]
  02953	50		 push	 eax
  02954	68 00 00 00 00	 push	 OFFSET FLAT:$SG196825
  02959	8b fc		 mov	 edi, esp
  0295b	8d 4d ec	 lea	 ecx, DWORD PTR _r$[ebp]
  0295e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  02964	3b fc		 cmp	 edi, esp
  02966	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0296b	8b fc		 mov	 edi, esp
  0296d	50		 push	 eax
  0296e	8d 4d ec	 lea	 ecx, DWORD PTR _r$[ebp]
  02971	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetBuffer@?$CSimpleStringT@D$00@ATL@@QAEPADH@Z
  02977	3b fc		 cmp	 edi, esp
  02979	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0297e	50		 push	 eax
  0297f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf
  02985	83 c4 0c	 add	 esp, 12			; 0000000cH
  02988	3b f4		 cmp	 esi, esp
  0298a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 353  : 	sscanf(g.GetBuffer(g.GetLength()),"%x",&ng);

  0298f	8b f4		 mov	 esi, esp
  02991	8d 4d bc	 lea	 ecx, DWORD PTR _ng$[ebp]
  02994	51		 push	 ecx
  02995	68 00 00 00 00	 push	 OFFSET FLAT:$SG196826
  0299a	8b fc		 mov	 edi, esp
  0299c	8d 4d e0	 lea	 ecx, DWORD PTR _g$[ebp]
  0299f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  029a5	3b fc		 cmp	 edi, esp
  029a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  029ac	8b fc		 mov	 edi, esp
  029ae	50		 push	 eax
  029af	8d 4d e0	 lea	 ecx, DWORD PTR _g$[ebp]
  029b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetBuffer@?$CSimpleStringT@D$00@ATL@@QAEPADH@Z
  029b8	3b fc		 cmp	 edi, esp
  029ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  029bf	50		 push	 eax
  029c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf
  029c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  029c9	3b f4		 cmp	 esi, esp
  029cb	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 354  : 	sscanf(b.GetBuffer(b.GetLength()),"%x",&nb);

  029d0	8b f4		 mov	 esi, esp
  029d2	8d 55 b0	 lea	 edx, DWORD PTR _nb$[ebp]
  029d5	52		 push	 edx
  029d6	68 00 00 00 00	 push	 OFFSET FLAT:$SG196827
  029db	8b fc		 mov	 edi, esp
  029dd	8d 4d d4	 lea	 ecx, DWORD PTR _b$[ebp]
  029e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  029e6	3b fc		 cmp	 edi, esp
  029e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  029ed	8b fc		 mov	 edi, esp
  029ef	50		 push	 eax
  029f0	8d 4d d4	 lea	 ecx, DWORD PTR _b$[ebp]
  029f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetBuffer@?$CSimpleStringT@D$00@ATL@@QAEPADH@Z
  029f9	3b fc		 cmp	 edi, esp
  029fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02a00	50		 push	 eax
  02a01	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf
  02a07	83 c4 0c	 add	 esp, 12			; 0000000cH
  02a0a	3b f4		 cmp	 esi, esp
  02a0c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 355  : 
; 356  : 	COLORREF color = RGB(nr,ng,nb);

  02a11	0f b6 45 c8	 movzx	 eax, BYTE PTR _nr$[ebp]
  02a15	0f b6 4d bc	 movzx	 ecx, BYTE PTR _ng$[ebp]
  02a19	c1 e1 08	 shl	 ecx, 8
  02a1c	0b c1		 or	 eax, ecx
  02a1e	0f b6 55 b0	 movzx	 edx, BYTE PTR _nb$[ebp]
  02a22	c1 e2 10	 shl	 edx, 16			; 00000010H
  02a25	0b c2		 or	 eax, edx
  02a27	89 45 a4	 mov	 DWORD PTR _color$[ebp], eax

; 357  : 
; 358  : 	if(bChangeColor)

  02a2a	83 7d 0c 00	 cmp	 DWORD PTR _bChangeColor$[ebp], 0
  02a2e	74 49		 je	 SHORT $L196835

; 359  : 		::AfxGetUIManager()->UIGetChangeColorMgr()->ChangeColor(color);

  02a30	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  02a35	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv185[ebp], eax
  02a3b	8b f4		 mov	 esi, esp
  02a3d	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv185[ebp]
  02a43	8b 10		 mov	 edx, DWORD PTR [eax]
  02a45	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv185[ebp]
  02a4b	ff 52 2c	 call	 DWORD PTR [edx+44]
  02a4e	3b f4		 cmp	 esi, esp
  02a50	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02a55	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv190[ebp], eax
  02a5b	8b f4		 mov	 esi, esp
  02a5d	8d 45 a4	 lea	 eax, DWORD PTR _color$[ebp]
  02a60	50		 push	 eax
  02a61	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv190[ebp]
  02a67	8b 11		 mov	 edx, DWORD PTR [ecx]
  02a69	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv190[ebp]
  02a6f	ff 52 24	 call	 DWORD PTR [edx+36]
  02a72	3b f4		 cmp	 esi, esp
  02a74	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L196835:

; 360  : 
; 361  : 	return color;	

  02a79	8b 45 a4	 mov	 eax, DWORD PTR _color$[ebp]
  02a7c	89 45 84	 mov	 DWORD PTR $T199284[ebp], eax
  02a7f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  02a83	8b f4		 mov	 esi, esp
  02a85	8d 4d d4	 lea	 ecx, DWORD PTR _b$[ebp]
  02a88	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02a8e	3b f4		 cmp	 esi, esp
  02a90	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02a95	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02a99	8b f4		 mov	 esi, esp
  02a9b	8d 4d e0	 lea	 ecx, DWORD PTR _g$[ebp]
  02a9e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02aa4	3b f4		 cmp	 esi, esp
  02aa6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02aab	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02aaf	8b f4		 mov	 esi, esp
  02ab1	8d 4d ec	 lea	 ecx, DWORD PTR _r$[ebp]
  02ab4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02aba	3b f4		 cmp	 esi, esp
  02abc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02ac1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02ac8	8b f4		 mov	 esi, esp
  02aca	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  02acd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02ad3	3b f4		 cmp	 esi, esp
  02ad5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02ada	8b 45 84	 mov	 eax, DWORD PTR $T199284[ebp]

; 362  : }

  02add	52		 push	 edx
  02ade	8b cd		 mov	 ecx, ebp
  02ae0	50		 push	 eax
  02ae1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L199306
  02ae7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  02aec	58		 pop	 eax
  02aed	5a		 pop	 edx
  02aee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02af1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02af8	5f		 pop	 edi
  02af9	5e		 pop	 esi
  02afa	81 c4 b4 00 00
	00		 add	 esp, 180		; 000000b4H
  02b00	3b ec		 cmp	 ebp, esp
  02b02	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02b07	8b e5		 mov	 esp, ebp
  02b09	5d		 pop	 ebp
  02b0a	c3		 ret	 0
$L199306:
  02b0b	07 00 00 00	 DD	 7
  02b0f	00 00 00 00	 DD	 $L199305
$L199305:
  02b13	ec ff ff ff	 DD	 -20			; ffffffecH
  02b17	04 00 00 00	 DD	 4
  02b1b	00 00 00 00	 DD	 $L199297
  02b1f	e0 ff ff ff	 DD	 -32			; ffffffe0H
  02b23	04 00 00 00	 DD	 4
  02b27	00 00 00 00	 DD	 $L199298
  02b2b	d4 ff ff ff	 DD	 -44			; ffffffd4H
  02b2f	04 00 00 00	 DD	 4
  02b33	00 00 00 00	 DD	 $L199299
  02b37	c8 ff ff ff	 DD	 -56			; ffffffc8H
  02b3b	04 00 00 00	 DD	 4
  02b3f	00 00 00 00	 DD	 $L199300
  02b43	bc ff ff ff	 DD	 -68			; ffffffbcH
  02b47	04 00 00 00	 DD	 4
  02b4b	00 00 00 00	 DD	 $L199301
  02b4f	b0 ff ff ff	 DD	 -80			; ffffffb0H
  02b53	04 00 00 00	 DD	 4
  02b57	00 00 00 00	 DD	 $L199302
  02b5b	a4 ff ff ff	 DD	 -92			; ffffffa4H
  02b5f	04 00 00 00	 DD	 4
  02b63	00 00 00 00	 DD	 $L199303
$L199303:
  02b67	63		 DB	 99			; 00000063H
  02b68	6f		 DB	 111			; 0000006fH
  02b69	6c		 DB	 108			; 0000006cH
  02b6a	6f		 DB	 111			; 0000006fH
  02b6b	72		 DB	 114			; 00000072H
  02b6c	00		 DB	 0
$L199302:
  02b6d	6e		 DB	 110			; 0000006eH
  02b6e	62		 DB	 98			; 00000062H
  02b6f	00		 DB	 0
$L199301:
  02b70	6e		 DB	 110			; 0000006eH
  02b71	67		 DB	 103			; 00000067H
  02b72	00		 DB	 0
$L199300:
  02b73	6e		 DB	 110			; 0000006eH
  02b74	72		 DB	 114			; 00000072H
  02b75	00		 DB	 0
$L199299:
  02b76	62		 DB	 98			; 00000062H
  02b77	00		 DB	 0
$L199298:
  02b78	67		 DB	 103			; 00000067H
  02b79	00		 DB	 0
$L199297:
  02b7a	72		 DB	 114			; 00000072H
  02b7b	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L199285:
  0045d	8b f4		 mov	 esi, esp
  0045f	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  00462	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00468	3b f4		 cmp	 esi, esp
  0046a	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199286:
  0046f	8b f4		 mov	 esi, esp
  00471	8d 4d ec	 lea	 ecx, DWORD PTR _r$[ebp]
  00474	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0047a	3b f4		 cmp	 esi, esp
  0047c	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199287:
  00481	8b f4		 mov	 esi, esp
  00483	8d 4d e0	 lea	 ecx, DWORD PTR _g$[ebp]
  00486	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0048c	3b f4		 cmp	 esi, esp
  0048e	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199288:
  00493	8b f4		 mov	 esi, esp
  00495	8d 4d d4	 lea	 ecx, DWORD PTR _b$[ebp]
  00498	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0049e	3b f4		 cmp	 esi, esp
  004a0	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199289:
  004a5	8b f4		 mov	 esi, esp
  004a7	8d 4d 9c	 lea	 ecx, DWORD PTR $T199278[ebp]
  004aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  004b0	3b f4		 cmp	 esi, esp
  004b2	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199290:
  004b7	8b f4		 mov	 esi, esp
  004b9	8d 4d 98	 lea	 ecx, DWORD PTR $T199279[ebp]
  004bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  004c2	3b f4		 cmp	 esi, esp
  004c4	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199291:
  004c9	8b f4		 mov	 esi, esp
  004cb	8d 4d 94	 lea	 ecx, DWORD PTR $T199280[ebp]
  004ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  004d4	3b f4		 cmp	 esi, esp
  004d6	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199292:
  004db	8b f4		 mov	 esi, esp
  004dd	8d 4d 90	 lea	 ecx, DWORD PTR $T199281[ebp]
  004e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  004e6	3b f4		 cmp	 esi, esp
  004e8	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199293:
  004ed	8b f4		 mov	 esi, esp
  004ef	8d 4d 8c	 lea	 ecx, DWORD PTR $T199282[ebp]
  004f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  004f8	3b f4		 cmp	 esi, esp
  004fa	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199294:
  004ff	8b f4		 mov	 esi, esp
  00501	8d 4d 88	 lea	 ecx, DWORD PTR $T199283[ebp]
  00504	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0050a	3b f4		 cmp	 esi, esp
  0050c	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z:
  00511	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199296
  00516	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; CreateControlFactory::StringToRGB
EXTRN	?SetColor@CMyListCtrl@@QAEXKKKKK@Z:NEAR		; CMyListCtrl::SetColor
EXTRN	?SetScrollBitmap@CMyListCtrl@@QAEXPAVCDibBitmap@@0@Z:NEAR ; CMyListCtrl::SetScrollBitmap
xdata$x	SEGMENT
$T199328 DD	0ffffffffH
	DD	FLAT:$L199323
	DD	0ffffffffH
	DD	FLAT:$L199324
$T199326 DD	019930520H
	DD	02H
	DD	FLAT:$T199328
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv285 = -120						; size = 4
tv289 = -116						; size = 4
tv283 = -112						; size = 4
tv286 = -108						; size = 4
tv281 = -104						; size = 4
tv280 = -100						; size = 4
tv277 = -96						; size = 4
tv276 = -92						; size = 4
tv272 = -88						; size = 4
tv271 = -84						; size = 4
tv267 = -80						; size = 4
tv266 = -76						; size = 4
tv262 = -72						; size = 4
tv261 = -68						; size = 4
tv257 = -64						; size = 4
tv256 = -60						; size = 4
$T199316 = -56						; size = 4
$T199315 = -52						; size = 4
$T199314 = -48						; size = 4
$T199313 = -44						; size = 4
$T199312 = -40						; size = 4
$T199311 = -36						; size = 4
$T199310 = -32						; size = 4
$T199309 = -28						; size = 4
_V$ = -24						; size = 4
_H$ = -20						; size = 4
_pList$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateList

; 365  : {

  02b80	55		 push	 ebp
  02b81	8b ec		 mov	 ebp, esp
  02b83	6a ff		 push	 -1
  02b85	68 00 00 00 00	 push	 __ehhandler$?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z
  02b8a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02b90	50		 push	 eax
  02b91	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02b98	83 ec 6c	 sub	 esp, 108		; 0000006cH
  02b9b	56		 push	 esi
  02b9c	57		 push	 edi
  02b9d	8d 7d 88	 lea	 edi, DWORD PTR [ebp-120]
  02ba0	b9 1b 00 00 00	 mov	 ecx, 27			; 0000001bH
  02ba5	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  02baa	f3 ab		 rep stosd

; 366  : 	CMyListCtrl* pList = (CMyListCtrl*)pWnd;

  02bac	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  02baf	89 45 f0	 mov	 DWORD PTR _pList$[ebp], eax

; 367  : 	pList->SetColor(StringToRGB( pXml->GetAttrib("oddbk")),
; 368  : 					StringToRGB( pXml->GetAttrib("evenbk")),
; 369  : 					StringToRGB( pXml->GetAttrib("nortext")),
; 370  : 					StringToRGB( pXml->GetAttrib("selbk")),
; 371  : 					StringToRGB( pXml->GetAttrib("seltext")));

  02bb2	6a 01		 push	 1
  02bb4	51		 push	 ecx
  02bb5	8b cc		 mov	 ecx, esp
  02bb7	89 65 e4	 mov	 DWORD PTR $T199309[ebp], esp
  02bba	68 00 00 00 00	 push	 OFFSET FLAT:$SG196855
  02bbf	51		 push	 ecx
  02bc0	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02bc3	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02bc8	89 45 c4	 mov	 DWORD PTR tv256[ebp], eax
  02bcb	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02bd0	83 c4 08	 add	 esp, 8
  02bd3	89 45 c0	 mov	 DWORD PTR tv257[ebp], eax
  02bd6	8b 55 c0	 mov	 edx, DWORD PTR tv257[ebp]
  02bd9	52		 push	 edx
  02bda	6a 01		 push	 1
  02bdc	51		 push	 ecx
  02bdd	8b c4		 mov	 eax, esp
  02bdf	89 65 e0	 mov	 DWORD PTR $T199310[ebp], esp
  02be2	68 00 00 00 00	 push	 OFFSET FLAT:$SG196856
  02be7	50		 push	 eax
  02be8	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02beb	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02bf0	89 45 bc	 mov	 DWORD PTR tv261[ebp], eax
  02bf3	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02bf8	83 c4 08	 add	 esp, 8
  02bfb	89 45 b8	 mov	 DWORD PTR tv262[ebp], eax
  02bfe	8b 4d b8	 mov	 ecx, DWORD PTR tv262[ebp]
  02c01	51		 push	 ecx
  02c02	6a 01		 push	 1
  02c04	51		 push	 ecx
  02c05	8b d4		 mov	 edx, esp
  02c07	89 65 dc	 mov	 DWORD PTR $T199311[ebp], esp
  02c0a	68 00 00 00 00	 push	 OFFSET FLAT:$SG196857
  02c0f	52		 push	 edx
  02c10	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02c13	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02c18	89 45 b4	 mov	 DWORD PTR tv266[ebp], eax
  02c1b	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02c20	83 c4 08	 add	 esp, 8
  02c23	89 45 b0	 mov	 DWORD PTR tv267[ebp], eax
  02c26	8b 45 b0	 mov	 eax, DWORD PTR tv267[ebp]
  02c29	50		 push	 eax
  02c2a	6a 01		 push	 1
  02c2c	51		 push	 ecx
  02c2d	8b cc		 mov	 ecx, esp
  02c2f	89 65 d8	 mov	 DWORD PTR $T199312[ebp], esp
  02c32	68 00 00 00 00	 push	 OFFSET FLAT:$SG196858
  02c37	51		 push	 ecx
  02c38	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02c3b	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02c40	89 45 ac	 mov	 DWORD PTR tv271[ebp], eax
  02c43	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02c48	83 c4 08	 add	 esp, 8
  02c4b	89 45 a8	 mov	 DWORD PTR tv272[ebp], eax
  02c4e	8b 55 a8	 mov	 edx, DWORD PTR tv272[ebp]
  02c51	52		 push	 edx
  02c52	6a 01		 push	 1
  02c54	51		 push	 ecx
  02c55	8b c4		 mov	 eax, esp
  02c57	89 65 d4	 mov	 DWORD PTR $T199313[ebp], esp
  02c5a	68 00 00 00 00	 push	 OFFSET FLAT:$SG196859
  02c5f	50		 push	 eax
  02c60	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02c63	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02c68	89 45 a4	 mov	 DWORD PTR tv276[ebp], eax
  02c6b	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02c70	83 c4 08	 add	 esp, 8
  02c73	89 45 a0	 mov	 DWORD PTR tv277[ebp], eax
  02c76	8b 4d a0	 mov	 ecx, DWORD PTR tv277[ebp]
  02c79	51		 push	 ecx
  02c7a	8b 4d f0	 mov	 ecx, DWORD PTR _pList$[ebp]
  02c7d	e8 00 00 00 00	 call	 ?SetColor@CMyListCtrl@@QAEXKKKKK@Z ; CMyListCtrl::SetColor

; 372  : 
; 373  : 	pList->m_clrPlayItem=StringToRGB( pXml->GetAttrib("playbk"),false);

  02c82	6a 00		 push	 0
  02c84	51		 push	 ecx
  02c85	8b d4		 mov	 edx, esp
  02c87	89 65 d0	 mov	 DWORD PTR $T199314[ebp], esp
  02c8a	68 00 00 00 00	 push	 OFFSET FLAT:$SG196862
  02c8f	52		 push	 edx
  02c90	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02c93	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02c98	89 45 9c	 mov	 DWORD PTR tv280[ebp], eax
  02c9b	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02ca0	83 c4 08	 add	 esp, 8
  02ca3	89 45 98	 mov	 DWORD PTR tv281[ebp], eax
  02ca6	8b 45 f0	 mov	 eax, DWORD PTR _pList$[ebp]
  02ca9	8b 4d 98	 mov	 ecx, DWORD PTR tv281[ebp]
  02cac	89 88 50 01 00
	00		 mov	 DWORD PTR [eax+336], ecx

; 374  : 
; 375  : 	CDibBitmap *H = pSkin->GetDibBmp(pXml->GetAttrib("scrollH"));

  02cb2	68 00 00 00 00	 push	 OFFSET FLAT:$SG196865
  02cb7	8d 55 cc	 lea	 edx, DWORD PTR $T199315[ebp]
  02cba	52		 push	 edx
  02cbb	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02cbe	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02cc3	89 45 94	 mov	 DWORD PTR tv286[ebp], eax
  02cc6	8b 45 94	 mov	 eax, DWORD PTR tv286[ebp]
  02cc9	89 45 90	 mov	 DWORD PTR tv283[ebp], eax
  02ccc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  02cd3	8b f4		 mov	 esi, esp
  02cd5	8b 4d 90	 mov	 ecx, DWORD PTR tv283[ebp]
  02cd8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  02cde	3b f4		 cmp	 esi, esp
  02ce0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02ce5	8b f4		 mov	 esi, esp
  02ce7	50		 push	 eax
  02ce8	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02ceb	83 c1 04	 add	 ecx, 4
  02cee	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  02cf1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  02cf4	ff 50 04	 call	 DWORD PTR [eax+4]
  02cf7	3b f4		 cmp	 esi, esp
  02cf9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02cfe	89 45 ec	 mov	 DWORD PTR _H$[ebp], eax
  02d01	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02d08	8b f4		 mov	 esi, esp
  02d0a	8d 4d cc	 lea	 ecx, DWORD PTR $T199315[ebp]
  02d0d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02d13	3b f4		 cmp	 esi, esp
  02d15	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 376  : 	if(H == NULL)

  02d1a	83 7d ec 00	 cmp	 DWORD PTR _H$[ebp], 0
  02d1e	75 20		 jne	 SHORT $L196866

; 377  : 		H = pSkin->GetDibBmp("ScrollHorz");

  02d20	8b f4		 mov	 esi, esp
  02d22	68 00 00 00 00	 push	 OFFSET FLAT:$SG196867
  02d27	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02d2a	83 c1 04	 add	 ecx, 4
  02d2d	8b 55 10	 mov	 edx, DWORD PTR _pSkin$[ebp]
  02d30	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  02d33	ff 50 04	 call	 DWORD PTR [eax+4]
  02d36	3b f4		 cmp	 esi, esp
  02d38	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02d3d	89 45 ec	 mov	 DWORD PTR _H$[ebp], eax
$L196866:

; 378  : 
; 379  : 	CDibBitmap *V = pSkin->GetDibBmp(pXml->GetAttrib("scrollV"));

  02d40	68 00 00 00 00	 push	 OFFSET FLAT:$SG196870
  02d45	8d 4d c8	 lea	 ecx, DWORD PTR $T199316[ebp]
  02d48	51		 push	 ecx
  02d49	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02d4c	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02d51	89 45 8c	 mov	 DWORD PTR tv289[ebp], eax
  02d54	8b 55 8c	 mov	 edx, DWORD PTR tv289[ebp]
  02d57	89 55 88	 mov	 DWORD PTR tv285[ebp], edx
  02d5a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  02d61	8b f4		 mov	 esi, esp
  02d63	8b 4d 88	 mov	 ecx, DWORD PTR tv285[ebp]
  02d66	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  02d6c	3b f4		 cmp	 esi, esp
  02d6e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02d73	8b f4		 mov	 esi, esp
  02d75	50		 push	 eax
  02d76	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02d79	83 c1 04	 add	 ecx, 4
  02d7c	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  02d7f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  02d82	ff 52 04	 call	 DWORD PTR [edx+4]
  02d85	3b f4		 cmp	 esi, esp
  02d87	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02d8c	89 45 e8	 mov	 DWORD PTR _V$[ebp], eax
  02d8f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02d96	8b f4		 mov	 esi, esp
  02d98	8d 4d c8	 lea	 ecx, DWORD PTR $T199316[ebp]
  02d9b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  02da1	3b f4		 cmp	 esi, esp
  02da3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 380  : 	if(V == NULL)

  02da8	83 7d e8 00	 cmp	 DWORD PTR _V$[ebp], 0
  02dac	75 20		 jne	 SHORT $L196871

; 381  : 		V = pSkin->GetDibBmp("ScrollVert");

  02dae	8b f4		 mov	 esi, esp
  02db0	68 00 00 00 00	 push	 OFFSET FLAT:$SG196872
  02db5	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02db8	83 c1 04	 add	 ecx, 4
  02dbb	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  02dbe	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  02dc1	ff 52 04	 call	 DWORD PTR [edx+4]
  02dc4	3b f4		 cmp	 esi, esp
  02dc6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02dcb	89 45 e8	 mov	 DWORD PTR _V$[ebp], eax
$L196871:

; 382  : 
; 383  : 
; 384  : 	pList->SetScrollBitmap(V ,H);

  02dce	8b 45 ec	 mov	 eax, DWORD PTR _H$[ebp]
  02dd1	50		 push	 eax
  02dd2	8b 4d e8	 mov	 ecx, DWORD PTR _V$[ebp]
  02dd5	51		 push	 ecx
  02dd6	8b 4d f0	 mov	 ecx, DWORD PTR _pList$[ebp]
  02dd9	e8 00 00 00 00	 call	 ?SetScrollBitmap@CMyListCtrl@@QAEXPAVCDibBitmap@@0@Z ; CMyListCtrl::SetScrollBitmap

; 385  : }

  02dde	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02de1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02de8	5f		 pop	 edi
  02de9	5e		 pop	 esi
  02dea	83 c4 78	 add	 esp, 120		; 00000078H
  02ded	3b ec		 cmp	 ebp, esp
  02def	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02df4	8b e5		 mov	 esp, ebp
  02df6	5d		 pop	 ebp
  02df7	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L199323:
  0051b	8b f4		 mov	 esi, esp
  0051d	8d 4d cc	 lea	 ecx, DWORD PTR $T199315[ebp]
  00520	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00526	3b f4		 cmp	 esi, esp
  00528	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L199324:
  0052d	8b f4		 mov	 esi, esp
  0052f	8d 4d c8	 lea	 ecx, DWORD PTR $T199316[ebp]
  00532	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00538	3b f4		 cmp	 esi, esp
  0053a	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z:
  0053f	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199326
  00544	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateList@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateList
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
tv204 = -52						; size = 4
tv203 = -48						; size = 4
tv200 = -44						; size = 4
tv199 = -40						; size = 4
tv196 = -36						; size = 4
tv195 = -32						; size = 4
tv192 = -28						; size = 4
tv191 = -24						; size = 4
$T199333 = -20						; size = 4
$T199332 = -16						; size = 4
$T199331 = -12						; size = 4
$T199330 = -8						; size = 4
_pTree$ = -4						; size = 4
_pWnd$ = 8						; size = 4
_pXml$ = 12						; size = 4
_pSkin$ = 16						; size = 4
_m_mgrPanes$ = 20					; size = 4
?CreateTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z PROC NEAR ; CreateControlFactory::CreateTree

; 389  : {

  02e00	55		 push	 ebp
  02e01	8b ec		 mov	 ebp, esp
  02e03	83 ec 34	 sub	 esp, 52			; 00000034H
  02e06	56		 push	 esi
  02e07	57		 push	 edi
  02e08	8d 7d cc	 lea	 edi, DWORD PTR [ebp-52]
  02e0b	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  02e10	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  02e15	f3 ab		 rep stosd

; 390  : 	CMyTreeCtrl *pTree = (CMyTreeCtrl*) pWnd;

  02e17	8b 45 08	 mov	 eax, DWORD PTR _pWnd$[ebp]
  02e1a	89 45 fc	 mov	 DWORD PTR _pTree$[ebp], eax

; 391  : 	pTree->SetNormalItemTextColor( StringToRGB(pXml->GetAttrib("nortext")) );

  02e1d	6a 01		 push	 1
  02e1f	51		 push	 ecx
  02e20	8b cc		 mov	 ecx, esp
  02e22	89 65 f8	 mov	 DWORD PTR $T199330[ebp], esp
  02e25	68 00 00 00 00	 push	 OFFSET FLAT:$SG196883
  02e2a	51		 push	 ecx
  02e2b	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02e2e	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02e33	89 45 e8	 mov	 DWORD PTR tv191[ebp], eax
  02e36	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02e3b	83 c4 08	 add	 esp, 8
  02e3e	89 45 e4	 mov	 DWORD PTR tv192[ebp], eax
  02e41	8b 55 e4	 mov	 edx, DWORD PTR tv192[ebp]
  02e44	52		 push	 edx
  02e45	8b 4d fc	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02e48	e8 00 00 00 00	 call	 ?SetNormalItemTextColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetNormalItemTextColor

; 392  : 	pTree->SetSelectItemBKColor( StringToRGB(pXml->GetAttrib("selbk")) );

  02e4d	6a 01		 push	 1
  02e4f	51		 push	 ecx
  02e50	8b c4		 mov	 eax, esp
  02e52	89 65 f4	 mov	 DWORD PTR $T199331[ebp], esp
  02e55	68 00 00 00 00	 push	 OFFSET FLAT:$SG196886
  02e5a	50		 push	 eax
  02e5b	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02e5e	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02e63	89 45 e0	 mov	 DWORD PTR tv195[ebp], eax
  02e66	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02e6b	83 c4 08	 add	 esp, 8
  02e6e	89 45 dc	 mov	 DWORD PTR tv196[ebp], eax
  02e71	8b 4d dc	 mov	 ecx, DWORD PTR tv196[ebp]
  02e74	51		 push	 ecx
  02e75	8b 4d fc	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02e78	e8 00 00 00 00	 call	 ?SetSelectItemBKColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetSelectItemBKColor

; 393  : 	pTree->SetSelectItemTextColor( StringToRGB( pXml->GetAttrib("seltext")) );

  02e7d	6a 01		 push	 1
  02e7f	51		 push	 ecx
  02e80	8b d4		 mov	 edx, esp
  02e82	89 65 f0	 mov	 DWORD PTR $T199332[ebp], esp
  02e85	68 00 00 00 00	 push	 OFFSET FLAT:$SG196889
  02e8a	52		 push	 edx
  02e8b	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02e8e	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02e93	89 45 d8	 mov	 DWORD PTR tv199[ebp], eax
  02e96	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02e9b	83 c4 08	 add	 esp, 8
  02e9e	89 45 d4	 mov	 DWORD PTR tv200[ebp], eax
  02ea1	8b 45 d4	 mov	 eax, DWORD PTR tv200[ebp]
  02ea4	50		 push	 eax
  02ea5	8b 4d fc	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02ea8	e8 00 00 00 00	 call	 ?SetSelectItemTextColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetSelectItemTextColor

; 394  : 	pTree->SetBackColor( StringToRGB(pXml->GetAttrib("bk")) );

  02ead	6a 01		 push	 1
  02eaf	51		 push	 ecx
  02eb0	8b cc		 mov	 ecx, esp
  02eb2	89 65 ec	 mov	 DWORD PTR $T199333[ebp], esp
  02eb5	68 00 00 00 00	 push	 OFFSET FLAT:$SG196892
  02eba	51		 push	 ecx
  02ebb	8b 4d 0c	 mov	 ecx, DWORD PTR _pXml$[ebp]
  02ebe	e8 00 00 00 00	 call	 ?GetAttrib@CMarkup@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@PBD@Z ; CMarkup::GetAttrib
  02ec3	89 45 d0	 mov	 DWORD PTR tv203[ebp], eax
  02ec6	e8 00 00 00 00	 call	 ?StringToRGB@CreateControlFactory@@SAKV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CreateControlFactory::StringToRGB
  02ecb	83 c4 08	 add	 esp, 8
  02ece	89 45 cc	 mov	 DWORD PTR tv204[ebp], eax
  02ed1	8b 55 cc	 mov	 edx, DWORD PTR tv204[ebp]
  02ed4	52		 push	 edx
  02ed5	8b 4d fc	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02ed8	e8 00 00 00 00	 call	 ?SetBackColor@CMyTreeCtrl@@QAEXK@Z ; CMyTreeCtrl::SetBackColor

; 395  : 	pTree->SetScrollBitmap(pSkin->GetDibBmp("ScrollVert"), pSkin->GetDibBmp("ScrollHorz"));

  02edd	8b f4		 mov	 esi, esp
  02edf	68 00 00 00 00	 push	 OFFSET FLAT:$SG196893
  02ee4	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02ee7	83 c1 04	 add	 ecx, 4
  02eea	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  02eed	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  02ef0	ff 52 04	 call	 DWORD PTR [edx+4]
  02ef3	3b f4		 cmp	 esi, esp
  02ef5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02efa	50		 push	 eax
  02efb	8b f4		 mov	 esi, esp
  02efd	68 00 00 00 00	 push	 OFFSET FLAT:$SG196894
  02f02	8b 4d 10	 mov	 ecx, DWORD PTR _pSkin$[ebp]
  02f05	83 c1 04	 add	 ecx, 4
  02f08	8b 45 10	 mov	 eax, DWORD PTR _pSkin$[ebp]
  02f0b	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  02f0e	ff 52 04	 call	 DWORD PTR [edx+4]
  02f11	3b f4		 cmp	 esi, esp
  02f13	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02f18	50		 push	 eax
  02f19	8b 4d fc	 mov	 ecx, DWORD PTR _pTree$[ebp]
  02f1c	e8 00 00 00 00	 call	 ?SetScrollBitmap@CMyTreeCtrl@@QAEXPAVCDibBitmap@@0@Z ; CMyTreeCtrl::SetScrollBitmap

; 396  : }

  02f21	5f		 pop	 edi
  02f22	5e		 pop	 esi
  02f23	83 c4 34	 add	 esp, 52			; 00000034H
  02f26	3b ec		 cmp	 ebp, esp
  02f28	e8 00 00 00 00	 call	 __RTC_CheckEsp
  02f2d	8b e5		 mov	 esp, ebp
  02f2f	5d		 pop	 ebp
  02f30	c3		 ret	 0
?CreateTree@CreateControlFactory@@SAXPAVCWnd@@PAVCMarkup@@PAVCSkinMgr@@PAVILayoutMgr@@@Z ENDP ; CreateControlFactory::CreateTree
_TEXT	ENDS
EXTRN	__imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ:NEAR
EXTRN	__imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z:NEAR
EXTRN	__imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z:NEAR
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
xdata$x	SEGMENT
$T199349 DD	0ffffffffH
	DD	FLAT:$L199339
$T199344 DD	019930520H
	DD	01H
	DD	FLAT:$T199349
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
_TEXT	SEGMENT
$T199341 = -28						; size = 4
_strResult$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_str1$ = 12						; size = 4
_psz2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z PROC NEAR ; ATL::operator+, COMDAT

; 2023 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 10	 sub	 esp, 16			; 00000010H
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00025	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00028	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002e	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T199341[ebp], 0

; 2024 : 		CStringT strResult( str1.GetManager() );

  00035	8b f4		 mov	 esi, esp
  00037	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b f4		 mov	 esi, esp
  00049	50		 push	 eax
  0004a	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
  00053	3b f4		 cmp	 esi, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2025 : 
; 2026 : 		Concatenate( strResult, str1, str1.GetLength(), psz2, StringLength( psz2 ) );

  00061	8b f4		 mov	 esi, esp
  00063	8b 45 10	 mov	 eax, DWORD PTR _psz2$[ebp]
  00066	50		 push	 eax
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z
  0006d	83 c4 04	 add	 esp, 4
  00070	3b f4		 cmp	 esi, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b f4		 mov	 esi, esp
  00079	50		 push	 eax
  0007a	8b 4d 10	 mov	 ecx, DWORD PTR _psz2$[ebp]
  0007d	51		 push	 ecx
  0007e	8b fc		 mov	 edi, esp
  00080	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  00089	3b fc		 cmp	 edi, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00090	50		 push	 eax
  00091	8b fc		 mov	 edi, esp
  00093	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0009c	3b fc		 cmp	 edi, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	50		 push	 eax
  000a4	8d 55 ec	 lea	 edx, DWORD PTR _strResult$[ebp]
  000a7	52		 push	 edx
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z
  000ae	83 c4 14	 add	 esp, 20			; 00000014H
  000b1	3b f4		 cmp	 esi, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2027 : 
; 2028 : 		return( strResult );

  000b8	8b f4		 mov	 esi, esp
  000ba	8d 45 ec	 lea	 eax, DWORD PTR _strResult$[ebp]
  000bd	50		 push	 eax
  000be	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  000c7	3b f4		 cmp	 esi, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ce	8b 4d e4	 mov	 ecx, DWORD PTR $T199341[ebp]
  000d1	83 c9 01	 or	 ecx, 1
  000d4	89 4d e4	 mov	 DWORD PTR $T199341[ebp], ecx
  000d7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000de	8b f4		 mov	 esi, esp
  000e0	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2029 : 	}

  000f3	52		 push	 edx
  000f4	8b cd		 mov	 ecx, ebp
  000f6	50		 push	 eax
  000f7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L199348
  000fd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00102	58		 pop	 eax
  00103	5a		 pop	 edx
  00104	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00107	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	83 c4 1c	 add	 esp, 28			; 0000001cH
  00113	3b ec		 cmp	 ebp, esp
  00115	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c3		 ret	 0
$L199348:
  0011e	01 00 00 00	 DD	 1
  00122	00 00 00 00	 DD	 $L199347
$L199347:
  00126	ec ff ff ff	 DD	 -20			; ffffffecH
  0012a	04 00 00 00	 DD	 4
  0012e	00 00 00 00	 DD	 $L199345
$L199345:
  00132	73		 DB	 115			; 00000073H
  00133	74		 DB	 116			; 00000074H
  00134	72		 DB	 114			; 00000072H
  00135	52		 DB	 82			; 00000052H
  00136	65		 DB	 101			; 00000065H
  00137	73		 DB	 115			; 00000073H
  00138	75		 DB	 117			; 00000075H
  00139	6c		 DB	 108			; 0000006cH
  0013a	74		 DB	 116			; 00000074H
  0013b	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L199339:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199344
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ENDP ; ATL::operator+
;	COMDAT xdata$x
xdata$x	SEGMENT
$T199363 DD	0ffffffffH
	DD	FLAT:$L199353
$T199358 DD	019930520H
	DD	01H
	DD	FLAT:$T199363
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
_TEXT	SEGMENT
$T199355 = -28						; size = 4
_strResult$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_psz1$ = 12						; size = 4
_str2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z PROC NEAR ; ATL::operator+, COMDAT

; 2032 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 10	 sub	 esp, 16			; 00000010H
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00025	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00028	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002e	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T199355[ebp], 0

; 2033 : 		CStringT strResult( str2.GetManager() );

  00035	8b f4		 mov	 esi, esp
  00037	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b f4		 mov	 esi, esp
  00049	50		 push	 eax
  0004a	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
  00053	3b f4		 cmp	 esi, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2034 : 
; 2035 : 		Concatenate( strResult, psz1, StringLength( psz1 ), str2, str2.GetLength() );

  00061	8b f4		 mov	 esi, esp
  00063	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b f4		 mov	 esi, esp
  00075	50		 push	 eax
  00076	8b fc		 mov	 edi, esp
  00078	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00081	3b fc		 cmp	 edi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	50		 push	 eax
  00089	8b fc		 mov	 edi, esp
  0008b	8b 45 0c	 mov	 eax, DWORD PTR _psz1$[ebp]
  0008e	50		 push	 eax
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z
  00095	83 c4 04	 add	 esp, 4
  00098	3b fc		 cmp	 edi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	50		 push	 eax
  000a0	8b 4d 0c	 mov	 ecx, DWORD PTR _psz1$[ebp]
  000a3	51		 push	 ecx
  000a4	8d 55 ec	 lea	 edx, DWORD PTR _strResult$[ebp]
  000a7	52		 push	 edx
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z
  000ae	83 c4 14	 add	 esp, 20			; 00000014H
  000b1	3b f4		 cmp	 esi, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2036 : 
; 2037 : 		return( strResult );

  000b8	8b f4		 mov	 esi, esp
  000ba	8d 45 ec	 lea	 eax, DWORD PTR _strResult$[ebp]
  000bd	50		 push	 eax
  000be	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  000c7	3b f4		 cmp	 esi, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ce	8b 4d e4	 mov	 ecx, DWORD PTR $T199355[ebp]
  000d1	83 c9 01	 or	 ecx, 1
  000d4	89 4d e4	 mov	 DWORD PTR $T199355[ebp], ecx
  000d7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000de	8b f4		 mov	 esi, esp
  000e0	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2038 : 	}

  000f3	52		 push	 edx
  000f4	8b cd		 mov	 ecx, ebp
  000f6	50		 push	 eax
  000f7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L199362
  000fd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00102	58		 pop	 eax
  00103	5a		 pop	 edx
  00104	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00107	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	83 c4 1c	 add	 esp, 28			; 0000001cH
  00113	3b ec		 cmp	 ebp, esp
  00115	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c3		 ret	 0
$L199362:
  0011e	01 00 00 00	 DD	 1
  00122	00 00 00 00	 DD	 $L199361
$L199361:
  00126	ec ff ff ff	 DD	 -20			; ffffffecH
  0012a	04 00 00 00	 DD	 4
  0012e	00 00 00 00	 DD	 $L199359
$L199359:
  00132	73		 DB	 115			; 00000073H
  00133	74		 DB	 116			; 00000074H
  00134	72		 DB	 114			; 00000072H
  00135	52		 DB	 82			; 00000052H
  00136	65		 DB	 101			; 00000065H
  00137	73		 DB	 115			; 00000073H
  00138	75		 DB	 117			; 00000075H
  00139	6c		 DB	 108			; 0000006cH
  0013a	74		 DB	 116			; 00000074H
  0013b	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L199353:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199358
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ENDP ; ATL::operator+
EXTRN	__imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z PROC NEAR ; ATL::operator==, COMDAT

; 2087 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2088 : 		return( str1.Compare( psz2 ) == 0 );

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _psz2$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _str1$[ebp]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  00013	3b f4		 cmp	 esi, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001a	f7 d8		 neg	 eax
  0001c	1b c0		 sbb	 eax, eax
  0001e	40		 inc	 eax

; 2089 : 	}

  0001f	5e		 pop	 esi
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ENDP ; ATL::operator==
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z PROC NEAR ; ATL::operator!=, COMDAT

; 2121 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2122 : 		return( str1.Compare( psz2 ) != 0 );

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _psz2$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _str1$[ebp]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  00013	3b f4		 cmp	 esi, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001a	f7 d8		 neg	 eax
  0001c	1b c0		 sbb	 eax, eax
  0001e	f7 d8		 neg	 eax

; 2123 : 	}

  00020	5e		 pop	 esi
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ENDP ; ATL::operator!=
_TEXT	ENDS
END
