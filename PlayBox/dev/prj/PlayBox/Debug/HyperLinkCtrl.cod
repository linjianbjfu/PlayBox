; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\Gui\CommonControl\HyperLinkCtrl.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0EN@IBFBLEEG@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??_GCHyperLink@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3CHyperLink@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CHyperLink@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CStatic@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CHyperLink@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCStatic@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVCHyperLink@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4CHyperLink@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_C@_0EN@CBMLGOH@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FG@LDNDNCJM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FI@NHHJANPC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FJ@DMHPDOJC@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FH@KDPNIMBO@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BO@OBIGOAOM@AtlIsValidString?$CI?5pszFormat?5?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlIsValidString@ATL@@YAHPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2A@@YAPADPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsstr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_messageEntries@CHyperLink@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CHyperLink@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CHyperLink@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	?CtlColor@CHyperLink@@IAEPAUHBRUSH__@@PAVCDC@@I@Z ; CHyperLink::CtlColor
PUBLIC	?OnSetCursor@CHyperLink@@IAEHPAVCWnd@@II@Z	; CHyperLink::OnSetCursor
PUBLIC	?OnMouseMove@CHyperLink@@IAEXIVCPoint@@@Z	; CHyperLink::OnMouseMove
PUBLIC	?OnTimer@CHyperLink@@IAEXI@Z			; CHyperLink::OnTimer
PUBLIC	?OnEraseBkgnd@CHyperLink@@IAEHPAVCDC@@@Z	; CHyperLink::OnEraseBkgnd
PUBLIC	?OnClicked@CHyperLink@@IAEXXZ			; CHyperLink::OnClicked
PUBLIC	?_messageEntries@CHyperLink@@0QBUAFX_MSGMAP_ENTRY@@B ; CHyperLink::_messageEntries
PUBLIC	?messageMap@CHyperLink@@1UAFX_MSGMAP@@B		; CHyperLink::messageMap
EXTRN	?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ:NEAR ; CWnd::GetThisMessageMap
_DATA	SEGMENT
_THIS_FILE DB	'.\src\Gui\CommonControl\HyperLinkCtrl.cpp', 00H
_DATA	ENDS
;	COMDAT ?_messageEntries@CHyperLink@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CHyperLink@@0QBUAFX_MSGMAP_ENTRY@@B DD 0bc19H ; CHyperLink::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	09H
	DD	FLAT:?CtlColor@CHyperLink@@IAEPAUHBRUSH__@@PAVCDC@@I@Z
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	FLAT:?OnSetCursor@CHyperLink@@IAEHPAVCWnd@@II@Z
	DD	0200H
	DD	00H
	DD	00H
	DD	00H
	DD	032H
	DD	FLAT:?OnMouseMove@CHyperLink@@IAEXIVCPoint@@@Z
	DD	0113H
	DD	00H
	DD	00H
	DD	00H
	DD	011H
	DD	FLAT:?OnTimer@CHyperLink@@IAEXI@Z
	DD	0bd11H
	DD	00H
	DD	00H
	DD	00H
	DD	035H
	DD	FLAT:?OnClicked@CHyperLink@@IAEXXZ
	DD	014H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:?OnEraseBkgnd@CHyperLink@@IAEHPAVCDC@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CHyperLink@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CHyperLink@@1UAFX_MSGMAP@@B DD FLAT:?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ ; CHyperLink::messageMap
	DD	FLAT:?_messageEntries@CHyperLink@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
CONST	SEGMENT
$SG187328 DB	'\winhlp32.exe', 00H
	ORG $+2
$SG187359 DB	'The operating system is out', 0aH, 'of memory or resourc'
	DB	'es.', 00H
$SG187361 DB	'The specified path was not found.', 00H
	ORG $+2
$SG187363 DB	'The specified file was not found.', 00H
	ORG $+6
$SG187365 DB	'The .EXE file is invalid', 0aH, '(non-Win32 .EXE or erro'
	DB	'r in .EXE image).', 00H
	ORG $+2
$SG187367 DB	'The operating system denied', 0aH, 'access to the specif'
	DB	'ied file.', 00H
	ORG $+2
$SG187369 DB	'The filename association is', 0aH, 'incomplete or invali'
	DB	'd.', 00H
	ORG $+5
$SG187371 DB	'The DDE transaction could not', 0aH, 'be completed becau'
	DB	'se other DDE transactions', 0aH, 'were being processed.', 00H
$SG187373 DB	'The DDE transaction failed.', 00H
	ORG $+4
$SG187375 DB	'The DDE transaction could not', 0aH, 'be completed becau'
	DB	'se the request timed out.', 00H
	ORG $+2
$SG187377 DB	'The specified dynamic-link library was not found.', 00H
	ORG $+2
$SG187379 DB	'There is no application associated', 0aH, 'with the give'
	DB	'n filename extension.', 00H
	ORG $+2
$SG187381 DB	'There was not enough memory to complete the operation.', 00H
	ORG $+1
$SG187383 DB	'A sharing violation occurred. ', 00H
	ORG $+1
$SG187385 DB	'Unknown Error (%d) occurred.', 00H
	ORG $+3
$SG187387 DB	'Unable to open hyperlink:', 0aH, 0aH, 00H
$SG187395 DB	'open', 00H
	ORG $+3
$SG187402 DB	'.htm', 00H
	ORG $+3
$SG187403 DB	'\shell\open\command', 00H
$SG187409 DB	'"%1"', 00H
	ORG $+3
$SG187411 DB	'%1', 00H
	ORG $+1
$SG187415 DB	' ', 00H
CONST	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	??_R4CHyperLink@@6B@				; CHyperLink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCHyperLink@@@8				; CHyperLink `RTTI Type Descriptor'
PUBLIC	??_R3CHyperLink@@8				; CHyperLink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CHyperLink@@8				; CHyperLink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CHyperLink@@8			; CHyperLink::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R1A@?0A@A@CStatic@@8				; CStatic::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCStatic@@@8				; CStatic `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CObject@@8				; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??0CHyperLink@@QAE@XZ				; CHyperLink::CHyperLink
PUBLIC	?PreTranslateMessage@CHyperLink@@UAEHPAUtagMSG@@@Z ; CHyperLink::PreTranslateMessage
PUBLIC	?DestroyWindow@CHyperLink@@UAEHXZ		; CHyperLink::DestroyWindow
PUBLIC	?PreSubclassWindow@CHyperLink@@MAEXXZ		; CHyperLink::PreSubclassWindow
PUBLIC	?GetMessageMap@CHyperLink@@MBEPBUAFX_MSGMAP@@XZ	; CHyperLink::GetMessageMap
PUBLIC	??_7CHyperLink@@6B@				; CHyperLink::`vftable'
PUBLIC	??_GCHyperLink@@UAEPAXI@Z			; CHyperLink::`scalar deleting destructor'
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accValue
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDescription
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??0CFont@@QAE@XZ:NEAR				; CFont::CFont
EXTRN	??1CFont@@UAE@XZ:NEAR				; CFont::~CFont
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:NEAR	; CObject::Serialize
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:NEAR ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:NEAR		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:NEAR		; CWnd::EndModalState
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	__RTC_InitBase:NEAR
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	__RTC_Shutdown:NEAR
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?AssertValid@CWnd@@UBEXXZ:NEAR			; CWnd::AssertValid
EXTRN	?Dump@CWnd@@UBEXAAVCDumpContext@@@Z:NEAR	; CWnd::Dump
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	??0CToolTipCtrl@@QAE@XZ:NEAR			; CToolTipCtrl::CToolTipCtrl
EXTRN	__imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ:NEAR
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	??_ECHyperLink@@UAEPAXI@Z:NEAR			; CHyperLink::`vector deleting destructor'
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:NEAR
EXTRN	?GetRuntimeClass@CStatic@@UBEPAUCRuntimeClass@@XZ:NEAR ; CStatic::GetRuntimeClass
EXTRN	??0CStatic@@QAE@XZ:NEAR				; CStatic::CStatic
EXTRN	?Create@CStatic@@UAEHPBDKABUtagRECT@@PAVCWnd@@I@Z:NEAR ; CStatic::Create
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?DrawItem@CStatic@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:NEAR ; CStatic::DrawItem
EXTRN	??1CStatic@@UAE@XZ:NEAR				; CStatic::~CStatic
EXTRN	?OnChildNotify@CStatic@@MAEHIIJPAJ@Z:NEAR	; CStatic::OnChildNotify
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
;	COMDAT rtc$IMZ
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\gui\commoncontrol\hyperlinkctrl.cpp
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
xdata$x	SEGMENT
$T188004 DD	0ffffffffH
	DD	FLAT:$L187992
	DD	00H
	DD	FLAT:$L187993
	DD	01H
	DD	FLAT:$L187994
	DD	02H
	DD	FLAT:$L187995
$T188000 DD	019930520H
	DD	04H
	DD	FLAT:$T188004
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CHyperLink@@6B@
CONST	SEGMENT
??_7CHyperLink@@6B@ DD FLAT:??_R4CHyperLink@@6B@	; CHyperLink::`vftable'
	DD	FLAT:?GetRuntimeClass@CStatic@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECHyperLink@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CWnd@@UBEXXZ
	DD	FLAT:?Dump@CWnd@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CHyperLink@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CHyperLink@@MAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CHyperLink@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CHyperLink@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CStatic@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?Create@CStatic@@UAEHPBDKABUtagRECT@@PAVCWnd@@I@Z
	DD	FLAT:?DrawItem@CStatic@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
CONST	ENDS
;	COMDAT ??_R4CHyperLink@@6B@
rdata$r	SEGMENT
??_R4CHyperLink@@6B@ DD 00H				; CHyperLink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCHyperLink@@@8
	DD	FLAT:??_R3CHyperLink@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCHyperLink@@@8
_DATA	SEGMENT
??_R0?AVCHyperLink@@@8 DD FLAT:??_7type_info@@6B@	; CHyperLink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCHyperLink@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CHyperLink@@8
rdata$r	SEGMENT
??_R3CHyperLink@@8 DD 00H				; CHyperLink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CHyperLink@@8
rdata$r	ENDS
;	COMDAT ??_R2CHyperLink@@8
rdata$r	SEGMENT
??_R2CHyperLink@@8 DD FLAT:??_R1A@?0A@A@CHyperLink@@8	; CHyperLink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@CStatic@@8
	DD	FLAT:??_R1A@?0A@A@CWnd@@8
	DD	FLAT:??_R1A@?0A@A@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@A@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CHyperLink@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CHyperLink@@8 DD FLAT:??_R0?AVCHyperLink@@@8 ; CHyperLink::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CStatic@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CStatic@@8 DD FLAT:??_R0?AVCStatic@@@8	; CStatic::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCStatic@@@8
_DATA	SEGMENT
??_R0?AVCStatic@@@8 DD FLAT:??_7type_info@@6B@		; CStatic `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCStatic@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CHyperLink@@QAE@XZ PROC NEAR				; CHyperLink::CHyperLink
; _this$ = ecx

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CHyperLink@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	56		 push	 esi
  0001a	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00021	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ??0CStatic@@QAE@XZ	; CStatic::CStatic
  0002c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00033	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CHyperLink@@6B@
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	83 c1 70	 add	 ecx, 112		; 00000070H
  00042	8b f4		 mov	 esi, esp
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00055	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	83 c1 74	 add	 ecx, 116		; 00000074H
  0005b	e8 00 00 00 00	 call	 ??0CFont@@QAE@XZ	; CFont::CFont
  00060	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0006a	e8 00 00 00 00	 call	 ??0CFont@@QAE@XZ	; CFont::CFont
  0006f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00073	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0007c	e8 00 00 00 00	 call	 ??0CToolTipCtrl@@QAE@XZ	; CToolTipCtrl::CToolTipCtrl

; 38   :     m_hLinkCursor       = NULL;                 // No cursor as yet

  00081	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	c7 81 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+132], 0

; 39   :     m_crLinkColour      = RGB(  0,   0, 238);   // Blue

  0008e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00091	c7 42 54 00 00
	ee 00		 mov	 DWORD PTR [edx+84], 15597568 ; 00ee0000H

; 40   :     m_crVisitedColour   = RGB( 85,  26, 139);   // Purple

  00098	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	c7 40 58 55 1a
	8b 00		 mov	 DWORD PTR [eax+88], 9116245 ; 008b1a55H

; 41   :     m_crHoverColour     = RGB(255,   0,   0);   // Red

  000a2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	c7 41 5c ff 00
	00 00		 mov	 DWORD PTR [ecx+92], 255	; 000000ffH

; 42   :     m_bOverControl      = FALSE;                // Cursor not yet over control

  000ac	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000af	c7 42 60 00 00
	00 00		 mov	 DWORD PTR [edx+96], 0

; 43   :     m_bVisited          = FALSE;                // Hasn't been visited yet.

  000b6	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000b9	c7 40 64 00 00
	00 00		 mov	 DWORD PTR [eax+100], 0

; 44   :     m_nUnderline        = ulHover;              // Underline the link?

  000c0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	c7 41 68 ff ff
	ff ff		 mov	 DWORD PTR [ecx+104], -1

; 45   :     m_bAdjustToFit      = TRUE;                 // Resize the window to fit the text?

  000ca	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000cd	c7 42 6c 01 00
	00 00		 mov	 DWORD PTR [edx+108], 1

; 46   :     m_strURL.Empty();

  000d4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	83 c1 70	 add	 ecx, 112		; 00000070H
  000da	8b f4		 mov	 esi, esp
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ
  000e2	3b f4		 cmp	 esi, esp
  000e4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 47   :     m_nTimerID          = 100;

  000e9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	c7 80 f8 00 00
	00 64 00 00 00	 mov	 DWORD PTR [eax+248], 100 ; 00000064H

; 48   : 	m_StdFont.m_hObject           = NULL;

  000f6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], 0

; 49   : 	m_UnderlineFont.m_hObject    = NULL;

  00103	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00106	c7 42 78 00 00
	00 00		 mov	 DWORD PTR [edx+120], 0

; 50   : }

  0010d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00114	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00117	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00121	5e		 pop	 esi
  00122	83 c4 10	 add	 esp, 16			; 00000010H
  00125	3b ec		 cmp	 ebp, esp
  00127	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L187992:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
$L187993:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 70	 add	 ecx, 112		; 00000070H
  0000e	8b f4		 mov	 esi, esp
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00016	3b f4		 cmp	 esi, esp
  00018	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L187994:
  0001d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	83 c1 74	 add	 ecx, 116		; 00000074H
  00023	e9 00 00 00 00	 jmp	 ??1CFont@@UAE@XZ	; CFont::~CFont
$L187995:
  00028	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0002e	e9 00 00 00 00	 jmp	 ??1CFont@@UAE@XZ	; CFont::~CFont
__ehhandler$??0CHyperLink@@QAE@XZ:
  00033	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188000
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CHyperLink@@QAE@XZ ENDP				; CHyperLink::CHyperLink
PUBLIC	??1CHyperLink@@UAE@XZ				; CHyperLink::~CHyperLink
EXTRN	??3CObject@@SGXPAX@Z:NEAR			; CObject::operator delete
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_GCHyperLink@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCHyperLink@@UAEPAXI@Z PROC NEAR			; CHyperLink::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CHyperLink@@UAE@XZ	; CHyperLink::~CHyperLink
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 09		 je	 SHORT $L187125
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L187125:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??_GCHyperLink@@UAEPAXI@Z ENDP				; CHyperLink::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?DeleteObject@CGdiObject@@QAEHXZ:NEAR		; CGdiObject::DeleteObject
EXTRN	??1CToolTipCtrl@@UAE@XZ:NEAR			; CToolTipCtrl::~CToolTipCtrl
xdata$x	SEGMENT
$T188016 DD	0ffffffffH
	DD	FLAT:$L188008
	DD	00H
	DD	FLAT:$L188009
	DD	01H
	DD	FLAT:$L188010
	DD	02H
	DD	FLAT:$L188011
	DD	03H
	DD	FLAT:$L188012
$T188014 DD	019930520H
	DD	05H
	DD	FLAT:$T188016
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CHyperLink@@UAE@XZ PROC NEAR				; CHyperLink::~CHyperLink
; _this$ = ecx

; 53   : {

  00130	55		 push	 ebp
  00131	8b ec		 mov	 ebp, esp
  00133	6a ff		 push	 -1
  00135	68 00 00 00 00	 push	 __ehhandler$??1CHyperLink@@UAE@XZ
  0013a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00140	50		 push	 eax
  00141	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00148	51		 push	 ecx
  00149	56		 push	 esi
  0014a	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00151	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00154	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00157	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CHyperLink@@6B@
  0015d	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4

; 54   :     m_UnderlineFont.DeleteObject();

  00164	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	83 c1 74	 add	 ecx, 116		; 00000074H
  0016a	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject

; 55   : }

  0016f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00173	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00176	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0017c	e8 00 00 00 00	 call	 ??1CToolTipCtrl@@UAE@XZ	; CToolTipCtrl::~CToolTipCtrl
  00181	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00185	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00188	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0018b	e8 00 00 00 00	 call	 ??1CFont@@UAE@XZ	; CFont::~CFont
  00190	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00194	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	83 c1 74	 add	 ecx, 116		; 00000074H
  0019a	e8 00 00 00 00	 call	 ??1CFont@@UAE@XZ	; CFont::~CFont
  0019f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001a3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	83 c1 70	 add	 ecx, 112		; 00000070H
  001a9	8b f4		 mov	 esi, esp
  001ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001b1	3b f4		 cmp	 esi, esp
  001b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001bf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001c2	e8 00 00 00 00	 call	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
  001c7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ca	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001d1	5e		 pop	 esi
  001d2	83 c4 10	 add	 esp, 16			; 00000010H
  001d5	3b ec		 cmp	 ebp, esp
  001d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001dc	8b e5		 mov	 esp, ebp
  001de	5d		 pop	 ebp
  001df	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L188008:
  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e9 00 00 00 00	 jmp	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
$L188009:
  00045	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	83 c1 70	 add	 ecx, 112		; 00000070H
  0004b	8b f4		 mov	 esi, esp
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00053	3b f4		 cmp	 esi, esp
  00055	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188010:
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 74	 add	 ecx, 116		; 00000074H
  00060	e9 00 00 00 00	 jmp	 ??1CFont@@UAE@XZ	; CFont::~CFont
$L188011:
  00065	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0006b	e9 00 00 00 00	 jmp	 ??1CFont@@UAE@XZ	; CFont::~CFont
$L188012:
  00070	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00079	e9 00 00 00 00	 jmp	 ??1CToolTipCtrl@@UAE@XZ	; CToolTipCtrl::~CToolTipCtrl
__ehhandler$??1CHyperLink@@UAE@XZ:
  0007e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188014
  00083	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CHyperLink@@UAE@XZ ENDP				; CHyperLink::~CHyperLink
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?KillTimer@CWnd@@QAEHI@Z:NEAR			; CWnd::KillTimer
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyWindow@CHyperLink@@UAEHXZ PROC NEAR		; CHyperLink::DestroyWindow
; _this$ = ecx

; 61   : {

  001e0	55		 push	 ebp
  001e1	8b ec		 mov	 ebp, esp
  001e3	51		 push	 ecx
  001e4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  001eb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   :     KillTimer(m_nTimerID);

  001ee	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001f1	8b 88 f8 00 00
	00		 mov	 ecx, DWORD PTR [eax+248]
  001f7	51		 push	 ecx
  001f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fb	e8 00 00 00 00	 call	 ?KillTimer@CWnd@@QAEHI@Z ; CWnd::KillTimer

; 63   : 	
; 64   : 	return CStatic::DestroyWindow();

  00200	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00203	e8 00 00 00 00	 call	 ?DestroyWindow@CWnd@@UAEHXZ ; CWnd::DestroyWindow

; 65   : }

  00208	83 c4 04	 add	 esp, 4
  0020b	3b ec		 cmp	 ebp, esp
  0020d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00212	8b e5		 mov	 esp, ebp
  00214	5d		 pop	 ebp
  00215	c3		 ret	 0
?DestroyWindow@CHyperLink@@UAEHXZ ENDP			; CHyperLink::DestroyWindow
_TEXT	ENDS
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?RelayEvent@CToolTipCtrl@@QAEXPAUtagMSG@@@Z:NEAR ; CToolTipCtrl::RelayEvent
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMsg$ = 8						; size = 4
?PreTranslateMessage@CHyperLink@@UAEHPAUtagMSG@@@Z PROC NEAR ; CHyperLink::PreTranslateMessage
; _this$ = ecx

; 68   : {

  00220	55		 push	 ebp
  00221	8b ec		 mov	 ebp, esp
  00223	51		 push	 ecx
  00224	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0022b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 69   :     m_ToolTip.RelayEvent(pMsg);

  0022e	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  00231	50		 push	 eax
  00232	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00235	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0023b	e8 00 00 00 00	 call	 ?RelayEvent@CToolTipCtrl@@QAEXPAUtagMSG@@@Z ; CToolTipCtrl::RelayEvent

; 70   :     return CStatic::PreTranslateMessage(pMsg);

  00240	8b 4d 08	 mov	 ecx, DWORD PTR _pMsg$[ebp]
  00243	51		 push	 ecx
  00244	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00247	e8 00 00 00 00	 call	 ?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z ; CWnd::PreTranslateMessage

; 71   : }

  0024c	83 c4 04	 add	 esp, 4
  0024f	3b ec		 cmp	 ebp, esp
  00251	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00256	8b e5		 mov	 esp, ebp
  00258	5d		 pop	 ebp
  00259	c2 04 00	 ret	 4
?PreTranslateMessage@CHyperLink@@UAEHPAUtagMSG@@@Z ENDP	; CHyperLink::PreTranslateMessage
_TEXT	ENDS
PUBLIC	?SetUnderline@CHyperLink@@QAEXH@Z		; CHyperLink::SetUnderline
PUBLIC	?PositionWindow@CHyperLink@@IAEXXZ		; CHyperLink::PositionWindow
PUBLIC	?SetDefaultCursor@CHyperLink@@IAEXXZ		; CHyperLink::SetDefaultCursor
EXTRN	?GetSafeHandle@CGdiObject@@QBEPAXXZ:NEAR	; CGdiObject::GetSafeHandle
EXTRN	?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z:NEAR	; CFont::FromHandle
EXTRN	?CreateFontIndirectA@CFont@@QAEHPBUtagLOGFONTA@@@Z:NEAR ; CFont::CreateFontIndirectA
EXTRN	?AfxAssertFailedLine@@YGHPBDH@Z:NEAR		; AfxAssertFailedLine
EXTRN	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ:NEAR	; CWnd::GetSafeHwnd
EXTRN	?GetStyle@CWnd@@QBEKXZ:NEAR			; CWnd::GetStyle
EXTRN	?GetLogFont@CFont@@QAEHPAUtagLOGFONTA@@@Z:NEAR	; CFont::GetLogFont
EXTRN	??0CRect@@QAE@XZ:NEAR				; CRect::CRect
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	??BCRect@@QAEPAUtagRECT@@XZ:NEAR		; CRect::operator tagRECT *
EXTRN	?SetWindowTextA@CWnd@@QAEXPBD@Z:NEAR		; CWnd::SetWindowTextA
EXTRN	?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CWnd::GetWindowTextA
EXTRN	?GetFont@CWnd@@QBEPAVCFont@@XZ:NEAR		; CWnd::GetFont
EXTRN	___security_cookie:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:NEAR
EXTRN	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z:NEAR	; CWnd::GetClientRect
EXTRN	__imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ:NEAR
EXTRN	__imp__GetStockObject@4:NEAR
EXTRN	?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z:NEAR ; CToolTipCtrl::AddTool
EXTRN	__imp__SetWindowLongA@12:NEAR
xdata$x	SEGMENT
$T188036 DD	0ffffffffH
	DD	FLAT:$L188023
$T188025 DD	019930520H
	DD	01H
	DD	FLAT:$T188036
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_rect$ = -132						; size = 16
_lf$ = -108						; size = 60
_hFont$187146 = -44					; size = 4
_pFont$ = -40						; size = 4
_strWndText$ = -32					; size = 4
_dwStyle$ = -24						; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?PreSubclassWindow@CHyperLink@@MAEXXZ PROC NEAR		; CHyperLink::PreSubclassWindow
; _this$ = ecx

; 75   : {

  00260	55		 push	 ebp
  00261	8b ec		 mov	 ebp, esp
  00263	6a ff		 push	 -1
  00265	68 00 00 00 00	 push	 __ehhandler$?PreSubclassWindow@CHyperLink@@MAEXXZ
  0026a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00270	50		 push	 eax
  00271	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00278	83 ec 7c	 sub	 esp, 124		; 0000007cH
  0027b	56		 push	 esi
  0027c	57		 push	 edi
  0027d	51		 push	 ecx
  0027e	8d bd 78 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-136]
  00284	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  00289	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0028e	f3 ab		 rep stosd
  00290	59		 pop	 ecx
  00291	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00296	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00299	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 76   :     // We want to get mouse clicks via STN_CLICKED
; 77   :     DWORD dwStyle = GetStyle();

  0029c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0029f	e8 00 00 00 00	 call	 ?GetStyle@CWnd@@QBEKXZ	; CWnd::GetStyle
  002a4	89 45 e8	 mov	 DWORD PTR _dwStyle$[ebp], eax

; 78   :     ::SetWindowLong(GetSafeHwnd(), GWL_STYLE, dwStyle | SS_NOTIFY);

  002a7	8b 45 e8	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  002aa	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  002af	8b f4		 mov	 esi, esp
  002b1	50		 push	 eax
  002b2	6a f0		 push	 -16			; fffffff0H
  002b4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002b7	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  002bc	50		 push	 eax
  002bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12
  002c3	3b f4		 cmp	 esi, esp
  002c5	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 79   :     
; 80   :     // Set the URL as the window text
; 81   :     if (m_strURL.IsEmpty())

  002ca	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002cd	83 c1 70	 add	 ecx, 112		; 00000070H
  002d0	8b f4		 mov	 esi, esp
  002d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  002d8	3b f4		 cmp	 esi, esp
  002da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002df	0f b6 c8	 movzx	 ecx, al
  002e2	85 c9		 test	 ecx, ecx
  002e4	74 0f		 je	 SHORT $L187140

; 82   :         GetWindowText(m_strURL);

  002e6	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  002e9	83 c2 70	 add	 edx, 112		; 00000070H
  002ec	52		 push	 edx
  002ed	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002f0	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CWnd::GetWindowTextA
$L187140:

; 83   : 
; 84   :     // Check that the window text isn't empty. If it is, set it as the URL.
; 85   :     CString strWndText;

  002f5	8b f4		 mov	 esi, esp
  002f7	8d 4d e0	 lea	 ecx, DWORD PTR _strWndText$[ebp]
  002fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00300	3b f4		 cmp	 esi, esp
  00302	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00307	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 86   :     GetWindowText(strWndText);

  0030e	8d 45 e0	 lea	 eax, DWORD PTR _strWndText$[ebp]
  00311	50		 push	 eax
  00312	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00315	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CWnd::GetWindowTextA

; 87   :     if (strWndText.IsEmpty()) 

  0031a	8b f4		 mov	 esi, esp
  0031c	8d 4d e0	 lea	 ecx, DWORD PTR _strWndText$[ebp]
  0031f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  00325	3b f4		 cmp	 esi, esp
  00327	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0032c	0f b6 c8	 movzx	 ecx, al
  0032f	85 c9		 test	 ecx, ecx
  00331	74 4b		 je	 SHORT $L187142

; 88   :     {
; 89   :         ASSERT(!m_strURL.IsEmpty());    // Window and URL both NULL. DUH!

  00333	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00336	83 c1 70	 add	 ecx, 112		; 00000070H
  00339	8b f4		 mov	 esi, esp
  0033b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  00341	3b f4		 cmp	 esi, esp
  00343	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00348	0f b6 d0	 movzx	 edx, al
  0034b	85 d2		 test	 edx, edx
  0034d	74 11		 je	 SHORT $L188021
  0034f	6a 59		 push	 89			; 00000059H
  00351	68 00 00 00 00	 push	 OFFSET FLAT:_THIS_FILE
  00356	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0035b	85 c0		 test	 eax, eax
  0035d	74 01		 je	 SHORT $L188021
  0035f	cc		 int	 3
$L188021:

; 90   :         SetWindowText(m_strURL);

  00360	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00363	83 c1 70	 add	 ecx, 112		; 00000070H
  00366	8b f4		 mov	 esi, esp
  00368	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0036e	3b f4		 cmp	 esi, esp
  00370	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00375	50		 push	 eax
  00376	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00379	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA
$L187142:

; 91   :     }
; 92   : 
; 93   : 	CFont* pFont = GetFont();

  0037e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00381	e8 00 00 00 00	 call	 ?GetFont@CWnd@@QBEPAVCFont@@XZ ; CWnd::GetFont
  00386	89 45 d8	 mov	 DWORD PTR _pFont$[ebp], eax

; 94   : 	if (!pFont)

  00389	83 7d d8 00	 cmp	 DWORD PTR _pFont$[ebp], 0
  0038d	75 40		 jne	 SHORT $L187145

; 95   : 	{
; 96   : 		HFONT hFont = (HFONT)GetStockObject(DEFAULT_GUI_FONT);

  0038f	8b f4		 mov	 esi, esp
  00391	6a 11		 push	 17			; 00000011H
  00393	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  00399	3b f4		 cmp	 esi, esp
  0039b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003a0	89 45 d4	 mov	 DWORD PTR _hFont$187146[ebp], eax

; 97   : 		if (hFont == NULL)

  003a3	83 7d d4 00	 cmp	 DWORD PTR _hFont$187146[ebp], 0
  003a7	75 14		 jne	 SHORT $L187148

; 98   : 			hFont = (HFONT) GetStockObject(ANSI_VAR_FONT);

  003a9	8b f4		 mov	 esi, esp
  003ab	6a 0c		 push	 12			; 0000000cH
  003ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  003b3	3b f4		 cmp	 esi, esp
  003b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ba	89 45 d4	 mov	 DWORD PTR _hFont$187146[ebp], eax
$L187148:

; 99   : 		if (hFont)

  003bd	83 7d d4 00	 cmp	 DWORD PTR _hFont$187146[ebp], 0
  003c1	74 0c		 je	 SHORT $L187145

; 100  : 			pFont = CFont::FromHandle(hFont);

  003c3	8b 4d d4	 mov	 ecx, DWORD PTR _hFont$187146[ebp]
  003c6	51		 push	 ecx
  003c7	e8 00 00 00 00	 call	 ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z ; CFont::FromHandle
  003cc	89 45 d8	 mov	 DWORD PTR _pFont$[ebp], eax
$L187145:

; 101  : 	}
; 102  : 	ASSERT(pFont->GetSafeHandle());

  003cf	8b 4d d8	 mov	 ecx, DWORD PTR _pFont$[ebp]
  003d2	e8 00 00 00 00	 call	 ?GetSafeHandle@CGdiObject@@QBEPAXXZ ; CGdiObject::GetSafeHandle
  003d7	85 c0		 test	 eax, eax
  003d9	75 11		 jne	 SHORT $L188022
  003db	6a 66		 push	 102			; 00000066H
  003dd	68 00 00 00 00	 push	 OFFSET FLAT:_THIS_FILE
  003e2	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  003e7	85 c0		 test	 eax, eax
  003e9	74 01		 je	 SHORT $L188022
  003eb	cc		 int	 3
$L188022:

; 103  : 
; 104  :     // Create the underline font
; 105  :     LOGFONT lf;
; 106  :     pFont->GetLogFont(&lf);

  003ec	8d 45 94	 lea	 eax, DWORD PTR _lf$[ebp]
  003ef	50		 push	 eax
  003f0	8b 4d d8	 mov	 ecx, DWORD PTR _pFont$[ebp]
  003f3	e8 00 00 00 00	 call	 ?GetLogFont@CFont@@QAEHPAUtagLOGFONTA@@@Z ; CFont::GetLogFont

; 107  : 
; 108  : 	if( m_StdFont.m_hObject == NULL )

  003f8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  003fb	83 b9 80 00 00
	00 00		 cmp	 DWORD PTR [ecx+128], 0
  00402	75 0f		 jne	 SHORT $L187153

; 109  : 	{
; 110  : 		m_StdFont.CreateFontIndirect(&lf);

  00404	8d 55 94	 lea	 edx, DWORD PTR _lf$[ebp]
  00407	52		 push	 edx
  00408	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0040b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0040e	e8 00 00 00 00	 call	 ?CreateFontIndirectA@CFont@@QAEHPBUtagLOGFONTA@@@Z ; CFont::CreateFontIndirectA
$L187153:

; 111  : 	}
; 112  : 
; 113  :     lf.lfUnderline = (BYTE) TRUE;

  00413	c6 45 a9 01	 mov	 BYTE PTR _lf$[ebp+21], 1

; 114  : 	if( m_UnderlineFont.m_hObject == NULL )

  00417	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0041a	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0041e	75 0f		 jne	 SHORT $L187155

; 115  : 	{
; 116  : 		m_UnderlineFont.CreateFontIndirect(&lf);

  00420	8d 4d 94	 lea	 ecx, DWORD PTR _lf$[ebp]
  00423	51		 push	 ecx
  00424	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00427	83 c1 74	 add	 ecx, 116		; 00000074H
  0042a	e8 00 00 00 00	 call	 ?CreateFontIndirectA@CFont@@QAEHPBUtagLOGFONTA@@@Z ; CFont::CreateFontIndirectA
$L187155:

; 117  : 	}
; 118  : 
; 119  :     PositionWindow();        // Adjust size of window to fit URL if necessary

  0042f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00432	e8 00 00 00 00	 call	 ?PositionWindow@CHyperLink@@IAEXXZ ; CHyperLink::PositionWindow

; 120  :     SetDefaultCursor();      // Try and load up a "hand" cursor

  00437	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0043a	e8 00 00 00 00	 call	 ?SetDefaultCursor@CHyperLink@@IAEXXZ ; CHyperLink::SetDefaultCursor

; 121  :     SetUnderline();

  0043f	6a ff		 push	 -1
  00441	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00444	e8 00 00 00 00	 call	 ?SetUnderline@CHyperLink@@QAEXH@Z ; CHyperLink::SetUnderline

; 122  : 
; 123  :     // Create the tooltip
; 124  :     CRect rect; 

  00449	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _rect$[ebp]
  0044f	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 125  :     GetClientRect(rect);

  00454	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _rect$[ebp]
  0045a	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  0045f	50		 push	 eax
  00460	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00463	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 126  :     m_ToolTip.Create(this);

  00468	8b f4		 mov	 esi, esp
  0046a	6a 00		 push	 0
  0046c	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0046f	52		 push	 edx
  00470	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00473	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00479	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0047c	8b 90 88 00 00
	00		 mov	 edx, DWORD PTR [eax+136]
  00482	ff 92 38 01 00
	00		 call	 DWORD PTR [edx+312]
  00488	3b f4		 cmp	 esi, esp
  0048a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 127  :     m_ToolTip.AddTool(this, m_strURL, rect, TOOLTIP_ID);

  0048f	6a 01		 push	 1
  00491	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _rect$[ebp]
  00497	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  0049c	50		 push	 eax
  0049d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  004a0	83 c1 70	 add	 ecx, 112		; 00000070H
  004a3	8b f4		 mov	 esi, esp
  004a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  004ab	3b f4		 cmp	 esi, esp
  004ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004b2	50		 push	 eax
  004b3	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  004b6	50		 push	 eax
  004b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  004ba	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  004c0	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 128  : 
; 129  :     CStatic::PreSubclassWindow();

  004c5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  004c8	e8 00 00 00 00	 call	 ?PreSubclassWindow@CWnd@@UAEXXZ ; CWnd::PreSubclassWindow

; 130  : }

  004cd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004d4	8b f4		 mov	 esi, esp
  004d6	8d 4d e0	 lea	 ecx, DWORD PTR _strWndText$[ebp]
  004d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  004df	3b f4		 cmp	 esi, esp
  004e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004e6	52		 push	 edx
  004e7	8b cd		 mov	 ecx, ebp
  004e9	50		 push	 eax
  004ea	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188033
  004f0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  004f5	58		 pop	 eax
  004f6	5a		 pop	 edx
  004f7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004fa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00501	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00504	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00509	5f		 pop	 edi
  0050a	5e		 pop	 esi
  0050b	81 c4 88 00 00
	00		 add	 esp, 136		; 00000088H
  00511	3b ec		 cmp	 ebp, esp
  00513	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00518	8b e5		 mov	 esp, ebp
  0051a	5d		 pop	 ebp
  0051b	c3		 ret	 0
$L188033:
  0051c	03 00 00 00	 DD	 3
  00520	00 00 00 00	 DD	 $L188032
$L188032:
  00524	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00528	04 00 00 00	 DD	 4
  0052c	00 00 00 00	 DD	 $L188026
  00530	94 ff ff ff	 DD	 -108			; ffffff94H
  00534	3c 00 00 00	 DD	 60			; 0000003cH
  00538	00 00 00 00	 DD	 $L188027
  0053c	7c ff ff ff	 DD	 -132			; ffffff7cH
  00540	10 00 00 00	 DD	 16			; 00000010H
  00544	00 00 00 00	 DD	 $L188028
$L188028:
  00548	72		 DB	 114			; 00000072H
  00549	65		 DB	 101			; 00000065H
  0054a	63		 DB	 99			; 00000063H
  0054b	74		 DB	 116			; 00000074H
  0054c	00		 DB	 0
$L188027:
  0054d	6c		 DB	 108			; 0000006cH
  0054e	66		 DB	 102			; 00000066H
  0054f	00		 DB	 0
$L188026:
  00550	73		 DB	 115			; 00000073H
  00551	74		 DB	 116			; 00000074H
  00552	72		 DB	 114			; 00000072H
  00553	57		 DB	 87			; 00000057H
  00554	6e		 DB	 110			; 0000006eH
  00555	64		 DB	 100			; 00000064H
  00556	54		 DB	 84			; 00000054H
  00557	65		 DB	 101			; 00000065H
  00558	78		 DB	 120			; 00000078H
  00559	74		 DB	 116			; 00000074H
  0055a	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188023:
  00088	8b f4		 mov	 esi, esp
  0008a	8d 4d e0	 lea	 ecx, DWORD PTR _strWndText$[ebp]
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00093	3b f4		 cmp	 esi, esp
  00095	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?PreSubclassWindow@CHyperLink@@MAEXXZ:
  0009a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188025
  0009f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?PreSubclassWindow@CHyperLink@@MAEXXZ ENDP		; CHyperLink::PreSubclassWindow
PUBLIC	?GetThisMessageMap@CHyperLink@@KGPBUAFX_MSGMAP@@XZ ; CHyperLink::GetThisMessageMap
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
?GetThisMessageMap@CHyperLink@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CHyperLink::GetThisMessageMap

; 132  : BEGIN_MESSAGE_MAP(CHyperLink, CStatic)

  00560	55		 push	 ebp
  00561	8b ec		 mov	 ebp, esp
  00563	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CHyperLink@@1UAFX_MSGMAP@@B ; CHyperLink::messageMap
  00568	5d		 pop	 ebp
  00569	c3		 ret	 0
?GetThisMessageMap@CHyperLink@@KGPBUAFX_MSGMAP@@XZ ENDP	; CHyperLink::GetThisMessageMap
; Function compile flags: /Odt /RTCsu
_this$ = -4						; size = 4
?GetMessageMap@CHyperLink@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CHyperLink::GetMessageMap
; _this$ = ecx

; 132  : BEGIN_MESSAGE_MAP(CHyperLink, CStatic)

  00570	55		 push	 ebp
  00571	8b ec		 mov	 ebp, esp
  00573	51		 push	 ecx
  00574	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0057b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0057e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CHyperLink@@1UAFX_MSGMAP@@B ; CHyperLink::messageMap
  00583	8b e5		 mov	 esp, ebp
  00585	5d		 pop	 ebp
  00586	c3		 ret	 0
?GetMessageMap@CHyperLink@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CHyperLink::GetMessageMap
_TEXT	ENDS
PUBLIC	?SetToolTip@CHyperLink@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CHyperLink::SetToolTip
xdata$x	SEGMENT
$T188047 DD	0ffffffffH
	DD	FLAT:$L188040
$T188042 DD	019930520H
	DD	01H
	DD	FLAT:$T188047
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_rect$ = -36						; size = 16
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
?SetToolTip@CHyperLink@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC NEAR ; CHyperLink::SetToolTip
; _this$ = ecx

; 147  : {

  00590	55		 push	 ebp
  00591	8b ec		 mov	 ebp, esp
  00593	6a ff		 push	 -1
  00595	68 00 00 00 00	 push	 __ehhandler$?SetToolTip@CHyperLink@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
  0059a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  005a0	50		 push	 eax
  005a1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  005a8	83 ec 1c	 sub	 esp, 28			; 0000001cH
  005ab	56		 push	 esi
  005ac	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  005b1	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  005b4	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  005b7	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  005ba	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  005bd	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  005c0	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  005c3	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  005c6	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  005c9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 148  : 	CRect rect; 

  005d0	8d 4d dc	 lea	 ecx, DWORD PTR _rect$[ebp]
  005d3	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 149  : 	GetClientRect(rect);

  005d8	8d 4d dc	 lea	 ecx, DWORD PTR _rect$[ebp]
  005db	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  005e0	50		 push	 eax
  005e1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  005e4	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 150  : 	m_ToolTip.AddTool(this, str, rect, TOOLTIP_ID);

  005e9	6a 01		 push	 1
  005eb	8d 4d dc	 lea	 ecx, DWORD PTR _rect$[ebp]
  005ee	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  005f3	50		 push	 eax
  005f4	8b f4		 mov	 esi, esp
  005f6	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  005f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  005ff	3b f4		 cmp	 esi, esp
  00601	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00606	50		 push	 eax
  00607	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0060a	50		 push	 eax
  0060b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0060e	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00614	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 151  : }

  00619	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00620	8b f4		 mov	 esi, esp
  00622	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  00625	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0062b	3b f4		 cmp	 esi, esp
  0062d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00632	52		 push	 edx
  00633	8b cd		 mov	 ecx, ebp
  00635	50		 push	 eax
  00636	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188046
  0063c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00641	58		 pop	 eax
  00642	5a		 pop	 edx
  00643	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00646	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0064d	5e		 pop	 esi
  0064e	83 c4 28	 add	 esp, 40			; 00000028H
  00651	3b ec		 cmp	 ebp, esp
  00653	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00658	8b e5		 mov	 esp, ebp
  0065a	5d		 pop	 ebp
  0065b	c2 04 00	 ret	 4
$L188046:
  0065e	01 00 00 00	 DD	 1
  00662	00 00 00 00	 DD	 $L188045
$L188045:
  00666	dc ff ff ff	 DD	 -36			; ffffffdcH
  0066a	10 00 00 00	 DD	 16			; 00000010H
  0066e	00 00 00 00	 DD	 $L188043
$L188043:
  00672	72		 DB	 114			; 00000072H
  00673	65		 DB	 101			; 00000065H
  00674	63		 DB	 99			; 00000063H
  00675	74		 DB	 116			; 00000074H
  00676	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188040:
  000a4	8b f4		 mov	 esi, esp
  000a6	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp]
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000af	3b f4		 cmp	 esi, esp
  000b1	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?SetToolTip@CHyperLink@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:
  000b6	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188042
  000bb	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetToolTip@CHyperLink@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CHyperLink::SetToolTip
PUBLIC	?SetVisited@CHyperLink@@QAEXH@Z			; CHyperLink::SetVisited
PUBLIC	?GotoURL@CHyperLink@@IAEPAUHINSTANCE__@@PBDH@Z	; CHyperLink::GotoURL
PUBLIC	?ReportError@CHyperLink@@IAEXH@Z		; CHyperLink::ReportError
EXTRN	__imp__MessageBeep@4:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_result$ = -8						; size = 4
_this$ = -4						; size = 4
?OnClicked@CHyperLink@@IAEXXZ PROC NEAR			; CHyperLink::OnClicked
; _this$ = ecx

; 153  : {

  00680	55		 push	 ebp
  00681	8b ec		 mov	 ebp, esp
  00683	83 ec 08	 sub	 esp, 8
  00686	56		 push	 esi
  00687	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0068e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00695	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 154  :     m_bOverControl = FALSE;

  00698	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0069b	c7 40 60 00 00
	00 00		 mov	 DWORD PTR [eax+96], 0

; 155  :     int result = (int)GotoURL(m_strURL, SW_SHOW);

  006a2	6a 05		 push	 5
  006a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006a7	83 c1 70	 add	 ecx, 112		; 00000070H
  006aa	8b f4		 mov	 esi, esp
  006ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  006b2	3b f4		 cmp	 esi, esp
  006b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006b9	50		 push	 eax
  006ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006bd	e8 00 00 00 00	 call	 ?GotoURL@CHyperLink@@IAEPAUHINSTANCE__@@PBDH@Z ; CHyperLink::GotoURL
  006c2	89 45 f8	 mov	 DWORD PTR _result$[ebp], eax

; 156  :     m_bVisited = (result > HINSTANCE_ERROR);

  006c5	33 c9		 xor	 ecx, ecx
  006c7	83 7d f8 20	 cmp	 DWORD PTR _result$[ebp], 32 ; 00000020H
  006cb	0f 9f c1	 setg	 cl
  006ce	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  006d1	89 4a 64	 mov	 DWORD PTR [edx+100], ecx

; 157  :     if (!m_bVisited)

  006d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006d7	83 78 64 00	 cmp	 DWORD PTR [eax+100], 0
  006db	75 1f		 jne	 SHORT $L187199

; 158  :     {
; 159  :         MessageBeep(MB_ICONEXCLAMATION);     // Unable to follow link

  006dd	8b f4		 mov	 esi, esp
  006df	6a 30		 push	 48			; 00000030H
  006e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4
  006e7	3b f4		 cmp	 esi, esp
  006e9	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 160  :         ReportError(result);

  006ee	8b 4d f8	 mov	 ecx, DWORD PTR _result$[ebp]
  006f1	51		 push	 ecx
  006f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006f5	e8 00 00 00 00	 call	 ?ReportError@CHyperLink@@IAEXH@Z ; CHyperLink::ReportError

; 161  :     }
; 162  :     else 

  006fa	eb 0a		 jmp	 SHORT $L187196
$L187199:

; 163  :         SetVisited();                        // Repaint to show visited colour

  006fc	6a 01		 push	 1
  006fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00701	e8 00 00 00 00	 call	 ?SetVisited@CHyperLink@@QAEXH@Z ; CHyperLink::SetVisited
$L187196:

; 164  : }

  00706	5e		 pop	 esi
  00707	83 c4 08	 add	 esp, 8
  0070a	3b ec		 cmp	 ebp, esp
  0070c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00711	8b e5		 mov	 esp, ebp
  00713	5d		 pop	 ebp
  00714	c3		 ret	 0
?OnClicked@CHyperLink@@IAEXXZ ENDP			; CHyperLink::OnClicked
_TEXT	ENDS
EXTRN	?SetBkMode@CDC@@QAEHH@Z:NEAR			; CDC::SetBkMode
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDC$ = 8						; size = 4
_nCtlColor$ = 12					; size = 4
?CtlColor@CHyperLink@@IAEPAUHBRUSH__@@PAVCDC@@I@Z PROC NEAR ; CHyperLink::CtlColor
; _this$ = ecx

; 167  : {

  00720	55		 push	 ebp
  00721	8b ec		 mov	 ebp, esp
  00723	51		 push	 ecx
  00724	56		 push	 esi
  00725	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0072c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 168  :     ASSERT(nCtlColor == CTLCOLOR_STATIC);

  0072f	83 7d 0c 06	 cmp	 DWORD PTR _nCtlColor$[ebp], 6
  00733	74 14		 je	 SHORT $L188050
  00735	68 a8 00 00 00	 push	 168			; 000000a8H
  0073a	68 00 00 00 00	 push	 OFFSET FLAT:_THIS_FILE
  0073f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00744	85 c0		 test	 eax, eax
  00746	74 01		 je	 SHORT $L188050
  00748	cc		 int	 3
$L188050:

; 169  : 
; 170  :     if (m_bOverControl)

  00749	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0074c	83 79 60 00	 cmp	 DWORD PTR [ecx+96], 0
  00750	74 1d		 je	 SHORT $L187207

; 171  :         pDC->SetTextColor(m_crHoverColour);

  00752	8b f4		 mov	 esi, esp
  00754	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00757	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0075a	50		 push	 eax
  0075b	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  0075e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00760	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00763	ff 52 38	 call	 DWORD PTR [edx+56]
  00766	3b f4		 cmp	 esi, esp
  00768	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 172  :     else if (m_bVisited)

  0076d	eb 41		 jmp	 SHORT $L187208
$L187207:
  0076f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00772	83 78 64 00	 cmp	 DWORD PTR [eax+100], 0
  00776	74 1d		 je	 SHORT $L187209

; 173  :         pDC->SetTextColor(m_crVisitedColour);

  00778	8b f4		 mov	 esi, esp
  0077a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0077d	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  00780	52		 push	 edx
  00781	8b 45 08	 mov	 eax, DWORD PTR _pDC$[ebp]
  00784	8b 10		 mov	 edx, DWORD PTR [eax]
  00786	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00789	ff 52 38	 call	 DWORD PTR [edx+56]
  0078c	3b f4		 cmp	 esi, esp
  0078e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 174  :     else

  00793	eb 1b		 jmp	 SHORT $L187208
$L187209:

; 175  :         pDC->SetTextColor(m_crLinkColour);

  00795	8b f4		 mov	 esi, esp
  00797	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0079a	8b 48 54	 mov	 ecx, DWORD PTR [eax+84]
  0079d	51		 push	 ecx
  0079e	8b 55 08	 mov	 edx, DWORD PTR _pDC$[ebp]
  007a1	8b 02		 mov	 eax, DWORD PTR [edx]
  007a3	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  007a6	ff 50 38	 call	 DWORD PTR [eax+56]
  007a9	3b f4		 cmp	 esi, esp
  007ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187208:

; 176  : 
; 177  :     // transparent text.
; 178  :     pDC->SetBkMode(TRANSPARENT);

  007b0	6a 01		 push	 1
  007b2	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  007b5	e8 00 00 00 00	 call	 ?SetBkMode@CDC@@QAEHH@Z	; CDC::SetBkMode

; 179  :     return (HBRUSH)GetStockObject(NULL_BRUSH);

  007ba	8b f4		 mov	 esi, esp
  007bc	6a 05		 push	 5
  007be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  007c4	3b f4		 cmp	 esi, esp
  007c6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 180  : }

  007cb	5e		 pop	 esi
  007cc	83 c4 04	 add	 esp, 4
  007cf	3b ec		 cmp	 ebp, esp
  007d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007d6	8b e5		 mov	 esp, ebp
  007d8	5d		 pop	 ebp
  007d9	c2 08 00	 ret	 8
?CtlColor@CHyperLink@@IAEPAUHBRUSH__@@PAVCDC@@I@Z ENDP	; CHyperLink::CtlColor
_TEXT	ENDS
EXTRN	?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z:NEAR	; CWnd::OnMouseMove
EXTRN	?SetFont@CWnd@@QAEXPAVCFont@@H@Z:NEAR		; CWnd::SetFont
EXTRN	?Invalidate@CWnd@@QAEXH@Z:NEAR			; CWnd::Invalidate
EXTRN	?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z:NEAR ; CWnd::SetTimer
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnMouseMove@CHyperLink@@IAEXIVCPoint@@@Z PROC NEAR	; CHyperLink::OnMouseMove
; _this$ = ecx

; 183  : {

  007e0	55		 push	 ebp
  007e1	8b ec		 mov	 ebp, esp
  007e3	51		 push	 ecx
  007e4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  007eb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 184  :     if (!m_bOverControl)        // Cursor has just moved over control

  007ee	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007f1	83 78 60 00	 cmp	 DWORD PTR [eax+96], 0
  007f5	75 44		 jne	 SHORT $L187217

; 185  :     {
; 186  :         m_bOverControl = TRUE;

  007f7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007fa	c7 41 60 01 00
	00 00		 mov	 DWORD PTR [ecx+96], 1

; 187  : 
; 188  :         if (m_nUnderline == ulHover)

  00801	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00804	83 7a 68 ff	 cmp	 DWORD PTR [edx+104], -1
  00808	75 11		 jne	 SHORT $L187218

; 189  :             SetFont(&m_UnderlineFont);

  0080a	6a 01		 push	 1
  0080c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0080f	83 c0 74	 add	 eax, 116		; 00000074H
  00812	50		 push	 eax
  00813	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00816	e8 00 00 00 00	 call	 ?SetFont@CWnd@@QAEXPAVCFont@@H@Z ; CWnd::SetFont
$L187218:

; 190  :         Invalidate();

  0081b	6a 01		 push	 1
  0081d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00820	e8 00 00 00 00	 call	 ?Invalidate@CWnd@@QAEXH@Z ; CWnd::Invalidate

; 191  : 
; 192  :         SetTimer(m_nTimerID, 100, NULL);

  00825	6a 00		 push	 0
  00827	6a 64		 push	 100			; 00000064H
  00829	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0082c	8b 91 f8 00 00
	00		 mov	 edx, DWORD PTR [ecx+248]
  00832	52		 push	 edx
  00833	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00836	e8 00 00 00 00	 call	 ?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z ; CWnd::SetTimer
$L187217:

; 193  :     }
; 194  :     CStatic::OnMouseMove(nFlags, point);

  0083b	8b 45 10	 mov	 eax, DWORD PTR _point$[ebp+4]
  0083e	50		 push	 eax
  0083f	8b 4d 0c	 mov	 ecx, DWORD PTR _point$[ebp]
  00842	51		 push	 ecx
  00843	8b 55 08	 mov	 edx, DWORD PTR _nFlags$[ebp]
  00846	52		 push	 edx
  00847	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0084a	e8 00 00 00 00	 call	 ?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z ; CWnd::OnMouseMove

; 195  : }

  0084f	83 c4 04	 add	 esp, 4
  00852	3b ec		 cmp	 ebp, esp
  00854	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00859	8b e5		 mov	 esp, ebp
  0085b	5d		 pop	 ebp
  0085c	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseMove@CHyperLink@@IAEXIVCPoint@@@Z ENDP		; CHyperLink::OnMouseMove
_TEXT	ENDS
EXTRN	__imp__GetMessagePos@0:NEAR
EXTRN	??0CPoint@@QAE@J@Z:NEAR				; CPoint::CPoint
EXTRN	?PtInRect@CRect@@QBEHUtagPOINT@@@Z:NEAR		; CRect::PtInRect
EXTRN	?OnTimer@CWnd@@IAEXI@Z:NEAR			; CWnd::OnTimer
EXTRN	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z:NEAR	; CWnd::GetWindowRect
EXTRN	?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z:NEAR	; CWnd::ScreenToClient
EXTRN	?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z:NEAR	; CWnd::ScreenToClient
EXTRN	?UpdateWindow@CWnd@@QAEXXZ:NEAR			; CWnd::UpdateWindow
EXTRN	?InvalidateRect@CWnd@@QAEXPBUtagRECT@@H@Z:NEAR	; CWnd::InvalidateRect
EXTRN	?GetParent@CWnd@@QBEPAV1@XZ:NEAR		; CWnd::GetParent
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
$T188053 = -52						; size = 8
_rect$ = -40						; size = 16
_p$ = -16						; size = 8
_this$ = -4						; size = 4
_nIDEvent$ = 8						; size = 4
?OnTimer@CHyperLink@@IAEXI@Z PROC NEAR			; CHyperLink::OnTimer
; _this$ = ecx

; 198  : {

  00860	55		 push	 ebp
  00861	8b ec		 mov	 ebp, esp
  00863	83 ec 34	 sub	 esp, 52			; 00000034H
  00866	56		 push	 esi
  00867	57		 push	 edi
  00868	51		 push	 ecx
  00869	8d 7d cc	 lea	 edi, DWORD PTR [ebp-52]
  0086c	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  00871	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00876	f3 ab		 rep stosd
  00878	59		 pop	 ecx
  00879	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :     CPoint p(GetMessagePos());

  0087c	8b f4		 mov	 esi, esp
  0087e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessagePos@0
  00884	3b f4		 cmp	 esi, esp
  00886	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0088b	50		 push	 eax
  0088c	8d 4d f0	 lea	 ecx, DWORD PTR _p$[ebp]
  0088f	e8 00 00 00 00	 call	 ??0CPoint@@QAE@J@Z	; CPoint::CPoint

; 200  :     ScreenToClient(&p);

  00894	8d 45 f0	 lea	 eax, DWORD PTR _p$[ebp]
  00897	50		 push	 eax
  00898	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0089b	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ScreenToClient

; 201  : 
; 202  :     CRect rect;

  008a0	8d 4d d8	 lea	 ecx, DWORD PTR _rect$[ebp]
  008a3	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 203  :     GetClientRect(rect);

  008a8	8d 4d d8	 lea	 ecx, DWORD PTR _rect$[ebp]
  008ab	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  008b0	50		 push	 eax
  008b1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008b4	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 204  :     if (!rect.PtInRect(p))

  008b9	8b 4d f0	 mov	 ecx, DWORD PTR _p$[ebp]
  008bc	89 4d cc	 mov	 DWORD PTR $T188053[ebp], ecx
  008bf	8b 55 f4	 mov	 edx, DWORD PTR _p$[ebp+4]
  008c2	89 55 d0	 mov	 DWORD PTR $T188053[ebp+4], edx
  008c5	8b 45 d0	 mov	 eax, DWORD PTR $T188053[ebp+4]
  008c8	50		 push	 eax
  008c9	8b 4d cc	 mov	 ecx, DWORD PTR $T188053[ebp]
  008cc	51		 push	 ecx
  008cd	8d 4d d8	 lea	 ecx, DWORD PTR _rect$[ebp]
  008d0	e8 00 00 00 00	 call	 ?PtInRect@CRect@@QBEHUtagPOINT@@@Z ; CRect::PtInRect
  008d5	85 c0		 test	 eax, eax
  008d7	0f 85 95 00 00
	00		 jne	 $L187226

; 205  :     {
; 206  :         m_bOverControl = FALSE;

  008dd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  008e0	c7 42 60 00 00
	00 00		 mov	 DWORD PTR [edx+96], 0

; 207  :         KillTimer(m_nTimerID);

  008e7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008ea	8b 88 f8 00 00
	00		 mov	 ecx, DWORD PTR [eax+248]
  008f0	51		 push	 ecx
  008f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008f4	e8 00 00 00 00	 call	 ?KillTimer@CWnd@@QAEHI@Z ; CWnd::KillTimer

; 208  : 
; 209  :         if (m_nUnderline != ulAlways)

  008f9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  008fc	83 7a 68 01	 cmp	 DWORD PTR [edx+104], 1
  00900	74 11		 je	 SHORT $L187227

; 210  :             SetFont(&m_StdFont);

  00902	6a 01		 push	 1
  00904	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00907	83 c0 7c	 add	 eax, 124		; 0000007cH
  0090a	50		 push	 eax
  0090b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0090e	e8 00 00 00 00	 call	 ?SetFont@CWnd@@QAEXPAVCFont@@H@Z ; CWnd::SetFont
$L187227:

; 211  :         rect.bottom+=10;

  00913	8b 4d e4	 mov	 ecx, DWORD PTR _rect$[ebp+12]
  00916	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00919	89 4d e4	 mov	 DWORD PTR _rect$[ebp+12], ecx

; 212  :         InvalidateRect(rect);

  0091c	6a 01		 push	 1
  0091e	8d 4d d8	 lea	 ecx, DWORD PTR _rect$[ebp]
  00921	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00926	50		 push	 eax
  00927	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0092a	e8 00 00 00 00	 call	 ?InvalidateRect@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::InvalidateRect

; 213  : 		GetWindowRect(&rect);

  0092f	8d 55 d8	 lea	 edx, DWORD PTR _rect$[ebp]
  00932	52		 push	 edx
  00933	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00936	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 214  : 		GetParent()->ScreenToClient(&rect);

  0093b	8d 45 d8	 lea	 eax, DWORD PTR _rect$[ebp]
  0093e	50		 push	 eax
  0093f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00942	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  00947	8b c8		 mov	 ecx, eax
  00949	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 215  : 		GetParent()->InvalidateRect(&rect);

  0094e	6a 01		 push	 1
  00950	8d 4d d8	 lea	 ecx, DWORD PTR _rect$[ebp]
  00953	51		 push	 ecx
  00954	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00957	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  0095c	8b c8		 mov	 ecx, eax
  0095e	e8 00 00 00 00	 call	 ?InvalidateRect@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::InvalidateRect

; 216  : 		GetParent()->UpdateWindow();

  00963	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00966	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  0096b	8b c8		 mov	 ecx, eax
  0096d	e8 00 00 00 00	 call	 ?UpdateWindow@CWnd@@QAEXXZ ; CWnd::UpdateWindow
$L187226:

; 217  :     }
; 218  :     
; 219  : 	CStatic::OnTimer(nIDEvent);

  00972	8b 55 08	 mov	 edx, DWORD PTR _nIDEvent$[ebp]
  00975	52		 push	 edx
  00976	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00979	e8 00 00 00 00	 call	 ?OnTimer@CWnd@@IAEXI@Z	; CWnd::OnTimer

; 220  : }

  0097e	52		 push	 edx
  0097f	8b cd		 mov	 ecx, ebp
  00981	50		 push	 eax
  00982	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188057
  00988	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0098d	58		 pop	 eax
  0098e	5a		 pop	 edx
  0098f	5f		 pop	 edi
  00990	5e		 pop	 esi
  00991	83 c4 34	 add	 esp, 52			; 00000034H
  00994	3b ec		 cmp	 ebp, esp
  00996	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0099b	8b e5		 mov	 esp, ebp
  0099d	5d		 pop	 ebp
  0099e	c2 04 00	 ret	 4
$L188057:
  009a1	02 00 00 00	 DD	 2
  009a5	00 00 00 00	 DD	 $L188056
$L188056:
  009a9	f0 ff ff ff	 DD	 -16			; fffffff0H
  009ad	08 00 00 00	 DD	 8
  009b1	00 00 00 00	 DD	 $L188054
  009b5	d8 ff ff ff	 DD	 -40			; ffffffd8H
  009b9	10 00 00 00	 DD	 16			; 00000010H
  009bd	00 00 00 00	 DD	 $L188055
$L188055:
  009c1	72		 DB	 114			; 00000072H
  009c2	65		 DB	 101			; 00000065H
  009c3	63		 DB	 99			; 00000063H
  009c4	74		 DB	 116			; 00000074H
  009c5	00		 DB	 0
$L188054:
  009c6	70		 DB	 112			; 00000070H
  009c7	00		 DB	 0
?OnTimer@CHyperLink@@IAEXI@Z ENDP			; CHyperLink::OnTimer
_TEXT	ENDS
EXTRN	__imp__SetCursor@4:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?OnSetCursor@CHyperLink@@IAEHPAVCWnd@@II@Z PROC NEAR	; CHyperLink::OnSetCursor
; _this$ = ecx

; 223  : {

  009d0	55		 push	 ebp
  009d1	8b ec		 mov	 ebp, esp
  009d3	51		 push	 ecx
  009d4	56		 push	 esi
  009d5	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  009dc	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 224  :     if (m_hLinkCursor)

  009df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009e2	83 b8 84 00 00
	00 00		 cmp	 DWORD PTR [eax+132], 0
  009e9	74 20		 je	 SHORT $L187234

; 225  :     {
; 226  :         ::SetCursor(m_hLinkCursor);

  009eb	8b f4		 mov	 esi, esp
  009ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009f0	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  009f6	52		 push	 edx
  009f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4
  009fd	3b f4		 cmp	 esi, esp
  009ff	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 227  :         return TRUE;

  00a04	b8 01 00 00 00	 mov	 eax, 1
  00a09	eb 02		 jmp	 SHORT $L187233
$L187234:

; 228  :     }
; 229  :     return FALSE;

  00a0b	33 c0		 xor	 eax, eax
$L187233:

; 230  : }

  00a0d	5e		 pop	 esi
  00a0e	83 c4 04	 add	 esp, 4
  00a11	3b ec		 cmp	 ebp, esp
  00a13	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a18	8b e5		 mov	 esp, ebp
  00a1a	5d		 pop	 ebp
  00a1b	c2 0c 00	 ret	 12			; 0000000cH
?OnSetCursor@CHyperLink@@IAEHPAVCWnd@@II@Z ENDP		; CHyperLink::OnSetCursor
_TEXT	ENDS
EXTRN	?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z:NEAR	; CDC::FillSolidRect
EXTRN	__imp__GetSysColor@4:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_rect$ = -24						; size = 16
_this$ = -4						; size = 4
_pDC$ = 8						; size = 4
?OnEraseBkgnd@CHyperLink@@IAEHPAVCDC@@@Z PROC NEAR	; CHyperLink::OnEraseBkgnd
; _this$ = ecx

; 233  : {

  00a20	55		 push	 ebp
  00a21	8b ec		 mov	 ebp, esp
  00a23	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00a26	56		 push	 esi
  00a27	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00a2c	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00a2f	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00a32	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00a35	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00a38	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00a3b	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00a3e	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00a41	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 234  :     CRect rect;

  00a44	8d 4d e8	 lea	 ecx, DWORD PTR _rect$[ebp]
  00a47	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 235  :     GetClientRect(rect);

  00a4c	8d 4d e8	 lea	 ecx, DWORD PTR _rect$[ebp]
  00a4f	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00a54	50		 push	 eax
  00a55	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a58	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 236  :     pDC->FillSolidRect(rect, ::GetSysColor(COLOR_3DFACE));

  00a5d	8b f4		 mov	 esi, esp
  00a5f	6a 0f		 push	 15			; 0000000fH
  00a61	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColor@4
  00a67	3b f4		 cmp	 esi, esp
  00a69	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a6e	50		 push	 eax
  00a6f	8d 4d e8	 lea	 ecx, DWORD PTR _rect$[ebp]
  00a72	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00a77	50		 push	 eax
  00a78	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00a7b	e8 00 00 00 00	 call	 ?FillSolidRect@CDC@@QAEXPBUtagRECT@@K@Z ; CDC::FillSolidRect

; 237  : 
; 238  :     return TRUE;

  00a80	b8 01 00 00 00	 mov	 eax, 1

; 239  : }

  00a85	52		 push	 edx
  00a86	8b cd		 mov	 ecx, ebp
  00a88	50		 push	 eax
  00a89	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188062
  00a8f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00a94	58		 pop	 eax
  00a95	5a		 pop	 edx
  00a96	5e		 pop	 esi
  00a97	83 c4 1c	 add	 esp, 28			; 0000001cH
  00a9a	3b ec		 cmp	 ebp, esp
  00a9c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00aa1	8b e5		 mov	 esp, ebp
  00aa3	5d		 pop	 ebp
  00aa4	c2 04 00	 ret	 4
$L188062:
  00aa7	01 00 00 00	 DD	 1
  00aab	00 00 00 00	 DD	 $L188061
$L188061:
  00aaf	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00ab3	10 00 00 00	 DD	 16			; 00000010H
  00ab7	00 00 00 00	 DD	 $L188060
$L188060:
  00abb	72		 DB	 114			; 00000072H
  00abc	65		 DB	 101			; 00000065H
  00abd	63		 DB	 99			; 00000063H
  00abe	74		 DB	 116			; 00000074H
  00abf	00		 DB	 0
?OnEraseBkgnd@CHyperLink@@IAEHPAVCDC@@@Z ENDP		; CHyperLink::OnEraseBkgnd
_TEXT	ENDS
PUBLIC	?SetURL@CHyperLink@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CHyperLink::SetURL
EXTRN	__imp__IsWindow@4:NEAR
EXTRN	?UpdateTipText@CToolTipCtrl@@QAEXPBDPAVCWnd@@I@Z:NEAR ; CToolTipCtrl::UpdateTipText
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:NEAR
xdata$x	SEGMENT
$T188068 DD	0ffffffffH
	DD	FLAT:$L188064
$T188066 DD	019930520H
	DD	01H
	DD	FLAT:$T188068
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strURL$ = 8						; size = 4
?SetURL@CHyperLink@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z PROC NEAR ; CHyperLink::SetURL
; _this$ = ecx

; 245  : {

  00ac0	55		 push	 ebp
  00ac1	8b ec		 mov	 ebp, esp
  00ac3	6a ff		 push	 -1
  00ac5	68 00 00 00 00	 push	 __ehhandler$?SetURL@CHyperLink@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z
  00aca	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00ad0	50		 push	 eax
  00ad1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ad8	51		 push	 ecx
  00ad9	56		 push	 esi
  00ada	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00ae1	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00ae4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 246  :     m_strURL = strURL;

  00aeb	8b f4		 mov	 esi, esp
  00aed	8d 45 08	 lea	 eax, DWORD PTR _strURL$[ebp]
  00af0	50		 push	 eax
  00af1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00af4	83 c1 70	 add	 ecx, 112		; 00000070H
  00af7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00afd	3b f4		 cmp	 esi, esp
  00aff	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 247  : 
; 248  :     if (::IsWindow(GetSafeHwnd())) {

  00b04	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b07	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00b0c	8b f4		 mov	 esi, esp
  00b0e	50		 push	 eax
  00b0f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00b15	3b f4		 cmp	 esi, esp
  00b17	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b1c	85 c0		 test	 eax, eax
  00b1e	74 2f		 je	 SHORT $L187244

; 249  :         PositionWindow();

  00b20	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b23	e8 00 00 00 00	 call	 ?PositionWindow@CHyperLink@@IAEXXZ ; CHyperLink::PositionWindow

; 250  :         m_ToolTip.UpdateTipText(strURL, this, TOOLTIP_ID);

  00b28	6a 01		 push	 1
  00b2a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b2d	51		 push	 ecx
  00b2e	8b f4		 mov	 esi, esp
  00b30	8d 4d 08	 lea	 ecx, DWORD PTR _strURL$[ebp]
  00b33	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00b39	3b f4		 cmp	 esi, esp
  00b3b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b40	50		 push	 eax
  00b41	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b44	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00b4a	e8 00 00 00 00	 call	 ?UpdateTipText@CToolTipCtrl@@QAEXPBDPAVCWnd@@I@Z ; CToolTipCtrl::UpdateTipText
$L187244:

; 251  :     }
; 252  : }

  00b4f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b56	8b f4		 mov	 esi, esp
  00b58	8d 4d 08	 lea	 ecx, DWORD PTR _strURL$[ebp]
  00b5b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00b61	3b f4		 cmp	 esi, esp
  00b63	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b68	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00b6b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00b72	5e		 pop	 esi
  00b73	83 c4 10	 add	 esp, 16			; 00000010H
  00b76	3b ec		 cmp	 ebp, esp
  00b78	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b7d	8b e5		 mov	 esp, ebp
  00b7f	5d		 pop	 ebp
  00b80	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L188064:
  000c0	8b f4		 mov	 esi, esp
  000c2	8d 4d 08	 lea	 ecx, DWORD PTR _strURL$[ebp]
  000c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000cb	3b f4		 cmp	 esi, esp
  000cd	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?SetURL@CHyperLink@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:
  000d2	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188066
  000d7	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetURL@CHyperLink@@QAEXV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ENDP ; CHyperLink::SetURL
PUBLIC	?GetURL@CHyperLink@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CHyperLink::GetURL
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
$T188071 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetURL@CHyperLink@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ PROC NEAR ; CHyperLink::GetURL
; _this$ = ecx

; 255  : { 

  00b90	55		 push	 ebp
  00b91	8b ec		 mov	 ebp, esp
  00b93	83 ec 08	 sub	 esp, 8
  00b96	56		 push	 esi
  00b97	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00b9e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00ba5	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00ba8	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T188071[ebp], 0

; 256  :     return m_strURL;   

  00baf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00bb2	83 c0 70	 add	 eax, 112		; 00000070H
  00bb5	8b f4		 mov	 esi, esp
  00bb7	50		 push	 eax
  00bb8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00bbb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  00bc1	3b f4		 cmp	 esi, esp
  00bc3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bc8	8b 4d f8	 mov	 ecx, DWORD PTR $T188071[ebp]
  00bcb	83 c9 01	 or	 ecx, 1
  00bce	89 4d f8	 mov	 DWORD PTR $T188071[ebp], ecx
  00bd1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 257  : }

  00bd4	5e		 pop	 esi
  00bd5	83 c4 08	 add	 esp, 8
  00bd8	3b ec		 cmp	 ebp, esp
  00bda	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bdf	8b e5		 mov	 esp, ebp
  00be1	5d		 pop	 ebp
  00be2	c2 04 00	 ret	 4
?GetURL@CHyperLink@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ENDP ; CHyperLink::GetURL
_TEXT	ENDS
PUBLIC	?SetColours@CHyperLink@@QAEXKKK@Z		; CHyperLink::SetColours
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_crLinkColour$ = 8					; size = 4
_crVisitedColour$ = 12					; size = 4
_crHoverColour$ = 16					; size = 4
?SetColours@CHyperLink@@QAEXKKK@Z PROC NEAR		; CHyperLink::SetColours
; _this$ = ecx

; 261  : { 

  00bf0	55		 push	 ebp
  00bf1	8b ec		 mov	 ebp, esp
  00bf3	51		 push	 ecx
  00bf4	56		 push	 esi
  00bf5	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00bfc	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 262  :     m_crLinkColour    = crLinkColour; 

  00bff	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c02	8b 4d 08	 mov	 ecx, DWORD PTR _crLinkColour$[ebp]
  00c05	89 48 54	 mov	 DWORD PTR [eax+84], ecx

; 263  :     m_crVisitedColour = crVisitedColour;

  00c08	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00c0b	8b 45 0c	 mov	 eax, DWORD PTR _crVisitedColour$[ebp]
  00c0e	89 42 58	 mov	 DWORD PTR [edx+88], eax

; 264  : 
; 265  : 	if (crHoverColour == -1)

  00c11	83 7d 10 ff	 cmp	 DWORD PTR _crHoverColour$[ebp], -1
  00c15	75 19		 jne	 SHORT $L187255

; 266  : 		m_crHoverColour = ::GetSysColor(COLOR_HIGHLIGHT);

  00c17	8b f4		 mov	 esi, esp
  00c19	6a 0d		 push	 13			; 0000000dH
  00c1b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColor@4
  00c21	3b f4		 cmp	 esi, esp
  00c23	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c28	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c2b	89 41 5c	 mov	 DWORD PTR [ecx+92], eax

; 267  : 	else

  00c2e	eb 09		 jmp	 SHORT $L187256
$L187255:

; 268  : 		m_crHoverColour = crHoverColour;

  00c30	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00c33	8b 45 10	 mov	 eax, DWORD PTR _crHoverColour$[ebp]
  00c36	89 42 5c	 mov	 DWORD PTR [edx+92], eax
$L187256:

; 269  : 
; 270  :     if (::IsWindow(m_hWnd))

  00c39	8b f4		 mov	 esi, esp
  00c3b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c3e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00c41	52		 push	 edx
  00c42	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00c48	3b f4		 cmp	 esi, esp
  00c4a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c4f	85 c0		 test	 eax, eax
  00c51	74 0a		 je	 SHORT $L187254

; 271  :         Invalidate(); 

  00c53	6a 01		 push	 1
  00c55	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c58	e8 00 00 00 00	 call	 ?Invalidate@CWnd@@QAEXH@Z ; CWnd::Invalidate
$L187254:

; 272  : }

  00c5d	5e		 pop	 esi
  00c5e	83 c4 04	 add	 esp, 4
  00c61	3b ec		 cmp	 ebp, esp
  00c63	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c68	8b e5		 mov	 esp, ebp
  00c6a	5d		 pop	 ebp
  00c6b	c2 0c 00	 ret	 12			; 0000000cH
?SetColours@CHyperLink@@QAEXKKK@Z ENDP			; CHyperLink::SetColours
_TEXT	ENDS
PUBLIC	?GetLinkColour@CHyperLink@@QBEKXZ		; CHyperLink::GetLinkColour
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLinkColour@CHyperLink@@QBEKXZ PROC NEAR		; CHyperLink::GetLinkColour
; _this$ = ecx

; 275  : { 

  00c70	55		 push	 ebp
  00c71	8b ec		 mov	 ebp, esp
  00c73	51		 push	 ecx
  00c74	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00c7b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 276  :     return m_crLinkColour; 

  00c7e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c81	8b 40 54	 mov	 eax, DWORD PTR [eax+84]

; 277  : }

  00c84	8b e5		 mov	 esp, ebp
  00c86	5d		 pop	 ebp
  00c87	c3		 ret	 0
?GetLinkColour@CHyperLink@@QBEKXZ ENDP			; CHyperLink::GetLinkColour
_TEXT	ENDS
PUBLIC	?GetVisitedColour@CHyperLink@@QBEKXZ		; CHyperLink::GetVisitedColour
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVisitedColour@CHyperLink@@QBEKXZ PROC NEAR		; CHyperLink::GetVisitedColour
; _this$ = ecx

; 280  : {

  00c90	55		 push	 ebp
  00c91	8b ec		 mov	 ebp, esp
  00c93	51		 push	 ecx
  00c94	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00c9b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 281  :     return m_crVisitedColour; 

  00c9e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ca1	8b 40 58	 mov	 eax, DWORD PTR [eax+88]

; 282  : }

  00ca4	8b e5		 mov	 esp, ebp
  00ca6	5d		 pop	 ebp
  00ca7	c3		 ret	 0
?GetVisitedColour@CHyperLink@@QBEKXZ ENDP		; CHyperLink::GetVisitedColour
_TEXT	ENDS
PUBLIC	?GetHoverColour@CHyperLink@@QBEKXZ		; CHyperLink::GetHoverColour
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHoverColour@CHyperLink@@QBEKXZ PROC NEAR		; CHyperLink::GetHoverColour
; _this$ = ecx

; 285  : {

  00cb0	55		 push	 ebp
  00cb1	8b ec		 mov	 ebp, esp
  00cb3	51		 push	 ecx
  00cb4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00cbb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  :     return m_crHoverColour;

  00cbe	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00cc1	8b 40 5c	 mov	 eax, DWORD PTR [eax+92]

; 287  : }

  00cc4	8b e5		 mov	 esp, ebp
  00cc6	5d		 pop	 ebp
  00cc7	c3		 ret	 0
?GetHoverColour@CHyperLink@@QBEKXZ ENDP			; CHyperLink::GetHoverColour
; Function compile flags: /Odt /RTCsu
_this$ = -4						; size = 4
_bVisited$ = 8						; size = 4
?SetVisited@CHyperLink@@QAEXH@Z PROC NEAR		; CHyperLink::SetVisited
; _this$ = ecx

; 290  : { 

  00cd0	55		 push	 ebp
  00cd1	8b ec		 mov	 ebp, esp
  00cd3	51		 push	 ecx
  00cd4	56		 push	 esi
  00cd5	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00cdc	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  :     m_bVisited = bVisited; 

  00cdf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ce2	8b 4d 08	 mov	 ecx, DWORD PTR _bVisited$[ebp]
  00ce5	89 48 64	 mov	 DWORD PTR [eax+100], ecx

; 292  : 
; 293  :     if (::IsWindow(GetSafeHwnd()))

  00ce8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ceb	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00cf0	8b f4		 mov	 esi, esp
  00cf2	50		 push	 eax
  00cf3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00cf9	3b f4		 cmp	 esi, esp
  00cfb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d00	85 c0		 test	 eax, eax
  00d02	74 0a		 je	 SHORT $L187270

; 294  :         Invalidate(); 

  00d04	6a 01		 push	 1
  00d06	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d09	e8 00 00 00 00	 call	 ?Invalidate@CWnd@@QAEXH@Z ; CWnd::Invalidate
$L187270:

; 295  : }

  00d0e	5e		 pop	 esi
  00d0f	83 c4 04	 add	 esp, 4
  00d12	3b ec		 cmp	 ebp, esp
  00d14	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d19	8b e5		 mov	 esp, ebp
  00d1b	5d		 pop	 ebp
  00d1c	c2 04 00	 ret	 4
?SetVisited@CHyperLink@@QAEXH@Z ENDP			; CHyperLink::SetVisited
_TEXT	ENDS
PUBLIC	?GetVisited@CHyperLink@@QBEHXZ			; CHyperLink::GetVisited
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVisited@CHyperLink@@QBEHXZ PROC NEAR		; CHyperLink::GetVisited
; _this$ = ecx

; 298  : { 

  00d20	55		 push	 ebp
  00d21	8b ec		 mov	 ebp, esp
  00d23	51		 push	 ecx
  00d24	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00d2b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 299  :     return m_bVisited; 

  00d2e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00d31	8b 40 64	 mov	 eax, DWORD PTR [eax+100]

; 300  : }

  00d34	8b e5		 mov	 esp, ebp
  00d36	5d		 pop	 ebp
  00d37	c3		 ret	 0
?GetVisited@CHyperLink@@QBEHXZ ENDP			; CHyperLink::GetVisited
_TEXT	ENDS
PUBLIC	?SetLinkCursor@CHyperLink@@QAEXPAUHICON__@@@Z	; CHyperLink::SetLinkCursor
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hCursor$ = 8						; size = 4
?SetLinkCursor@CHyperLink@@QAEXPAUHICON__@@@Z PROC NEAR	; CHyperLink::SetLinkCursor
; _this$ = ecx

; 303  : { 

  00d40	55		 push	 ebp
  00d41	8b ec		 mov	 ebp, esp
  00d43	51		 push	 ecx
  00d44	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00d4b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 304  :     m_hLinkCursor = hCursor;

  00d4e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00d51	8b 4d 08	 mov	 ecx, DWORD PTR _hCursor$[ebp]
  00d54	89 88 84 00 00
	00		 mov	 DWORD PTR [eax+132], ecx

; 305  :     if (m_hLinkCursor == NULL)

  00d5a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00d5d	83 ba 84 00 00
	00 00		 cmp	 DWORD PTR [edx+132], 0
  00d64	75 08		 jne	 SHORT $L187278

; 306  :         SetDefaultCursor();

  00d66	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d69	e8 00 00 00 00	 call	 ?SetDefaultCursor@CHyperLink@@IAEXXZ ; CHyperLink::SetDefaultCursor
$L187278:

; 307  : }

  00d6e	83 c4 04	 add	 esp, 4
  00d71	3b ec		 cmp	 ebp, esp
  00d73	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d78	8b e5		 mov	 esp, ebp
  00d7a	5d		 pop	 ebp
  00d7b	c2 04 00	 ret	 4
?SetLinkCursor@CHyperLink@@QAEXPAUHICON__@@@Z ENDP	; CHyperLink::SetLinkCursor
_TEXT	ENDS
PUBLIC	?GetLinkCursor@CHyperLink@@QBEPAUHICON__@@XZ	; CHyperLink::GetLinkCursor
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLinkCursor@CHyperLink@@QBEPAUHICON__@@XZ PROC NEAR	; CHyperLink::GetLinkCursor
; _this$ = ecx

; 310  : {

  00d80	55		 push	 ebp
  00d81	8b ec		 mov	 ebp, esp
  00d83	51		 push	 ecx
  00d84	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00d8b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 311  :     return m_hLinkCursor;

  00d8e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00d91	8b 80 84 00 00
	00		 mov	 eax, DWORD PTR [eax+132]

; 312  : }

  00d97	8b e5		 mov	 esp, ebp
  00d99	5d		 pop	 ebp
  00d9a	c3		 ret	 0
?GetLinkCursor@CHyperLink@@QBEPAUHICON__@@XZ ENDP	; CHyperLink::GetLinkCursor
; Function compile flags: /Odt /RTCsu
_this$ = -4						; size = 4
_nUnderline$ = 8					; size = 4
?SetUnderline@CHyperLink@@QAEXH@Z PROC NEAR		; CHyperLink::SetUnderline
; _this$ = ecx

; 315  : {

  00da0	55		 push	 ebp
  00da1	8b ec		 mov	 ebp, esp
  00da3	51		 push	 ecx
  00da4	56		 push	 esi
  00da5	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00dac	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 316  :     if (m_nUnderline == nUnderline)

  00daf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00db2	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00db5	3b 4d 08	 cmp	 ecx, DWORD PTR _nUnderline$[ebp]
  00db8	75 02		 jne	 SHORT $L187287

; 317  :         return;

  00dba	eb 59		 jmp	 SHORT $L187286
$L187287:

; 318  : 
; 319  :     if (::IsWindow(GetSafeHwnd()))

  00dbc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00dbf	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00dc4	8b f4		 mov	 esi, esp
  00dc6	50		 push	 eax
  00dc7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00dcd	3b f4		 cmp	 esi, esp
  00dcf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00dd4	85 c0		 test	 eax, eax
  00dd6	74 34		 je	 SHORT $L187288

; 320  :     {
; 321  :         if (nUnderline == ulAlways)

  00dd8	83 7d 08 01	 cmp	 DWORD PTR _nUnderline$[ebp], 1
  00ddc	75 13		 jne	 SHORT $L187289

; 322  :             SetFont(&m_UnderlineFont);

  00dde	6a 01		 push	 1
  00de0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00de3	83 c2 74	 add	 edx, 116		; 00000074H
  00de6	52		 push	 edx
  00de7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00dea	e8 00 00 00 00	 call	 ?SetFont@CWnd@@QAEXPAVCFont@@H@Z ; CWnd::SetFont

; 323  :         else

  00def	eb 11		 jmp	 SHORT $L187290
$L187289:

; 324  :             SetFont(&m_StdFont);

  00df1	6a 01		 push	 1
  00df3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00df6	83 c0 7c	 add	 eax, 124		; 0000007cH
  00df9	50		 push	 eax
  00dfa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00dfd	e8 00 00 00 00	 call	 ?SetFont@CWnd@@QAEXPAVCFont@@H@Z ; CWnd::SetFont
$L187290:

; 325  : 
; 326  :         Invalidate(); 

  00e02	6a 01		 push	 1
  00e04	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e07	e8 00 00 00 00	 call	 ?Invalidate@CWnd@@QAEXH@Z ; CWnd::Invalidate
$L187288:

; 327  :     }
; 328  : 
; 329  :     m_nUnderline = nUnderline;

  00e0c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e0f	8b 55 08	 mov	 edx, DWORD PTR _nUnderline$[ebp]
  00e12	89 51 68	 mov	 DWORD PTR [ecx+104], edx
$L187286:

; 330  : }

  00e15	5e		 pop	 esi
  00e16	83 c4 04	 add	 esp, 4
  00e19	3b ec		 cmp	 ebp, esp
  00e1b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e20	8b e5		 mov	 esp, ebp
  00e22	5d		 pop	 ebp
  00e23	c2 04 00	 ret	 4
?SetUnderline@CHyperLink@@QAEXH@Z ENDP			; CHyperLink::SetUnderline
_TEXT	ENDS
PUBLIC	?GetUnderline@CHyperLink@@QBEHXZ		; CHyperLink::GetUnderline
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnderline@CHyperLink@@QBEHXZ PROC NEAR		; CHyperLink::GetUnderline
; _this$ = ecx

; 333  : { 

  00e30	55		 push	 ebp
  00e31	8b ec		 mov	 ebp, esp
  00e33	51		 push	 ecx
  00e34	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00e3b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 334  :     return m_nUnderline; 

  00e3e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00e41	8b 40 68	 mov	 eax, DWORD PTR [eax+104]

; 335  : }

  00e44	8b e5		 mov	 esp, ebp
  00e46	5d		 pop	 ebp
  00e47	c3		 ret	 0
?GetUnderline@CHyperLink@@QBEHXZ ENDP			; CHyperLink::GetUnderline
_TEXT	ENDS
PUBLIC	?SetAutoSize@CHyperLink@@QAEXH@Z		; CHyperLink::SetAutoSize
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bAutoSize$ = 8						; size = 4
?SetAutoSize@CHyperLink@@QAEXH@Z PROC NEAR		; CHyperLink::SetAutoSize
; _this$ = ecx

; 338  : {

  00e50	55		 push	 ebp
  00e51	8b ec		 mov	 ebp, esp
  00e53	51		 push	 ecx
  00e54	56		 push	 esi
  00e55	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00e5c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 339  :     m_bAdjustToFit = bAutoSize;

  00e5f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00e62	8b 4d 08	 mov	 ecx, DWORD PTR _bAutoSize$[ebp]
  00e65	89 48 6c	 mov	 DWORD PTR [eax+108], ecx

; 340  : 
; 341  :     if (::IsWindow(GetSafeHwnd()))

  00e68	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e6b	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00e70	8b f4		 mov	 esi, esp
  00e72	50		 push	 eax
  00e73	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00e79	3b f4		 cmp	 esi, esp
  00e7b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e80	85 c0		 test	 eax, eax
  00e82	74 08		 je	 SHORT $L187297

; 342  :         PositionWindow();

  00e84	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e87	e8 00 00 00 00	 call	 ?PositionWindow@CHyperLink@@IAEXXZ ; CHyperLink::PositionWindow
$L187297:

; 343  : }

  00e8c	5e		 pop	 esi
  00e8d	83 c4 04	 add	 esp, 4
  00e90	3b ec		 cmp	 ebp, esp
  00e92	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e97	8b e5		 mov	 esp, ebp
  00e99	5d		 pop	 ebp
  00e9a	c2 04 00	 ret	 4
?SetAutoSize@CHyperLink@@QAEXH@Z ENDP			; CHyperLink::SetAutoSize
_TEXT	ENDS
PUBLIC	?GetAutoSize@CHyperLink@@QBEHXZ			; CHyperLink::GetAutoSize
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAutoSize@CHyperLink@@QBEHXZ PROC NEAR		; CHyperLink::GetAutoSize
; _this$ = ecx

; 346  : { 

  00ea0	55		 push	 ebp
  00ea1	8b ec		 mov	 ebp, esp
  00ea3	51		 push	 ecx
  00ea4	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00eab	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 347  :     return m_bAdjustToFit; 

  00eae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00eb1	8b 40 6c	 mov	 eax, DWORD PTR [eax+108]

; 348  : }

  00eb4	8b e5		 mov	 esp, ebp
  00eb6	5d		 pop	 ebp
  00eb7	c3		 ret	 0
?GetAutoSize@CHyperLink@@QBEHXZ ENDP			; CHyperLink::GetAutoSize
_TEXT	ENDS
EXTRN	?GetTextExtent@CDC@@QBE?AVCSize@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:NEAR ; CDC::GetTextExtent
EXTRN	?Width@CRect@@QBEHXZ:NEAR			; CRect::Width
EXTRN	?Height@CRect@@QBEHXZ:NEAR			; CRect::Height
EXTRN	?DeflateRect@CRect@@QAEXHH@Z:NEAR		; CRect::DeflateRect
EXTRN	?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z:NEAR	; CWnd::SetWindowPos
EXTRN	?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z:NEAR	; CWnd::ClientToScreen
EXTRN	?GetDC@CWnd@@QAEPAVCDC@@XZ:NEAR			; CWnd::GetDC
EXTRN	?ReleaseDC@CWnd@@QAEHPAVCDC@@@Z:NEAR		; CWnd::ReleaseDC
xdata$x	SEGMENT
$T188096 DD	0ffffffffH
	DD	FLAT:$L188086
$T188088 DD	019930520H
	DD	01H
	DD	FLAT:$T188096
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_dwStyle$ = -108					; size = 4
_Extent$ = -100						; size = 8
_pOldFont$ = -88					; size = 4
_pDC$ = -84						; size = 4
_strWndText$ = -76					; size = 4
_pParent$ = -68						; size = 4
_ClientRect$ = -60					; size = 16
_WndRect$ = -36						; size = 16
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?PositionWindow@CHyperLink@@IAEXXZ PROC NEAR		; CHyperLink::PositionWindow
; _this$ = ecx

; 360  : {

  00ec0	55		 push	 ebp
  00ec1	8b ec		 mov	 ebp, esp
  00ec3	6a ff		 push	 -1
  00ec5	68 00 00 00 00	 push	 __ehhandler$?PositionWindow@CHyperLink@@IAEXXZ
  00eca	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00ed0	50		 push	 eax
  00ed1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ed8	83 ec 60	 sub	 esp, 96			; 00000060H
  00edb	56		 push	 esi
  00edc	57		 push	 edi
  00edd	51		 push	 ecx
  00ede	8d 7d 94	 lea	 edi, DWORD PTR [ebp-108]
  00ee1	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00ee6	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00eeb	f3 ab		 rep stosd
  00eed	59		 pop	 ecx
  00eee	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 361  :     if (!::IsWindow(GetSafeHwnd()) || !m_bAdjustToFit) 

  00ef1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ef4	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00ef9	8b f4		 mov	 esi, esp
  00efb	50		 push	 eax
  00efc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00f02	3b f4		 cmp	 esi, esp
  00f04	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f09	85 c0		 test	 eax, eax
  00f0b	74 09		 je	 SHORT $L187306
  00f0d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00f10	83 78 6c 00	 cmp	 DWORD PTR [eax+108], 0
  00f14	75 05		 jne	 SHORT $L187305
$L187306:

; 362  :         return;

  00f16	e9 e8 01 00 00	 jmp	 $L187304
$L187305:

; 363  : 
; 364  :     // Get the current window position
; 365  :     CRect WndRect, ClientRect;

  00f1b	8d 4d dc	 lea	 ecx, DWORD PTR _WndRect$[ebp]
  00f1e	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect
  00f23	8d 4d c4	 lea	 ecx, DWORD PTR _ClientRect$[ebp]
  00f26	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 366  :     GetWindowRect(WndRect);

  00f2b	8d 4d dc	 lea	 ecx, DWORD PTR _WndRect$[ebp]
  00f2e	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00f33	50		 push	 eax
  00f34	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00f37	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 367  :     GetClientRect(ClientRect);

  00f3c	8d 4d c4	 lea	 ecx, DWORD PTR _ClientRect$[ebp]
  00f3f	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00f44	50		 push	 eax
  00f45	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00f48	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 368  : 
; 369  :     ClientToScreen(ClientRect);

  00f4d	8d 4d c4	 lea	 ecx, DWORD PTR _ClientRect$[ebp]
  00f50	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00f55	50		 push	 eax
  00f56	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00f59	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ClientToScreen

; 370  : 
; 371  :     CWnd* pParent = GetParent();

  00f5e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00f61	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  00f66	89 45 bc	 mov	 DWORD PTR _pParent$[ebp], eax

; 372  :     if (pParent)

  00f69	83 7d bc 00	 cmp	 DWORD PTR _pParent$[ebp], 0
  00f6d	74 22		 je	 SHORT $L187310

; 373  :     {
; 374  :         pParent->ScreenToClient(WndRect);

  00f6f	8d 4d dc	 lea	 ecx, DWORD PTR _WndRect$[ebp]
  00f72	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00f77	50		 push	 eax
  00f78	8b 4d bc	 mov	 ecx, DWORD PTR _pParent$[ebp]
  00f7b	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 375  :         pParent->ScreenToClient(ClientRect);

  00f80	8d 4d c4	 lea	 ecx, DWORD PTR _ClientRect$[ebp]
  00f83	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00f88	50		 push	 eax
  00f89	8b 4d bc	 mov	 ecx, DWORD PTR _pParent$[ebp]
  00f8c	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient
$L187310:

; 376  :     }
; 377  : 
; 378  :     // Get the size of the window text
; 379  :     CString strWndText;

  00f91	8b f4		 mov	 esi, esp
  00f93	8d 4d b4	 lea	 ecx, DWORD PTR _strWndText$[ebp]
  00f96	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00f9c	3b f4		 cmp	 esi, esp
  00f9e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00fa3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 380  :     GetWindowText(strWndText);

  00faa	8d 4d b4	 lea	 ecx, DWORD PTR _strWndText$[ebp]
  00fad	51		 push	 ecx
  00fae	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00fb1	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CWnd::GetWindowTextA

; 381  : 
; 382  :     CDC* pDC = GetDC();

  00fb6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00fb9	e8 00 00 00 00	 call	 ?GetDC@CWnd@@QAEPAVCDC@@XZ ; CWnd::GetDC
  00fbe	89 45 ac	 mov	 DWORD PTR _pDC$[ebp], eax

; 383  :     CFont* pOldFont = pDC->SelectObject(&m_UnderlineFont);

  00fc1	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00fc4	83 c2 74	 add	 edx, 116		; 00000074H
  00fc7	8b f4		 mov	 esi, esp
  00fc9	52		 push	 edx
  00fca	8b 45 ac	 mov	 eax, DWORD PTR _pDC$[ebp]
  00fcd	8b 10		 mov	 edx, DWORD PTR [eax]
  00fcf	8b 4d ac	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00fd2	ff 52 30	 call	 DWORD PTR [edx+48]
  00fd5	3b f4		 cmp	 esi, esp
  00fd7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00fdc	89 45 a8	 mov	 DWORD PTR _pOldFont$[ebp], eax

; 384  :     CSize Extent = pDC->GetTextExtent(strWndText);

  00fdf	8d 45 b4	 lea	 eax, DWORD PTR _strWndText$[ebp]
  00fe2	50		 push	 eax
  00fe3	8d 4d 9c	 lea	 ecx, DWORD PTR _Extent$[ebp]
  00fe6	51		 push	 ecx
  00fe7	8b 4d ac	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00fea	e8 00 00 00 00	 call	 ?GetTextExtent@CDC@@QBE?AVCSize@@ABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CDC::GetTextExtent

; 385  :     pDC->SelectObject(pOldFont);

  00fef	8b f4		 mov	 esi, esp
  00ff1	8b 55 a8	 mov	 edx, DWORD PTR _pOldFont$[ebp]
  00ff4	52		 push	 edx
  00ff5	8b 45 ac	 mov	 eax, DWORD PTR _pDC$[ebp]
  00ff8	8b 10		 mov	 edx, DWORD PTR [eax]
  00ffa	8b 4d ac	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00ffd	ff 52 30	 call	 DWORD PTR [edx+48]
  01000	3b f4		 cmp	 esi, esp
  01002	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 386  :     ReleaseDC(pDC);

  01007	8b 45 ac	 mov	 eax, DWORD PTR _pDC$[ebp]
  0100a	50		 push	 eax
  0100b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0100e	e8 00 00 00 00	 call	 ?ReleaseDC@CWnd@@QAEHPAVCDC@@@Z ; CWnd::ReleaseDC

; 387  : 
; 388  :     // Adjust for window borders
; 389  :     Extent.cx += WndRect.Width() - ClientRect.Width(); 

  01013	8d 4d dc	 lea	 ecx, DWORD PTR _WndRect$[ebp]
  01016	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  0101b	8b f0		 mov	 esi, eax
  0101d	8d 4d c4	 lea	 ecx, DWORD PTR _ClientRect$[ebp]
  01020	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  01025	2b f0		 sub	 esi, eax
  01027	03 75 9c	 add	 esi, DWORD PTR _Extent$[ebp]
  0102a	89 75 9c	 mov	 DWORD PTR _Extent$[ebp], esi

; 390  :     Extent.cy += WndRect.Height() - ClientRect.Height(); 

  0102d	8d 4d dc	 lea	 ecx, DWORD PTR _WndRect$[ebp]
  01030	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  01035	8b f0		 mov	 esi, eax
  01037	8d 4d c4	 lea	 ecx, DWORD PTR _ClientRect$[ebp]
  0103a	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  0103f	2b f0		 sub	 esi, eax
  01041	03 75 a0	 add	 esi, DWORD PTR _Extent$[ebp+4]
  01044	89 75 a0	 mov	 DWORD PTR _Extent$[ebp+4], esi

; 391  : 
; 392  :     // Get the text justification via the window style
; 393  :     DWORD dwStyle = GetStyle();

  01047	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0104a	e8 00 00 00 00	 call	 ?GetStyle@CWnd@@QBEKXZ	; CWnd::GetStyle
  0104f	89 45 94	 mov	 DWORD PTR _dwStyle$[ebp], eax

; 394  : 
; 395  :     // Recalc the window size and position based on the text justification
; 396  :     if (dwStyle & SS_CENTERIMAGE)

  01052	8b 4d 94	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  01055	81 e1 00 02 00
	00		 and	 ecx, 512		; 00000200H
  0105b	74 1d		 je	 SHORT $L187317

; 397  :         WndRect.DeflateRect(0, (WndRect.Height() - Extent.cy)/2);

  0105d	8d 4d dc	 lea	 ecx, DWORD PTR _WndRect$[ebp]
  01060	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  01065	2b 45 a0	 sub	 eax, DWORD PTR _Extent$[ebp+4]
  01068	99		 cdq
  01069	2b c2		 sub	 eax, edx
  0106b	d1 f8		 sar	 eax, 1
  0106d	50		 push	 eax
  0106e	6a 00		 push	 0
  01070	8d 4d dc	 lea	 ecx, DWORD PTR _WndRect$[ebp]
  01073	e8 00 00 00 00	 call	 ?DeflateRect@CRect@@QAEXHH@Z ; CRect::DeflateRect

; 398  :     else

  01078	eb 09		 jmp	 SHORT $L187318
$L187317:

; 399  :         WndRect.bottom = WndRect.top + Extent.cy;

  0107a	8b 55 e0	 mov	 edx, DWORD PTR _WndRect$[ebp+4]
  0107d	03 55 a0	 add	 edx, DWORD PTR _Extent$[ebp+4]
  01080	89 55 e8	 mov	 DWORD PTR _WndRect$[ebp+12], edx
$L187318:

; 400  : 
; 401  :     if (dwStyle & SS_CENTER)   

  01083	8b 45 94	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  01086	83 e0 01	 and	 eax, 1
  01089	74 1d		 je	 SHORT $L187319

; 402  :         WndRect.DeflateRect((WndRect.Width() - Extent.cx)/2, 0);

  0108b	6a 00		 push	 0
  0108d	8d 4d dc	 lea	 ecx, DWORD PTR _WndRect$[ebp]
  01090	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  01095	2b 45 9c	 sub	 eax, DWORD PTR _Extent$[ebp]
  01098	99		 cdq
  01099	2b c2		 sub	 eax, edx
  0109b	d1 f8		 sar	 eax, 1
  0109d	50		 push	 eax
  0109e	8d 4d dc	 lea	 ecx, DWORD PTR _WndRect$[ebp]
  010a1	e8 00 00 00 00	 call	 ?DeflateRect@CRect@@QAEXHH@Z ; CRect::DeflateRect

; 403  :     else if (dwStyle & SS_RIGHT) 

  010a6	eb 1c		 jmp	 SHORT $L187320
$L187319:
  010a8	8b 4d 94	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  010ab	83 e1 02	 and	 ecx, 2
  010ae	74 0b		 je	 SHORT $L187321

; 404  :         WndRect.left  = WndRect.right - Extent.cx;

  010b0	8b 55 e4	 mov	 edx, DWORD PTR _WndRect$[ebp+8]
  010b3	2b 55 9c	 sub	 edx, DWORD PTR _Extent$[ebp]
  010b6	89 55 dc	 mov	 DWORD PTR _WndRect$[ebp], edx

; 405  :     else // SS_LEFT = 0, so we can't test for it explicitly 

  010b9	eb 09		 jmp	 SHORT $L187320
$L187321:

; 406  :         WndRect.right = WndRect.left + Extent.cx;

  010bb	8b 45 dc	 mov	 eax, DWORD PTR _WndRect$[ebp]
  010be	03 45 9c	 add	 eax, DWORD PTR _Extent$[ebp]
  010c1	89 45 e4	 mov	 DWORD PTR _WndRect$[ebp+8], eax
$L187320:

; 407  : 
; 408  :     // Move the window
; 409  :     SetWindowPos(NULL, WndRect.left, WndRect.top, WndRect.Width(), WndRect.Height(), SWP_NOZORDER);

  010c4	6a 04		 push	 4
  010c6	8d 4d dc	 lea	 ecx, DWORD PTR _WndRect$[ebp]
  010c9	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  010ce	50		 push	 eax
  010cf	8d 4d dc	 lea	 ecx, DWORD PTR _WndRect$[ebp]
  010d2	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  010d7	50		 push	 eax
  010d8	8b 4d e0	 mov	 ecx, DWORD PTR _WndRect$[ebp+4]
  010db	51		 push	 ecx
  010dc	8b 55 dc	 mov	 edx, DWORD PTR _WndRect$[ebp]
  010df	52		 push	 edx
  010e0	6a 00		 push	 0
  010e2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  010e5	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 410  : }

  010ea	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  010f1	8b f4		 mov	 esi, esp
  010f3	8d 4d b4	 lea	 ecx, DWORD PTR _strWndText$[ebp]
  010f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  010fc	3b f4		 cmp	 esi, esp
  010fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187304:
  01103	52		 push	 edx
  01104	8b cd		 mov	 ecx, ebp
  01106	50		 push	 eax
  01107	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188095
  0110d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01112	58		 pop	 eax
  01113	5a		 pop	 edx
  01114	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01117	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0111e	5f		 pop	 edi
  0111f	5e		 pop	 esi
  01120	83 c4 6c	 add	 esp, 108		; 0000006cH
  01123	3b ec		 cmp	 ebp, esp
  01125	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0112a	8b e5		 mov	 esp, ebp
  0112c	5d		 pop	 ebp
  0112d	c3		 ret	 0
$L188095:
  0112e	04 00 00 00	 DD	 4
  01132	00 00 00 00	 DD	 $L188094
$L188094:
  01136	dc ff ff ff	 DD	 -36			; ffffffdcH
  0113a	10 00 00 00	 DD	 16			; 00000010H
  0113e	00 00 00 00	 DD	 $L188089
  01142	c4 ff ff ff	 DD	 -60			; ffffffc4H
  01146	10 00 00 00	 DD	 16			; 00000010H
  0114a	00 00 00 00	 DD	 $L188090
  0114e	b4 ff ff ff	 DD	 -76			; ffffffb4H
  01152	04 00 00 00	 DD	 4
  01156	00 00 00 00	 DD	 $L188091
  0115a	9c ff ff ff	 DD	 -100			; ffffff9cH
  0115e	08 00 00 00	 DD	 8
  01162	00 00 00 00	 DD	 $L188092
$L188092:
  01166	45		 DB	 69			; 00000045H
  01167	78		 DB	 120			; 00000078H
  01168	74		 DB	 116			; 00000074H
  01169	65		 DB	 101			; 00000065H
  0116a	6e		 DB	 110			; 0000006eH
  0116b	74		 DB	 116			; 00000074H
  0116c	00		 DB	 0
$L188091:
  0116d	73		 DB	 115			; 00000073H
  0116e	74		 DB	 116			; 00000074H
  0116f	72		 DB	 114			; 00000072H
  01170	57		 DB	 87			; 00000057H
  01171	6e		 DB	 110			; 0000006eH
  01172	64		 DB	 100			; 00000064H
  01173	54		 DB	 84			; 00000054H
  01174	65		 DB	 101			; 00000065H
  01175	78		 DB	 120			; 00000078H
  01176	74		 DB	 116			; 00000074H
  01177	00		 DB	 0
$L188090:
  01178	43		 DB	 67			; 00000043H
  01179	6c		 DB	 108			; 0000006cH
  0117a	69		 DB	 105			; 00000069H
  0117b	65		 DB	 101			; 00000065H
  0117c	6e		 DB	 110			; 0000006eH
  0117d	74		 DB	 116			; 00000074H
  0117e	52		 DB	 82			; 00000052H
  0117f	65		 DB	 101			; 00000065H
  01180	63		 DB	 99			; 00000063H
  01181	74		 DB	 116			; 00000074H
  01182	00		 DB	 0
$L188089:
  01183	57		 DB	 87			; 00000057H
  01184	6e		 DB	 110			; 0000006eH
  01185	64		 DB	 100			; 00000064H
  01186	52		 DB	 82			; 00000052H
  01187	65		 DB	 101			; 00000065H
  01188	63		 DB	 99			; 00000063H
  01189	74		 DB	 116			; 00000074H
  0118a	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188086:
  000dc	8b f4		 mov	 esi, esp
  000de	8d 4d b4	 lea	 ecx, DWORD PTR _strWndText$[ebp]
  000e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000e7	3b f4		 cmp	 esi, esp
  000e9	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?PositionWindow@CHyperLink@@IAEXXZ:
  000ee	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188088
  000f3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?PositionWindow@CHyperLink@@IAEXXZ ENDP			; CHyperLink::PositionWindow
EXTRN	__imp__CopyIcon@4:NEAR
EXTRN	__imp__FreeLibrary@4:NEAR
EXTRN	__imp__LoadLibraryA@4:NEAR
EXTRN	__imp_?GetBuffer@?$CSimpleStringT@D$00@ATL@@QAEPADH@Z:NEAR
EXTRN	__imp_?ReleaseBuffer@?$CSimpleStringT@D$00@ATL@@QAEXH@Z:NEAR
EXTRN	__imp_??Y?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:NEAR
EXTRN	__imp__LoadCursorA@8:NEAR
EXTRN	__imp__GetWindowsDirectoryA@8:NEAR
xdata$x	SEGMENT
$T188105 DD	0ffffffffH
	DD	FLAT:$L188098
$T188100 DD	019930520H
	DD	01H
	DD	FLAT:$T188105
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_hHandCursor$187331 = -36				; size = 4
_hModule$187329 = -32					; size = 4
_strWndDir$187327 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?SetDefaultCursor@CHyperLink@@IAEXXZ PROC NEAR		; CHyperLink::SetDefaultCursor
; _this$ = ecx

; 418  : {

  01190	55		 push	 ebp
  01191	8b ec		 mov	 ebp, esp
  01193	6a ff		 push	 -1
  01195	68 00 00 00 00	 push	 __ehhandler$?SetDefaultCursor@CHyperLink@@IAEXXZ
  0119a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  011a0	50		 push	 eax
  011a1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  011a8	83 ec 18	 sub	 esp, 24			; 00000018H
  011ab	56		 push	 esi
  011ac	57		 push	 edi
  011ad	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  011b2	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  011b5	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  011b8	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  011bb	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  011be	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  011c1	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  011c4	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 419  :     if (m_hLinkCursor == NULL)                // No cursor handle - load our own

  011c7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  011ca	83 b8 84 00 00
	00 00		 cmp	 DWORD PTR [eax+132], 0
  011d1	0f 85 01 01 00
	00		 jne	 $L187325

; 420  :     {
; 421  :         // Get the windows directory
; 422  :         CString strWndDir;

  011d7	8b f4		 mov	 esi, esp
  011d9	8d 4d e8	 lea	 ecx, DWORD PTR _strWndDir$187327[ebp]
  011dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  011e2	3b f4		 cmp	 esi, esp
  011e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011e9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 423  :         GetWindowsDirectory(strWndDir.GetBuffer(MAX_PATH), MAX_PATH);

  011f0	8b f4		 mov	 esi, esp
  011f2	68 04 01 00 00	 push	 260			; 00000104H
  011f7	8b fc		 mov	 edi, esp
  011f9	68 04 01 00 00	 push	 260			; 00000104H
  011fe	8d 4d e8	 lea	 ecx, DWORD PTR _strWndDir$187327[ebp]
  01201	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetBuffer@?$CSimpleStringT@D$00@ATL@@QAEPADH@Z
  01207	3b fc		 cmp	 edi, esp
  01209	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0120e	50		 push	 eax
  0120f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowsDirectoryA@8
  01215	3b f4		 cmp	 esi, esp
  01217	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 424  :         strWndDir.ReleaseBuffer();

  0121c	8b f4		 mov	 esi, esp
  0121e	6a ff		 push	 -1
  01220	8d 4d e8	 lea	 ecx, DWORD PTR _strWndDir$187327[ebp]
  01223	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReleaseBuffer@?$CSimpleStringT@D$00@ATL@@QAEXH@Z
  01229	3b f4		 cmp	 esi, esp
  0122b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 425  : 
; 426  :         strWndDir += _T("\\winhlp32.exe");

  01230	8b f4		 mov	 esi, esp
  01232	68 00 00 00 00	 push	 OFFSET FLAT:$SG187328
  01237	8d 4d e8	 lea	 ecx, DWORD PTR _strWndDir$187327[ebp]
  0123a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Y?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  01240	3b f4		 cmp	 esi, esp
  01242	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 427  :         // This retrieves cursor #106 from winhlp32.exe, which is a hand pointer
; 428  :         HMODULE hModule = LoadLibrary(strWndDir);

  01247	8b f4		 mov	 esi, esp
  01249	8d 4d e8	 lea	 ecx, DWORD PTR _strWndDir$187327[ebp]
  0124c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  01252	3b f4		 cmp	 esi, esp
  01254	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01259	8b f4		 mov	 esi, esp
  0125b	50		 push	 eax
  0125c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
  01262	3b f4		 cmp	 esi, esp
  01264	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01269	89 45 e0	 mov	 DWORD PTR _hModule$187329[ebp], eax

; 429  :         if (hModule) {

  0126c	83 7d e0 00	 cmp	 DWORD PTR _hModule$187329[ebp], 0
  01270	74 3a		 je	 SHORT $L187330

; 430  :             HCURSOR hHandCursor = ::LoadCursor(hModule, MAKEINTRESOURCE(106));

  01272	8b f4		 mov	 esi, esp
  01274	6a 6a		 push	 106			; 0000006aH
  01276	8b 4d e0	 mov	 ecx, DWORD PTR _hModule$187329[ebp]
  01279	51		 push	 ecx
  0127a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  01280	3b f4		 cmp	 esi, esp
  01282	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01287	89 45 dc	 mov	 DWORD PTR _hHandCursor$187331[ebp], eax

; 431  :             if (hHandCursor)

  0128a	83 7d dc 00	 cmp	 DWORD PTR _hHandCursor$187331[ebp], 0
  0128e	74 1c		 je	 SHORT $L187330

; 432  :                 m_hLinkCursor = CopyCursor(hHandCursor);

  01290	8b f4		 mov	 esi, esp
  01292	8b 55 dc	 mov	 edx, DWORD PTR _hHandCursor$187331[ebp]
  01295	52		 push	 edx
  01296	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CopyIcon@4
  0129c	3b f4		 cmp	 esi, esp
  0129e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012a3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  012a6	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax
$L187330:

; 433  :         }
; 434  :         FreeLibrary(hModule);

  012ac	8b f4		 mov	 esi, esp
  012ae	8b 55 e0	 mov	 edx, DWORD PTR _hModule$187329[ebp]
  012b1	52		 push	 edx
  012b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
  012b8	3b f4		 cmp	 esi, esp
  012ba	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 435  :     }

  012bf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  012c6	8b f4		 mov	 esi, esp
  012c8	8d 4d e8	 lea	 ecx, DWORD PTR _strWndDir$187327[ebp]
  012cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  012d1	3b f4		 cmp	 esi, esp
  012d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187325:

; 436  : }

  012d8	52		 push	 edx
  012d9	8b cd		 mov	 ecx, ebp
  012db	50		 push	 eax
  012dc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188104
  012e2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  012e7	58		 pop	 eax
  012e8	5a		 pop	 edx
  012e9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  012ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  012f3	5f		 pop	 edi
  012f4	5e		 pop	 esi
  012f5	83 c4 24	 add	 esp, 36			; 00000024H
  012f8	3b ec		 cmp	 ebp, esp
  012fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012ff	8b e5		 mov	 esp, ebp
  01301	5d		 pop	 ebp
  01302	c3		 ret	 0
$L188104:
  01303	01 00 00 00	 DD	 1
  01307	00 00 00 00	 DD	 $L188103
$L188103:
  0130b	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0130f	04 00 00 00	 DD	 4
  01313	00 00 00 00	 DD	 $L188101
$L188101:
  01317	73		 DB	 115			; 00000073H
  01318	74		 DB	 116			; 00000074H
  01319	72		 DB	 114			; 00000072H
  0131a	57		 DB	 87			; 00000057H
  0131b	6e		 DB	 110			; 0000006eH
  0131c	64		 DB	 100			; 00000064H
  0131d	44		 DB	 68			; 00000044H
  0131e	69		 DB	 105			; 00000069H
  0131f	72		 DB	 114			; 00000072H
  01320	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L188098:
  000f8	8b f4		 mov	 esi, esp
  000fa	8d 4d e8	 lea	 ecx, DWORD PTR _strWndDir$187327[ebp]
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00103	3b f4		 cmp	 esi, esp
  00105	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?SetDefaultCursor@CHyperLink@@IAEXXZ:
  0010a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188100
  0010f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetDefaultCursor@CHyperLink@@IAEXXZ ENDP		; CHyperLink::SetDefaultCursor
PUBLIC	?GetRegKey@CHyperLink@@IAEJPAUHKEY__@@PBDPAD@Z	; CHyperLink::GetRegKey
EXTRN	__imp__lstrcpyA@8:NEAR
EXTRN	__imp__RegCloseKey@4:NEAR
EXTRN	__imp__RegOpenKeyExA@20:NEAR
EXTRN	__imp__RegQueryValueA@16:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_data$187348 = -300					; size = 260
_datasize$187347 = -32					; size = 4
_retval$ = -24						; size = 4
_hkey$ = -16						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_key$ = 8						; size = 4
_subkey$ = 12						; size = 4
_retdata$ = 16						; size = 4
?GetRegKey@CHyperLink@@IAEJPAUHKEY__@@PBDPAD@Z PROC NEAR ; CHyperLink::GetRegKey
; _this$ = ecx

; 439  : {

  01330	55		 push	 ebp
  01331	8b ec		 mov	 ebp, esp
  01333	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  01339	56		 push	 esi
  0133a	57		 push	 edi
  0133b	51		 push	 ecx
  0133c	8d bd d0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-304]
  01342	b9 4c 00 00 00	 mov	 ecx, 76			; 0000004cH
  01347	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0134c	f3 ab		 rep stosd
  0134e	59		 pop	 ecx
  0134f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  01354	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01357	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 440  :     HKEY hkey;
; 441  :     LONG retval = RegOpenKeyEx(key, subkey, 0, KEY_QUERY_VALUE, &hkey);

  0135a	8b f4		 mov	 esi, esp
  0135c	8d 45 f0	 lea	 eax, DWORD PTR _hkey$[ebp]
  0135f	50		 push	 eax
  01360	6a 01		 push	 1
  01362	6a 00		 push	 0
  01364	8b 4d 0c	 mov	 ecx, DWORD PTR _subkey$[ebp]
  01367	51		 push	 ecx
  01368	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0136b	52		 push	 edx
  0136c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyExA@20
  01372	3b f4		 cmp	 esi, esp
  01374	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01379	89 45 e8	 mov	 DWORD PTR _retval$[ebp], eax

; 442  : 
; 443  :     if (retval == ERROR_SUCCESS) {

  0137c	83 7d e8 00	 cmp	 DWORD PTR _retval$[ebp], 0
  01380	75 54		 jne	 SHORT $L187346

; 444  :         long datasize = MAX_PATH;

  01382	c7 45 e0 04 01
	00 00		 mov	 DWORD PTR _datasize$187347[ebp], 260 ; 00000104H

; 445  :         TCHAR data[MAX_PATH];
; 446  :         RegQueryValue(hkey, NULL, data, &datasize);

  01389	8b f4		 mov	 esi, esp
  0138b	8d 45 e0	 lea	 eax, DWORD PTR _datasize$187347[ebp]
  0138e	50		 push	 eax
  0138f	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _data$187348[ebp]
  01395	51		 push	 ecx
  01396	6a 00		 push	 0
  01398	8b 55 f0	 mov	 edx, DWORD PTR _hkey$[ebp]
  0139b	52		 push	 edx
  0139c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegQueryValueA@16
  013a2	3b f4		 cmp	 esi, esp
  013a4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 447  :         lstrcpy(retdata,data);

  013a9	8b f4		 mov	 esi, esp
  013ab	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _data$187348[ebp]
  013b1	50		 push	 eax
  013b2	8b 4d 10	 mov	 ecx, DWORD PTR _retdata$[ebp]
  013b5	51		 push	 ecx
  013b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpyA@8
  013bc	3b f4		 cmp	 esi, esp
  013be	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 448  :         RegCloseKey(hkey);

  013c3	8b f4		 mov	 esi, esp
  013c5	8b 55 f0	 mov	 edx, DWORD PTR _hkey$[ebp]
  013c8	52		 push	 edx
  013c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
  013cf	3b f4		 cmp	 esi, esp
  013d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187346:

; 449  :     }
; 450  : 
; 451  :     return retval;

  013d6	8b 45 e8	 mov	 eax, DWORD PTR _retval$[ebp]

; 452  : }

  013d9	52		 push	 edx
  013da	8b cd		 mov	 ecx, ebp
  013dc	50		 push	 eax
  013dd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188113
  013e3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  013e8	58		 pop	 eax
  013e9	5a		 pop	 edx
  013ea	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  013ed	e8 00 00 00 00	 call	 @__security_check_cookie@4
  013f2	5f		 pop	 edi
  013f3	5e		 pop	 esi
  013f4	81 c4 30 01 00
	00		 add	 esp, 304		; 00000130H
  013fa	3b ec		 cmp	 ebp, esp
  013fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01401	8b e5		 mov	 esp, ebp
  01403	5d		 pop	 ebp
  01404	c2 0c 00	 ret	 12			; 0000000cH
$L188113:
  01407	03 00 00 00	 DD	 3
  0140b	00 00 00 00	 DD	 $L188112
$L188112:
  0140f	f0 ff ff ff	 DD	 -16			; fffffff0H
  01413	04 00 00 00	 DD	 4
  01417	00 00 00 00	 DD	 $L188108
  0141b	e0 ff ff ff	 DD	 -32			; ffffffe0H
  0141f	04 00 00 00	 DD	 4
  01423	00 00 00 00	 DD	 $L188109
  01427	d4 fe ff ff	 DD	 -300			; fffffed4H
  0142b	04 01 00 00	 DD	 260			; 00000104H
  0142f	00 00 00 00	 DD	 $L188110
$L188110:
  01433	64		 DB	 100			; 00000064H
  01434	61		 DB	 97			; 00000061H
  01435	74		 DB	 116			; 00000074H
  01436	61		 DB	 97			; 00000061H
  01437	00		 DB	 0
$L188109:
  01438	64		 DB	 100			; 00000064H
  01439	61		 DB	 97			; 00000061H
  0143a	74		 DB	 116			; 00000074H
  0143b	61		 DB	 97			; 00000061H
  0143c	73		 DB	 115			; 00000073H
  0143d	69		 DB	 105			; 00000069H
  0143e	7a		 DB	 122			; 0000007aH
  0143f	65		 DB	 101			; 00000065H
  01440	00		 DB	 0
$L188108:
  01441	68		 DB	 104			; 00000068H
  01442	6b		 DB	 107			; 0000006bH
  01443	65		 DB	 101			; 00000065H
  01444	79		 DB	 121			; 00000079H
  01445	00		 DB	 0
?GetRegKey@CHyperLink@@IAEJPAUHKEY__@@PBDPAD@Z ENDP	; CHyperLink::GetRegKey
_TEXT	ENDS
PUBLIC	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
EXTRN	?AfxMessageBox@@YGHPBDII@Z:NEAR			; AfxMessageBox
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:NEAR
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z:NEAR
xdata$x	SEGMENT
$T188126 DD	0ffffffffH
	DD	FLAT:$L188116
	DD	00H
	DD	FLAT:$L188117
$T188119 DD	019930520H
	DD	02H
	DD	FLAT:$T188126
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv145 = -44						; size = 4
tv147 = -40						; size = 4
tv67 = -36						; size = 4
$T188115 = -32						; size = 4
_str$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nError$ = 8						; size = 4
?ReportError@CHyperLink@@IAEXH@Z PROC NEAR		; CHyperLink::ReportError
; _this$ = ecx

; 455  : {

  01450	55		 push	 ebp
  01451	8b ec		 mov	 ebp, esp
  01453	6a ff		 push	 -1
  01455	68 00 00 00 00	 push	 __ehhandler$?ReportError@CHyperLink@@IAEXH@Z
  0145a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01460	50		 push	 eax
  01461	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01468	83 ec 20	 sub	 esp, 32			; 00000020H
  0146b	56		 push	 esi
  0146c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  01471	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  01474	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  01477	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0147a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0147d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  01480	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  01483	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  01486	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  01489	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 456  :     CString str;

  0148c	8b f4		 mov	 esi, esp
  0148e	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  01491	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  01497	3b f4		 cmp	 esi, esp
  01499	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0149e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 457  :     switch (nError) {

  014a5	8b 45 08	 mov	 eax, DWORD PTR _nError$[ebp]
  014a8	89 45 dc	 mov	 DWORD PTR tv67[ebp], eax
  014ab	83 7d dc 20	 cmp	 DWORD PTR tv67[ebp], 32	; 00000020H
  014af	0f 87 6f 01 00
	00		 ja	 $L187384
  014b5	8b 4d dc	 mov	 ecx, DWORD PTR tv67[ebp]
  014b8	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $L188120[ecx]
  014bf	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $L188125[edx*4]
$L187358:

; 458  :         case 0:                       str = "The operating system is out\nof memory or resources."; break;

  014c6	8b f4		 mov	 esi, esp
  014c8	68 00 00 00 00	 push	 OFFSET FLAT:$SG187359
  014cd	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  014d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  014d6	3b f4		 cmp	 esi, esp
  014d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014dd	e9 61 01 00 00	 jmp	 $L187355
$L187360:

; 459  :         case SE_ERR_PNF:              str = "The specified path was not found."; break;

  014e2	8b f4		 mov	 esi, esp
  014e4	68 00 00 00 00	 push	 OFFSET FLAT:$SG187361
  014e9	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  014ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  014f2	3b f4		 cmp	 esi, esp
  014f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014f9	e9 45 01 00 00	 jmp	 $L187355
$L187362:

; 460  :         case SE_ERR_FNF:              str = "The specified file was not found."; break;

  014fe	8b f4		 mov	 esi, esp
  01500	68 00 00 00 00	 push	 OFFSET FLAT:$SG187363
  01505	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  01508	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  0150e	3b f4		 cmp	 esi, esp
  01510	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01515	e9 29 01 00 00	 jmp	 $L187355
$L187364:

; 461  :         case ERROR_BAD_FORMAT:        str = "The .EXE file is invalid\n(non-Win32 .EXE or error in .EXE image)."; break;

  0151a	8b f4		 mov	 esi, esp
  0151c	68 00 00 00 00	 push	 OFFSET FLAT:$SG187365
  01521	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  01524	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  0152a	3b f4		 cmp	 esi, esp
  0152c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01531	e9 0d 01 00 00	 jmp	 $L187355
$L187366:

; 462  :         case SE_ERR_ACCESSDENIED:     str = "The operating system denied\naccess to the specified file."; break;

  01536	8b f4		 mov	 esi, esp
  01538	68 00 00 00 00	 push	 OFFSET FLAT:$SG187367
  0153d	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  01540	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  01546	3b f4		 cmp	 esi, esp
  01548	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0154d	e9 f1 00 00 00	 jmp	 $L187355
$L187368:

; 463  :         case SE_ERR_ASSOCINCOMPLETE:  str = "The filename association is\nincomplete or invalid."; break;

  01552	8b f4		 mov	 esi, esp
  01554	68 00 00 00 00	 push	 OFFSET FLAT:$SG187369
  01559	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  0155c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  01562	3b f4		 cmp	 esi, esp
  01564	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01569	e9 d5 00 00 00	 jmp	 $L187355
$L187370:

; 464  :         case SE_ERR_DDEBUSY:          str = "The DDE transaction could not\nbe completed because other DDE transactions\nwere being processed."; break;

  0156e	8b f4		 mov	 esi, esp
  01570	68 00 00 00 00	 push	 OFFSET FLAT:$SG187371
  01575	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  01578	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  0157e	3b f4		 cmp	 esi, esp
  01580	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01585	e9 b9 00 00 00	 jmp	 $L187355
$L187372:

; 465  :         case SE_ERR_DDEFAIL:          str = "The DDE transaction failed."; break;

  0158a	8b f4		 mov	 esi, esp
  0158c	68 00 00 00 00	 push	 OFFSET FLAT:$SG187373
  01591	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  01594	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  0159a	3b f4		 cmp	 esi, esp
  0159c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015a1	e9 9d 00 00 00	 jmp	 $L187355
$L187374:

; 466  :         case SE_ERR_DDETIMEOUT:       str = "The DDE transaction could not\nbe completed because the request timed out."; break;

  015a6	8b f4		 mov	 esi, esp
  015a8	68 00 00 00 00	 push	 OFFSET FLAT:$SG187375
  015ad	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  015b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  015b6	3b f4		 cmp	 esi, esp
  015b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015bd	e9 81 00 00 00	 jmp	 $L187355
$L187376:

; 467  :         case SE_ERR_DLLNOTFOUND:      str = "The specified dynamic-link library was not found."; break;

  015c2	8b f4		 mov	 esi, esp
  015c4	68 00 00 00 00	 push	 OFFSET FLAT:$SG187377
  015c9	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  015cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  015d2	3b f4		 cmp	 esi, esp
  015d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015d9	eb 68		 jmp	 SHORT $L187355
$L187378:

; 468  :         case SE_ERR_NOASSOC:          str = "There is no application associated\nwith the given filename extension."; break;

  015db	8b f4		 mov	 esi, esp
  015dd	68 00 00 00 00	 push	 OFFSET FLAT:$SG187379
  015e2	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  015e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  015eb	3b f4		 cmp	 esi, esp
  015ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015f2	eb 4f		 jmp	 SHORT $L187355
$L187380:

; 469  :         case SE_ERR_OOM:              str = "There was not enough memory to complete the operation."; break;

  015f4	8b f4		 mov	 esi, esp
  015f6	68 00 00 00 00	 push	 OFFSET FLAT:$SG187381
  015fb	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  015fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  01604	3b f4		 cmp	 esi, esp
  01606	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0160b	eb 36		 jmp	 SHORT $L187355
$L187382:

; 470  :         case SE_ERR_SHARE:            str = "A sharing violation occurred. ";

  0160d	8b f4		 mov	 esi, esp
  0160f	68 00 00 00 00	 push	 OFFSET FLAT:$SG187383
  01614	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  01617	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
  0161d	3b f4		 cmp	 esi, esp
  0161f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187384:

; 471  :         default:                      str.Format(_T("Unknown Error (%d) occurred."), nError); break;

  01624	8b f4		 mov	 esi, esp
  01626	8b 45 08	 mov	 eax, DWORD PTR _nError$[ebp]
  01629	50		 push	 eax
  0162a	68 00 00 00 00	 push	 OFFSET FLAT:$SG187385
  0162f	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  01632	51		 push	 ecx
  01633	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  01639	83 c4 0c	 add	 esp, 12			; 0000000cH
  0163c	3b f4		 cmp	 esi, esp
  0163e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187355:

; 472  :     }
; 473  :     str = "Unable to open hyperlink:\n\n" + str;

  01643	8d 55 e8	 lea	 edx, DWORD PTR _str$[ebp]
  01646	52		 push	 edx
  01647	68 00 00 00 00	 push	 OFFSET FLAT:$SG187387
  0164c	8d 45 e0	 lea	 eax, DWORD PTR $T188115[ebp]
  0164f	50		 push	 eax
  01650	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ; ATL::operator+
  01655	83 c4 0c	 add	 esp, 12			; 0000000cH
  01658	89 45 d8	 mov	 DWORD PTR tv147[ebp], eax
  0165b	8b 4d d8	 mov	 ecx, DWORD PTR tv147[ebp]
  0165e	89 4d d4	 mov	 DWORD PTR tv145[ebp], ecx
  01661	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01665	8b f4		 mov	 esi, esp
  01667	8b 55 d4	 mov	 edx, DWORD PTR tv145[ebp]
  0166a	52		 push	 edx
  0166b	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  0166e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  01674	3b f4		 cmp	 esi, esp
  01676	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0167b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0167f	8b f4		 mov	 esi, esp
  01681	8d 4d e0	 lea	 ecx, DWORD PTR $T188115[ebp]
  01684	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0168a	3b f4		 cmp	 esi, esp
  0168c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 474  :     AfxMessageBox(str, MB_ICONEXCLAMATION | MB_OK);

  01691	6a 00		 push	 0
  01693	6a 30		 push	 48			; 00000030H
  01695	8b f4		 mov	 esi, esp
  01697	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  0169a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  016a0	3b f4		 cmp	 esi, esp
  016a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  016a7	50		 push	 eax
  016a8	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 475  : }

  016ad	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  016b4	8b f4		 mov	 esi, esp
  016b6	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  016b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  016bf	3b f4		 cmp	 esi, esp
  016c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  016c6	52		 push	 edx
  016c7	8b cd		 mov	 ecx, ebp
  016c9	50		 push	 eax
  016ca	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188124
  016d0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  016d5	58		 pop	 eax
  016d6	5a		 pop	 edx
  016d7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  016da	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  016e1	5e		 pop	 esi
  016e2	83 c4 2c	 add	 esp, 44			; 0000002cH
  016e5	3b ec		 cmp	 ebp, esp
  016e7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  016ec	8b e5		 mov	 esp, ebp
  016ee	5d		 pop	 ebp
  016ef	c2 04 00	 ret	 4
$L188124:
  016f2	01 00 00 00	 DD	 1
  016f6	00 00 00 00	 DD	 $L188123
$L188123:
  016fa	e8 ff ff ff	 DD	 -24			; ffffffe8H
  016fe	04 00 00 00	 DD	 4
  01702	00 00 00 00	 DD	 $L188121
$L188121:
  01706	73		 DB	 115			; 00000073H
  01707	74		 DB	 116			; 00000074H
  01708	72		 DB	 114			; 00000072H
  01709	00		 DB	 0
$L188125:
  0170a	00 00 00 00	 DD	 $L187358
  0170e	00 00 00 00	 DD	 $L187362
  01712	00 00 00 00	 DD	 $L187360
  01716	00 00 00 00	 DD	 $L187366
  0171a	00 00 00 00	 DD	 $L187380
  0171e	00 00 00 00	 DD	 $L187364
  01722	00 00 00 00	 DD	 $L187382
  01726	00 00 00 00	 DD	 $L187368
  0172a	00 00 00 00	 DD	 $L187374
  0172e	00 00 00 00	 DD	 $L187372
  01732	00 00 00 00	 DD	 $L187370
  01736	00 00 00 00	 DD	 $L187378
  0173a	00 00 00 00	 DD	 $L187376
  0173e	00 00 00 00	 DD	 $L187384
$L188120:
  01742	00		 DB	 0
  01743	0d		 DB	 13			; 0000000dH
  01744	01		 DB	 1
  01745	02		 DB	 2
  01746	0d		 DB	 13			; 0000000dH
  01747	03		 DB	 3
  01748	0d		 DB	 13			; 0000000dH
  01749	0d		 DB	 13			; 0000000dH
  0174a	04		 DB	 4
  0174b	0d		 DB	 13			; 0000000dH
  0174c	0d		 DB	 13			; 0000000dH
  0174d	05		 DB	 5
  0174e	0d		 DB	 13			; 0000000dH
  0174f	0d		 DB	 13			; 0000000dH
  01750	0d		 DB	 13			; 0000000dH
  01751	0d		 DB	 13			; 0000000dH
  01752	0d		 DB	 13			; 0000000dH
  01753	0d		 DB	 13			; 0000000dH
  01754	0d		 DB	 13			; 0000000dH
  01755	0d		 DB	 13			; 0000000dH
  01756	0d		 DB	 13			; 0000000dH
  01757	0d		 DB	 13			; 0000000dH
  01758	0d		 DB	 13			; 0000000dH
  01759	0d		 DB	 13			; 0000000dH
  0175a	0d		 DB	 13			; 0000000dH
  0175b	0d		 DB	 13			; 0000000dH
  0175c	06		 DB	 6
  0175d	07		 DB	 7
  0175e	08		 DB	 8
  0175f	09		 DB	 9
  01760	0a		 DB	 10			; 0000000aH
  01761	0b		 DB	 11			; 0000000bH
  01762	0c		 DB	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L188116:
  00114	8b f4		 mov	 esi, esp
  00116	8d 4d e8	 lea	 ecx, DWORD PTR _str$[ebp]
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0011f	3b f4		 cmp	 esi, esp
  00121	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L188117:
  00126	8b f4		 mov	 esi, esp
  00128	8d 4d e0	 lea	 ecx, DWORD PTR $T188115[ebp]
  0012b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00131	3b f4		 cmp	 esi, esp
  00133	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?ReportError@CHyperLink@@IAEXH@Z:
  00138	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188119
  0013d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ReportError@CHyperLink@@IAEXH@Z ENDP			; CHyperLink::ReportError
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -164				; size = 4
_ver$ = -156						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 5c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-164]
  00011	b9 29 00 00 00	 mov	 ecx, 41			; 00000029H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

  00025	c7 85 64 ff ff
	ff 94 00 00 00	 mov	 DWORD PTR _ver$[ebp], 148 ; 00000094H

; 139  : 	::GetVersionEx( &ver );

  0002f	8b f4		 mov	 esi, esp
  00031	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _ver$[ebp]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00045	83 bd 74 ff ff
	ff 02		 cmp	 DWORD PTR _ver$[ebp+16], 2
  0004c	75 15		 jne	 SHORT $L24163
  0004e	83 bd 68 ff ff
	ff 05		 cmp	 DWORD PTR _ver$[ebp+4], 5
  00055	72 0c		 jb	 SHORT $L24163

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  00057	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

  00061	eb 0a		 jmp	 SHORT $L24164
$L24163:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00063	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L24164:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  0006d	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _pfnGetThreadACP$[ebp]
  00073	51		 push	 ecx
  00074	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00079	e8 00 00 00 00	 call	 ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  0007e	8b f4		 mov	 esi, esp
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 152  : }

  0008d	52		 push	 edx
  0008e	8b cd		 mov	 ecx, ebp
  00090	50		 push	 eax
  00091	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188132
  00097	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009c	58		 pop	 eax
  0009d	5a		 pop	 edx
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	81 c4 a4 00 00
	00		 add	 esp, 164		; 000000a4H
  000ae	3b ec		 cmp	 ebp, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
$L188132:
  000b9	01 00 00 00	 DD	 1
  000bd	00 00 00 00	 DD	 $L188131
$L188131:
  000c1	64 ff ff ff	 DD	 -156			; ffffff64H
  000c5	94 00 00 00	 DD	 148			; 00000094H
  000c9	00 00 00 00	 DD	 $L188129
$L188129:
  000cd	76		 DB	 118			; 00000076H
  000ce	65		 DB	 101			; 00000065H
  000cf	72		 DB	 114			; 00000072H
  000d0	00		 DB	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR _pNew$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pp$[ebp]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8
  00014	3b f4		 cmp	 esi, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 93   : }

  0001b	5e		 pop	 esi
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$24151 = -32					; size = 4
_szACP$ = -24						; size = 7
_lcidThread$ = -12					; size = 4
_nACP$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  00033	8b f4		 mov	 esi, esp
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	89 45 f4	 mov	 DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  00045	8b f4		 mov	 esi, esp
  00047	6a 07		 push	 7
  00049	8d 45 e8	 lea	 eax, DWORD PTR _szACP$[ebp]
  0004c	50		 push	 eax
  0004d	68 04 10 00 00	 push	 4100			; 00001004H
  00052	8b 4d f4	 mov	 ecx, DWORD PTR _lcidThread$[ebp]
  00055	51		 push	 ecx
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	85 c0		 test	 eax, eax
  00065	74 34		 je	 SHORT $L24150

; 111  : 	{
; 112  : 		char* pch = szACP;

  00067	8d 55 e8	 lea	 edx, DWORD PTR _szACP$[ebp]
  0006a	89 55 e0	 mov	 DWORD PTR _pch$24151[ebp], edx
$L24153:

; 113  : 		while (*pch != '\0')

  0006d	8b 45 e0	 mov	 eax, DWORD PTR _pch$24151[ebp]
  00070	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00073	85 c9		 test	 ecx, ecx
  00075	74 24		 je	 SHORT $L24150

; 114  : 		{
; 115  : 			nACP *= 10;

  00077	8b 55 f8	 mov	 edx, DWORD PTR _nACP$[ebp]
  0007a	6b d2 0a	 imul	 edx, 10			; 0000000aH
  0007d	89 55 f8	 mov	 DWORD PTR _nACP$[ebp], edx

; 116  : 			nACP += *pch++ - '0';

  00080	8b 45 e0	 mov	 eax, DWORD PTR _pch$24151[ebp]
  00083	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00086	8b 55 f8	 mov	 edx, DWORD PTR _nACP$[ebp]
  00089	8d 44 0a d0	 lea	 eax, DWORD PTR [edx+ecx-48]
  0008d	89 45 f8	 mov	 DWORD PTR _nACP$[ebp], eax
  00090	8b 4d e0	 mov	 ecx, DWORD PTR _pch$24151[ebp]
  00093	83 c1 01	 add	 ecx, 1
  00096	89 4d e0	 mov	 DWORD PTR _pch$24151[ebp], ecx

; 117  : 		}

  00099	eb d2		 jmp	 SHORT $L24153
$L24150:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  0009b	83 7d f8 00	 cmp	 DWORD PTR _nACP$[ebp], 0
  0009f	75 12		 jne	 SHORT $L24155

; 121  : 		nACP = ::GetACP();

  000a1	8b f4		 mov	 esi, esp
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	89 45 f8	 mov	 DWORD PTR _nACP$[ebp], eax
$L24155:

; 122  : 
; 123  : 	return nACP;

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _nACP$[ebp]

; 124  : }

  000b6	52		 push	 edx
  000b7	8b cd		 mov	 ecx, ebp
  000b9	50		 push	 eax
  000ba	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188139
  000c0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c5	58		 pop	 eax
  000c6	5a		 pop	 edx
  000c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ca	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cf	5e		 pop	 esi
  000d0	83 c4 20	 add	 esp, 32			; 00000020H
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
$L188139:
  000de	01 00 00 00	 DD	 1
  000e2	00 00 00 00	 DD	 $L188138
$L188138:
  000e6	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000ea	07 00 00 00	 DD	 7
  000ee	00 00 00 00	 DD	 $L188136
$L188136:
  000f2	73		 DB	 115			; 00000073H
  000f3	7a		 DB	 122			; 0000007aH
  000f4	41		 DB	 65			; 00000041H
  000f5	43		 DB	 67			; 00000043H
  000f6	50		 DB	 80			; 00000050H
  000f7	00		 DB	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  : 	return( CP_THREAD_ACP );

  00003	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	__tcsstr
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
PUBLIC	?T2A@@YAPADPAD@Z				; T2A
EXTRN	__imp__lstrcatA@8:NEAR
EXTRN	__imp__lstrlenA@4:NEAR
EXTRN	__imp__ShellExecuteA@24:NEAR
EXTRN	__imp__WinExec@8:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\gui\commoncontrol\hyperlinkctrl.cpp
_TEXT	SEGMENT
__lpa$187419 = -560					; size = 4
__lpw$187418 = -556					; size = 4
__acp$187417 = -552					; size = 4
__convert$187416 = -548					; size = 4
_pos$187408 = -544					; size = 4
_result$ = -540						; size = 4
_key$ = -532						; size = 520
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_url$ = 8						; size = 4
_showcmd$ = 12						; size = 4
?GotoURL@CHyperLink@@IAEPAUHINSTANCE__@@PBDH@Z PROC NEAR ; CHyperLink::GotoURL
; _this$ = ecx

; 478  : {

  01770	55		 push	 ebp
  01771	8b ec		 mov	 ebp, esp
  01773	81 ec 30 02 00
	00		 sub	 esp, 560		; 00000230H
  01779	56		 push	 esi
  0177a	57		 push	 edi
  0177b	51		 push	 ecx
  0177c	8d bd d0 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-560]
  01782	b9 8c 00 00 00	 mov	 ecx, 140		; 0000008cH
  01787	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0178c	f3 ab		 rep stosd
  0178e	59		 pop	 ecx
  0178f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  01794	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  01797	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 479  :     TCHAR key[MAX_PATH + MAX_PATH];
; 480  : 
; 481  :     // First try ShellExecute()
; 482  :     HINSTANCE result = ShellExecute(NULL, _T("open"), url, NULL,NULL, showcmd);

  0179a	8b f4		 mov	 esi, esp
  0179c	8b 45 0c	 mov	 eax, DWORD PTR _showcmd$[ebp]
  0179f	50		 push	 eax
  017a0	6a 00		 push	 0
  017a2	6a 00		 push	 0
  017a4	8b 4d 08	 mov	 ecx, DWORD PTR _url$[ebp]
  017a7	51		 push	 ecx
  017a8	68 00 00 00 00	 push	 OFFSET FLAT:$SG187395
  017ad	6a 00		 push	 0
  017af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShellExecuteA@24
  017b5	3b f4		 cmp	 esi, esp
  017b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  017bc	89 85 e4 fd ff
	ff		 mov	 DWORD PTR _result$[ebp], eax

; 483  : 
; 484  :     // If it failed, get the .htm regkey and lookup the program
; 485  :     if ((UINT)result <= HINSTANCE_ERROR) {

  017c2	83 bd e4 fd ff
	ff 20		 cmp	 DWORD PTR _result$[ebp], 32 ; 00000020H
  017c9	0f 87 65 01 00
	00		 ja	 $L187397

; 486  : 
; 487  :         if (GetRegKey(HKEY_CLASSES_ROOT, _T(".htm"), key) == ERROR_SUCCESS) {

  017cf	8d 95 ec fd ff
	ff		 lea	 edx, DWORD PTR _key$[ebp]
  017d5	52		 push	 edx
  017d6	68 00 00 00 00	 push	 OFFSET FLAT:$SG187402
  017db	68 00 00 00 80	 push	 -2147483648		; 80000000H
  017e0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  017e3	e8 00 00 00 00	 call	 ?GetRegKey@CHyperLink@@IAEJPAUHKEY__@@PBDPAD@Z ; CHyperLink::GetRegKey
  017e8	85 c0		 test	 eax, eax
  017ea	0f 85 44 01 00
	00		 jne	 $L187397

; 488  :             lstrcat(key, _T("\\shell\\open\\command"));

  017f0	8b f4		 mov	 esi, esp
  017f2	68 00 00 00 00	 push	 OFFSET FLAT:$SG187403
  017f7	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _key$[ebp]
  017fd	50		 push	 eax
  017fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcatA@8
  01804	3b f4		 cmp	 esi, esp
  01806	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 489  : 
; 490  :             if (GetRegKey(HKEY_CLASSES_ROOT,key,key) == ERROR_SUCCESS) {

  0180b	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _key$[ebp]
  01811	51		 push	 ecx
  01812	8d 95 ec fd ff
	ff		 lea	 edx, DWORD PTR _key$[ebp]
  01818	52		 push	 edx
  01819	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0181e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01821	e8 00 00 00 00	 call	 ?GetRegKey@CHyperLink@@IAEJPAUHKEY__@@PBDPAD@Z ; CHyperLink::GetRegKey
  01826	85 c0		 test	 eax, eax
  01828	0f 85 06 01 00
	00		 jne	 $L187397

; 491  :                 TCHAR *pos;
; 492  :                 pos = _tcsstr(key, _T("\"%1\""));

  0182e	68 00 00 00 00	 push	 OFFSET FLAT:$SG187409
  01833	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _key$[ebp]
  01839	50		 push	 eax
  0183a	e8 00 00 00 00	 call	 __tcsstr
  0183f	83 c4 08	 add	 esp, 8
  01842	89 85 e0 fd ff
	ff		 mov	 DWORD PTR _pos$187408[ebp], eax

; 493  :                 if (pos == NULL) {                     // No quotes found

  01848	83 bd e0 fd ff
	ff 00		 cmp	 DWORD PTR _pos$187408[ebp], 0
  0184f	75 53		 jne	 SHORT $L187410

; 494  :                     pos = _tcsstr(key, _T("%1"));      // Check for %1, without quotes 

  01851	68 00 00 00 00	 push	 OFFSET FLAT:$SG187411
  01856	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _key$[ebp]
  0185c	51		 push	 ecx
  0185d	e8 00 00 00 00	 call	 __tcsstr
  01862	83 c4 08	 add	 esp, 8
  01865	89 85 e0 fd ff
	ff		 mov	 DWORD PTR _pos$187408[ebp], eax

; 495  :                     if (pos == NULL)                   // No parameter at all...

  0186b	83 bd e0 fd ff
	ff 00		 cmp	 DWORD PTR _pos$187408[ebp], 0
  01872	75 25		 jne	 SHORT $L187412

; 496  :                         pos = key+lstrlen(key)-1;

  01874	8b f4		 mov	 esi, esp
  01876	8d 95 ec fd ff
	ff		 lea	 edx, DWORD PTR _key$[ebp]
  0187c	52		 push	 edx
  0187d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  01883	3b f4		 cmp	 esi, esp
  01885	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0188a	8d 84 05 eb fd
	ff ff		 lea	 eax, DWORD PTR _key$[ebp+eax-1]
  01891	89 85 e0 fd ff
	ff		 mov	 DWORD PTR _pos$187408[ebp], eax

; 497  :                     else

  01897	eb 09		 jmp	 SHORT $L187413
$L187412:

; 498  :                         *pos = '\0';                   // Remove the parameter

  01899	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR _pos$187408[ebp]
  0189f	c6 01 00	 mov	 BYTE PTR [ecx], 0
$L187413:

; 499  :                 }
; 500  :                 else

  018a2	eb 09		 jmp	 SHORT $L187414
$L187410:

; 501  :                     *pos = '\0';                       // Remove the parameter

  018a4	8b 95 e0 fd ff
	ff		 mov	 edx, DWORD PTR _pos$187408[ebp]
  018aa	c6 02 00	 mov	 BYTE PTR [edx], 0
$L187414:

; 502  : 
; 503  :                 lstrcat(pos, _T(" "));

  018ad	8b f4		 mov	 esi, esp
  018af	68 00 00 00 00	 push	 OFFSET FLAT:$SG187415
  018b4	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _pos$187408[ebp]
  018ba	50		 push	 eax
  018bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcatA@8
  018c1	3b f4		 cmp	 esi, esp
  018c3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 504  :                 lstrcat(pos, url);

  018c8	8b f4		 mov	 esi, esp
  018ca	8b 4d 08	 mov	 ecx, DWORD PTR _url$[ebp]
  018cd	51		 push	 ecx
  018ce	8b 95 e0 fd ff
	ff		 mov	 edx, DWORD PTR _pos$187408[ebp]
  018d4	52		 push	 edx
  018d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcatA@8
  018db	3b f4		 cmp	 esi, esp
  018dd	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 505  : 
; 506  :                 USES_CONVERSION;

  018e2	c7 85 dc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR __convert$187416[ebp], 0
  018ec	e8 00 00 00 00	 call	 ?_AtlGetConversionACP@ATL@@YGIXZ ; ATL::_AtlGetConversionACP
  018f1	89 85 d8 fd ff
	ff		 mov	 DWORD PTR __acp$187417[ebp], eax
  018f7	c7 85 d4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR __lpw$187418[ebp], 0
  01901	c7 85 d0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR __lpa$187419[ebp], 0

; 507  :                 result = (HINSTANCE) WinExec(T2A(key),showcmd);

  0190b	8b f4		 mov	 esi, esp
  0190d	8b 45 0c	 mov	 eax, DWORD PTR _showcmd$[ebp]
  01910	50		 push	 eax
  01911	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _key$[ebp]
  01917	51		 push	 ecx
  01918	e8 00 00 00 00	 call	 ?T2A@@YAPADPAD@Z	; T2A
  0191d	83 c4 04	 add	 esp, 4
  01920	50		 push	 eax
  01921	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WinExec@8
  01927	3b f4		 cmp	 esi, esp
  01929	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0192e	89 85 e4 fd ff
	ff		 mov	 DWORD PTR _result$[ebp], eax
$L187397:

; 508  :             }
; 509  :         }
; 510  :     }
; 511  : 
; 512  :     return result;

  01934	8b 85 e4 fd ff
	ff		 mov	 eax, DWORD PTR _result$[ebp]

; 513  : }

  0193a	52		 push	 edx
  0193b	8b cd		 mov	 ecx, ebp
  0193d	50		 push	 eax
  0193e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188146
  01944	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01949	58		 pop	 eax
  0194a	5a		 pop	 edx
  0194b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0194e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01953	5f		 pop	 edi
  01954	5e		 pop	 esi
  01955	81 c4 30 02 00
	00		 add	 esp, 560		; 00000230H
  0195b	3b ec		 cmp	 ebp, esp
  0195d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01962	8b e5		 mov	 esp, ebp
  01964	5d		 pop	 ebp
  01965	c2 08 00	 ret	 8
$L188146:
  01968	01 00 00 00	 DD	 1
  0196c	00 00 00 00	 DD	 $L188145
$L188145:
  01970	ec fd ff ff	 DD	 -532			; fffffdecH
  01974	08 02 00 00	 DD	 520			; 00000208H
  01978	00 00 00 00	 DD	 $L188143
$L188143:
  0197c	6b		 DB	 107			; 0000006bH
  0197d	65		 DB	 101			; 00000065H
  0197e	79		 DB	 121			; 00000079H
  0197f	00		 DB	 0
?GotoURL@CHyperLink@@IAEPAUHINSTANCE__@@PBDH@Z ENDP	; CHyperLink::GotoURL
_TEXT	ENDS
EXTRN	__imp___mbsstr:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\include\tchar.h
;	COMDAT __tcsstr
_TEXT	SEGMENT
__s1$ = 8						; size = 4
__s2$ = 12						; size = 4
__tcsstr PROC NEAR					; COMDAT

; 847  : __inline _PC _tcsstr(_CPC _s1,_CPC _s2) {return (_PC)_mbsstr((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f4		 mov	 esi, esp
  00006	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbsstr
  00014	83 c4 08	 add	 esp, 8
  00017	3b f4		 cmp	 esi, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001e	5e		 pop	 esi
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
__tcsstr ENDP
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 158  : 	return( g_pfnGetThreadACP() );

  00004	8b f4		 mov	 esi, esp
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  0000c	3b f4		 cmp	 esi, esp
  0000e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 159  : }

  00013	5e		 pop	 esi
  00014	3b ec		 cmp	 ebp, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
EXTRN	__imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ:NEAR
EXTRN	__imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ:NEAR
EXTRN	__imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z:NEAR
EXTRN	__imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z:NEAR
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z:NEAR
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
xdata$x	SEGMENT
$T188160 DD	0ffffffffH
	DD	FLAT:$L188150
$T188155 DD	019930520H
	DD	01H
	DD	FLAT:$T188160
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
_TEXT	SEGMENT
$T188152 = -28						; size = 4
_strResult$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_psz1$ = 12						; size = 4
_str2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z PROC NEAR ; ATL::operator+, COMDAT

; 2032 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 10	 sub	 esp, 16			; 00000010H
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00025	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00028	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002e	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T188152[ebp], 0

; 2033 : 		CStringT strResult( str2.GetManager() );

  00035	8b f4		 mov	 esi, esp
  00037	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetManager@?$CSimpleStringT@D$00@ATL@@QBEPAUIAtlStringMgr@2@XZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b f4		 mov	 esi, esp
  00049	50		 push	 eax
  0004a	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
  00053	3b f4		 cmp	 esi, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2034 : 
; 2035 : 		Concatenate( strResult, psz1, StringLength( psz1 ), str2, str2.GetLength() );

  00061	8b f4		 mov	 esi, esp
  00063	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b f4		 mov	 esi, esp
  00075	50		 push	 eax
  00076	8b fc		 mov	 edi, esp
  00078	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00081	3b fc		 cmp	 edi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	50		 push	 eax
  00089	8b fc		 mov	 edi, esp
  0008b	8b 45 0c	 mov	 eax, DWORD PTR _psz1$[ebp]
  0008e	50		 push	 eax
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z
  00095	83 c4 04	 add	 esp, 4
  00098	3b fc		 cmp	 edi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	50		 push	 eax
  000a0	8b 4d 0c	 mov	 ecx, DWORD PTR _psz1$[ebp]
  000a3	51		 push	 ecx
  000a4	8d 55 ec	 lea	 edx, DWORD PTR _strResult$[ebp]
  000a7	52		 push	 edx
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z
  000ae	83 c4 14	 add	 esp, 20			; 00000014H
  000b1	3b f4		 cmp	 esi, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2036 : 
; 2037 : 		return( strResult );

  000b8	8b f4		 mov	 esi, esp
  000ba	8d 45 ec	 lea	 eax, DWORD PTR _strResult$[ebp]
  000bd	50		 push	 eax
  000be	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  000c7	3b f4		 cmp	 esi, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ce	8b 4d e4	 mov	 ecx, DWORD PTR $T188152[ebp]
  000d1	83 c9 01	 or	 ecx, 1
  000d4	89 4d e4	 mov	 DWORD PTR $T188152[ebp], ecx
  000d7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000de	8b f4		 mov	 esi, esp
  000e0	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2038 : 	}

  000f3	52		 push	 edx
  000f4	8b cd		 mov	 ecx, ebp
  000f6	50		 push	 eax
  000f7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L188159
  000fd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00102	58		 pop	 eax
  00103	5a		 pop	 edx
  00104	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00107	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	83 c4 1c	 add	 esp, 28			; 0000001cH
  00113	3b ec		 cmp	 ebp, esp
  00115	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c3		 ret	 0
$L188159:
  0011e	01 00 00 00	 DD	 1
  00122	00 00 00 00	 DD	 $L188158
$L188158:
  00126	ec ff ff ff	 DD	 -20			; ffffffecH
  0012a	04 00 00 00	 DD	 4
  0012e	00 00 00 00	 DD	 $L188156
$L188156:
  00132	73		 DB	 115			; 00000073H
  00133	74		 DB	 116			; 00000074H
  00134	72		 DB	 114			; 00000072H
  00135	52		 DB	 82			; 00000052H
  00136	65		 DB	 101			; 00000065H
  00137	73		 DB	 115			; 00000073H
  00138	75		 DB	 117			; 00000075H
  00139	6c		 DB	 108			; 0000006cH
  0013a	74		 DB	 116			; 00000074H
  0013b	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L188150:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188155
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBDABV10@@Z ENDP ; ATL::operator+
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?T2A@@YAPADPAD@Z
_TEXT	SEGMENT
_lp$ = 8						; size = 4
?T2A@@YAPADPAD@Z PROC NEAR				; T2A, COMDAT

; 763  : 	inline LPSTR T2A(LPTSTR lp) { return lp; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?T2A@@YAPADPAD@Z ENDP					; T2A
_TEXT	ENDS
END
