; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\module\IrregularBorder\TranslucentDialog.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0EN@IBFBLEEG@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ?SetDontMoveContent@CWindowsMover@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTranslucentDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3CTranslucentDialog@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2CTranslucentDialog@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CDialog@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCDialog@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CTranslucentDialog@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVCTranslucentDialog@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R4CTranslucentDialog@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_C@_0EN@CBMLGOH@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FG@LDNDNCJM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseHDC@Graphics@Gdiplus@@QAEXPAUHDC__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetInterpolationMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4InterpolationMode@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSmoothingMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4SmoothingMode@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Graphics@Gdiplus@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHeight@Image@Gdiplus@@QAEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWidth@Image@Gdiplus@@QAEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_messageEntries@CTranslucentDialog@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CTranslucentDialog@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTranslucentDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?_messageEntries@CTranslucentDialog@@0QBUAFX_MSGMAP_ENTRY@@B ; CTranslucentDialog::_messageEntries
PUBLIC	?messageMap@CTranslucentDialog@@1UAFX_MSGMAP@@B	; CTranslucentDialog::messageMap
PUBLIC	?OnEraseBkgnd@CTranslucentDialog@@AAEHPAVCDC@@@Z ; CTranslucentDialog::OnEraseBkgnd
PUBLIC	?OnCreate@CTranslucentDialog@@AAEHPAUtagCREATESTRUCTA@@@Z ; CTranslucentDialog::OnCreate
PUBLIC	?OnLButtonDown@CTranslucentDialog@@AAEXIVCPoint@@@Z ; CTranslucentDialog::OnLButtonDown
PUBLIC	?OnLButtonUp@CTranslucentDialog@@QAEXIVCPoint@@@Z ; CTranslucentDialog::OnLButtonUp
PUBLIC	?OnMouseMove@CTranslucentDialog@@QAEXIVCPoint@@@Z ; CTranslucentDialog::OnMouseMove
EXTRN	?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ:NEAR ; CDialog::GetThisMessageMap
;	COMDAT ?_messageEntries@CTranslucentDialog@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CTranslucentDialog@@0QBUAFX_MSGMAP_ENTRY@@B DD 014H ; CTranslucentDialog::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:?OnEraseBkgnd@CTranslucentDialog@@AAEHPAVCDC@@@Z
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0dH
	DD	FLAT:?OnCreate@CTranslucentDialog@@AAEHPAUtagCREATESTRUCTA@@@Z
	DD	0201H
	DD	00H
	DD	00H
	DD	00H
	DD	032H
	DD	FLAT:?OnLButtonDown@CTranslucentDialog@@AAEXIVCPoint@@@Z
	DD	0202H
	DD	00H
	DD	00H
	DD	00H
	DD	032H
	DD	FLAT:?OnLButtonUp@CTranslucentDialog@@QAEXIVCPoint@@@Z
	DD	0200H
	DD	00H
	DD	00H
	DD	00H
	DD	032H
	DD	FLAT:?OnMouseMove@CTranslucentDialog@@QAEXIVCPoint@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CTranslucentDialog@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CTranslucentDialog@@1UAFX_MSGMAP@@B DD FLAT:?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ ; CTranslucentDialog::messageMap
	DD	FLAT:?_messageEntries@CTranslucentDialog@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
CONST	SEGMENT
$SG188700 DB	'.\src\module\IrregularBorder\TranslucentDialog.cpp', 00H
	ORG $+1
$SG188702 DB	'.\src\module\IrregularBorder\TranslucentDialog.cpp', 00H
	ORG $+1
$SG188712 DB	'.\src\module\IrregularBorder\TranslucentDialog.cpp', 00H
	ORG $+1
$SG188714 DB	'.\src\module\IrregularBorder\TranslucentDialog.cpp', 00H
	ORG $+1
$SG188738 DB	'.\src\module\IrregularBorder\TranslucentDialog.cpp', 00H
	ORG $+1
$SG188739 DB	'w: %d ,h: %d, wold:%d, hold%d', 0dH, 0aH, 00H
$SG188756 DB	'.\src\module\IrregularBorder\TranslucentDialog.cpp', 00H
	ORG $+1
$SG188797 DB	'User32.DLL', 00H
	ORG $+1
$SG188810 DB	'UpdateLayeredWindow', 00H
CONST	ENDS
PUBLIC	??_R1A@?0A@A@CDialog@@8				; CDialog::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCDialog@@@8				; CDialog `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@A@CObject@@8				; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R4CTranslucentDialog@@6B@			; CTranslucentDialog::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTranslucentDialog@@@8			; CTranslucentDialog `RTTI Type Descriptor'
PUBLIC	??_R3CTranslucentDialog@@8			; CTranslucentDialog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTranslucentDialog@@8			; CTranslucentDialog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@A@CTranslucentDialog@@8		; CTranslucentDialog::`RTTI Base Class Descriptor at (0,-1,0,0)'
PUBLIC	??0CTranslucentDialog@@QAE@IPBDPAVCWnd@@@Z	; CTranslucentDialog::CTranslucentDialog
PUBLIC	?OnInitDialog@CTranslucentDialog@@MAEHXZ	; CTranslucentDialog::OnInitDialog
PUBLIC	?GetMessageMap@CTranslucentDialog@@MBEPBUAFX_MSGMAP@@XZ ; CTranslucentDialog::GetMessageMap
PUBLIC	??_7CTranslucentDialog@@6B@			; CTranslucentDialog::`vftable'
PUBLIC	??_GCTranslucentDialog@@UAEPAXI@Z		; CTranslucentDialog::`scalar deleting destructor'
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accValue
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDescription
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:NEAR ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:NEAR	; CObject::Serialize
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:NEAR ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:NEAR		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:NEAR		; CWnd::EndModalState
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	??_ECTranslucentDialog@@UAEPAXI@Z:NEAR		; CTranslucentDialog::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ:NEAR ; CDialog::GetRuntimeClass
EXTRN	?Create@CDialog@@UAEHPBDPAVCWnd@@@Z:NEAR	; CDialog::Create
EXTRN	?Create@CDialog@@UAEHIPAVCWnd@@@Z:NEAR		; CDialog::Create
EXTRN	?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z:NEAR ; CDialog::CreateIndirect
EXTRN	?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z:NEAR ; CDialog::CreateIndirect
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	??0CDialog@@QAE@IPAVCWnd@@@Z:NEAR		; CDialog::CDialog
EXTRN	?DoModal@CDialog@@UAEHXZ:NEAR			; CDialog::DoModal
EXTRN	?OnSetFont@CDialog@@UAEXPAVCFont@@@Z:NEAR	; CDialog::OnSetFont
EXTRN	?OnOK@CDialog@@MAEXXZ:NEAR			; CDialog::OnOK
EXTRN	?OnCancel@CDialog@@MAEXXZ:NEAR			; CDialog::OnCancel
EXTRN	?AssertValid@CDialog@@UBEXXZ:NEAR		; CDialog::AssertValid
EXTRN	?Dump@CDialog@@UBEXAAVCDumpContext@@@Z:NEAR	; CDialog::Dump
EXTRN	?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z:NEAR ; CDialog::PreTranslateMessage
EXTRN	?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CDialog::OnCmdMsg
EXTRN	?CheckAutoCenter@CDialog@@UAEHXZ:NEAR		; CDialog::CheckAutoCenter
EXTRN	?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CDialog::SetOccDialogInfo
EXTRN	?PreInitDialog@CDialog@@MAEXXZ:NEAR		; CDialog::PreInitDialog
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
;	COMDAT rtc$IMZ
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\irregularborder\translucentdialog.cpp
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT ??_7CTranslucentDialog@@6B@
CONST	SEGMENT
??_7CTranslucentDialog@@6B@ DD FLAT:??_R4CTranslucentDialog@@6B@ ; CTranslucentDialog::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECTranslucentDialog@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CTranslucentDialog@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CTranslucentDialog@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDialog@@MAEXXZ
	DD	FLAT:?OnCancel@CDialog@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
CONST	ENDS
;	COMDAT ??_R4CTranslucentDialog@@6B@
rdata$r	SEGMENT
??_R4CTranslucentDialog@@6B@ DD 00H			; CTranslucentDialog::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTranslucentDialog@@@8
	DD	FLAT:??_R3CTranslucentDialog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTranslucentDialog@@@8
_DATA	SEGMENT
??_R0?AVCTranslucentDialog@@@8 DD FLAT:??_7type_info@@6B@ ; CTranslucentDialog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTranslucentDialog@@', 00H
_DATA	ENDS
;	COMDAT ??_R3CTranslucentDialog@@8
rdata$r	SEGMENT
??_R3CTranslucentDialog@@8 DD 00H			; CTranslucentDialog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CTranslucentDialog@@8
rdata$r	ENDS
;	COMDAT ??_R2CTranslucentDialog@@8
rdata$r	SEGMENT
??_R2CTranslucentDialog@@8 DD FLAT:??_R1A@?0A@A@CTranslucentDialog@@8 ; CTranslucentDialog::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@A@CDialog@@8
	DD	FLAT:??_R1A@?0A@A@CWnd@@8
	DD	FLAT:??_R1A@?0A@A@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@A@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CTranslucentDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CTranslucentDialog@@8 DD FLAT:??_R0?AVCTranslucentDialog@@@8 ; CTranslucentDialog::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@CDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CDialog@@8 DD FLAT:??_R0?AVCDialog@@@8	; CDialog::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCDialog@@@8
_DATA	SEGMENT
??_R0?AVCDialog@@@8 DD FLAT:??_7type_info@@6B@		; CDialog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDialog@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
_DATA	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
_DATA	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@A@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,0)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIDTemplate$ = 8					; size = 4
_lpszFile$ = 12						; size = 4
_pParent$ = 16						; size = 4
??0CTranslucentDialog@@QAE@IPBDPAVCWnd@@@Z PROC NEAR	; CTranslucentDialog::CTranslucentDialog
; _this$ = ecx

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _nIDTemplate$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0CDialog@@QAE@IPAVCWnd@@@Z ; CDialog::CDialog
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:??_7CTranslucentDialog@@6B@
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	c6 80 94 00 00
	00 01		 mov	 BYTE PTR [eax+148], 1
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	c6 81 95 00 00
	00 01		 mov	 BYTE PTR [ecx+149], 1

; 11   : 	m_pImage = NULL;

  0003b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	c7 82 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+136], 0

; 12   : 	m_nCx = m_nCy = 0;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	c7 80 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+132], 0
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], 0

; 13   : }

  00062	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	83 c4 04	 add	 esp, 4
  00068	3b ec		 cmp	 ebp, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 0c 00	 ret	 12			; 0000000cH
??0CTranslucentDialog@@QAE@IPBDPAVCWnd@@@Z ENDP		; CTranslucentDialog::CTranslucentDialog
_TEXT	ENDS
PUBLIC	??1CTranslucentDialog@@UAE@XZ			; CTranslucentDialog::~CTranslucentDialog
EXTRN	??3CObject@@SGXPAX@Z:NEAR			; CObject::operator delete
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_GCTranslucentDialog@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCTranslucentDialog@@UAEPAXI@Z PROC NEAR		; CTranslucentDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CTranslucentDialog@@UAE@XZ ; CTranslucentDialog::~CTranslucentDialog
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 09		 je	 SHORT $L188652
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L188652:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??_GCTranslucentDialog@@UAEPAXI@Z ENDP			; CTranslucentDialog::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CDialog@@UAE@XZ:NEAR				; CDialog::~CDialog
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
xdata$x	SEGMENT
$T189320 DD	0ffffffffH
	DD	FLAT:$L189313
$T189317 DD	019930520H
	DD	01H
	DD	FLAT:$T189320
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv72 = -28						; size = 4
$T189310 = -24						; size = 4
$T189309 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CTranslucentDialog@@UAE@XZ PROC NEAR			; CTranslucentDialog::~CTranslucentDialog
; _this$ = ecx

; 16   : {

  00080	55		 push	 ebp
  00081	8b ec		 mov	 ebp, esp
  00083	6a ff		 push	 -1
  00085	68 00 00 00 00	 push	 __ehhandler$??1CTranslucentDialog@@UAE@XZ
  0008a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00090	50		 push	 eax
  00091	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00098	83 ec 10	 sub	 esp, 16			; 00000010H
  0009b	56		 push	 esi
  0009c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  000a1	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  000a4	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  000a7	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  000aa	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  000ad	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  000b0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTranslucentDialog@@6B@
  000b9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 17   : 	delete m_pImage;

  000c0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	8b 91 88 00 00
	00		 mov	 edx, DWORD PTR [ecx+136]
  000c9	89 55 e8	 mov	 DWORD PTR $T189310[ebp], edx
  000cc	8b 45 e8	 mov	 eax, DWORD PTR $T189310[ebp]
  000cf	89 45 ec	 mov	 DWORD PTR $T189309[ebp], eax
  000d2	83 7d ec 00	 cmp	 DWORD PTR $T189309[ebp], 0
  000d6	74 1a		 je	 SHORT $L189311
  000d8	8b f4		 mov	 esi, esp
  000da	6a 01		 push	 1
  000dc	8b 4d ec	 mov	 ecx, DWORD PTR $T189309[ebp]
  000df	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e1	8b 4d ec	 mov	 ecx, DWORD PTR $T189309[ebp]
  000e4	ff 12		 call	 DWORD PTR [edx]
  000e6	3b f4		 cmp	 esi, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ed	89 45 e4	 mov	 DWORD PTR tv72[ebp], eax
  000f0	eb 07		 jmp	 SHORT $L189312
$L189311:
  000f2	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$L189312:

; 18   : 	m_pImage = NULL;

  000f9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000fc	c7 80 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+136], 0

; 19   : }

  00106	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00115	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00118	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0011f	5e		 pop	 esi
  00120	83 c4 1c	 add	 esp, 28			; 0000001cH
  00123	3b ec		 cmp	 ebp, esp
  00125	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012a	8b e5		 mov	 esp, ebp
  0012c	5d		 pop	 ebp
  0012d	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L189313:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
__ehhandler$??1CTranslucentDialog@@UAE@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189317
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CTranslucentDialog@@UAE@XZ ENDP			; CTranslucentDialog::~CTranslucentDialog
PUBLIC	?GetThisMessageMap@CTranslucentDialog@@KGPBUAFX_MSGMAP@@XZ ; CTranslucentDialog::GetThisMessageMap
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
?GetThisMessageMap@CTranslucentDialog@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CTranslucentDialog::GetThisMessageMap

; 21   : BEGIN_MESSAGE_MAP(CTranslucentDialog, CDialog)

  00130	55		 push	 ebp
  00131	8b ec		 mov	 ebp, esp
  00133	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CTranslucentDialog@@1UAFX_MSGMAP@@B ; CTranslucentDialog::messageMap
  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
?GetThisMessageMap@CTranslucentDialog@@KGPBUAFX_MSGMAP@@XZ ENDP ; CTranslucentDialog::GetThisMessageMap
; Function compile flags: /Odt /RTCsu
_this$ = -4						; size = 4
?GetMessageMap@CTranslucentDialog@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CTranslucentDialog::GetMessageMap
; _this$ = ecx

; 21   : BEGIN_MESSAGE_MAP(CTranslucentDialog, CDialog)

  00140	55		 push	 ebp
  00141	8b ec		 mov	 ebp, esp
  00143	51		 push	 ecx
  00144	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0014b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0014e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CTranslucentDialog@@1UAFX_MSGMAP@@B ; CTranslucentDialog::messageMap
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c3		 ret	 0
?GetMessageMap@CTranslucentDialog@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CTranslucentDialog::GetMessageMap
_TEXT	ENDS
PUBLIC	?SetEnableDrag@CTranslucentDialog@@QAEX_N@Z	; CTranslucentDialog::SetEnableDrag
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bEnableDrag$ = 8					; size = 1
?SetEnableDrag@CTranslucentDialog@@QAEX_N@Z PROC NEAR	; CTranslucentDialog::SetEnableDrag
; _this$ = ecx

; 30   : {

  00160	55		 push	 ebp
  00161	8b ec		 mov	 ebp, esp
  00163	51		 push	 ecx
  00164	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0016b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 31   : 	m_bEnableDrag = bEnableDrag;

  0016e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00171	8a 4d 08	 mov	 cl, BYTE PTR _bEnableDrag$[ebp]
  00174	88 88 94 00 00
	00		 mov	 BYTE PTR [eax+148], cl

; 32   : }

  0017a	8b e5		 mov	 esp, ebp
  0017c	5d		 pop	 ebp
  0017d	c2 04 00	 ret	 4
?SetEnableDrag@CTranslucentDialog@@QAEX_N@Z ENDP	; CTranslucentDialog::SetEnableDrag
_TEXT	ENDS
PUBLIC	?SetCenterAligned@CTranslucentDialog@@QAEX_N@Z	; CTranslucentDialog::SetCenterAligned
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bCenterAligned$ = 8					; size = 1
?SetCenterAligned@CTranslucentDialog@@QAEX_N@Z PROC NEAR ; CTranslucentDialog::SetCenterAligned
; _this$ = ecx

; 35   : {

  00180	55		 push	 ebp
  00181	8b ec		 mov	 ebp, esp
  00183	51		 push	 ecx
  00184	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0018b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 36   : 	m_bCenterAligned = bCenterAligned;

  0018e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00191	8a 4d 08	 mov	 cl, BYTE PTR _bCenterAligned$[ebp]
  00194	88 88 95 00 00
	00		 mov	 BYTE PTR [eax+149], cl

; 37   : }

  0019a	8b e5		 mov	 esp, ebp
  0019c	5d		 pop	 ebp
  0019d	c2 04 00	 ret	 4
?SetCenterAligned@CTranslucentDialog@@QAEX_N@Z ENDP	; CTranslucentDialog::SetCenterAligned
_TEXT	ENDS
EXTRN	?AfxAssertFailedLine@@YGHPBDH@Z:NEAR		; AfxAssertFailedLine
EXTRN	__imp__GetWindowLongA@8:NEAR
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:NEAR		; CDialog::OnInitDialog
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_dwStyle$ = -8						; size = 4
_this$ = -4						; size = 4
?OnInitDialog@CTranslucentDialog@@MAEHXZ PROC NEAR	; CTranslucentDialog::OnInitDialog
; _this$ = ecx

; 40   : {

  001a0	55		 push	 ebp
  001a1	8b ec		 mov	 ebp, esp
  001a3	83 ec 08	 sub	 esp, 8
  001a6	56		 push	 esi
  001a7	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  001ae	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  001b5	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   : 	CDialog::OnInitDialog();

  001b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001bb	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 42   : 	// must be WS_POPUP
; 43   : 	DWORD dwStyle = ::GetWindowLong(m_hWnd, GWL_STYLE);

  001c0	8b f4		 mov	 esi, esp
  001c2	6a f0		 push	 -16			; fffffff0H
  001c4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001c7	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  001ca	51		 push	 ecx
  001cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongA@8
  001d1	3b f4		 cmp	 esi, esp
  001d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d8	89 45 f8	 mov	 DWORD PTR _dwStyle$[ebp], eax

; 44   : 	VERIFY((dwStyle & WS_POPUP) != 0);

  001db	8b 55 f8	 mov	 edx, DWORD PTR _dwStyle$[ebp]
  001de	81 e2 00 00 00
	80		 and	 edx, -2147483648	; 80000000H
  001e4	75 11		 jne	 SHORT $L189327
  001e6	6a 2c		 push	 44			; 0000002cH
  001e8	68 00 00 00 00	 push	 OFFSET FLAT:$SG188700
  001ed	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001f2	85 c0		 test	 eax, eax
  001f4	74 01		 je	 SHORT $L189327
  001f6	cc		 int	 3
$L189327:

; 45   : 	VERIFY((dwStyle & WS_CHILD) == 0);

  001f7	8b 4d f8	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  001fa	81 e1 00 00 00
	40		 and	 ecx, 1073741824		; 40000000H
  00200	74 11		 je	 SHORT $L189328
  00202	6a 2d		 push	 45			; 0000002dH
  00204	68 00 00 00 00	 push	 OFFSET FLAT:$SG188702
  00209	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0020e	85 c0		 test	 eax, eax
  00210	74 01		 je	 SHORT $L189328
  00212	cc		 int	 3
$L189328:

; 46   : 
; 47   : 	m_blend.BlendOp = 0;

  00213	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00216	c6 80 90 00 00
	00 00		 mov	 BYTE PTR [eax+144], 0

; 48   : 	m_blend.BlendFlags = 0;

  0021d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00220	c6 81 91 00 00
	00 00		 mov	 BYTE PTR [ecx+145], 0

; 49   : 	m_blend.AlphaFormat = 1;

  00227	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0022a	c6 82 93 00 00
	00 01		 mov	 BYTE PTR [edx+147], 1

; 50   : 	m_blend.SourceConstantAlpha = 255;//AC_SRC_ALPHA

  00231	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00234	c6 80 92 00 00
	00 ff		 mov	 BYTE PTR [eax+146], 255	; 000000ffH

; 51   : 	return TRUE;

  0023b	b8 01 00 00 00	 mov	 eax, 1

; 52   : }

  00240	5e		 pop	 esi
  00241	83 c4 08	 add	 esp, 8
  00244	3b ec		 cmp	 ebp, esp
  00246	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0024b	8b e5		 mov	 esp, ebp
  0024d	5d		 pop	 ebp
  0024e	c3		 ret	 0
?OnInitDialog@CTranslucentDialog@@MAEHXZ ENDP		; CTranslucentDialog::OnInitDialog
; Function compile flags: /Odt /RTCsu
_this$ = -4						; size = 4
_pDC$ = 8						; size = 4
?OnEraseBkgnd@CTranslucentDialog@@AAEHPAVCDC@@@Z PROC NEAR ; CTranslucentDialog::OnEraseBkgnd
; _this$ = ecx

; 55   : {

  00250	55		 push	 ebp
  00251	8b ec		 mov	 ebp, esp
  00253	51		 push	 ecx
  00254	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0025b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 56   : 	return TRUE;

  0025e	b8 01 00 00 00	 mov	 eax, 1

; 57   : }

  00263	8b e5		 mov	 esp, ebp
  00265	5d		 pop	 ebp
  00266	c2 04 00	 ret	 4
?OnEraseBkgnd@CTranslucentDialog@@AAEHPAVCDC@@@Z ENDP	; CTranslucentDialog::OnEraseBkgnd
_TEXT	ENDS
EXTRN	?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::OnCreate
EXTRN	?ModifyStyle@CWnd@@QAEHKKI@Z:NEAR		; CWnd::ModifyStyle
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpCreateStruct$ = 8					; size = 4
?OnCreate@CTranslucentDialog@@AAEHPAUtagCREATESTRUCTA@@@Z PROC NEAR ; CTranslucentDialog::OnCreate
; _this$ = ecx

; 60   : {

  00270	55		 push	 ebp
  00271	8b ec		 mov	 ebp, esp
  00273	51		 push	 ecx
  00274	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0027b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 61   : 	// Must be overlapped
; 62   : 	VERIFY((lpCreateStruct->style & WS_POPUP) == 0);

  0027e	8b 45 08	 mov	 eax, DWORD PTR _lpCreateStruct$[ebp]
  00281	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00284	81 e1 00 00 00
	80		 and	 ecx, -2147483648	; 80000000H
  0028a	74 11		 je	 SHORT $L189331
  0028c	6a 3e		 push	 62			; 0000003eH
  0028e	68 00 00 00 00	 push	 OFFSET FLAT:$SG188712
  00293	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00298	85 c0		 test	 eax, eax
  0029a	74 01		 je	 SHORT $L189331
  0029c	cc		 int	 3
$L189331:

; 63   : 	VERIFY((lpCreateStruct->style & WS_CHILD) == 0);

  0029d	8b 45 08	 mov	 eax, DWORD PTR _lpCreateStruct$[ebp]
  002a0	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  002a3	81 e1 00 00 00
	40		 and	 ecx, 1073741824		; 40000000H
  002a9	74 11		 je	 SHORT $L189332
  002ab	6a 3f		 push	 63			; 0000003fH
  002ad	68 00 00 00 00	 push	 OFFSET FLAT:$SG188714
  002b2	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002b7	85 c0		 test	 eax, eax
  002b9	74 01		 je	 SHORT $L189332
  002bb	cc		 int	 3
$L189332:

; 64   : 
; 65   : 	if (CDialog::OnCreate(lpCreateStruct) == -1)

  002bc	8b 45 08	 mov	 eax, DWORD PTR _lpCreateStruct$[ebp]
  002bf	50		 push	 eax
  002c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002c3	e8 00 00 00 00	 call	 ?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z ; CWnd::OnCreate
  002c8	83 f8 ff	 cmp	 eax, -1
  002cb	75 05		 jne	 SHORT $L188715

; 66   : 		return -1;

  002cd	83 c8 ff	 or	 eax, -1
  002d0	eb 23		 jmp	 SHORT $L188710
$L188715:

; 67   : 	m_pLastImage = NULL;

  002d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d5	c7 81 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+140], 0

; 68   : 	ModifyStyle(WS_CAPTION, WS_POPUP, 0);

  002df	6a 00		 push	 0
  002e1	68 00 00 00 80	 push	 -2147483648		; 80000000H
  002e6	68 00 00 c0 00	 push	 12582912		; 00c00000H
  002eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ee	e8 00 00 00 00	 call	 ?ModifyStyle@CWnd@@QAEHKKI@Z ; CWnd::ModifyStyle

; 69   : 	return 0;

  002f3	33 c0		 xor	 eax, eax
$L188710:

; 70   : }

  002f5	83 c4 04	 add	 esp, 4
  002f8	3b ec		 cmp	 ebp, esp
  002fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ff	8b e5		 mov	 esp, ebp
  00301	5d		 pop	 ebp
  00302	c2 04 00	 ret	 4
?OnCreate@CTranslucentDialog@@AAEHPAUtagCREATESTRUCTA@@@Z ENDP ; CTranslucentDialog::OnCreate
_TEXT	ENDS
PUBLIC	?UpdatePosition@CTranslucentDialog@@QAEXUtagPOINT@@@Z ; CTranslucentDialog::UpdatePosition
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 8
?UpdatePosition@CTranslucentDialog@@QAEXUtagPOINT@@@Z PROC NEAR ; CTranslucentDialog::UpdatePosition
; _this$ = ecx

; 73   : {

  00310	55		 push	 ebp
  00311	8b ec		 mov	 ebp, esp
  00313	51		 push	 ecx
  00314	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0031b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 74   : 	m_ptPos = p;

  0031e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00321	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00324	89 48 78	 mov	 DWORD PTR [eax+120], ecx
  00327	8b 55 0c	 mov	 edx, DWORD PTR _p$[ebp+4]
  0032a	89 50 7c	 mov	 DWORD PTR [eax+124], edx

; 75   : }

  0032d	8b e5		 mov	 esp, ebp
  0032f	5d		 pop	 ebp
  00330	c2 08 00	 ret	 8
?UpdatePosition@CTranslucentDialog@@QAEXUtagPOINT@@@Z ENDP ; CTranslucentDialog::UpdatePosition
_TEXT	ENDS
PUBLIC	?GetImageWidth@CTranslucentDialog@@QAEHXZ	; CTranslucentDialog::GetImageWidth
PUBLIC	?GetWidth@Image@Gdiplus@@QAEIXZ			; Gdiplus::Image::GetWidth
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetImageWidth@CTranslucentDialog@@QAEHXZ PROC NEAR	; CTranslucentDialog::GetImageWidth
; _this$ = ecx

; 78   : {

  00340	55		 push	 ebp
  00341	8b ec		 mov	 ebp, esp
  00343	51		 push	 ecx
  00344	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0034b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 79   : 	if(m_pImage == NULL)

  0034e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00351	83 b8 88 00 00
	00 00		 cmp	 DWORD PTR [eax+136], 0
  00358	75 04		 jne	 SHORT $L188723

; 80   : 		return 0;

  0035a	33 c0		 xor	 eax, eax
  0035c	eb 0e		 jmp	 SHORT $L188722
$L188723:

; 81   : 	else
; 82   : 		return m_pImage->GetWidth();

  0035e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00361	8b 89 88 00 00
	00		 mov	 ecx, DWORD PTR [ecx+136]
  00367	e8 00 00 00 00	 call	 ?GetWidth@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetWidth
$L188722:

; 83   : }

  0036c	83 c4 04	 add	 esp, 4
  0036f	3b ec		 cmp	 ebp, esp
  00371	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00376	8b e5		 mov	 esp, ebp
  00378	5d		 pop	 ebp
  00379	c3		 ret	 0
?GetImageWidth@CTranslucentDialog@@QAEHXZ ENDP		; CTranslucentDialog::GetImageWidth
_TEXT	ENDS
PUBLIC	?GetImageHeight@CTranslucentDialog@@QAEHXZ	; CTranslucentDialog::GetImageHeight
PUBLIC	?GetHeight@Image@Gdiplus@@QAEIXZ		; Gdiplus::Image::GetHeight
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetImageHeight@CTranslucentDialog@@QAEHXZ PROC NEAR	; CTranslucentDialog::GetImageHeight
; _this$ = ecx

; 86   : {

  00380	55		 push	 ebp
  00381	8b ec		 mov	 ebp, esp
  00383	51		 push	 ecx
  00384	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0038b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 87   : 	if(m_pImage == NULL)

  0038e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00391	83 b8 88 00 00
	00 00		 cmp	 DWORD PTR [eax+136], 0
  00398	75 04		 jne	 SHORT $L188728

; 88   : 		return 0;

  0039a	33 c0		 xor	 eax, eax
  0039c	eb 0e		 jmp	 SHORT $L188727
$L188728:

; 89   : 	else
; 90   : 		return m_pImage->GetHeight();

  0039e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a1	8b 89 88 00 00
	00		 mov	 ecx, DWORD PTR [ecx+136]
  003a7	e8 00 00 00 00	 call	 ?GetHeight@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetHeight
$L188727:

; 91   : }

  003ac	83 c4 04	 add	 esp, 4
  003af	3b ec		 cmp	 ebp, esp
  003b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b6	8b e5		 mov	 esp, ebp
  003b8	5d		 pop	 ebp
  003b9	c3		 ret	 0
?GetImageHeight@CTranslucentDialog@@QAEHXZ ENDP		; CTranslucentDialog::GetImageHeight
_TEXT	ENDS
PUBLIC	?SetDontMoveContent@CWindowsMover@@QAEXXZ	; CWindowsMover::SetDontMoveContent
PUBLIC	??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z		; Gdiplus::Graphics::Graphics
PUBLIC	??1Graphics@Gdiplus@@QAE@XZ			; Gdiplus::Graphics::~Graphics
PUBLIC	?ReleaseHDC@Graphics@Gdiplus@@QAEXPAUHDC__@@@Z	; Gdiplus::Graphics::ReleaseHDC
PUBLIC	?SetInterpolationMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4InterpolationMode@2@@Z ; Gdiplus::Graphics::SetInterpolationMode
PUBLIC	?SetSmoothingMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4SmoothingMode@2@@Z ; Gdiplus::Graphics::SetSmoothingMode
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ		; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?UpdateView@CTranslucentDialog@@QAEXH@Z		; CTranslucentDialog::UpdateView
PUBLIC	?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HHHH@Z ; Gdiplus::Graphics::DrawImage
EXTRN	__imp__FreeLibrary@4:NEAR
EXTRN	__imp__GetProcAddress@8:NEAR
EXTRN	__imp__SelectObject@8:NEAR
EXTRN	?GetInstance@CWindowsMover@@SAPAV1@XZ:NEAR	; CWindowsMover::GetInstance
EXTRN	__imp__CreateCompatibleDC@4:NEAR
EXTRN	__imp__GetDC@4:NEAR
EXTRN	__imp__DeleteDC@4:NEAR
EXTRN	__imp__DeleteObject@4:NEAR
EXTRN	??0CRect@@QAE@XZ:NEAR				; CRect::CRect
EXTRN	?Width@CRect@@QBEHXZ:NEAR			; CRect::Width
EXTRN	?Height@CRect@@QBEHXZ:NEAR			; CRect::Height
EXTRN	__imp__CreateDIBSection@24:NEAR
EXTRN	__imp__LoadLibraryA@4:NEAR
EXTRN	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z:NEAR	; CWnd::GetWindowRect
EXTRN	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z:NEAR	; CWnd::GetClientRect
EXTRN	__imp__Sleep@4:NEAR
EXTRN	__imp__SetWindowLongA@12:NEAR
EXTRN	_memset:NEAR
EXTRN	@_RTC_CheckStackVars@8:NEAR
xdata$x	SEGMENT
$T189363 DD	0ffffffffH
	DD	FLAT:$L189347
$T189349 DD	019930520H
	DD	01H
	DD	FLAT:$T189363
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv413 = -288						; size = 4
tv377 = -284						; size = 4
tv335 = -280						; size = 4
tv299 = -276						; size = 4
$T189337 = -272						; size = 8
_ret$188812 = -264					; size = 4
_ptSrc$188811 = -256					; size = 8
_UpdateLayeredWindow$188808 = -244			; size = 4
_hFuncInst$188796 = -240				; size = 4
_i$188788 = -236					; size = 4
_i$188780 = -232					; size = 4
_i$188772 = -228					; size = 4
_i$188764 = -224					; size = 4
_nSize$188762 = -220					; size = 4
_nStart$188761 = -216					; size = 4
_graph$188760 = -208					; size = 8
_ptWinPos$188759 = -192					; size = 8
_hbmpOld$188758 = -180					; size = 4
_hbmpMem$ = -176					; size = 4
_pvBits$ = -168						; size = 4
_nBytesPerLine$ = -160					; size = 4
_stBmpInfoHeader$ = -152				; size = 40
_sizeAllWindow$ = -104					; size = 8
_rcClient$ = -88					; size = 16
_rcWindow$ = -64					; size = 16
_hdcMemory$ = -44					; size = 4
_hDC$ = -40						; size = 4
_dwExStyle$ = -36					; size = 4
_sizeWindow$ = -28					; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bMustUpdate$ = 8					; size = 4
?UpdateView@CTranslucentDialog@@QAEXH@Z PROC NEAR	; CTranslucentDialog::UpdateView
; _this$ = ecx

; 94   : {

  003c0	55		 push	 ebp
  003c1	8b ec		 mov	 ebp, esp
  003c3	6a ff		 push	 -1
  003c5	68 00 00 00 00	 push	 __ehhandler$?UpdateView@CTranslucentDialog@@QAEXH@Z
  003ca	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  003d0	50		 push	 eax
  003d1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  003d8	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  003de	56		 push	 esi
  003df	57		 push	 edi
  003e0	51		 push	 ecx
  003e1	8d bd e0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-288]
  003e7	b9 45 00 00 00	 mov	 ecx, 69			; 00000045H
  003ec	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  003f1	f3 ab		 rep stosd
  003f3	59		 pop	 ecx
  003f4	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 95   : 	if(m_pImage == NULL)

  003f7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  003fa	83 b8 88 00 00
	00 00		 cmp	 DWORD PTR [eax+136], 0
  00401	75 05		 jne	 SHORT $L188734

; 96   : 	{ 
; 97   : 		return;

  00403	e9 b4 08 00 00	 jmp	 $L188733
$L188734:

; 98   : 	}
; 99   : 	if(m_pLastImage == m_pImage && !bMustUpdate)

  00408	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0040b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0040e	8b 81 8c 00 00
	00		 mov	 eax, DWORD PTR [ecx+140]
  00414	3b 82 88 00 00
	00		 cmp	 eax, DWORD PTR [edx+136]
  0041a	0f 85 c0 00 00
	00		 jne	 $L188735
  00420	83 7d 08 00	 cmp	 DWORD PTR _bMustUpdate$[ebp], 0
  00424	0f 85 b6 00 00
	00		 jne	 $L188735

; 100  : 	{
; 101  : 		if(m_pLastImage == NULL)

  0042a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0042d	83 b9 8c 00 00
	00 00		 cmp	 DWORD PTR [ecx+140], 0
  00434	75 05		 jne	 SHORT $L188736

; 102  : 		{
; 103  : 			return;

  00436	e9 81 08 00 00	 jmp	 $L188733
$L188736:

; 104  : 		}
; 105  : 		TRACE("w: %d ,h: %d, wold:%d, hold%d\r\n", m_pImage->GetWidth(),m_pImage->GetHeight(),m_pImage->GetWidth(),m_pImage->GetHeight());

  0043b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0043e	8b 8a 88 00 00
	00		 mov	 ecx, DWORD PTR [edx+136]
  00444	e8 00 00 00 00	 call	 ?GetHeight@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetHeight
  00449	50		 push	 eax
  0044a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0044d	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  00453	e8 00 00 00 00	 call	 ?GetWidth@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetWidth
  00458	50		 push	 eax
  00459	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0045c	8b 89 88 00 00
	00		 mov	 ecx, DWORD PTR [ecx+136]
  00462	e8 00 00 00 00	 call	 ?GetHeight@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetHeight
  00467	50		 push	 eax
  00468	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0046b	8b 8a 88 00 00
	00		 mov	 ecx, DWORD PTR [edx+136]
  00471	e8 00 00 00 00	 call	 ?GetWidth@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetWidth
  00476	50		 push	 eax
  00477	68 00 00 00 00	 push	 OFFSET FLAT:$SG188739
  0047c	6a 69		 push	 105			; 00000069H
  0047e	68 00 00 00 00	 push	 OFFSET FLAT:$SG188738
  00483	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR $T189337[ebp]
  00489	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0048e	50		 push	 eax
  0048f	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
  00494	83 c4 18	 add	 esp, 24			; 00000018H

; 106  : 		if(m_pLastImage->GetWidth() == m_pImage->GetWidth() 
; 107  : 			&& m_pLastImage->GetHeight() == m_pImage->GetHeight())

  00497	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0049a	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  004a0	e8 00 00 00 00	 call	 ?GetWidth@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetWidth
  004a5	8b f0		 mov	 esi, eax
  004a7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  004aa	8b 89 88 00 00
	00		 mov	 ecx, DWORD PTR [ecx+136]
  004b0	e8 00 00 00 00	 call	 ?GetWidth@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetWidth
  004b5	3b f0		 cmp	 esi, eax
  004b7	75 27		 jne	 SHORT $L188735
  004b9	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  004bc	8b 8a 8c 00 00
	00		 mov	 ecx, DWORD PTR [edx+140]
  004c2	e8 00 00 00 00	 call	 ?GetHeight@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetHeight
  004c7	8b f0		 mov	 esi, eax
  004c9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  004cc	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  004d2	e8 00 00 00 00	 call	 ?GetHeight@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetHeight
  004d7	3b f0		 cmp	 esi, eax
  004d9	75 05		 jne	 SHORT $L188735

; 108  : 		{
; 109  : 			return;

  004db	e9 dc 07 00 00	 jmp	 $L188733
$L188735:

; 110  : 		}
; 111  : 	}
; 112  : 
; 113  : 	m_pLastImage = m_pImage;

  004e0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  004e3	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  004e6	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  004ec	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax

; 114  : 	
; 115  : 	SIZE sizeWindow = { m_pImage->GetWidth(), m_pImage->GetHeight() };

  004f2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  004f5	8b 89 88 00 00
	00		 mov	 ecx, DWORD PTR [ecx+136]
  004fb	e8 00 00 00 00	 call	 ?GetWidth@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetWidth
  00500	89 45 e4	 mov	 DWORD PTR _sizeWindow$[ebp], eax
  00503	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00506	8b 8a 88 00 00
	00		 mov	 ecx, DWORD PTR [edx+136]
  0050c	e8 00 00 00 00	 call	 ?GetHeight@Image@Gdiplus@@QAEIXZ ; Gdiplus::Image::GetHeight
  00511	89 45 e8	 mov	 DWORD PTR _sizeWindow$[ebp+4], eax

; 116  : 
; 117  : 	DWORD dwExStyle = ::GetWindowLong(m_hWnd, GWL_EXSTYLE);

  00514	8b f4		 mov	 esi, esp
  00516	6a ec		 push	 -20			; ffffffecH
  00518	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0051b	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0051e	51		 push	 ecx
  0051f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongA@8
  00525	3b f4		 cmp	 esi, esp
  00527	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0052c	89 45 dc	 mov	 DWORD PTR _dwExStyle$[ebp], eax

; 118  : 	if ((dwExStyle & 0x80000) != 0x80000)

  0052f	8b 55 dc	 mov	 edx, DWORD PTR _dwExStyle$[ebp]
  00532	81 e2 00 00 08
	00		 and	 edx, 524288		; 00080000H
  00538	75 21		 jne	 SHORT $L188743

; 119  : 		::SetWindowLong(m_hWnd, GWL_EXSTYLE, dwExStyle | 0x80000);

  0053a	8b 45 dc	 mov	 eax, DWORD PTR _dwExStyle$[ebp]
  0053d	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  00542	8b f4		 mov	 esi, esp
  00544	50		 push	 eax
  00545	6a ec		 push	 -20			; ffffffecH
  00547	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0054a	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0054d	52		 push	 edx
  0054e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12
  00554	3b f4		 cmp	 esi, esp
  00556	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L188743:

; 120  : 
; 121  : 	CWindowsMover::GetInstance()->SetDontMoveContent();

  0055b	e8 00 00 00 00	 call	 ?GetInstance@CWindowsMover@@SAPAV1@XZ ; CWindowsMover::GetInstance
  00560	8b c8		 mov	 ecx, eax
  00562	e8 00 00 00 00	 call	 ?SetDontMoveContent@CWindowsMover@@QAEXXZ ; CWindowsMover::SetDontMoveContent

; 122  : 
; 123  : 	HDC hDC = ::GetDC(m_hWnd);

  00567	8b f4		 mov	 esi, esp
  00569	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0056c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0056f	51		 push	 ecx
  00570	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDC@4
  00576	3b f4		 cmp	 esi, esp
  00578	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0057d	89 45 d8	 mov	 DWORD PTR _hDC$[ebp], eax

; 124  : 	HDC hdcMemory = CreateCompatibleDC(hDC);

  00580	8b f4		 mov	 esi, esp
  00582	8b 55 d8	 mov	 edx, DWORD PTR _hDC$[ebp]
  00585	52		 push	 edx
  00586	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleDC@4
  0058c	3b f4		 cmp	 esi, esp
  0058e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00593	89 45 d4	 mov	 DWORD PTR _hdcMemory$[ebp], eax

; 125  : 
; 126  : 	RECT rcWindow;
; 127  : 	GetWindowRect(&rcWindow);

  00596	8d 45 c0	 lea	 eax, DWORD PTR _rcWindow$[ebp]
  00599	50		 push	 eax
  0059a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0059d	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 128  : 
; 129  : 	CRect rcClient;

  005a2	8d 4d a8	 lea	 ecx, DWORD PTR _rcClient$[ebp]
  005a5	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 130  : 	GetClientRect(&rcClient);

  005aa	8d 4d a8	 lea	 ecx, DWORD PTR _rcClient$[ebp]
  005ad	51		 push	 ecx
  005ae	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  005b1	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 131  : 
; 132  : 	SIZE sizeAllWindow = {rcClient.Width(), rcClient.Height()};

  005b6	8d 4d a8	 lea	 ecx, DWORD PTR _rcClient$[ebp]
  005b9	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  005be	89 45 98	 mov	 DWORD PTR _sizeAllWindow$[ebp], eax
  005c1	8d 4d a8	 lea	 ecx, DWORD PTR _rcClient$[ebp]
  005c4	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  005c9	89 45 9c	 mov	 DWORD PTR _sizeAllWindow$[ebp+4], eax

; 133  : 	BITMAPINFOHEADER stBmpInfoHeader = { 0 };   

  005cc	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _stBmpInfoHeader$[ebp], 0
  005d6	33 d2		 xor	 edx, edx
  005d8	89 95 6c ff ff
	ff		 mov	 DWORD PTR _stBmpInfoHeader$[ebp+4], edx
  005de	89 95 70 ff ff
	ff		 mov	 DWORD PTR _stBmpInfoHeader$[ebp+8], edx
  005e4	89 95 74 ff ff
	ff		 mov	 DWORD PTR _stBmpInfoHeader$[ebp+12], edx
  005ea	89 95 78 ff ff
	ff		 mov	 DWORD PTR _stBmpInfoHeader$[ebp+16], edx
  005f0	89 95 7c ff ff
	ff		 mov	 DWORD PTR _stBmpInfoHeader$[ebp+20], edx
  005f6	89 55 80	 mov	 DWORD PTR _stBmpInfoHeader$[ebp+24], edx
  005f9	89 55 84	 mov	 DWORD PTR _stBmpInfoHeader$[ebp+28], edx
  005fc	89 55 88	 mov	 DWORD PTR _stBmpInfoHeader$[ebp+32], edx
  005ff	89 55 8c	 mov	 DWORD PTR _stBmpInfoHeader$[ebp+36], edx

; 134  : 	int nBytesPerLine = ((sizeWindow.cx * 32 + 31) & (~31)) >> 3;

  00602	8b 45 e4	 mov	 eax, DWORD PTR _sizeWindow$[ebp]
  00605	c1 e0 05	 shl	 eax, 5
  00608	83 c0 1f	 add	 eax, 31			; 0000001fH
  0060b	83 e0 e0	 and	 eax, -32		; ffffffe0H
  0060e	c1 f8 03	 sar	 eax, 3
  00611	89 85 60 ff ff
	ff		 mov	 DWORD PTR _nBytesPerLine$[ebp], eax

; 135  : 	stBmpInfoHeader.biSize = sizeof(BITMAPINFOHEADER);   

  00617	c7 85 68 ff ff
	ff 28 00 00 00	 mov	 DWORD PTR _stBmpInfoHeader$[ebp], 40 ; 00000028H

; 136  : 	stBmpInfoHeader.biWidth = rcClient.Width();//sizeWindow.cx;   

  00621	8d 4d a8	 lea	 ecx, DWORD PTR _rcClient$[ebp]
  00624	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00629	89 85 6c ff ff
	ff		 mov	 DWORD PTR _stBmpInfoHeader$[ebp+4], eax

; 137  : 	stBmpInfoHeader.biHeight = rcClient.Height();//sizeWindow.cy;   

  0062f	8d 4d a8	 lea	 ecx, DWORD PTR _rcClient$[ebp]
  00632	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00637	89 85 70 ff ff
	ff		 mov	 DWORD PTR _stBmpInfoHeader$[ebp+8], eax

; 138  : 	stBmpInfoHeader.biPlanes = 1;   

  0063d	66 c7 85 74 ff
	ff ff 01 00	 mov	 WORD PTR _stBmpInfoHeader$[ebp+12], 1

; 139  : 	stBmpInfoHeader.biBitCount = 32;   

  00646	66 c7 85 76 ff
	ff ff 20 00	 mov	 WORD PTR _stBmpInfoHeader$[ebp+14], 32 ; 00000020H

; 140  : 	stBmpInfoHeader.biCompression = BI_RGB;   

  0064f	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _stBmpInfoHeader$[ebp+16], 0

; 141  : 	stBmpInfoHeader.biClrUsed = 0;   

  00659	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _stBmpInfoHeader$[ebp+32], 0

; 142  : 	stBmpInfoHeader.biSizeImage = nBytesPerLine * sizeWindow.cy;   

  00660	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _nBytesPerLine$[ebp]
  00666	0f af 4d e8	 imul	 ecx, DWORD PTR _sizeWindow$[ebp+4]
  0066a	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _stBmpInfoHeader$[ebp+20], ecx

; 143  : 
; 144  : 	PVOID pvBits = NULL;   

  00670	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pvBits$[ebp], 0

; 145  : 	HBITMAP hbmpMem = ::CreateDIBSection(NULL, (PBITMAPINFO)&stBmpInfoHeader, DIB_RGB_COLORS, &pvBits, NULL, 0);

  0067a	8b f4		 mov	 esi, esp
  0067c	6a 00		 push	 0
  0067e	6a 00		 push	 0
  00680	8d 95 58 ff ff
	ff		 lea	 edx, DWORD PTR _pvBits$[ebp]
  00686	52		 push	 edx
  00687	6a 00		 push	 0
  00689	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _stBmpInfoHeader$[ebp]
  0068f	50		 push	 eax
  00690	6a 00		 push	 0
  00692	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateDIBSection@24
  00698	3b f4		 cmp	 esi, esp
  0069a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0069f	89 85 50 ff ff
	ff		 mov	 DWORD PTR _hbmpMem$[ebp], eax

; 146  : 	ASSERT(hbmpMem != NULL);

  006a5	83 bd 50 ff ff
	ff 00		 cmp	 DWORD PTR _hbmpMem$[ebp], 0
  006ac	75 14		 jne	 SHORT $L189338
  006ae	68 92 00 00 00	 push	 146			; 00000092H
  006b3	68 00 00 00 00	 push	 OFFSET FLAT:$SG188756
  006b8	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  006bd	85 c0		 test	 eax, eax
  006bf	74 01		 je	 SHORT $L189338
  006c1	cc		 int	 3
$L189338:

; 147  : 
; 148  : 	memset( pvBits, 0, sizeWindow.cx * 4 * sizeWindow.cy);

  006c2	8b 55 e4	 mov	 edx, DWORD PTR _sizeWindow$[ebp]
  006c5	c1 e2 02	 shl	 edx, 2
  006c8	0f af 55 e8	 imul	 edx, DWORD PTR _sizeWindow$[ebp+4]
  006cc	52		 push	 edx
  006cd	6a 00		 push	 0
  006cf	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _pvBits$[ebp]
  006d5	50		 push	 eax
  006d6	e8 00 00 00 00	 call	 _memset
  006db	83 c4 0c	 add	 esp, 12			; 0000000cH

; 149  : 	if(hbmpMem)   

  006de	83 bd 50 ff ff
	ff 00		 cmp	 DWORD PTR _hbmpMem$[ebp], 0
  006e5	0f 84 ab 05 00
	00		 je	 $L188757

; 150  : 	{   
; 151  : 		HGDIOBJ hbmpOld = ::SelectObject( hdcMemory, hbmpMem);

  006eb	8b f4		 mov	 esi, esp
  006ed	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR _hbmpMem$[ebp]
  006f3	51		 push	 ecx
  006f4	8b 55 d4	 mov	 edx, DWORD PTR _hdcMemory$[ebp]
  006f7	52		 push	 edx
  006f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  006fe	3b f4		 cmp	 esi, esp
  00700	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00705	89 85 4c ff ff
	ff		 mov	 DWORD PTR _hbmpOld$188758[ebp], eax

; 152  : 		//POINT ptWinPos = { m_rcWindow.left, m_rcWindow.top };
; 153  : 		POINT ptWinPos = { rcWindow.left, rcWindow.top };

  0070b	8b 45 c0	 mov	 eax, DWORD PTR _rcWindow$[ebp]
  0070e	89 85 40 ff ff
	ff		 mov	 DWORD PTR _ptWinPos$188759[ebp], eax
  00714	8b 4d c4	 mov	 ecx, DWORD PTR _rcWindow$[ebp+4]
  00717	89 8d 44 ff ff
	ff		 mov	 DWORD PTR _ptWinPos$188759[ebp+4], ecx

; 154  : 		Gdiplus::Graphics graph(hdcMemory);

  0071d	8b 55 d4	 mov	 edx, DWORD PTR _hdcMemory$[ebp]
  00720	52		 push	 edx
  00721	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _graph$188760[ebp]
  00727	e8 00 00 00 00	 call	 ??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z ; Gdiplus::Graphics::Graphics
  0072c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 155  : 		//graph.SetSmoothingMode(Gdiplus::SmoothingModeNone);
; 156  : 		graph.SetSmoothingMode(SmoothingModeAntiAlias);

  00733	6a 04		 push	 4
  00735	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _graph$188760[ebp]
  0073b	e8 00 00 00 00	 call	 ?SetSmoothingMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4SmoothingMode@2@@Z ; Gdiplus::Graphics::SetSmoothingMode

; 157  : 		graph.SetInterpolationMode(InterpolationModeHighQualityBicubic);

  00740	6a 07		 push	 7
  00742	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _graph$188760[ebp]
  00748	e8 00 00 00 00	 call	 ?SetInterpolationMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4InterpolationMode@2@@Z ; Gdiplus::Graphics::SetInterpolationMode

; 158  : 		graph.DrawImage(m_pImage, 0, 0, sizeWindow.cx, sizeWindow.cy);

  0074d	8b 45 e8	 mov	 eax, DWORD PTR _sizeWindow$[ebp+4]
  00750	50		 push	 eax
  00751	8b 4d e4	 mov	 ecx, DWORD PTR _sizeWindow$[ebp]
  00754	51		 push	 ecx
  00755	6a 00		 push	 0
  00757	6a 00		 push	 0
  00759	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0075c	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00762	50		 push	 eax
  00763	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _graph$188760[ebp]
  00769	e8 00 00 00 00	 call	 ?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HHHH@Z ; Gdiplus::Graphics::DrawImage

; 159  : 
; 160  : 		int nStart, nSize;
; 161  : 		if(m_position == LEFT_TOP_CORNER && m_ptPos.x + 2 < sizeWindow.cx && m_ptPos.y + 2< sizeWindow.cy)

  0076e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00771	83 79 74 00	 cmp	 DWORD PTR [ecx+116], 0
  00775	0f 85 ff 00 00
	00		 jne	 $L188763
  0077b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0077e	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00781	83 c0 02	 add	 eax, 2
  00784	3b 45 e4	 cmp	 eax, DWORD PTR _sizeWindow$[ebp]
  00787	0f 8d ed 00 00
	00		 jge	 $L188763
  0078d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00790	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  00793	83 c2 02	 add	 edx, 2
  00796	3b 55 e8	 cmp	 edx, DWORD PTR _sizeWindow$[ebp+4]
  00799	0f 8d db 00 00
	00		 jge	 $L188763

; 162  : 		{
; 163  : 			for(int i = 0 ; i<sizeAllWindow.cy - (m_ptPos.y + 2) ; i++)

  0079f	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$188764[ebp], 0
  007a9	eb 0f		 jmp	 SHORT $L188765
$L188766:
  007ab	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _i$188764[ebp]
  007b1	83 c0 01	 add	 eax, 1
  007b4	89 85 20 ff ff
	ff		 mov	 DWORD PTR _i$188764[ebp], eax
$L188765:
  007ba	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007bd	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  007c0	83 c2 02	 add	 edx, 2
  007c3	8b 45 9c	 mov	 eax, DWORD PTR _sizeAllWindow$[ebp+4]
  007c6	2b c2		 sub	 eax, edx
  007c8	39 85 20 ff ff
	ff		 cmp	 DWORD PTR _i$188764[ebp], eax
  007ce	0f 8d a6 00 00
	00		 jge	 $L188763

; 164  : 			{
; 165  : 				nStart = sizeWindow.cx * 4 * i + (m_ptPos.x + 2) * 4;

  007d4	8b 4d e4	 mov	 ecx, DWORD PTR _sizeWindow$[ebp]
  007d7	c1 e1 02	 shl	 ecx, 2
  007da	0f af 8d 20 ff
	ff ff		 imul	 ecx, DWORD PTR _i$188764[ebp]
  007e1	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  007e4	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  007e7	8d 4c 81 08	 lea	 ecx, DWORD PTR [ecx+eax*4+8]
  007eb	89 8d 28 ff ff
	ff		 mov	 DWORD PTR _nStart$188761[ebp], ecx

; 166  : 				nSize = (m_ptPos.x + 2 < 0) ? sizeWindow.cx * 4 : ( sizeWindow.cx - m_ptPos.x - 2) * 4;

  007f1	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  007f4	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  007f7	83 c0 02	 add	 eax, 2
  007fa	79 0e		 jns	 SHORT $L189339
  007fc	8b 4d e4	 mov	 ecx, DWORD PTR _sizeWindow$[ebp]
  007ff	c1 e1 02	 shl	 ecx, 2
  00802	89 8d ec fe ff
	ff		 mov	 DWORD PTR tv299[ebp], ecx
  00808	eb 16		 jmp	 SHORT $L189340
$L189339:
  0080a	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0080d	8b 45 e4	 mov	 eax, DWORD PTR _sizeWindow$[ebp]
  00810	2b 42 78	 sub	 eax, DWORD PTR [edx+120]
  00813	8d 0c 85 f8 ff
	ff ff		 lea	 ecx, DWORD PTR [eax*4-8]
  0081a	89 8d ec fe ff
	ff		 mov	 DWORD PTR tv299[ebp], ecx
$L189340:
  00820	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR tv299[ebp]
  00826	89 95 24 ff ff
	ff		 mov	 DWORD PTR _nSize$188762[ebp], edx

; 167  : 				if(nStart < 0 || nSize + nStart > stBmpInfoHeader.biSizeImage || nSize < 0)

  0082c	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _nStart$188761[ebp], 0
  00833	7c 1d		 jl	 SHORT $L188769
  00835	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _nSize$188762[ebp]
  0083b	03 85 28 ff ff
	ff		 add	 eax, DWORD PTR _nStart$188761[ebp]
  00841	3b 85 7c ff ff
	ff		 cmp	 eax, DWORD PTR _stBmpInfoHeader$[ebp+20]
  00847	77 09		 ja	 SHORT $L188769
  00849	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _nSize$188762[ebp], 0
  00850	7d 05		 jge	 SHORT $L188768
$L188769:

; 168  : 					continue;

  00852	e9 54 ff ff ff	 jmp	 $L188766
$L188768:

; 169  : 				memset(((BYTE*)pvBits) + nStart , 0, nSize);

  00857	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR _nSize$188762[ebp]
  0085d	51		 push	 ecx
  0085e	6a 00		 push	 0
  00860	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _pvBits$[ebp]
  00866	03 95 28 ff ff
	ff		 add	 edx, DWORD PTR _nStart$188761[ebp]
  0086c	52		 push	 edx
  0086d	e8 00 00 00 00	 call	 _memset
  00872	83 c4 0c	 add	 esp, 12			; 0000000cH

; 170  : 			}

  00875	e9 31 ff ff ff	 jmp	 $L188766
$L188763:

; 171  : 		}
; 172  : 
; 173  : 		if(m_position == RIGHT_TOP_CORNER && m_ptPos.x - 2 > 0 && m_ptPos.y +2 < sizeWindow.cy)

  0087a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0087d	83 78 74 02	 cmp	 DWORD PTR [eax+116], 2
  00881	0f 85 f4 00 00
	00		 jne	 $L188771
  00887	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0088a	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  0088d	83 ea 02	 sub	 edx, 2
  00890	85 d2		 test	 edx, edx
  00892	0f 8e e3 00 00
	00		 jle	 $L188771
  00898	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0089b	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  0089e	83 c1 02	 add	 ecx, 2
  008a1	3b 4d e8	 cmp	 ecx, DWORD PTR _sizeWindow$[ebp+4]
  008a4	0f 8d d1 00 00
	00		 jge	 $L188771

; 174  : 		{
; 175  : 			for(int i = 0 ; i<sizeAllWindow.cy - (m_ptPos.y + 2) ; i++)

  008aa	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$188772[ebp], 0
  008b4	eb 0f		 jmp	 SHORT $L188773
$L188774:
  008b6	8b 95 1c ff ff
	ff		 mov	 edx, DWORD PTR _i$188772[ebp]
  008bc	83 c2 01	 add	 edx, 1
  008bf	89 95 1c ff ff
	ff		 mov	 DWORD PTR _i$188772[ebp], edx
$L188773:
  008c5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  008c8	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  008cb	83 c1 02	 add	 ecx, 2
  008ce	8b 55 9c	 mov	 edx, DWORD PTR _sizeAllWindow$[ebp+4]
  008d1	2b d1		 sub	 edx, ecx
  008d3	39 95 1c ff ff
	ff		 cmp	 DWORD PTR _i$188772[ebp], edx
  008d9	0f 8d 9c 00 00
	00		 jge	 $L188771

; 176  : 			{
; 177  : 				nStart = sizeWindow.cx * 4 * i;

  008df	8b 45 e4	 mov	 eax, DWORD PTR _sizeWindow$[ebp]
  008e2	c1 e0 02	 shl	 eax, 2
  008e5	0f af 85 1c ff
	ff ff		 imul	 eax, DWORD PTR _i$188772[ebp]
  008ec	89 85 28 ff ff
	ff		 mov	 DWORD PTR _nStart$188761[ebp], eax

; 178  : 				nSize = (m_ptPos.x - 2 > sizeWindow.cx) ? sizeWindow.cx * 4 : (m_ptPos.x - 2) * 4;

  008f2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  008f5	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  008f8	83 ea 02	 sub	 edx, 2
  008fb	3b 55 e4	 cmp	 edx, DWORD PTR _sizeWindow$[ebp]
  008fe	7e 0e		 jle	 SHORT $L189341
  00900	8b 45 e4	 mov	 eax, DWORD PTR _sizeWindow$[ebp]
  00903	c1 e0 02	 shl	 eax, 2
  00906	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv335[ebp], eax
  0090c	eb 13		 jmp	 SHORT $L189342
$L189341:
  0090e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00911	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  00914	8d 04 95 f8 ff
	ff ff		 lea	 eax, DWORD PTR [edx*4-8]
  0091b	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv335[ebp], eax
$L189342:
  00921	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR tv335[ebp]
  00927	89 8d 24 ff ff
	ff		 mov	 DWORD PTR _nSize$188762[ebp], ecx

; 179  : 				if(nStart < 0 || nSize + nStart > stBmpInfoHeader.biSizeImage || nSize < 0)

  0092d	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _nStart$188761[ebp], 0
  00934	7c 1d		 jl	 SHORT $L188777
  00936	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR _nSize$188762[ebp]
  0093c	03 95 28 ff ff
	ff		 add	 edx, DWORD PTR _nStart$188761[ebp]
  00942	3b 95 7c ff ff
	ff		 cmp	 edx, DWORD PTR _stBmpInfoHeader$[ebp+20]
  00948	77 09		 ja	 SHORT $L188777
  0094a	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _nSize$188762[ebp], 0
  00951	7d 05		 jge	 SHORT $L188776
$L188777:

; 180  : 					continue;

  00953	e9 5e ff ff ff	 jmp	 $L188774
$L188776:

; 181  : 				memset(((BYTE*)pvBits) + nStart , 0, nSize);

  00958	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _nSize$188762[ebp]
  0095e	50		 push	 eax
  0095f	6a 00		 push	 0
  00961	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _pvBits$[ebp]
  00967	03 8d 28 ff ff
	ff		 add	 ecx, DWORD PTR _nStart$188761[ebp]
  0096d	51		 push	 ecx
  0096e	e8 00 00 00 00	 call	 _memset
  00973	83 c4 0c	 add	 esp, 12			; 0000000cH

; 182  : 			}

  00976	e9 3b ff ff ff	 jmp	 $L188774
$L188771:

; 183  : 
; 184  : 		}
; 185  : 		
; 186  : 		if(m_position == LEFT_BOTTOM_CORNER&& m_ptPos.x + 2 < sizeWindow.cx  && m_ptPos.y - 2 > 0)

  0097b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0097e	83 7a 74 01	 cmp	 DWORD PTR [edx+116], 1
  00982	0f 85 fb 00 00
	00		 jne	 $L188779
  00988	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0098b	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  0098e	83 c1 02	 add	 ecx, 2
  00991	3b 4d e4	 cmp	 ecx, DWORD PTR _sizeWindow$[ebp]
  00994	0f 8d e9 00 00
	00		 jge	 $L188779
  0099a	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0099d	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  009a0	83 e8 02	 sub	 eax, 2
  009a3	85 c0		 test	 eax, eax
  009a5	0f 8e d8 00 00
	00		 jle	 $L188779

; 187  : 		{
; 188  : 			for(int i = (sizeWindow.cy - m_ptPos.y + 2) ; i<sizeWindow.cy ; i++)

  009ab	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  009ae	8b 55 e8	 mov	 edx, DWORD PTR _sizeWindow$[ebp+4]
  009b1	2b 51 7c	 sub	 edx, DWORD PTR [ecx+124]
  009b4	83 c2 02	 add	 edx, 2
  009b7	89 95 18 ff ff
	ff		 mov	 DWORD PTR _i$188780[ebp], edx
  009bd	eb 0f		 jmp	 SHORT $L188781
$L188782:
  009bf	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _i$188780[ebp]
  009c5	83 c0 01	 add	 eax, 1
  009c8	89 85 18 ff ff
	ff		 mov	 DWORD PTR _i$188780[ebp], eax
$L188781:
  009ce	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR _i$188780[ebp]
  009d4	3b 4d e8	 cmp	 ecx, DWORD PTR _sizeWindow$[ebp+4]
  009d7	0f 8d a6 00 00
	00		 jge	 $L188779

; 189  : 			{
; 190  : 				nStart = sizeWindow.cx * 4 * i + (m_ptPos.x + 2) * 4;

  009dd	8b 55 e4	 mov	 edx, DWORD PTR _sizeWindow$[ebp]
  009e0	c1 e2 02	 shl	 edx, 2
  009e3	0f af 95 18 ff
	ff ff		 imul	 edx, DWORD PTR _i$188780[ebp]
  009ea	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  009ed	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  009f0	8d 54 8a 08	 lea	 edx, DWORD PTR [edx+ecx*4+8]
  009f4	89 95 28 ff ff
	ff		 mov	 DWORD PTR _nStart$188761[ebp], edx

; 191  : 				nSize = (m_ptPos.x + 2 < 0) ? sizeWindow.cx * 4 : ( sizeWindow.cx - m_ptPos.x - 2) * 4;

  009fa	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  009fd	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  00a00	83 c1 02	 add	 ecx, 2
  00a03	79 0e		 jns	 SHORT $L189343
  00a05	8b 55 e4	 mov	 edx, DWORD PTR _sizeWindow$[ebp]
  00a08	c1 e2 02	 shl	 edx, 2
  00a0b	89 95 e4 fe ff
	ff		 mov	 DWORD PTR tv377[ebp], edx
  00a11	eb 16		 jmp	 SHORT $L189344
$L189343:
  00a13	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00a16	8b 4d e4	 mov	 ecx, DWORD PTR _sizeWindow$[ebp]
  00a19	2b 48 78	 sub	 ecx, DWORD PTR [eax+120]
  00a1c	8d 14 8d f8 ff
	ff ff		 lea	 edx, DWORD PTR [ecx*4-8]
  00a23	89 95 e4 fe ff
	ff		 mov	 DWORD PTR tv377[ebp], edx
$L189344:
  00a29	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv377[ebp]
  00a2f	89 85 24 ff ff
	ff		 mov	 DWORD PTR _nSize$188762[ebp], eax

; 192  : 				if(nStart < 0 || nSize + nStart > stBmpInfoHeader.biSizeImage|| nSize < 0)

  00a35	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _nStart$188761[ebp], 0
  00a3c	7c 1d		 jl	 SHORT $L188785
  00a3e	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR _nSize$188762[ebp]
  00a44	03 8d 28 ff ff
	ff		 add	 ecx, DWORD PTR _nStart$188761[ebp]
  00a4a	3b 8d 7c ff ff
	ff		 cmp	 ecx, DWORD PTR _stBmpInfoHeader$[ebp+20]
  00a50	77 09		 ja	 SHORT $L188785
  00a52	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _nSize$188762[ebp], 0
  00a59	7d 05		 jge	 SHORT $L188784
$L188785:

; 193  : 					continue;

  00a5b	e9 5f ff ff ff	 jmp	 $L188782
$L188784:

; 194  : 				memset(((BYTE*)pvBits) + nStart , 0, nSize);

  00a60	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR _nSize$188762[ebp]
  00a66	52		 push	 edx
  00a67	6a 00		 push	 0
  00a69	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _pvBits$[ebp]
  00a6f	03 85 28 ff ff
	ff		 add	 eax, DWORD PTR _nStart$188761[ebp]
  00a75	50		 push	 eax
  00a76	e8 00 00 00 00	 call	 _memset
  00a7b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 195  : 			}

  00a7e	e9 3c ff ff ff	 jmp	 $L188782
$L188779:

; 196  : 		}
; 197  : 		if(m_position == RIGHT_BOTTOM_CORNER && m_ptPos.x - 2 > 0  && m_ptPos.y - 2 > 0)

  00a83	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00a86	83 79 74 03	 cmp	 DWORD PTR [ecx+116], 3
  00a8a	0f 85 f0 00 00
	00		 jne	 $L188787
  00a90	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00a93	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00a96	83 e8 02	 sub	 eax, 2
  00a99	85 c0		 test	 eax, eax
  00a9b	0f 8e df 00 00
	00		 jle	 $L188787
  00aa1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00aa4	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  00aa7	83 ea 02	 sub	 edx, 2
  00aaa	85 d2		 test	 edx, edx
  00aac	0f 8e ce 00 00
	00		 jle	 $L188787

; 198  : 		{
; 199  : 			for(int i = (sizeWindow.cy - m_ptPos.y + 2) ; i<sizeWindow.cy ; i++)

  00ab2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00ab5	8b 4d e8	 mov	 ecx, DWORD PTR _sizeWindow$[ebp+4]
  00ab8	2b 48 7c	 sub	 ecx, DWORD PTR [eax+124]
  00abb	83 c1 02	 add	 ecx, 2
  00abe	89 8d 14 ff ff
	ff		 mov	 DWORD PTR _i$188788[ebp], ecx
  00ac4	eb 0f		 jmp	 SHORT $L188789
$L188790:
  00ac6	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR _i$188788[ebp]
  00acc	83 c2 01	 add	 edx, 1
  00acf	89 95 14 ff ff
	ff		 mov	 DWORD PTR _i$188788[ebp], edx
$L188789:
  00ad5	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _i$188788[ebp]
  00adb	3b 45 e8	 cmp	 eax, DWORD PTR _sizeWindow$[ebp+4]
  00ade	0f 8d 9c 00 00
	00		 jge	 $L188787

; 200  : 			{
; 201  : 				nStart = sizeWindow.cx * 4 * i;

  00ae4	8b 4d e4	 mov	 ecx, DWORD PTR _sizeWindow$[ebp]
  00ae7	c1 e1 02	 shl	 ecx, 2
  00aea	0f af 8d 14 ff
	ff ff		 imul	 ecx, DWORD PTR _i$188788[ebp]
  00af1	89 8d 28 ff ff
	ff		 mov	 DWORD PTR _nStart$188761[ebp], ecx

; 202  : 				nSize = (m_ptPos.x - 2 > sizeWindow.cx) ? sizeWindow.cx * 4 : (m_ptPos.x - 2) * 4;

  00af7	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00afa	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00afd	83 e8 02	 sub	 eax, 2
  00b00	3b 45 e4	 cmp	 eax, DWORD PTR _sizeWindow$[ebp]
  00b03	7e 0e		 jle	 SHORT $L189345
  00b05	8b 4d e4	 mov	 ecx, DWORD PTR _sizeWindow$[ebp]
  00b08	c1 e1 02	 shl	 ecx, 2
  00b0b	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv413[ebp], ecx
  00b11	eb 13		 jmp	 SHORT $L189346
$L189345:
  00b13	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00b16	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00b19	8d 0c 85 f8 ff
	ff ff		 lea	 ecx, DWORD PTR [eax*4-8]
  00b20	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv413[ebp], ecx
$L189346:
  00b26	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR tv413[ebp]
  00b2c	89 95 24 ff ff
	ff		 mov	 DWORD PTR _nSize$188762[ebp], edx

; 203  : 				if(nStart < 0 || nSize + nStart > stBmpInfoHeader.biSizeImage|| nSize < 0)

  00b32	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _nStart$188761[ebp], 0
  00b39	7c 1d		 jl	 SHORT $L188793
  00b3b	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _nSize$188762[ebp]
  00b41	03 85 28 ff ff
	ff		 add	 eax, DWORD PTR _nStart$188761[ebp]
  00b47	3b 85 7c ff ff
	ff		 cmp	 eax, DWORD PTR _stBmpInfoHeader$[ebp+20]
  00b4d	77 09		 ja	 SHORT $L188793
  00b4f	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _nSize$188762[ebp], 0
  00b56	7d 05		 jge	 SHORT $L188792
$L188793:

; 204  : 					continue;

  00b58	e9 69 ff ff ff	 jmp	 $L188790
$L188792:

; 205  : 				memset(((BYTE*)pvBits) + nStart , 0, nSize);

  00b5d	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR _nSize$188762[ebp]
  00b63	51		 push	 ecx
  00b64	6a 00		 push	 0
  00b66	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _pvBits$[ebp]
  00b6c	03 95 28 ff ff
	ff		 add	 edx, DWORD PTR _nStart$188761[ebp]
  00b72	52		 push	 edx
  00b73	e8 00 00 00 00	 call	 _memset
  00b78	83 c4 0c	 add	 esp, 12			; 0000000cH

; 206  : 			}

  00b7b	e9 46 ff ff ff	 jmp	 $L188790
$L188787:

; 207  : 		}
; 208  : 
; 209  : 		if(!CWindowsMover::GetInstance()->m_bDontMoveContent)

  00b80	e8 00 00 00 00	 call	 ?GetInstance@CWindowsMover@@SAPAV1@XZ ; CWindowsMover::GetInstance
  00b85	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  00b89	75 11		 jne	 SHORT $L188795

; 210  : 			Sleep(50);

  00b8b	8b f4		 mov	 esi, esp
  00b8d	6a 32		 push	 50			; 00000032H
  00b8f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4
  00b95	3b f4		 cmp	 esi, esp
  00b97	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L188795:

; 211  : 
; 212  : 		HMODULE hFuncInst = LoadLibrary(_T("User32.DLL"));

  00b9c	8b f4		 mov	 esi, esp
  00b9e	68 00 00 00 00	 push	 OFFSET FLAT:$SG188797
  00ba3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
  00ba9	3b f4		 cmp	 esi, esp
  00bab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bb0	89 85 10 ff ff
	ff		 mov	 DWORD PTR _hFuncInst$188796[ebp], eax

; 213  : 		typedef BOOL (WINAPI *MYFUNC)(HWND, HDC, POINT*, SIZE*, HDC, POINT*, COLORREF, BLENDFUNCTION*, DWORD);          
; 214  : 		MYFUNC UpdateLayeredWindow;
; 215  : 		UpdateLayeredWindow = (MYFUNC)::GetProcAddress(hFuncInst, "UpdateLayeredWindow");

  00bb6	8b f4		 mov	 esi, esp
  00bb8	68 00 00 00 00	 push	 OFFSET FLAT:$SG188810
  00bbd	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR _hFuncInst$188796[ebp]
  00bc3	50		 push	 eax
  00bc4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00bca	3b f4		 cmp	 esi, esp
  00bcc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bd1	89 85 0c ff ff
	ff		 mov	 DWORD PTR _UpdateLayeredWindow$188808[ebp], eax

; 216  : 		POINT ptSrc = { 0, 0};

  00bd7	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _ptSrc$188811[ebp], 0
  00be1	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _ptSrc$188811[ebp+4], 0

; 217  : 		int ret = UpdateLayeredWindow(m_hWnd, hDC, &ptWinPos, &sizeAllWindow, hdcMemory, &ptSrc, 0, &m_blend, 2);

  00beb	8b f4		 mov	 esi, esp
  00bed	6a 02		 push	 2
  00bef	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00bf2	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00bf8	51		 push	 ecx
  00bf9	6a 00		 push	 0
  00bfb	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _ptSrc$188811[ebp]
  00c01	52		 push	 edx
  00c02	8b 45 d4	 mov	 eax, DWORD PTR _hdcMemory$[ebp]
  00c05	50		 push	 eax
  00c06	8d 4d 98	 lea	 ecx, DWORD PTR _sizeAllWindow$[ebp]
  00c09	51		 push	 ecx
  00c0a	8d 95 40 ff ff
	ff		 lea	 edx, DWORD PTR _ptWinPos$188759[ebp]
  00c10	52		 push	 edx
  00c11	8b 45 d8	 mov	 eax, DWORD PTR _hDC$[ebp]
  00c14	50		 push	 eax
  00c15	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c18	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00c1b	52		 push	 edx
  00c1c	ff 95 0c ff ff
	ff		 call	 DWORD PTR _UpdateLayeredWindow$188808[ebp]
  00c22	3b f4		 cmp	 esi, esp
  00c24	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c29	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _ret$188812[ebp], eax

; 218  : 
; 219  : 		graph.ReleaseHDC(hdcMemory);

  00c2f	8b 45 d4	 mov	 eax, DWORD PTR _hdcMemory$[ebp]
  00c32	50		 push	 eax
  00c33	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _graph$188760[ebp]
  00c39	e8 00 00 00 00	 call	 ?ReleaseHDC@Graphics@Gdiplus@@QAEXPAUHDC__@@@Z ; Gdiplus::Graphics::ReleaseHDC

; 220  : 		::SelectObject( hdcMemory, hbmpOld);   

  00c3e	8b f4		 mov	 esi, esp
  00c40	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _hbmpOld$188758[ebp]
  00c46	51		 push	 ecx
  00c47	8b 55 d4	 mov	 edx, DWORD PTR _hdcMemory$[ebp]
  00c4a	52		 push	 edx
  00c4b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  00c51	3b f4		 cmp	 esi, esp
  00c53	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 221  : 		::DeleteObject(hbmpMem);  

  00c58	8b f4		 mov	 esi, esp
  00c5a	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _hbmpMem$[ebp]
  00c60	50		 push	 eax
  00c61	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteObject@4
  00c67	3b f4		 cmp	 esi, esp
  00c69	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 222  : 		FreeLibrary(hFuncInst);

  00c6e	8b f4		 mov	 esi, esp
  00c70	8b 8d 10 ff ff
	ff		 mov	 ecx, DWORD PTR _hFuncInst$188796[ebp]
  00c76	51		 push	 ecx
  00c77	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
  00c7d	3b f4		 cmp	 esi, esp
  00c7f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 223  : 	}

  00c84	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c8b	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _graph$188760[ebp]
  00c91	e8 00 00 00 00	 call	 ??1Graphics@Gdiplus@@QAE@XZ ; Gdiplus::Graphics::~Graphics
$L188757:

; 224  : 	::DeleteDC(hdcMemory);

  00c96	8b f4		 mov	 esi, esp
  00c98	8b 55 d4	 mov	 edx, DWORD PTR _hdcMemory$[ebp]
  00c9b	52		 push	 edx
  00c9c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteDC@4
  00ca2	3b f4		 cmp	 esi, esp
  00ca4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 225  : 	::DeleteDC(hDC);

  00ca9	8b f4		 mov	 esi, esp
  00cab	8b 45 d8	 mov	 eax, DWORD PTR _hDC$[ebp]
  00cae	50		 push	 eax
  00caf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteDC@4
  00cb5	3b f4		 cmp	 esi, esp
  00cb7	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L188733:

; 226  : }

  00cbc	52		 push	 edx
  00cbd	8b cd		 mov	 ecx, ebp
  00cbf	50		 push	 eax
  00cc0	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189361
  00cc6	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00ccb	58		 pop	 eax
  00ccc	5a		 pop	 edx
  00ccd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00cd0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00cd7	5f		 pop	 edi
  00cd8	5e		 pop	 esi
  00cd9	81 c4 20 01 00
	00		 add	 esp, 288		; 00000120H
  00cdf	3b ec		 cmp	 ebp, esp
  00ce1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ce6	8b e5		 mov	 esp, ebp
  00ce8	5d		 pop	 ebp
  00ce9	c2 04 00	 ret	 4
$L189361:
  00cec	09 00 00 00	 DD	 9
  00cf0	00 00 00 00	 DD	 $L189360
$L189360:
  00cf4	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00cf8	08 00 00 00	 DD	 8
  00cfc	00 00 00 00	 DD	 $L189350
  00d00	c0 ff ff ff	 DD	 -64			; ffffffc0H
  00d04	10 00 00 00	 DD	 16			; 00000010H
  00d08	00 00 00 00	 DD	 $L189351
  00d0c	a8 ff ff ff	 DD	 -88			; ffffffa8H
  00d10	10 00 00 00	 DD	 16			; 00000010H
  00d14	00 00 00 00	 DD	 $L189352
  00d18	98 ff ff ff	 DD	 -104			; ffffff98H
  00d1c	08 00 00 00	 DD	 8
  00d20	00 00 00 00	 DD	 $L189353
  00d24	68 ff ff ff	 DD	 -152			; ffffff68H
  00d28	28 00 00 00	 DD	 40			; 00000028H
  00d2c	00 00 00 00	 DD	 $L189354
  00d30	58 ff ff ff	 DD	 -168			; ffffff58H
  00d34	04 00 00 00	 DD	 4
  00d38	00 00 00 00	 DD	 $L189355
  00d3c	40 ff ff ff	 DD	 -192			; ffffff40H
  00d40	08 00 00 00	 DD	 8
  00d44	00 00 00 00	 DD	 $L189356
  00d48	30 ff ff ff	 DD	 -208			; ffffff30H
  00d4c	08 00 00 00	 DD	 8
  00d50	00 00 00 00	 DD	 $L189357
  00d54	00 ff ff ff	 DD	 -256			; ffffff00H
  00d58	08 00 00 00	 DD	 8
  00d5c	00 00 00 00	 DD	 $L189358
$L189358:
  00d60	70		 DB	 112			; 00000070H
  00d61	74		 DB	 116			; 00000074H
  00d62	53		 DB	 83			; 00000053H
  00d63	72		 DB	 114			; 00000072H
  00d64	63		 DB	 99			; 00000063H
  00d65	00		 DB	 0
$L189357:
  00d66	67		 DB	 103			; 00000067H
  00d67	72		 DB	 114			; 00000072H
  00d68	61		 DB	 97			; 00000061H
  00d69	70		 DB	 112			; 00000070H
  00d6a	68		 DB	 104			; 00000068H
  00d6b	00		 DB	 0
$L189356:
  00d6c	70		 DB	 112			; 00000070H
  00d6d	74		 DB	 116			; 00000074H
  00d6e	57		 DB	 87			; 00000057H
  00d6f	69		 DB	 105			; 00000069H
  00d70	6e		 DB	 110			; 0000006eH
  00d71	50		 DB	 80			; 00000050H
  00d72	6f		 DB	 111			; 0000006fH
  00d73	73		 DB	 115			; 00000073H
  00d74	00		 DB	 0
$L189355:
  00d75	70		 DB	 112			; 00000070H
  00d76	76		 DB	 118			; 00000076H
  00d77	42		 DB	 66			; 00000042H
  00d78	69		 DB	 105			; 00000069H
  00d79	74		 DB	 116			; 00000074H
  00d7a	73		 DB	 115			; 00000073H
  00d7b	00		 DB	 0
$L189354:
  00d7c	73		 DB	 115			; 00000073H
  00d7d	74		 DB	 116			; 00000074H
  00d7e	42		 DB	 66			; 00000042H
  00d7f	6d		 DB	 109			; 0000006dH
  00d80	70		 DB	 112			; 00000070H
  00d81	49		 DB	 73			; 00000049H
  00d82	6e		 DB	 110			; 0000006eH
  00d83	66		 DB	 102			; 00000066H
  00d84	6f		 DB	 111			; 0000006fH
  00d85	48		 DB	 72			; 00000048H
  00d86	65		 DB	 101			; 00000065H
  00d87	61		 DB	 97			; 00000061H
  00d88	64		 DB	 100			; 00000064H
  00d89	65		 DB	 101			; 00000065H
  00d8a	72		 DB	 114			; 00000072H
  00d8b	00		 DB	 0
$L189353:
  00d8c	73		 DB	 115			; 00000073H
  00d8d	69		 DB	 105			; 00000069H
  00d8e	7a		 DB	 122			; 0000007aH
  00d8f	65		 DB	 101			; 00000065H
  00d90	41		 DB	 65			; 00000041H
  00d91	6c		 DB	 108			; 0000006cH
  00d92	6c		 DB	 108			; 0000006cH
  00d93	57		 DB	 87			; 00000057H
  00d94	69		 DB	 105			; 00000069H
  00d95	6e		 DB	 110			; 0000006eH
  00d96	64		 DB	 100			; 00000064H
  00d97	6f		 DB	 111			; 0000006fH
  00d98	77		 DB	 119			; 00000077H
  00d99	00		 DB	 0
$L189352:
  00d9a	72		 DB	 114			; 00000072H
  00d9b	63		 DB	 99			; 00000063H
  00d9c	43		 DB	 67			; 00000043H
  00d9d	6c		 DB	 108			; 0000006cH
  00d9e	69		 DB	 105			; 00000069H
  00d9f	65		 DB	 101			; 00000065H
  00da0	6e		 DB	 110			; 0000006eH
  00da1	74		 DB	 116			; 00000074H
  00da2	00		 DB	 0
$L189351:
  00da3	72		 DB	 114			; 00000072H
  00da4	63		 DB	 99			; 00000063H
  00da5	57		 DB	 87			; 00000057H
  00da6	69		 DB	 105			; 00000069H
  00da7	6e		 DB	 110			; 0000006eH
  00da8	64		 DB	 100			; 00000064H
  00da9	6f		 DB	 111			; 0000006fH
  00daa	77		 DB	 119			; 00000077H
  00dab	00		 DB	 0
$L189350:
  00dac	73		 DB	 115			; 00000073H
  00dad	69		 DB	 105			; 00000069H
  00dae	7a		 DB	 122			; 0000007aH
  00daf	65		 DB	 101			; 00000065H
  00db0	57		 DB	 87			; 00000057H
  00db1	69		 DB	 105			; 00000069H
  00db2	6e		 DB	 110			; 0000006eH
  00db3	64		 DB	 100			; 00000064H
  00db4	6f		 DB	 111			; 0000006fH
  00db5	77		 DB	 119			; 00000077H
  00db6	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
$L189347:
  00012	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _graph$188760[ebp]
  00018	e9 00 00 00 00	 jmp	 ??1Graphics@Gdiplus@@QAE@XZ ; Gdiplus::Graphics::~Graphics
__ehhandler$?UpdateView@CTranslucentDialog@@QAEXH@Z:
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189349
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UpdateView@CTranslucentDialog@@QAEXH@Z ENDP		; CTranslucentDialog::UpdateView
EXTRN	?AfxGetUIManager@@YAPAVIUIManager@@XZ:NEAR	; AfxGetUIManager
EXTRN	__imp__GetVersionExA@4:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\layoutmgr\seperatemode\windowsmover.h
;	COMDAT ?SetDontMoveContent@CWindowsMover@@QAEXXZ
_TEXT	SEGMENT
tv76 = -172						; size = 4
tv71 = -168						; size = 4
_version$ = -160					; size = 148
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?SetDontMoveContent@CWindowsMover@@QAEXXZ PROC NEAR	; CWindowsMover::SetDontMoveContent, COMDAT
; _this$ = ecx

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 54 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-172]
  00012	b9 2b 00 00 00	 mov	 ecx, 43			; 0000002bH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00027	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 57   : 		OSVERSIONINFO  version = {0};

  0002a	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _version$[ebp], 0
  00034	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00039	33 c0		 xor	 eax, eax
  0003b	8d bd 64 ff ff
	ff		 lea	 edi, DWORD PTR _version$[ebp+4]
  00041	f3 ab		 rep stosd

; 58   : 		version.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);

  00043	c7 85 60 ff ff
	ff 94 00 00 00	 mov	 DWORD PTR _version$[ebp], 148 ; 00000094H

; 59   : 		::GetVersionEx(&version);

  0004d	8b f4		 mov	 esi, esp
  0004f	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _version$[ebp]
  00055	50		 push	 eax
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 60   : 		if(version.dwMajorVersion < 6)

  00063	83 bd 64 ff ff
	ff 06		 cmp	 DWORD PTR _version$[ebp+4], 6
  0006a	73 61		 jae	 SHORT $L188639

; 61   : 		{
; 62   : 			if(AfxGetUIManager()->UIGetLayoutMgr()->GetDisplayMode() == DISPLAY_SEPERATE_MODE)

  0006c	e8 00 00 00 00	 call	 ?AfxGetUIManager@@YAPAVIUIManager@@XZ ; AfxGetUIManager
  00071	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], eax
  00077	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR tv71[ebp]
  0007d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007f	8b f4		 mov	 esi, esp
  00081	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR tv71[ebp]
  00087	ff 52 24	 call	 DWORD PTR [edx+36]
  0008a	3b f4		 cmp	 esi, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	89 85 54 ff ff
	ff		 mov	 DWORD PTR tv76[ebp], eax
  00097	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR tv76[ebp]
  0009d	8b 10		 mov	 edx, DWORD PTR [eax]
  0009f	8b f4		 mov	 esi, esp
  000a1	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv76[ebp]
  000a7	ff 52 7c	 call	 DWORD PTR [edx+124]
  000aa	3b f4		 cmp	 esi, esp
  000ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b1	85 c0		 test	 eax, eax
  000b3	75 0c		 jne	 SHORT $L188640

; 63   : 				m_bDontMoveContent = false;

  000b5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b8	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0

; 64   : 			else

  000bf	eb 0a		 jmp	 SHORT $L188641
$L188640:

; 65   : 				m_bDontMoveContent = true;

  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	c7 41 3c 01 00
	00 00		 mov	 DWORD PTR [ecx+60], 1
$L188641:

; 66   : 		}
; 67   : 		else

  000cb	eb 0a		 jmp	 SHORT $L188636
$L188639:

; 68   : 		{
; 69   : 			m_bDontMoveContent = false;

  000cd	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000d0	c7 42 3c 00 00
	00 00		 mov	 DWORD PTR [edx+60], 0
$L188636:

; 70   : 		}
; 71   : 	};

  000d7	52		 push	 edx
  000d8	8b cd		 mov	 ecx, ebp
  000da	50		 push	 eax
  000db	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189370
  000e1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e6	58		 pop	 eax
  000e7	5a		 pop	 edx
  000e8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000eb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f0	5f		 pop	 edi
  000f1	5e		 pop	 esi
  000f2	81 c4 ac 00 00
	00		 add	 esp, 172		; 000000acH
  000f8	3b ec		 cmp	 ebp, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c3		 ret	 0
$L189370:
  00103	01 00 00 00	 DD	 1
  00107	00 00 00 00	 DD	 $L189369
$L189369:
  0010b	60 ff ff ff	 DD	 -160			; ffffff60H
  0010f	94 00 00 00	 DD	 148			; 00000094H
  00113	00 00 00 00	 DD	 $L189366
$L189366:
  00117	76		 DB	 118			; 00000076H
  00118	65		 DB	 101			; 00000065H
  00119	72		 DB	 114			; 00000072H
  0011a	73		 DB	 115			; 00000073H
  0011b	69		 DB	 105			; 00000069H
  0011c	6f		 DB	 111			; 0000006fH
  0011d	6e		 DB	 110			; 0000006eH
  0011e	00		 DB	 0
?SetDontMoveContent@CWindowsMover@@QAEXXZ ENDP		; CWindowsMover::SetDontMoveContent
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
EXTRN	?AfxGetMainWindow@@YAPAVCWnd@@XZ:NEAR		; AfxGetMainWindow
EXTRN	?OnLButtonDown@CWnd@@IAEXIVCPoint@@@Z:NEAR	; CWnd::OnLButtonDown
EXTRN	__imp__ScreenToClient@8:NEAR
EXTRN	?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z:NEAR	; CWnd::SetWindowPos
EXTRN	?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z:NEAR	; CWnd::ClientToScreen
EXTRN	?SetActiveWindow@CWnd@@QAEPAV1@XZ:NEAR		; CWnd::SetActiveWindow
; Function compile flags: /Odt /RTCsu
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\irregularborder\translucentdialog.cpp
_TEXT	SEGMENT
_lParam$188820 = -12					; size = 4
_wParam$188819 = -8					; size = 4
_this$ = -4						; size = 4
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnLButtonDown@CTranslucentDialog@@AAEXIVCPoint@@@Z PROC NEAR ; CTranslucentDialog::OnLButtonDown
; _this$ = ecx

; 229  : {

  00dc0	55		 push	 ebp
  00dc1	8b ec		 mov	 ebp, esp
  00dc3	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00dc6	56		 push	 esi
  00dc7	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  00dce	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00dd5	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00ddc	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 230  : 	if (m_bEnableDrag)

  00ddf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00de2	0f b6 88 94 00
	00 00		 movzx	 ecx, BYTE PTR [eax+148]
  00de9	85 c9		 test	 ecx, ecx
  00deb	74 67		 je	 SHORT $L188818

; 231  : 	{
; 232  : 		//::SendMessage(AfxGetMainWindow()->m_hWnd, WM_SYSCOMMAND, 0xF012, 0);
; 233  : 		WPARAM wParam;
; 234  : 		LPARAM lParam;
; 235  : 
; 236  : 		ClientToScreen( &point);

  00ded	8d 55 0c	 lea	 edx, DWORD PTR _point$[ebp]
  00df0	52		 push	 edx
  00df1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00df4	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ClientToScreen

; 237  : 		::ScreenToClient( AfxGetMainWindow()->m_hWnd,&point );

  00df9	8b f4		 mov	 esi, esp
  00dfb	8d 45 0c	 lea	 eax, DWORD PTR _point$[ebp]
  00dfe	50		 push	 eax
  00dff	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00e04	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00e07	51		 push	 ecx
  00e08	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  00e0e	3b f4		 cmp	 esi, esp
  00e10	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 238  : 
; 239  : 		wParam = nFlags;

  00e15	8b 55 08	 mov	 edx, DWORD PTR _nFlags$[ebp]
  00e18	89 55 f8	 mov	 DWORD PTR _wParam$188819[ebp], edx

; 240  : 		lParam = (WORD)point.x;

  00e1b	0f b7 45 0c	 movzx	 eax, WORD PTR _point$[ebp]
  00e1f	89 45 f4	 mov	 DWORD PTR _lParam$188820[ebp], eax

; 241  : 		lParam += ((WORD)point.y) << 16;		

  00e22	0f b7 4d 10	 movzx	 ecx, WORD PTR _point$[ebp+4]
  00e26	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00e29	03 4d f4	 add	 ecx, DWORD PTR _lParam$188820[ebp]
  00e2c	89 4d f4	 mov	 DWORD PTR _lParam$188820[ebp], ecx

; 242  : 
; 243  : 		::SendMessage(AfxGetMainWindow()->m_hWnd,WM_LBUTTONDOWN, wParam,lParam );	

  00e2f	8b f4		 mov	 esi, esp
  00e31	8b 55 f4	 mov	 edx, DWORD PTR _lParam$188820[ebp]
  00e34	52		 push	 edx
  00e35	8b 45 f8	 mov	 eax, DWORD PTR _wParam$188819[ebp]
  00e38	50		 push	 eax
  00e39	68 01 02 00 00	 push	 513			; 00000201H
  00e3e	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00e43	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00e46	51		 push	 ecx
  00e47	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00e4d	3b f4		 cmp	 esi, esp
  00e4f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L188818:

; 244  : 	}
; 245  : 	CDialog::OnLButtonDown(nFlags, point);

  00e54	8b 55 10	 mov	 edx, DWORD PTR _point$[ebp+4]
  00e57	52		 push	 edx
  00e58	8b 45 0c	 mov	 eax, DWORD PTR _point$[ebp]
  00e5b	50		 push	 eax
  00e5c	8b 4d 08	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  00e5f	51		 push	 ecx
  00e60	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e63	e8 00 00 00 00	 call	 ?OnLButtonDown@CWnd@@IAEXIVCPoint@@@Z ; CWnd::OnLButtonDown

; 246  : 	AfxGetMainWindow()->SetActiveWindow();

  00e68	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00e6d	8b c8		 mov	 ecx, eax
  00e6f	e8 00 00 00 00	 call	 ?SetActiveWindow@CWnd@@QAEPAV1@XZ ; CWnd::SetActiveWindow

; 247  : 	SetWindowPos(AfxGetMainWindow(), 0,0,0,0, SWP_NOACTIVATE|SWP_NOMOVE|SWP_NOSIZE);

  00e74	6a 13		 push	 19			; 00000013H
  00e76	6a 00		 push	 0
  00e78	6a 00		 push	 0
  00e7a	6a 00		 push	 0
  00e7c	6a 00		 push	 0
  00e7e	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00e83	50		 push	 eax
  00e84	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e87	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 248  : } 

  00e8c	5e		 pop	 esi
  00e8d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00e90	3b ec		 cmp	 ebp, esp
  00e92	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e97	8b e5		 mov	 esp, ebp
  00e99	5d		 pop	 ebp
  00e9a	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonDown@CTranslucentDialog@@AAEXIVCPoint@@@Z ENDP ; CTranslucentDialog::OnLButtonDown
_TEXT	ENDS
EXTRN	?OnLButtonUp@CWnd@@IAEXIVCPoint@@@Z:NEAR	; CWnd::OnLButtonUp
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_lParam$188830 = -12					; size = 4
_wParam$188829 = -8					; size = 4
_this$ = -4						; size = 4
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnLButtonUp@CTranslucentDialog@@QAEXIVCPoint@@@Z PROC NEAR ; CTranslucentDialog::OnLButtonUp
; _this$ = ecx

; 251  : {

  00ea0	55		 push	 ebp
  00ea1	8b ec		 mov	 ebp, esp
  00ea3	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00ea6	56		 push	 esi
  00ea7	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  00eae	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00eb5	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00ebc	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 252  : 	if (m_bEnableDrag)

  00ebf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ec2	0f b6 88 94 00
	00 00		 movzx	 ecx, BYTE PTR [eax+148]
  00ec9	85 c9		 test	 ecx, ecx
  00ecb	74 67		 je	 SHORT $L188828

; 253  : 	{
; 254  : 		WPARAM wParam;
; 255  : 		LPARAM lParam;
; 256  : 
; 257  : 		ClientToScreen( &point);

  00ecd	8d 55 0c	 lea	 edx, DWORD PTR _point$[ebp]
  00ed0	52		 push	 edx
  00ed1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ed4	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ClientToScreen

; 258  : 		::ScreenToClient( AfxGetMainWindow()->m_hWnd,&point );

  00ed9	8b f4		 mov	 esi, esp
  00edb	8d 45 0c	 lea	 eax, DWORD PTR _point$[ebp]
  00ede	50		 push	 eax
  00edf	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00ee4	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00ee7	51		 push	 ecx
  00ee8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  00eee	3b f4		 cmp	 esi, esp
  00ef0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 259  : 
; 260  : 		wParam = nFlags;

  00ef5	8b 55 08	 mov	 edx, DWORD PTR _nFlags$[ebp]
  00ef8	89 55 f8	 mov	 DWORD PTR _wParam$188829[ebp], edx

; 261  : 		lParam = (WORD)point.x;

  00efb	0f b7 45 0c	 movzx	 eax, WORD PTR _point$[ebp]
  00eff	89 45 f4	 mov	 DWORD PTR _lParam$188830[ebp], eax

; 262  : 		lParam += ((WORD)point.y) << 16;		

  00f02	0f b7 4d 10	 movzx	 ecx, WORD PTR _point$[ebp+4]
  00f06	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00f09	03 4d f4	 add	 ecx, DWORD PTR _lParam$188830[ebp]
  00f0c	89 4d f4	 mov	 DWORD PTR _lParam$188830[ebp], ecx

; 263  : 		//::PostMessage( AfxGetMainWindow()->m_hWnd,WM_NCLBUTTONDOWN, HTCAPTION, lParam );	
; 264  : 		::SendMessage(AfxGetMainWindow()->m_hWnd,WM_LBUTTONUP, wParam,lParam );

  00f0f	8b f4		 mov	 esi, esp
  00f11	8b 55 f4	 mov	 edx, DWORD PTR _lParam$188830[ebp]
  00f14	52		 push	 edx
  00f15	8b 45 f8	 mov	 eax, DWORD PTR _wParam$188829[ebp]
  00f18	50		 push	 eax
  00f19	68 02 02 00 00	 push	 514			; 00000202H
  00f1e	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00f23	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00f26	51		 push	 ecx
  00f27	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00f2d	3b f4		 cmp	 esi, esp
  00f2f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L188828:

; 265  : 	}
; 266  : 	CDialog::OnLButtonUp(nFlags, point);

  00f34	8b 55 10	 mov	 edx, DWORD PTR _point$[ebp+4]
  00f37	52		 push	 edx
  00f38	8b 45 0c	 mov	 eax, DWORD PTR _point$[ebp]
  00f3b	50		 push	 eax
  00f3c	8b 4d 08	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  00f3f	51		 push	 ecx
  00f40	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f43	e8 00 00 00 00	 call	 ?OnLButtonUp@CWnd@@IAEXIVCPoint@@@Z ; CWnd::OnLButtonUp

; 267  : 	AfxGetMainWindow()->SetActiveWindow();

  00f48	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00f4d	8b c8		 mov	 ecx, eax
  00f4f	e8 00 00 00 00	 call	 ?SetActiveWindow@CWnd@@QAEPAV1@XZ ; CWnd::SetActiveWindow

; 268  : 	//AfxGetMainWindow()->SetFocus();
; 269  : 	SetWindowPos(AfxGetMainWindow(), 0,0,0,0, SWP_NOACTIVATE|SWP_NOMOVE|SWP_NOSIZE);

  00f54	6a 13		 push	 19			; 00000013H
  00f56	6a 00		 push	 0
  00f58	6a 00		 push	 0
  00f5a	6a 00		 push	 0
  00f5c	6a 00		 push	 0
  00f5e	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00f63	50		 push	 eax
  00f64	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f67	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 270  : }

  00f6c	5e		 pop	 esi
  00f6d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00f70	3b ec		 cmp	 ebp, esp
  00f72	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f77	8b e5		 mov	 esp, ebp
  00f79	5d		 pop	 ebp
  00f7a	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonUp@CTranslucentDialog@@QAEXIVCPoint@@@Z ENDP	; CTranslucentDialog::OnLButtonUp
_TEXT	ENDS
EXTRN	?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z:NEAR	; CWnd::OnMouseMove
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_lParam$188840 = -12					; size = 4
_wParam$188839 = -8					; size = 4
_this$ = -4						; size = 4
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnMouseMove@CTranslucentDialog@@QAEXIVCPoint@@@Z PROC NEAR ; CTranslucentDialog::OnMouseMove
; _this$ = ecx

; 273  : {

  00f80	55		 push	 ebp
  00f81	8b ec		 mov	 ebp, esp
  00f83	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00f86	56		 push	 esi
  00f87	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  00f8e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00f95	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00f9c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 274  : 	if (m_bEnableDrag && (nFlags & MK_LBUTTON))

  00f9f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00fa2	0f b6 88 94 00
	00 00		 movzx	 ecx, BYTE PTR [eax+148]
  00fa9	85 c9		 test	 ecx, ecx
  00fab	74 6f		 je	 SHORT $L188838
  00fad	8b 55 08	 mov	 edx, DWORD PTR _nFlags$[ebp]
  00fb0	83 e2 01	 and	 edx, 1
  00fb3	74 67		 je	 SHORT $L188838

; 275  : 	{
; 276  : 		WPARAM wParam;
; 277  : 		LPARAM lParam;
; 278  : 
; 279  : 		ClientToScreen( &point);

  00fb5	8d 45 0c	 lea	 eax, DWORD PTR _point$[ebp]
  00fb8	50		 push	 eax
  00fb9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00fbc	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ClientToScreen

; 280  : 		::ScreenToClient( AfxGetMainWindow()->m_hWnd,&point );

  00fc1	8b f4		 mov	 esi, esp
  00fc3	8d 4d 0c	 lea	 ecx, DWORD PTR _point$[ebp]
  00fc6	51		 push	 ecx
  00fc7	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  00fcc	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00fcf	52		 push	 edx
  00fd0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  00fd6	3b f4		 cmp	 esi, esp
  00fd8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 281  : 
; 282  : 		wParam = nFlags;

  00fdd	8b 45 08	 mov	 eax, DWORD PTR _nFlags$[ebp]
  00fe0	89 45 f8	 mov	 DWORD PTR _wParam$188839[ebp], eax

; 283  : 		lParam = (WORD)point.x;

  00fe3	0f b7 4d 0c	 movzx	 ecx, WORD PTR _point$[ebp]
  00fe7	89 4d f4	 mov	 DWORD PTR _lParam$188840[ebp], ecx

; 284  : 		lParam += ((WORD)point.y) << 16;		

  00fea	0f b7 55 10	 movzx	 edx, WORD PTR _point$[ebp+4]
  00fee	c1 e2 10	 shl	 edx, 16			; 00000010H
  00ff1	03 55 f4	 add	 edx, DWORD PTR _lParam$188840[ebp]
  00ff4	89 55 f4	 mov	 DWORD PTR _lParam$188840[ebp], edx

; 285  : 		//::PostMessage( AfxGetMainWindow()->m_hWnd,WM_NCLBUTTONDOWN, HTCAPTION, lParam );	
; 286  : 		::SendMessage(AfxGetMainWindow()->m_hWnd,WM_MOUSEMOVE, wParam,lParam );

  00ff7	8b f4		 mov	 esi, esp
  00ff9	8b 45 f4	 mov	 eax, DWORD PTR _lParam$188840[ebp]
  00ffc	50		 push	 eax
  00ffd	8b 4d f8	 mov	 ecx, DWORD PTR _wParam$188839[ebp]
  01000	51		 push	 ecx
  01001	68 00 02 00 00	 push	 512			; 00000200H
  01006	e8 00 00 00 00	 call	 ?AfxGetMainWindow@@YAPAVCWnd@@XZ ; AfxGetMainWindow
  0100b	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0100e	52		 push	 edx
  0100f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  01015	3b f4		 cmp	 esi, esp
  01017	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L188838:

; 287  : 	}
; 288  : 	CDialog::OnMouseMove(nFlags, point);

  0101c	8b 45 10	 mov	 eax, DWORD PTR _point$[ebp+4]
  0101f	50		 push	 eax
  01020	8b 4d 0c	 mov	 ecx, DWORD PTR _point$[ebp]
  01023	51		 push	 ecx
  01024	8b 55 08	 mov	 edx, DWORD PTR _nFlags$[ebp]
  01027	52		 push	 edx
  01028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0102b	e8 00 00 00 00	 call	 ?OnMouseMove@CWnd@@IAEXIVCPoint@@@Z ; CWnd::OnMouseMove

; 289  : }

  01030	5e		 pop	 esi
  01031	83 c4 0c	 add	 esp, 12			; 0000000cH
  01034	3b ec		 cmp	 ebp, esp
  01036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0103b	8b e5		 mov	 esp, ebp
  0103d	5d		 pop	 ebp
  0103e	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseMove@CTranslucentDialog@@QAEXIVCPoint@@@Z ENDP	; CTranslucentDialog::OnMouseMove
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC NEAR	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 158  : 	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	8b 45 0c	 mov	 eax, DWORD PTR _nLineNo$[ebp]
  0001c	89 42 04	 mov	 DWORD PTR [edx+4], eax
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
EXTRN	?atlTraceGeneral@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceGeneral
; Function compile flags: /Odt /RTCsu
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ
_TEXT	SEGMENT
_ptr$ = -4						; size = 4
_this$ = 8						; size = 4
_pszFmt$ = 12						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 173  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 174  : 		va_list ptr; va_start(ptr, pszFmt);

  0000b	8d 45 10	 lea	 eax, DWORD PTR _pszFmt$[ebp+4]
  0000e	89 45 fc	 mov	 DWORD PTR _ptr$[ebp], eax

; 175  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, atlTraceGeneral, 0, pszFmt, ptr);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _ptr$[ebp]
  00014	51		 push	 ecx
  00015	8b 55 0c	 mov	 edx, DWORD PTR _pszFmt$[ebp]
  00018	52		 push	 edx
  00019	6a 00		 push	 0
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?atlTraceGeneral@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceGeneral
  00020	e8 00 00 00 00	 call	 ??BCTraceCategory@ATL@@QBEKXZ ; ATL::CTraceCategory::operator unsigned long
  00025	50		 push	 eax
  00026	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002c	51		 push	 ecx
  0002d	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00030	8b 02		 mov	 eax, DWORD PTR [edx]
  00032	50		 push	 eax
  00033	68 00 00 00 00	 push	 OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
  00038	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z ; ATL::CTrace::TraceV
  0003d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 176  : 		va_end(ptr);

  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _ptr$[ebp], 0

; 177  : 	}

  00047	83 c4 04	 add	 esp, 4
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
??RCTraceFileAndLineInfo@ATL@@QBAXPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVA:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z PROC NEAR		; ATL::CTrace::TraceV, COMDAT

; 121  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 122  : 		AtlTraceVA(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

  00003	8b 45 20	 mov	 eax, DWORD PTR _args$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 1c	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 18	 mov	 edx, DWORD PTR _nLevel$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 14	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR _pszFileName$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 _AtlTraceVA
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH

; 123  : 	}

  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC NEAR			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 203  : 	return( m_dwCategory );

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]

; 204  : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
_TEXT	ENDS
PUBLIC	?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z ; Gdiplus::Graphics::SetNativeGraphics
EXTRN	_GdipCreateFromHDC@8:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\platformsdk\include\gdiplusgraphics.h
;	COMDAT ??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z
_TEXT	SEGMENT
_graphics$ = -12					; size = 4
_this$ = -4						; size = 4
_hdc$ = 8						; size = 4
??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z PROC NEAR		; Gdiplus::Graphics::Graphics, COMDAT
; _this$ = ecx

; 53   :     Graphics(IN HDC hdc)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 54   :     {
; 55   :         GpGraphics *graphics = NULL;

  0001a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _graphics$[ebp], 0

; 56   : 
; 57   :         lastResult = DllExports::GdipCreateFromHDC(hdc, &graphics);

  00021	8d 45 f4	 lea	 eax, DWORD PTR _graphics$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _hdc$[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 _GdipCreateFromHDC@8
  0002e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00031	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 58   : 
; 59   :         SetNativeGraphics(graphics);

  00034	8b 45 f4	 mov	 eax, DWORD PTR _graphics$[ebp]
  00037	50		 push	 eax
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z ; Gdiplus::Graphics::SetNativeGraphics

; 60   :     }

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	52		 push	 edx
  00044	8b cd		 mov	 ecx, ebp
  00046	50		 push	 eax
  00047	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189382
  0004d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00052	58		 pop	 eax
  00053	5a		 pop	 edx
  00054	83 c4 10	 add	 esp, 16			; 00000010H
  00057	3b ec		 cmp	 ebp, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
$L189382:
  00064	01 00 00 00	 DD	 1
  00068	00 00 00 00	 DD	 $L189381
$L189381:
  0006c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00070	04 00 00 00	 DD	 4
  00074	00 00 00 00	 DD	 $L189380
$L189380:
  00078	67		 DB	 103			; 00000067H
  00079	72		 DB	 114			; 00000072H
  0007a	61		 DB	 97			; 00000061H
  0007b	70		 DB	 112			; 00000070H
  0007c	68		 DB	 104			; 00000068H
  0007d	69		 DB	 105			; 00000069H
  0007e	63		 DB	 99			; 00000063H
  0007f	73		 DB	 115			; 00000073H
  00080	00		 DB	 0
??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z ENDP		; Gdiplus::Graphics::Graphics
_TEXT	ENDS
EXTRN	_GdipDeleteGraphics@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1Graphics@Gdiplus@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Graphics@Gdiplus@@QAE@XZ PROC NEAR			; Gdiplus::Graphics::~Graphics, COMDAT
; _this$ = ecx

; 102  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 103  :         DllExports::GdipDeleteGraphics(nativeGraphics);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 _GdipDeleteGraphics@4

; 104  :     }

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1Graphics@Gdiplus@@QAE@XZ ENDP			; Gdiplus::Graphics::~Graphics
_TEXT	ENDS
PUBLIC	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus
EXTRN	_GdipReleaseDC@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?ReleaseHDC@Graphics@Gdiplus@@QAEXPAUHDC__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hdc$ = 8						; size = 4
?ReleaseHDC@Graphics@Gdiplus@@QAEXPAUHDC__@@@Z PROC NEAR ; Gdiplus::Graphics::ReleaseHDC, COMDAT
; _this$ = ecx

; 127  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 128  :         SetStatus(DllExports::GdipReleaseDC(nativeGraphics, hdc));

  0000e	8b 45 08	 mov	 eax, DWORD PTR _hdc$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 _GdipReleaseDC@8
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus

; 129  :     }

  00026	83 c4 04	 add	 esp, 4
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?ReleaseHDC@Graphics@Gdiplus@@QAEXPAUHDC__@@@Z ENDP	; Gdiplus::Graphics::ReleaseHDC
_TEXT	ENDS
EXTRN	_GdipSetInterpolationMode@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?SetInterpolationMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4InterpolationMode@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_interpolationMode$ = 8					; size = 4
?SetInterpolationMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4InterpolationMode@2@@Z PROC NEAR ; Gdiplus::Graphics::SetInterpolationMode, COMDAT
; _this$ = ecx

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 231  :         return SetStatus(DllExports::GdipSetInterpolationMode(nativeGraphics,
; 232  :                                                            interpolationMode));

  0000e	8b 45 08	 mov	 eax, DWORD PTR _interpolationMode$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 _GdipSetInterpolationMode@8
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus

; 233  :     }

  00026	83 c4 04	 add	 esp, 4
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?SetInterpolationMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4InterpolationMode@2@@Z ENDP ; Gdiplus::Graphics::SetInterpolationMode
_TEXT	ENDS
EXTRN	_GdipSetSmoothingMode@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?SetSmoothingMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4SmoothingMode@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_smoothingMode$ = 8					; size = 4
?SetSmoothingMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4SmoothingMode@2@@Z PROC NEAR ; Gdiplus::Graphics::SetSmoothingMode, COMDAT
; _this$ = ecx

; 246  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 247  :         return SetStatus(DllExports::GdipSetSmoothingMode(nativeGraphics,
; 248  :                                                           smoothingMode));

  0000e	8b 45 08	 mov	 eax, DWORD PTR _smoothingMode$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 _GdipSetSmoothingMode@8
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus

; 249  :     }

  00026	83 c4 04	 add	 esp, 4
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?SetSmoothingMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4SmoothingMode@2@@Z ENDP ; Gdiplus::Graphics::SetSmoothingMode
_TEXT	ENDS
EXTRN	_GdipDrawImageRectI@24:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HHHH@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_image$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_width$ = 20						; size = 4
_height$ = 24						; size = 4
?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HHHH@Z PROC NEAR ; Gdiplus::Graphics::DrawImage, COMDAT
; _this$ = ecx

; 1558 :                      IN INT height) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1559 :         return SetStatus(DllExports::GdipDrawImageRectI(nativeGraphics,
; 1560 :                                                         image ? image->nativeImage
; 1561 :                                                               : NULL,
; 1562 :                                                         x,
; 1563 :                                                         y,
; 1564 :                                                         width,
; 1565 :                                                         height));

  00017	83 7d 08 00	 cmp	 DWORD PTR _image$[ebp], 0
  0001b	74 0b		 je	 SHORT $L189388
  0001d	8b 45 08	 mov	 eax, DWORD PTR _image$[ebp]
  00020	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00023	89 4d f8	 mov	 DWORD PTR tv73[ebp], ecx
  00026	eb 07		 jmp	 SHORT $L189389
$L189388:
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$L189389:
  0002f	8b 55 18	 mov	 edx, DWORD PTR _height$[ebp]
  00032	52		 push	 edx
  00033	8b 45 14	 mov	 eax, DWORD PTR _width$[ebp]
  00036	50		 push	 eax
  00037	8b 4d 10	 mov	 ecx, DWORD PTR _y$[ebp]
  0003a	51		 push	 ecx
  0003b	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp]
  0003e	52		 push	 edx
  0003f	8b 45 f8	 mov	 eax, DWORD PTR tv73[ebp]
  00042	50		 push	 eax
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	8b 11		 mov	 edx, DWORD PTR [ecx]
  00048	52		 push	 edx
  00049	e8 00 00 00 00	 call	 _GdipDrawImageRectI@24
  0004e	50		 push	 eax
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus

; 1566 :     }

  00057	83 c4 08	 add	 esp, 8
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 14 00	 ret	 20			; 00000014H
?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HHHH@Z ENDP ; Gdiplus::Graphics::DrawImage
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_graphics$ = 8						; size = 4
?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z PROC NEAR ; Gdiplus::Graphics::SetNativeGraphics, COMDAT
; _this$ = ecx

; 2339 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2340 :         this->nativeGraphics = graphics;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _graphics$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx

; 2341 :     }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z ENDP ; Gdiplus::Graphics::SetNativeGraphics
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_status$ = 8						; size = 4
?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z PROC NEAR ; Gdiplus::Graphics::SetStatus, COMDAT
; _this$ = ecx

; 2344 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2345 :         if (status != Ok)

  0000e	83 7d 08 00	 cmp	 DWORD PTR _status$[ebp], 0
  00012	74 0e		 je	 SHORT $L116181

; 2346 :             return (lastResult = status);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _status$[ebp]
  0001a	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0001d	8b 45 08	 mov	 eax, DWORD PTR _status$[ebp]
  00020	eb 03		 jmp	 SHORT $L116180
$L116181:

; 2347 :         else
; 2348 :             return status;

  00022	8b 45 08	 mov	 eax, DWORD PTR _status$[ebp]
$L116180:

; 2349 :     }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ENDP ; Gdiplus::Graphics::SetStatus
_TEXT	ENDS
PUBLIC	?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Image::SetStatus
EXTRN	_GdipGetImageWidth@8:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\platformsdk\include\gdiplusbitmap.h
;	COMDAT ?GetWidth@Image@Gdiplus@@QAEIXZ
_TEXT	SEGMENT
_width$ = -12						; size = 4
_this$ = -4						; size = 4
?GetWidth@Image@Gdiplus@@QAEIXZ PROC NEAR		; Gdiplus::Image::GetWidth, COMDAT
; _this$ = ecx

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 226  :     UINT width = 0;

  0001a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _width$[ebp], 0

; 227  : 
; 228  :     SetStatus(DllExports::GdipGetImageWidth(nativeImage, &width));

  00021	8d 45 f4	 lea	 eax, DWORD PTR _width$[ebp]
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002b	52		 push	 edx
  0002c	e8 00 00 00 00	 call	 _GdipGetImageWidth@8
  00031	50		 push	 eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Image::SetStatus

; 229  : 
; 230  :     return width;

  0003a	8b 45 f4	 mov	 eax, DWORD PTR _width$[ebp]

; 231  : }

  0003d	52		 push	 edx
  0003e	8b cd		 mov	 ecx, ebp
  00040	50		 push	 eax
  00041	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189395
  00047	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004c	58		 pop	 eax
  0004d	5a		 pop	 edx
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$L189395:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $L189394
$L189394:
  00064	f4 ff ff ff	 DD	 -12			; fffffff4H
  00068	04 00 00 00	 DD	 4
  0006c	00 00 00 00	 DD	 $L189393
$L189393:
  00070	77		 DB	 119			; 00000077H
  00071	69		 DB	 105			; 00000069H
  00072	64		 DB	 100			; 00000064H
  00073	74		 DB	 116			; 00000074H
  00074	68		 DB	 104			; 00000068H
  00075	00		 DB	 0
?GetWidth@Image@Gdiplus@@QAEIXZ ENDP			; Gdiplus::Image::GetWidth
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\platformsdk\include\gdiplusheaders.h
_TEXT	ENDS
;	COMDAT ?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_status$ = 8						; size = 4
?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z PROC NEAR ; Gdiplus::Image::SetStatus, COMDAT
; _this$ = ecx

; 472  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 473  :         if (status != Ok)

  0000e	83 7d 08 00	 cmp	 DWORD PTR _status$[ebp], 0
  00012	74 0e		 je	 SHORT $L109523

; 474  :             return (lastResult = status);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _status$[ebp]
  0001a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001d	8b 45 08	 mov	 eax, DWORD PTR _status$[ebp]
  00020	eb 03		 jmp	 SHORT $L109522
$L109523:

; 475  :         else
; 476  :             return status;

  00022	8b 45 08	 mov	 eax, DWORD PTR _status$[ebp]
$L109522:

; 477  :     }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z ENDP	; Gdiplus::Image::SetStatus
_TEXT	ENDS
EXTRN	_GdipGetImageHeight@8:NEAR
; Function compile flags: /Odt /RTCsu
; File d:\program files (x86)\microsoft visual studio .net 2003\vc7\platformsdk\include\gdiplusbitmap.h
;	COMDAT ?GetHeight@Image@Gdiplus@@QAEIXZ
_TEXT	SEGMENT
_height$ = -12						; size = 4
_this$ = -4						; size = 4
?GetHeight@Image@Gdiplus@@QAEIXZ PROC NEAR		; Gdiplus::Image::GetHeight, COMDAT
; _this$ = ecx

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 236  :     UINT height = 0;

  0001a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _height$[ebp], 0

; 237  : 
; 238  :     SetStatus(DllExports::GdipGetImageHeight(nativeImage, &height));

  00021	8d 45 f4	 lea	 eax, DWORD PTR _height$[ebp]
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002b	52		 push	 edx
  0002c	e8 00 00 00 00	 call	 _GdipGetImageHeight@8
  00031	50		 push	 eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Image::SetStatus

; 239  : 
; 240  :     return height;

  0003a	8b 45 f4	 mov	 eax, DWORD PTR _height$[ebp]

; 241  : }

  0003d	52		 push	 edx
  0003e	8b cd		 mov	 ecx, ebp
  00040	50		 push	 eax
  00041	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L189400
  00047	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0004c	58		 pop	 eax
  0004d	5a		 pop	 edx
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$L189400:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $L189399
$L189399:
  00064	f4 ff ff ff	 DD	 -12			; fffffff4H
  00068	04 00 00 00	 DD	 4
  0006c	00 00 00 00	 DD	 $L189398
$L189398:
  00070	68		 DB	 104			; 00000068H
  00071	65		 DB	 101			; 00000065H
  00072	69		 DB	 105			; 00000069H
  00073	67		 DB	 103			; 00000067H
  00074	68		 DB	 104			; 00000068H
  00075	74		 DB	 116			; 00000074H
  00076	00		 DB	 0
?GetHeight@Image@Gdiplus@@QAEIXZ ENDP			; Gdiplus::Image::GetHeight
_TEXT	ENDS
END
