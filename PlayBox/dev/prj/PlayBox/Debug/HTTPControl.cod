; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\src\module\HTTPControl\HTTPControl.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0EN@IBFBLEEG@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@facet@locale@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R1A@?0A@A@?$numpunct@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$numpunct@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_C@_0EN@CBMLGOH@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FG@LDNDNCJM@D?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Maklocchr@D@std@@YADDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@AAE_WXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@_W@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@ctype_base@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_G?$ctype@_W@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@A@?$ctype@D@std@@8
rdata$r	SEGMENT DWORD USE32 PUBLIC 'CONST'
rdata$r	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_S?$numpunct@_W@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG187058 DB	'%s\LhUpdate.dll', 00H
$SG187063 DB	'SetHTTPControl', 00H
	ORG $+1
$SG187085 DB	'TodayRecommand', 00H
	ORG $+1
$SG187086 DB	'HTTP-Finish', 00H
$SG187087 DB	'log_httpr.txt', 00H
	ORG $+2
$SG187092 DB	'BangDan', 00H
$SG187093 DB	'HTTP-Finish', 00H
$SG187094 DB	'log_httpr.txt', 00H
	ORG $+2
$SG187099 DB	'RegID', 00H
	ORG $+2
$SG187100 DB	'HTTP-Finish', 00H
$SG187101 DB	'log_httpr.txt', 00H
	ORG $+2
$SG187106 DB	'ConfigFile', 00H
	ORG $+1
$SG187107 DB	'HTTP-Finish', 00H
$SG187108 DB	'log_httpr.txt', 00H
	ORG $+2
$SG187113 DB	'UpClientLog', 00H
$SG187114 DB	'HTTP-Finish', 00H
$SG187115 DB	'log_httpr.txt', 00H
	ORG $+2
$SG187120 DB	'DownloadAD', 00H
	ORG $+1
$SG187121 DB	'HTTP-Finish', 00H
$SG187122 DB	'log_httpr.txt', 00H
CONST	ENDS
PUBLIC	?Init@CHTTPControl@@SAXXZ			; CHTTPControl::Init
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	__imp__CreateEventA@16:NEAR
_BSS	SEGMENT
_s_EventInit DD	01H DUP (?)
_s_EventTodayRecommend DD 01H DUP (?)
_s_EventRegID DD 01H DUP (?)
_s_EventConfigFile DD 01H DUP (?)
_s_EventBangDan DD 01H DUP (?)
_s_EventUpClientLog DD 01H DUP (?)
_s_EventDownAD DD 01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$IMZ
; File d:\boxgit\playbox\playbox\dev\prj\playbox\src\module\httpcontrol\httpcontrol.cpp
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCsu
rtc$TMZ	ENDS
_TEXT	SEGMENT
?Init@CHTTPControl@@SAXXZ PROC NEAR			; CHTTPControl::Init

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 15   : 	s_EventInit				= CreateEvent(NULL,TRUE,TRUE,NULL);

  00004	8b f4		 mov	 esi, esp
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	6a 01		 push	 1
  0000c	6a 00		 push	 0
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  00014	3b f4		 cmp	 esi, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001b	a3 00 00 00 00	 mov	 DWORD PTR _s_EventInit, eax

; 16   : 	s_EventTodayRecommend	= CreateEvent(NULL,TRUE,FALSE,NULL);

  00020	8b f4		 mov	 esi, esp
  00022	6a 00		 push	 0
  00024	6a 00		 push	 0
  00026	6a 01		 push	 1
  00028	6a 00		 push	 0
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	a3 00 00 00 00	 mov	 DWORD PTR _s_EventTodayRecommend, eax

; 17   : 	s_EventRegID			= CreateEvent(NULL,TRUE,FALSE,NULL);

  0003c	8b f4		 mov	 esi, esp
  0003e	6a 00		 push	 0
  00040	6a 00		 push	 0
  00042	6a 01		 push	 1
  00044	6a 00		 push	 0
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	a3 00 00 00 00	 mov	 DWORD PTR _s_EventRegID, eax

; 18   : 	s_EventBangDan			= CreateEvent(NULL,TRUE,FALSE,NULL);

  00058	8b f4		 mov	 esi, esp
  0005a	6a 00		 push	 0
  0005c	6a 00		 push	 0
  0005e	6a 01		 push	 1
  00060	6a 00		 push	 0
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  00068	3b f4		 cmp	 esi, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	a3 00 00 00 00	 mov	 DWORD PTR _s_EventBangDan, eax

; 19   : 	s_EventConfigFile		= CreateEvent(NULL,TRUE,FALSE,NULL);

  00074	8b f4		 mov	 esi, esp
  00076	6a 00		 push	 0
  00078	6a 00		 push	 0
  0007a	6a 01		 push	 1
  0007c	6a 00		 push	 0
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  00084	3b f4		 cmp	 esi, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	a3 00 00 00 00	 mov	 DWORD PTR _s_EventConfigFile, eax

; 20   : 	s_EventDownAD			= CreateEvent(NULL,TRUE,FALSE,NULL);

  00090	8b f4		 mov	 esi, esp
  00092	6a 00		 push	 0
  00094	6a 00		 push	 0
  00096	6a 01		 push	 1
  00098	6a 00		 push	 0
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  000a0	3b f4		 cmp	 esi, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a7	a3 00 00 00 00	 mov	 DWORD PTR _s_EventDownAD, eax

; 21   : 	s_EventUpClientLog		= CreateEvent(NULL,TRUE,FALSE,NULL);

  000ac	8b f4		 mov	 esi, esp
  000ae	6a 00		 push	 0
  000b0	6a 00		 push	 0
  000b2	6a 01		 push	 1
  000b4	6a 00		 push	 0
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  000bc	3b f4		 cmp	 esi, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c3	a3 00 00 00 00	 mov	 DWORD PTR _s_EventUpClientLog, eax

; 22   : }

  000c8	5e		 pop	 esi
  000c9	3b ec		 cmp	 ebp, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	5d		 pop	 ebp
  000d1	c3		 ret	 0
?Init@CHTTPControl@@SAXXZ ENDP				; CHTTPControl::Init
_TEXT	ENDS
PUBLIC	?Close@CHTTPControl@@SAXXZ			; CHTTPControl::Close
EXTRN	__imp__CloseHandle@4:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
?Close@CHTTPControl@@SAXXZ PROC NEAR			; CHTTPControl::Close

; 25   : {

  000e0	55		 push	 ebp
  000e1	8b ec		 mov	 ebp, esp
  000e3	56		 push	 esi

; 26   : 	CloseHandle( s_EventInit );

  000e4	8b f4		 mov	 esi, esp
  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventInit
  000eb	50		 push	 eax
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 27   : 	CloseHandle( s_EventTodayRecommend );

  000f9	8b f4		 mov	 esi, esp
  000fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventTodayRecommend
  00101	51		 push	 ecx
  00102	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  00108	3b f4		 cmp	 esi, esp
  0010a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 28   : 	CloseHandle( s_EventRegID );

  0010f	8b f4		 mov	 esi, esp
  00111	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventRegID
  00117	52		 push	 edx
  00118	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  0011e	3b f4		 cmp	 esi, esp
  00120	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 29   : 	CloseHandle( s_EventBangDan );

  00125	8b f4		 mov	 esi, esp
  00127	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventBangDan
  0012c	50		 push	 eax
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  00133	3b f4		 cmp	 esi, esp
  00135	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 30   : 	CloseHandle( s_EventConfigFile );

  0013a	8b f4		 mov	 esi, esp
  0013c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventConfigFile
  00142	51		 push	 ecx
  00143	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  00149	3b f4		 cmp	 esi, esp
  0014b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 31   : 	CloseHandle( s_EventDownAD );

  00150	8b f4		 mov	 esi, esp
  00152	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventDownAD
  00158	52		 push	 edx
  00159	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  0015f	3b f4		 cmp	 esi, esp
  00161	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 32   : 	CloseHandle( s_EventUpClientLog );

  00166	8b f4		 mov	 esi, esp
  00168	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventUpClientLog
  0016d	50		 push	 eax
  0016e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  00174	3b f4		 cmp	 esi, esp
  00176	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 33   : }

  0017b	5e		 pop	 esi
  0017c	3b ec		 cmp	 ebp, esp
  0017e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00183	5d		 pop	 ebp
  00184	c3		 ret	 0
?Close@CHTTPControl@@SAXXZ ENDP				; CHTTPControl::Close
_TEXT	ENDS
PUBLIC	?HTTPWait_TodayRecommend@CHTTPControl@@SAXXZ	; CHTTPControl::HTTPWait_TodayRecommend
EXTRN	__imp__WaitForSingleObject@8:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
?HTTPWait_TodayRecommend@CHTTPControl@@SAXXZ PROC NEAR	; CHTTPControl::HTTPWait_TodayRecommend

; 36   : {

  00190	55		 push	 ebp
  00191	8b ec		 mov	 ebp, esp
  00193	56		 push	 esi

; 37   : 	WaitForSingleObject( s_EventInit,30*1000 );

  00194	8b f4		 mov	 esi, esp
  00196	68 30 75 00 00	 push	 30000			; 00007530H
  0019b	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventInit
  001a0	50		 push	 eax
  001a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  001a7	3b f4		 cmp	 esi, esp
  001a9	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 38   : }

  001ae	5e		 pop	 esi
  001af	3b ec		 cmp	 ebp, esp
  001b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b6	5d		 pop	 ebp
  001b7	c3		 ret	 0
?HTTPWait_TodayRecommend@CHTTPControl@@SAXXZ ENDP	; CHTTPControl::HTTPWait_TodayRecommend
_TEXT	ENDS
PUBLIC	?HTTPWait_BangDan@CHTTPControl@@SAXXZ		; CHTTPControl::HTTPWait_BangDan
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	__imp__WaitForMultipleObjects@16:NEAR
EXTRN	__imp__Sleep@4:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_handles$ = -16						; size = 12
?HTTPWait_BangDan@CHTTPControl@@SAXXZ PROC NEAR		; CHTTPControl::HTTPWait_BangDan

; 41   : {

  001c0	55		 push	 ebp
  001c1	8b ec		 mov	 ebp, esp
  001c3	83 ec 14	 sub	 esp, 20			; 00000014H
  001c6	56		 push	 esi
  001c7	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  001cc	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  001cf	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  001d2	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  001d5	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  001d8	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 42   : 	HANDLE handles[3];
; 43   : 	handles[0]			= s_EventTodayRecommend;

  001db	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventTodayRecommend
  001e0	89 45 f0	 mov	 DWORD PTR _handles$[ebp], eax

; 44   : 	handles[1]			= s_EventConfigFile;	

  001e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventConfigFile
  001e9	89 4d f4	 mov	 DWORD PTR _handles$[ebp+4], ecx

; 45   : 	handles[2]			= s_EventRegID;

  001ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventRegID
  001f2	89 55 f8	 mov	 DWORD PTR _handles$[ebp+8], edx

; 46   : 
; 47   : 	WaitForMultipleObjects( 3,handles,TRUE,60*1000 );

  001f5	8b f4		 mov	 esi, esp
  001f7	68 60 ea 00 00	 push	 60000			; 0000ea60H
  001fc	6a 01		 push	 1
  001fe	8d 45 f0	 lea	 eax, DWORD PTR _handles$[ebp]
  00201	50		 push	 eax
  00202	6a 03		 push	 3
  00204	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForMultipleObjects@16
  0020a	3b f4		 cmp	 esi, esp
  0020c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 48   : 	Sleep(5000);

  00211	8b f4		 mov	 esi, esp
  00213	68 88 13 00 00	 push	 5000			; 00001388H
  00218	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4
  0021e	3b f4		 cmp	 esi, esp
  00220	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 49   : }

  00225	52		 push	 edx
  00226	8b cd		 mov	 ecx, ebp
  00228	50		 push	 eax
  00229	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L187548
  0022f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00234	58		 pop	 eax
  00235	5a		 pop	 edx
  00236	5e		 pop	 esi
  00237	83 c4 14	 add	 esp, 20			; 00000014H
  0023a	3b ec		 cmp	 ebp, esp
  0023c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00241	8b e5		 mov	 esp, ebp
  00243	5d		 pop	 ebp
  00244	c3		 ret	 0
$L187548:
  00245	01 00 00 00	 DD	 1
  00249	00 00 00 00	 DD	 $L187547
$L187547:
  0024d	f0 ff ff ff	 DD	 -16			; fffffff0H
  00251	0c 00 00 00	 DD	 12			; 0000000cH
  00255	00 00 00 00	 DD	 $L187546
$L187546:
  00259	68		 DB	 104			; 00000068H
  0025a	61		 DB	 97			; 00000061H
  0025b	6e		 DB	 110			; 0000006eH
  0025c	64		 DB	 100			; 00000064H
  0025d	6c		 DB	 108			; 0000006cH
  0025e	65		 DB	 101			; 00000065H
  0025f	73		 DB	 115			; 00000073H
  00260	00		 DB	 0
?HTTPWait_BangDan@CHTTPControl@@SAXXZ ENDP		; CHTTPControl::HTTPWait_BangDan
_TEXT	ENDS
PUBLIC	?HTTPWait_AD@CHTTPControl@@SAXXZ		; CHTTPControl::HTTPWait_AD
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_handles$ = -20						; size = 16
?HTTPWait_AD@CHTTPControl@@SAXXZ PROC NEAR		; CHTTPControl::HTTPWait_AD

; 52   : {

  00270	55		 push	 ebp
  00271	8b ec		 mov	 ebp, esp
  00273	83 ec 18	 sub	 esp, 24			; 00000018H
  00276	56		 push	 esi
  00277	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0027c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0027f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00282	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00285	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00288	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0028b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax

; 53   : 	HANDLE handles[4];
; 54   : 	handles[0]			= s_EventTodayRecommend;

  0028e	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventTodayRecommend
  00293	89 45 ec	 mov	 DWORD PTR _handles$[ebp], eax

; 55   : 	handles[1]			= s_EventConfigFile;	

  00296	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventConfigFile
  0029c	89 4d f0	 mov	 DWORD PTR _handles$[ebp+4], ecx

; 56   : 	handles[2]			= s_EventRegID;

  0029f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventRegID
  002a5	89 55 f4	 mov	 DWORD PTR _handles$[ebp+8], edx

; 57   : 	handles[3]			= s_EventBangDan;

  002a8	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventBangDan
  002ad	89 45 f8	 mov	 DWORD PTR _handles$[ebp+12], eax

; 58   : 
; 59   : 	WaitForMultipleObjects( 4,handles,TRUE,60*1000 );

  002b0	8b f4		 mov	 esi, esp
  002b2	68 60 ea 00 00	 push	 60000			; 0000ea60H
  002b7	6a 01		 push	 1
  002b9	8d 4d ec	 lea	 ecx, DWORD PTR _handles$[ebp]
  002bc	51		 push	 ecx
  002bd	6a 04		 push	 4
  002bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForMultipleObjects@16
  002c5	3b f4		 cmp	 esi, esp
  002c7	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 60   : 	Sleep(5000);

  002cc	8b f4		 mov	 esi, esp
  002ce	68 88 13 00 00	 push	 5000			; 00001388H
  002d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4
  002d9	3b f4		 cmp	 esi, esp
  002db	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 61   : }

  002e0	52		 push	 edx
  002e1	8b cd		 mov	 ecx, ebp
  002e3	50		 push	 eax
  002e4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L187553
  002ea	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002ef	58		 pop	 eax
  002f0	5a		 pop	 edx
  002f1	5e		 pop	 esi
  002f2	83 c4 18	 add	 esp, 24			; 00000018H
  002f5	3b ec		 cmp	 ebp, esp
  002f7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002fc	8b e5		 mov	 esp, ebp
  002fe	5d		 pop	 ebp
  002ff	c3		 ret	 0
$L187553:
  00300	01 00 00 00	 DD	 1
  00304	00 00 00 00	 DD	 $L187552
$L187552:
  00308	ec ff ff ff	 DD	 -20			; ffffffecH
  0030c	10 00 00 00	 DD	 16			; 00000010H
  00310	00 00 00 00	 DD	 $L187551
$L187551:
  00314	68		 DB	 104			; 00000068H
  00315	61		 DB	 97			; 00000061H
  00316	6e		 DB	 110			; 0000006eH
  00317	64		 DB	 100			; 00000064H
  00318	6c		 DB	 108			; 0000006cH
  00319	65		 DB	 101			; 00000065H
  0031a	73		 DB	 115			; 00000073H
  0031b	00		 DB	 0
?HTTPWait_AD@CHTTPControl@@SAXXZ ENDP			; CHTTPControl::HTTPWait_AD
_TEXT	ENDS
PUBLIC	?HTTPFinish_TodayRecommend@CHTTPControl@@SAXXZ	; CHTTPControl::HTTPFinish_TodayRecommend
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ:NEAR
EXTRN	__imp__SetEvent@4:NEAR
xdata$x	SEGMENT
$T187565 DD	0ffffffffH
	DD	FLAT:$L187557
	DD	00H
	DD	FLAT:$L187558
$T187562 DD	019930520H
	DD	02H
	DD	FLAT:$T187565
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T187556 = -68						; size = 28
$T187555 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_TodayRecommend@CHTTPControl@@SAXXZ PROC NEAR ; CHTTPControl::HTTPFinish_TodayRecommend

; 132  : {

  00320	55		 push	 ebp
  00321	8b ec		 mov	 ebp, esp
  00323	6a ff		 push	 -1
  00325	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_TodayRecommend@CHTTPControl@@SAXXZ
  0032a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00330	50		 push	 eax
  00331	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00338	83 ec 38	 sub	 esp, 56			; 00000038H
  0033b	56		 push	 esi
  0033c	57		 push	 edi
  0033d	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00340	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00345	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0034a	f3 ab		 rep stosd

; 133  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","TodayRecommand");

  0034c	8b f4		 mov	 esi, esp
  0034e	68 00 00 00 00	 push	 OFFSET FLAT:$SG187086
  00353	8d 4d d8	 lea	 ecx, DWORD PTR $T187555[ebp]
  00356	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0035c	3b f4		 cmp	 esi, esp
  0035e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00363	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0036a	8b f4		 mov	 esi, esp
  0036c	68 00 00 00 00	 push	 OFFSET FLAT:$SG187087
  00371	8d 4d bc	 lea	 ecx, DWORD PTR $T187556[ebp]
  00374	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0037a	3b f4		 cmp	 esi, esp
  0037c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00381	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00385	8b f4		 mov	 esi, esp
  00387	68 00 00 00 00	 push	 OFFSET FLAT:$SG187085
  0038c	8d 45 d8	 lea	 eax, DWORD PTR $T187555[ebp]
  0038f	50		 push	 eax
  00390	6a 00		 push	 0
  00392	8d 4d bc	 lea	 ecx, DWORD PTR $T187556[ebp]
  00395	51		 push	 ecx
  00396	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  0039c	83 c4 10	 add	 esp, 16			; 00000010H
  0039f	3b f4		 cmp	 esi, esp
  003a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003a6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  003aa	8b f4		 mov	 esi, esp
  003ac	8d 4d bc	 lea	 ecx, DWORD PTR $T187556[ebp]
  003af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  003b5	3b f4		 cmp	 esi, esp
  003b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  003c3	8b f4		 mov	 esi, esp
  003c5	8d 4d d8	 lea	 ecx, DWORD PTR $T187555[ebp]
  003c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  003ce	3b f4		 cmp	 esi, esp
  003d0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 134  : 	SetEvent( s_EventTodayRecommend );

  003d5	8b f4		 mov	 esi, esp
  003d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventTodayRecommend
  003dd	52		 push	 edx
  003de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  003e4	3b f4		 cmp	 esi, esp
  003e6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 135  : 	NotifyUpdate(1);

  003eb	6a 01		 push	 1
  003ed	e8 00 00 00 00	 call	 ?NotifyUpdate@@YAXH@Z	; NotifyUpdate
  003f2	83 c4 04	 add	 esp, 4

; 136  : }

  003f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  003ff	5f		 pop	 edi
  00400	5e		 pop	 esi
  00401	83 c4 44	 add	 esp, 68			; 00000044H
  00404	3b ec		 cmp	 ebp, esp
  00406	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0040b	8b e5		 mov	 esp, ebp
  0040d	5d		 pop	 ebp
  0040e	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L187557:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d d8	 lea	 ecx, DWORD PTR $T187555[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L187558:
  00012	8b f4		 mov	 esi, esp
  00014	8d 4d bc	 lea	 ecx, DWORD PTR $T187556[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0001d	3b f4		 cmp	 esi, esp
  0001f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?HTTPFinish_TodayRecommend@CHTTPControl@@SAXXZ:
  00024	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187562
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_TodayRecommend@CHTTPControl@@SAXXZ ENDP	; CHTTPControl::HTTPFinish_TodayRecommend
EXTRN	__imp__FreeLibrary@4:NEAR
EXTRN	__imp__GetProcAddress@8:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	?GetHomePath@CLhcImg@@SA_NQADH@Z:NEAR		; CLhcImg::GetHomePath
EXTRN	__imp__LoadLibraryA@4:NEAR
EXTRN	__imp___snprintf:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_lpfn$187061 = -556					; size = 4
_hLib$ = -552						; size = 4
_szUpDate$ = -544					; size = 261
_szsysdir$ = -272					; size = 261
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_i$ = 8							; size = 4
?NotifyUpdate@@YAXH@Z PROC NEAR				; NotifyUpdate

; 66   : {

  00410	55		 push	 ebp
  00411	8b ec		 mov	 ebp, esp
  00413	81 ec 2c 02 00
	00		 sub	 esp, 556		; 0000022cH
  00419	56		 push	 esi
  0041a	57		 push	 edi
  0041b	8d bd d4 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-556]
  00421	b9 8b 00 00 00	 mov	 ecx, 139		; 0000008bH
  00426	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0042b	f3 ab		 rep stosd
  0042d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00432	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 67   : 	char szsysdir[MAX_PATH+1];
; 68   : 	if(!CLhcImg::GetHomePath(szsysdir, MAX_PATH))

  00435	68 04 01 00 00	 push	 260			; 00000104H
  0043a	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szsysdir$[ebp]
  00440	50		 push	 eax
  00441	e8 00 00 00 00	 call	 ?GetHomePath@CLhcImg@@SA_NQADH@Z ; CLhcImg::GetHomePath
  00446	83 c4 08	 add	 esp, 8
  00449	0f b6 c8	 movzx	 ecx, al
  0044c	85 c9		 test	 ecx, ecx
  0044e	75 46		 jne	 SHORT $L187056

; 69   : 	{
; 70   : 		SetEvent( s_EventConfigFile );

  00450	8b f4		 mov	 esi, esp
  00452	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventConfigFile
  00458	52		 push	 edx
  00459	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  0045f	3b f4		 cmp	 esi, esp
  00461	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 71   : 		SetEvent( s_EventUpClientLog );

  00466	8b f4		 mov	 esi, esp
  00468	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventUpClientLog
  0046d	50		 push	 eax
  0046e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  00474	3b f4		 cmp	 esi, esp
  00476	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 72   : 		SetEvent( s_EventRegID );

  0047b	8b f4		 mov	 esi, esp
  0047d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventRegID
  00483	51		 push	 ecx
  00484	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  0048a	3b f4		 cmp	 esi, esp
  0048c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 73   : 		return;

  00491	e9 13 02 00 00	 jmp	 $L187054
$L187056:

; 74   : 	}
; 75   : 
; 76   : 	char szUpDate[MAX_PATH+1];
; 77   : 	_snprintf(szUpDate, MAX_PATH-1, "%s\\LhUpdate.dll", szsysdir);

  00496	8b f4		 mov	 esi, esp
  00498	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _szsysdir$[ebp]
  0049e	52		 push	 edx
  0049f	68 00 00 00 00	 push	 OFFSET FLAT:$SG187058
  004a4	68 03 01 00 00	 push	 259			; 00000103H
  004a9	8d 85 e0 fd ff
	ff		 lea	 eax, DWORD PTR _szUpDate$[ebp]
  004af	50		 push	 eax
  004b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___snprintf
  004b6	83 c4 10	 add	 esp, 16			; 00000010H
  004b9	3b f4		 cmp	 esi, esp
  004bb	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 78   : 
; 79   : 	HMODULE hLib = LoadLibrary(szUpDate);

  004c0	8b f4		 mov	 esi, esp
  004c2	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR _szUpDate$[ebp]
  004c8	51		 push	 ecx
  004c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
  004cf	3b f4		 cmp	 esi, esp
  004d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004d6	89 85 d8 fd ff
	ff		 mov	 DWORD PTR _hLib$[ebp], eax

; 80   : 	if(hLib != NULL)

  004dc	83 bd d8 fd ff
	ff 00		 cmp	 DWORD PTR _hLib$[ebp], 0
  004e3	0f 84 c0 01 00
	00		 je	 $L187054

; 81   : 	{
; 82   : 		LPCREATERECOGNISE lpfn = (LPCREATERECOGNISE)GetProcAddress(hLib, "SetHTTPControl");	

  004e9	8b f4		 mov	 esi, esp
  004eb	68 00 00 00 00	 push	 OFFSET FLAT:$SG187063
  004f0	8b 95 d8 fd ff
	ff		 mov	 edx, DWORD PTR _hLib$[ebp]
  004f6	52		 push	 edx
  004f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  004fd	3b f4		 cmp	 esi, esp
  004ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00504	89 85 d4 fd ff
	ff		 mov	 DWORD PTR _lpfn$187061[ebp], eax

; 83   : 		if(lpfn != NULL)

  0050a	83 bd d4 fd ff
	ff 00		 cmp	 DWORD PTR _lpfn$187061[ebp], 0
  00511	0f 84 3b 01 00
	00		 je	 $L187064

; 84   : 		{
; 85   : 			if( i == 1 )

  00517	83 7d 08 01	 cmp	 DWORD PTR _i$[ebp], 1
  0051b	75 6a		 jne	 SHORT $L187065

; 86   : 			{
; 87   : 				lpfn(1);

  0051d	8b f4		 mov	 esi, esp
  0051f	6a 01		 push	 1
  00521	ff 95 d4 fd ff
	ff		 call	 DWORD PTR _lpfn$187061[ebp]
  00527	3b f4		 cmp	 esi, esp
  00529	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 88   : 				if( WaitForSingleObject( s_EventRegID,100) == WAIT_OBJECT_0 )

  0052e	8b f4		 mov	 esi, esp
  00530	6a 64		 push	 100			; 00000064H
  00532	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventRegID
  00537	50		 push	 eax
  00538	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  0053e	3b f4		 cmp	 esi, esp
  00540	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00545	85 c0		 test	 eax, eax
  00547	75 3e		 jne	 SHORT $L187065

; 89   : 				{
; 90   : 					lpfn(2);

  00549	8b f4		 mov	 esi, esp
  0054b	6a 02		 push	 2
  0054d	ff 95 d4 fd ff
	ff		 call	 DWORD PTR _lpfn$187061[ebp]
  00553	3b f4		 cmp	 esi, esp
  00555	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 91   : 					if( WaitForSingleObject( s_EventBangDan,100) == WAIT_OBJECT_0 )

  0055a	8b f4		 mov	 esi, esp
  0055c	6a 64		 push	 100			; 00000064H
  0055e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventBangDan
  00564	51		 push	 ecx
  00565	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  0056b	3b f4		 cmp	 esi, esp
  0056d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00572	85 c0		 test	 eax, eax
  00574	75 11		 jne	 SHORT $L187065

; 92   : 					{
; 93   : 						lpfn(3);

  00576	8b f4		 mov	 esi, esp
  00578	6a 03		 push	 3
  0057a	ff 95 d4 fd ff
	ff		 call	 DWORD PTR _lpfn$187061[ebp]
  00580	3b f4		 cmp	 esi, esp
  00582	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187065:

; 94   : 					}
; 95   : 				}
; 96   : 			}
; 97   : 
; 98   : 			if( i == 2 )

  00587	83 7d 08 02	 cmp	 DWORD PTR _i$[ebp], 2
  0058b	75 59		 jne	 SHORT $L187070

; 99   : 			{
; 100  : 				if( WaitForSingleObject(s_EventTodayRecommend,100) == WAIT_OBJECT_0 )

  0058d	8b f4		 mov	 esi, esp
  0058f	6a 64		 push	 100			; 00000064H
  00591	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventTodayRecommend
  00597	52		 push	 edx
  00598	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  0059e	3b f4		 cmp	 esi, esp
  005a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005a5	85 c0		 test	 eax, eax
  005a7	75 3d		 jne	 SHORT $L187070

; 101  : 				{
; 102  : 					lpfn(2);

  005a9	8b f4		 mov	 esi, esp
  005ab	6a 02		 push	 2
  005ad	ff 95 d4 fd ff
	ff		 call	 DWORD PTR _lpfn$187061[ebp]
  005b3	3b f4		 cmp	 esi, esp
  005b5	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 103  : 					if( WaitForSingleObject( s_EventBangDan,100) == WAIT_OBJECT_0 )

  005ba	8b f4		 mov	 esi, esp
  005bc	6a 64		 push	 100			; 00000064H
  005be	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventBangDan
  005c3	50		 push	 eax
  005c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  005ca	3b f4		 cmp	 esi, esp
  005cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005d1	85 c0		 test	 eax, eax
  005d3	75 11		 jne	 SHORT $L187070

; 104  : 					{
; 105  : 						lpfn(3);

  005d5	8b f4		 mov	 esi, esp
  005d7	6a 03		 push	 3
  005d9	ff 95 d4 fd ff
	ff		 call	 DWORD PTR _lpfn$187061[ebp]
  005df	3b f4		 cmp	 esi, esp
  005e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187070:

; 106  : 					}					
; 107  : 				}				
; 108  : 			}
; 109  : 
; 110  : 			if( i == 3 )

  005e6	83 7d 08 03	 cmp	 DWORD PTR _i$[ebp], 3
  005ea	75 64		 jne	 SHORT $L187075

; 111  : 			{
; 112  : 				if( WaitForSingleObject(s_EventTodayRecommend,100) == WAIT_OBJECT_0 
; 113  : 					&& WaitForSingleObject( s_EventRegID,100) == WAIT_OBJECT_0 
; 114  : 					&& WaitForSingleObject( s_EventBangDan,100) == WAIT_OBJECT_0 )

  005ec	8b f4		 mov	 esi, esp
  005ee	6a 64		 push	 100			; 00000064H
  005f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventTodayRecommend
  005f6	51		 push	 ecx
  005f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  005fd	3b f4		 cmp	 esi, esp
  005ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00604	85 c0		 test	 eax, eax
  00606	75 48		 jne	 SHORT $L187075
  00608	8b f4		 mov	 esi, esp
  0060a	6a 64		 push	 100			; 00000064H
  0060c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventRegID
  00612	52		 push	 edx
  00613	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00619	3b f4		 cmp	 esi, esp
  0061b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00620	85 c0		 test	 eax, eax
  00622	75 2c		 jne	 SHORT $L187075
  00624	8b f4		 mov	 esi, esp
  00626	6a 64		 push	 100			; 00000064H
  00628	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventBangDan
  0062d	50		 push	 eax
  0062e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00634	3b f4		 cmp	 esi, esp
  00636	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0063b	85 c0		 test	 eax, eax
  0063d	75 11		 jne	 SHORT $L187075

; 115  : 				{					
; 116  : 					lpfn(3);				

  0063f	8b f4		 mov	 esi, esp
  00641	6a 03		 push	 3
  00643	ff 95 d4 fd ff
	ff		 call	 DWORD PTR _lpfn$187061[ebp]
  00649	3b f4		 cmp	 esi, esp
  0064b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187075:

; 117  : 				}
; 118  : 			}
; 119  : 			
; 120  : 		}	
; 121  : 		else

  00650	eb 41		 jmp	 SHORT $L187080
$L187064:

; 122  : 		{
; 123  : 			SetEvent( s_EventConfigFile );

  00652	8b f4		 mov	 esi, esp
  00654	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _s_EventConfigFile
  0065a	51		 push	 ecx
  0065b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  00661	3b f4		 cmp	 esi, esp
  00663	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 124  : 			SetEvent( s_EventUpClientLog );

  00668	8b f4		 mov	 esi, esp
  0066a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventUpClientLog
  00670	52		 push	 edx
  00671	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  00677	3b f4		 cmp	 esi, esp
  00679	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 125  : 			SetEvent( s_EventRegID );

  0067e	8b f4		 mov	 esi, esp
  00680	a1 00 00 00 00	 mov	 eax, DWORD PTR _s_EventRegID
  00685	50		 push	 eax
  00686	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  0068c	3b f4		 cmp	 esi, esp
  0068e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187080:

; 126  : 		}
; 127  : 		FreeLibrary(hLib);

  00693	8b f4		 mov	 esi, esp
  00695	8b 8d d8 fd ff
	ff		 mov	 ecx, DWORD PTR _hLib$[ebp]
  0069b	51		 push	 ecx
  0069c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
  006a2	3b f4		 cmp	 esi, esp
  006a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
$L187054:

; 128  : 	}
; 129  : }

  006a9	52		 push	 edx
  006aa	8b cd		 mov	 ecx, ebp
  006ac	50		 push	 eax
  006ad	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $L187574
  006b3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  006b8	58		 pop	 eax
  006b9	5a		 pop	 edx
  006ba	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006bd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006c2	5f		 pop	 edi
  006c3	5e		 pop	 esi
  006c4	81 c4 2c 02 00
	00		 add	 esp, 556		; 0000022cH
  006ca	3b ec		 cmp	 ebp, esp
  006cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006d1	8b e5		 mov	 esp, ebp
  006d3	5d		 pop	 ebp
  006d4	c3		 ret	 0
$L187574:
  006d5	02 00 00 00	 DD	 2
  006d9	00 00 00 00	 DD	 $L187573
$L187573:
  006dd	f0 fe ff ff	 DD	 -272			; fffffef0H
  006e1	05 01 00 00	 DD	 261			; 00000105H
  006e5	00 00 00 00	 DD	 $L187569
  006e9	e0 fd ff ff	 DD	 -544			; fffffde0H
  006ed	05 01 00 00	 DD	 261			; 00000105H
  006f1	00 00 00 00	 DD	 $L187570
$L187570:
  006f5	73		 DB	 115			; 00000073H
  006f6	7a		 DB	 122			; 0000007aH
  006f7	55		 DB	 85			; 00000055H
  006f8	70		 DB	 112			; 00000070H
  006f9	44		 DB	 68			; 00000044H
  006fa	61		 DB	 97			; 00000061H
  006fb	74		 DB	 116			; 00000074H
  006fc	65		 DB	 101			; 00000065H
  006fd	00		 DB	 0
$L187569:
  006fe	73		 DB	 115			; 00000073H
  006ff	7a		 DB	 122			; 0000007aH
  00700	73		 DB	 115			; 00000073H
  00701	79		 DB	 121			; 00000079H
  00702	73		 DB	 115			; 00000073H
  00703	64		 DB	 100			; 00000064H
  00704	69		 DB	 105			; 00000069H
  00705	72		 DB	 114			; 00000072H
  00706	00		 DB	 0
?NotifyUpdate@@YAXH@Z ENDP				; NotifyUpdate
_TEXT	ENDS
PUBLIC	?HTTPFinish_BangDan@CHTTPControl@@SAXXZ		; CHTTPControl::HTTPFinish_BangDan
xdata$x	SEGMENT
$T187584 DD	0ffffffffH
	DD	FLAT:$L187579
	DD	00H
	DD	FLAT:$L187580
$T187582 DD	019930520H
	DD	02H
	DD	FLAT:$T187584
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T187578 = -68						; size = 28
$T187577 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_BangDan@CHTTPControl@@SAXXZ PROC NEAR	; CHTTPControl::HTTPFinish_BangDan

; 139  : {

  00710	55		 push	 ebp
  00711	8b ec		 mov	 ebp, esp
  00713	6a ff		 push	 -1
  00715	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_BangDan@CHTTPControl@@SAXXZ
  0071a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00720	50		 push	 eax
  00721	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00728	83 ec 38	 sub	 esp, 56			; 00000038H
  0072b	56		 push	 esi
  0072c	57		 push	 edi
  0072d	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00730	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00735	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0073a	f3 ab		 rep stosd

; 140  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","BangDan");

  0073c	8b f4		 mov	 esi, esp
  0073e	68 00 00 00 00	 push	 OFFSET FLAT:$SG187093
  00743	8d 4d d8	 lea	 ecx, DWORD PTR $T187577[ebp]
  00746	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0074c	3b f4		 cmp	 esi, esp
  0074e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00753	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0075a	8b f4		 mov	 esi, esp
  0075c	68 00 00 00 00	 push	 OFFSET FLAT:$SG187094
  00761	8d 4d bc	 lea	 ecx, DWORD PTR $T187578[ebp]
  00764	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0076a	3b f4		 cmp	 esi, esp
  0076c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00771	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00775	8b f4		 mov	 esi, esp
  00777	68 00 00 00 00	 push	 OFFSET FLAT:$SG187092
  0077c	8d 45 d8	 lea	 eax, DWORD PTR $T187577[ebp]
  0077f	50		 push	 eax
  00780	6a 00		 push	 0
  00782	8d 4d bc	 lea	 ecx, DWORD PTR $T187578[ebp]
  00785	51		 push	 ecx
  00786	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  0078c	83 c4 10	 add	 esp, 16			; 00000010H
  0078f	3b f4		 cmp	 esi, esp
  00791	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00796	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0079a	8b f4		 mov	 esi, esp
  0079c	8d 4d bc	 lea	 ecx, DWORD PTR $T187578[ebp]
  0079f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  007a5	3b f4		 cmp	 esi, esp
  007a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007ac	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  007b3	8b f4		 mov	 esi, esp
  007b5	8d 4d d8	 lea	 ecx, DWORD PTR $T187577[ebp]
  007b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  007be	3b f4		 cmp	 esi, esp
  007c0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 141  : 	SetEvent( s_EventBangDan );

  007c5	8b f4		 mov	 esi, esp
  007c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventBangDan
  007cd	52		 push	 edx
  007ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  007d4	3b f4		 cmp	 esi, esp
  007d6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 142  : 	NotifyUpdate(3);

  007db	6a 03		 push	 3
  007dd	e8 00 00 00 00	 call	 ?NotifyUpdate@@YAXH@Z	; NotifyUpdate
  007e2	83 c4 04	 add	 esp, 4

; 143  : }

  007e5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  007e8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  007ef	5f		 pop	 edi
  007f0	5e		 pop	 esi
  007f1	83 c4 44	 add	 esp, 68			; 00000044H
  007f4	3b ec		 cmp	 ebp, esp
  007f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007fb	8b e5		 mov	 esp, ebp
  007fd	5d		 pop	 ebp
  007fe	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L187579:
  0002e	8b f4		 mov	 esi, esp
  00030	8d 4d d8	 lea	 ecx, DWORD PTR $T187577[ebp]
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00039	3b f4		 cmp	 esi, esp
  0003b	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L187580:
  00040	8b f4		 mov	 esi, esp
  00042	8d 4d bc	 lea	 ecx, DWORD PTR $T187578[ebp]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0004b	3b f4		 cmp	 esi, esp
  0004d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?HTTPFinish_BangDan@CHTTPControl@@SAXXZ:
  00052	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187582
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_BangDan@CHTTPControl@@SAXXZ ENDP		; CHTTPControl::HTTPFinish_BangDan
PUBLIC	?HTTPFinish_RegID@CHTTPControl@@SAXXZ		; CHTTPControl::HTTPFinish_RegID
xdata$x	SEGMENT
$T187593 DD	0ffffffffH
	DD	FLAT:$L187588
	DD	00H
	DD	FLAT:$L187589
$T187591 DD	019930520H
	DD	02H
	DD	FLAT:$T187593
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T187587 = -68						; size = 28
$T187586 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_RegID@CHTTPControl@@SAXXZ PROC NEAR		; CHTTPControl::HTTPFinish_RegID

; 146  : {

  00800	55		 push	 ebp
  00801	8b ec		 mov	 ebp, esp
  00803	6a ff		 push	 -1
  00805	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_RegID@CHTTPControl@@SAXXZ
  0080a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00810	50		 push	 eax
  00811	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00818	83 ec 38	 sub	 esp, 56			; 00000038H
  0081b	56		 push	 esi
  0081c	57		 push	 edi
  0081d	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00820	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00825	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0082a	f3 ab		 rep stosd

; 147  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","RegID");

  0082c	8b f4		 mov	 esi, esp
  0082e	68 00 00 00 00	 push	 OFFSET FLAT:$SG187100
  00833	8d 4d d8	 lea	 ecx, DWORD PTR $T187586[ebp]
  00836	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0083c	3b f4		 cmp	 esi, esp
  0083e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00843	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0084a	8b f4		 mov	 esi, esp
  0084c	68 00 00 00 00	 push	 OFFSET FLAT:$SG187101
  00851	8d 4d bc	 lea	 ecx, DWORD PTR $T187587[ebp]
  00854	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0085a	3b f4		 cmp	 esi, esp
  0085c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00861	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00865	8b f4		 mov	 esi, esp
  00867	68 00 00 00 00	 push	 OFFSET FLAT:$SG187099
  0086c	8d 45 d8	 lea	 eax, DWORD PTR $T187586[ebp]
  0086f	50		 push	 eax
  00870	6a 00		 push	 0
  00872	8d 4d bc	 lea	 ecx, DWORD PTR $T187587[ebp]
  00875	51		 push	 ecx
  00876	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  0087c	83 c4 10	 add	 esp, 16			; 00000010H
  0087f	3b f4		 cmp	 esi, esp
  00881	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00886	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0088a	8b f4		 mov	 esi, esp
  0088c	8d 4d bc	 lea	 ecx, DWORD PTR $T187587[ebp]
  0088f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00895	3b f4		 cmp	 esi, esp
  00897	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0089c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008a3	8b f4		 mov	 esi, esp
  008a5	8d 4d d8	 lea	 ecx, DWORD PTR $T187586[ebp]
  008a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  008ae	3b f4		 cmp	 esi, esp
  008b0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 148  : 	SetEvent( s_EventRegID );	

  008b5	8b f4		 mov	 esi, esp
  008b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventRegID
  008bd	52		 push	 edx
  008be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  008c4	3b f4		 cmp	 esi, esp
  008c6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 149  : 	NotifyUpdate(2);

  008cb	6a 02		 push	 2
  008cd	e8 00 00 00 00	 call	 ?NotifyUpdate@@YAXH@Z	; NotifyUpdate
  008d2	83 c4 04	 add	 esp, 4

; 150  : }

  008d5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  008d8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  008df	5f		 pop	 edi
  008e0	5e		 pop	 esi
  008e1	83 c4 44	 add	 esp, 68			; 00000044H
  008e4	3b ec		 cmp	 ebp, esp
  008e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008eb	8b e5		 mov	 esp, ebp
  008ed	5d		 pop	 ebp
  008ee	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L187588:
  0005c	8b f4		 mov	 esi, esp
  0005e	8d 4d d8	 lea	 ecx, DWORD PTR $T187586[ebp]
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00067	3b f4		 cmp	 esi, esp
  00069	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L187589:
  0006e	8b f4		 mov	 esi, esp
  00070	8d 4d bc	 lea	 ecx, DWORD PTR $T187587[ebp]
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00079	3b f4		 cmp	 esi, esp
  0007b	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?HTTPFinish_RegID@CHTTPControl@@SAXXZ:
  00080	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187591
  00085	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_RegID@CHTTPControl@@SAXXZ ENDP		; CHTTPControl::HTTPFinish_RegID
PUBLIC	?HTTPFinish_ConfigFile@CHTTPControl@@SAXXZ	; CHTTPControl::HTTPFinish_ConfigFile
xdata$x	SEGMENT
$T187602 DD	0ffffffffH
	DD	FLAT:$L187597
	DD	00H
	DD	FLAT:$L187598
$T187600 DD	019930520H
	DD	02H
	DD	FLAT:$T187602
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T187596 = -68						; size = 28
$T187595 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_ConfigFile@CHTTPControl@@SAXXZ PROC NEAR	; CHTTPControl::HTTPFinish_ConfigFile

; 153  : {

  008f0	55		 push	 ebp
  008f1	8b ec		 mov	 ebp, esp
  008f3	6a ff		 push	 -1
  008f5	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_ConfigFile@CHTTPControl@@SAXXZ
  008fa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00900	50		 push	 eax
  00901	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00908	83 ec 38	 sub	 esp, 56			; 00000038H
  0090b	56		 push	 esi
  0090c	57		 push	 edi
  0090d	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00910	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00915	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0091a	f3 ab		 rep stosd

; 154  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","ConfigFile");

  0091c	8b f4		 mov	 esi, esp
  0091e	68 00 00 00 00	 push	 OFFSET FLAT:$SG187107
  00923	8d 4d d8	 lea	 ecx, DWORD PTR $T187595[ebp]
  00926	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0092c	3b f4		 cmp	 esi, esp
  0092e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00933	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0093a	8b f4		 mov	 esi, esp
  0093c	68 00 00 00 00	 push	 OFFSET FLAT:$SG187108
  00941	8d 4d bc	 lea	 ecx, DWORD PTR $T187596[ebp]
  00944	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0094a	3b f4		 cmp	 esi, esp
  0094c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00951	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00955	8b f4		 mov	 esi, esp
  00957	68 00 00 00 00	 push	 OFFSET FLAT:$SG187106
  0095c	8d 45 d8	 lea	 eax, DWORD PTR $T187595[ebp]
  0095f	50		 push	 eax
  00960	6a 00		 push	 0
  00962	8d 4d bc	 lea	 ecx, DWORD PTR $T187596[ebp]
  00965	51		 push	 ecx
  00966	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  0096c	83 c4 10	 add	 esp, 16			; 00000010H
  0096f	3b f4		 cmp	 esi, esp
  00971	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00976	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0097a	8b f4		 mov	 esi, esp
  0097c	8d 4d bc	 lea	 ecx, DWORD PTR $T187596[ebp]
  0097f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00985	3b f4		 cmp	 esi, esp
  00987	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0098c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00993	8b f4		 mov	 esi, esp
  00995	8d 4d d8	 lea	 ecx, DWORD PTR $T187595[ebp]
  00998	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0099e	3b f4		 cmp	 esi, esp
  009a0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 155  : 	SetEvent( s_EventConfigFile );

  009a5	8b f4		 mov	 esi, esp
  009a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventConfigFile
  009ad	52		 push	 edx
  009ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  009b4	3b f4		 cmp	 esi, esp
  009b6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 156  : }

  009bb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  009be	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  009c5	5f		 pop	 edi
  009c6	5e		 pop	 esi
  009c7	83 c4 44	 add	 esp, 68			; 00000044H
  009ca	3b ec		 cmp	 ebp, esp
  009cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009d1	8b e5		 mov	 esp, ebp
  009d3	5d		 pop	 ebp
  009d4	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L187597:
  0008a	8b f4		 mov	 esi, esp
  0008c	8d 4d d8	 lea	 ecx, DWORD PTR $T187595[ebp]
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00095	3b f4		 cmp	 esi, esp
  00097	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L187598:
  0009c	8b f4		 mov	 esi, esp
  0009e	8d 4d bc	 lea	 ecx, DWORD PTR $T187596[ebp]
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000a7	3b f4		 cmp	 esi, esp
  000a9	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?HTTPFinish_ConfigFile@CHTTPControl@@SAXXZ:
  000ae	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187600
  000b3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_ConfigFile@CHTTPControl@@SAXXZ ENDP		; CHTTPControl::HTTPFinish_ConfigFile
PUBLIC	?HTTPFinish_UpClientLog@CHTTPControl@@SAXXZ	; CHTTPControl::HTTPFinish_UpClientLog
xdata$x	SEGMENT
$T187611 DD	0ffffffffH
	DD	FLAT:$L187606
	DD	00H
	DD	FLAT:$L187607
$T187609 DD	019930520H
	DD	02H
	DD	FLAT:$T187611
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T187605 = -68						; size = 28
$T187604 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_UpClientLog@CHTTPControl@@SAXXZ PROC NEAR	; CHTTPControl::HTTPFinish_UpClientLog

; 159  : {

  009e0	55		 push	 ebp
  009e1	8b ec		 mov	 ebp, esp
  009e3	6a ff		 push	 -1
  009e5	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_UpClientLog@CHTTPControl@@SAXXZ
  009ea	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  009f0	50		 push	 eax
  009f1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  009f8	83 ec 38	 sub	 esp, 56			; 00000038H
  009fb	56		 push	 esi
  009fc	57		 push	 edi
  009fd	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00a00	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00a05	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00a0a	f3 ab		 rep stosd

; 160  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","UpClientLog");

  00a0c	8b f4		 mov	 esi, esp
  00a0e	68 00 00 00 00	 push	 OFFSET FLAT:$SG187114
  00a13	8d 4d d8	 lea	 ecx, DWORD PTR $T187604[ebp]
  00a16	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00a1c	3b f4		 cmp	 esi, esp
  00a1e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a23	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00a2a	8b f4		 mov	 esi, esp
  00a2c	68 00 00 00 00	 push	 OFFSET FLAT:$SG187115
  00a31	8d 4d bc	 lea	 ecx, DWORD PTR $T187605[ebp]
  00a34	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00a3a	3b f4		 cmp	 esi, esp
  00a3c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a41	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00a45	8b f4		 mov	 esi, esp
  00a47	68 00 00 00 00	 push	 OFFSET FLAT:$SG187113
  00a4c	8d 45 d8	 lea	 eax, DWORD PTR $T187604[ebp]
  00a4f	50		 push	 eax
  00a50	6a 00		 push	 0
  00a52	8d 4d bc	 lea	 ecx, DWORD PTR $T187605[ebp]
  00a55	51		 push	 ecx
  00a56	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  00a5c	83 c4 10	 add	 esp, 16			; 00000010H
  00a5f	3b f4		 cmp	 esi, esp
  00a61	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a66	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00a6a	8b f4		 mov	 esi, esp
  00a6c	8d 4d bc	 lea	 ecx, DWORD PTR $T187605[ebp]
  00a6f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00a75	3b f4		 cmp	 esi, esp
  00a77	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a7c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a83	8b f4		 mov	 esi, esp
  00a85	8d 4d d8	 lea	 ecx, DWORD PTR $T187604[ebp]
  00a88	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00a8e	3b f4		 cmp	 esi, esp
  00a90	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 161  : 	SetEvent(s_EventUpClientLog );

  00a95	8b f4		 mov	 esi, esp
  00a97	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventUpClientLog
  00a9d	52		 push	 edx
  00a9e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  00aa4	3b f4		 cmp	 esi, esp
  00aa6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 162  : }

  00aab	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00aae	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00ab5	5f		 pop	 edi
  00ab6	5e		 pop	 esi
  00ab7	83 c4 44	 add	 esp, 68			; 00000044H
  00aba	3b ec		 cmp	 ebp, esp
  00abc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ac1	8b e5		 mov	 esp, ebp
  00ac3	5d		 pop	 ebp
  00ac4	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L187606:
  000b8	8b f4		 mov	 esi, esp
  000ba	8d 4d d8	 lea	 ecx, DWORD PTR $T187604[ebp]
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000c3	3b f4		 cmp	 esi, esp
  000c5	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L187607:
  000ca	8b f4		 mov	 esi, esp
  000cc	8d 4d bc	 lea	 ecx, DWORD PTR $T187605[ebp]
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000d5	3b f4		 cmp	 esi, esp
  000d7	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?HTTPFinish_UpClientLog@CHTTPControl@@SAXXZ:
  000dc	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187609
  000e1	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_UpClientLog@CHTTPControl@@SAXXZ ENDP	; CHTTPControl::HTTPFinish_UpClientLog
PUBLIC	?HTTPFinish_DownAD@CHTTPControl@@SAXXZ		; CHTTPControl::HTTPFinish_DownAD
xdata$x	SEGMENT
$T187620 DD	0ffffffffH
	DD	FLAT:$L187615
	DD	00H
	DD	FLAT:$L187616
$T187618 DD	019930520H
	DD	02H
	DD	FLAT:$T187620
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T187614 = -68						; size = 28
$T187613 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?HTTPFinish_DownAD@CHTTPControl@@SAXXZ PROC NEAR	; CHTTPControl::HTTPFinish_DownAD

; 165  : {

  00ad0	55		 push	 ebp
  00ad1	8b ec		 mov	 ebp, esp
  00ad3	6a ff		 push	 -1
  00ad5	68 00 00 00 00	 push	 __ehhandler$?HTTPFinish_DownAD@CHTTPControl@@SAXXZ
  00ada	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00ae0	50		 push	 eax
  00ae1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ae8	83 ec 38	 sub	 esp, 56			; 00000038H
  00aeb	56		 push	 esi
  00aec	57		 push	 edi
  00aed	8d 7d bc	 lea	 edi, DWORD PTR [ebp-68]
  00af0	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00af5	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00afa	f3 ab		 rep stosd

; 166  : 	YL_Log("log_httpr.txt",LOG_DEBUG,"HTTP-Finish","DownloadAD");

  00afc	8b f4		 mov	 esi, esp
  00afe	68 00 00 00 00	 push	 OFFSET FLAT:$SG187121
  00b03	8d 4d d8	 lea	 ecx, DWORD PTR $T187613[ebp]
  00b06	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00b0c	3b f4		 cmp	 esi, esp
  00b0e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b13	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00b1a	8b f4		 mov	 esi, esp
  00b1c	68 00 00 00 00	 push	 OFFSET FLAT:$SG187122
  00b21	8d 4d bc	 lea	 ecx, DWORD PTR $T187614[ebp]
  00b24	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00b2a	3b f4		 cmp	 esi, esp
  00b2c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b31	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00b35	8b f4		 mov	 esi, esp
  00b37	68 00 00 00 00	 push	 OFFSET FLAT:$SG187120
  00b3c	8d 45 d8	 lea	 eax, DWORD PTR $T187613[ebp]
  00b3f	50		 push	 eax
  00b40	6a 00		 push	 0
  00b42	8d 4d bc	 lea	 ecx, DWORD PTR $T187614[ebp]
  00b45	51		 push	 ecx
  00b46	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?YL_Log@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0PBDZZ
  00b4c	83 c4 10	 add	 esp, 16			; 00000010H
  00b4f	3b f4		 cmp	 esi, esp
  00b51	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b56	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00b5a	8b f4		 mov	 esi, esp
  00b5c	8d 4d bc	 lea	 ecx, DWORD PTR $T187614[ebp]
  00b5f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00b65	3b f4		 cmp	 esi, esp
  00b67	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b6c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b73	8b f4		 mov	 esi, esp
  00b75	8d 4d d8	 lea	 ecx, DWORD PTR $T187613[ebp]
  00b78	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00b7e	3b f4		 cmp	 esi, esp
  00b80	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 167  : 	SetEvent(s_EventDownAD );

  00b85	8b f4		 mov	 esi, esp
  00b87	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _s_EventDownAD
  00b8d	52		 push	 edx
  00b8e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4
  00b94	3b f4		 cmp	 esi, esp
  00b96	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 168  : }

  00b9b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00b9e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00ba5	5f		 pop	 edi
  00ba6	5e		 pop	 esi
  00ba7	83 c4 44	 add	 esp, 68			; 00000044H
  00baa	3b ec		 cmp	 ebp, esp
  00bac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bb1	8b e5		 mov	 esp, ebp
  00bb3	5d		 pop	 ebp
  00bb4	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L187615:
  000e6	8b f4		 mov	 esi, esp
  000e8	8d 4d d8	 lea	 ecx, DWORD PTR $T187613[ebp]
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000f1	3b f4		 cmp	 esi, esp
  000f3	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$L187616:
  000f8	8b f4		 mov	 esi, esp
  000fa	8d 4d bc	 lea	 ecx, DWORD PTR $T187614[ebp]
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00103	3b f4		 cmp	 esi, esp
  00105	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?HTTPFinish_DownAD@CHTTPControl@@SAXXZ:
  0010a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187618
  0010f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HTTPFinish_DownAD@CHTTPControl@@SAXXZ ENDP		; CHTTPControl::HTTPFinish_DownAD
END
